,paperID,abstract,title,terms,authors,affiliation,pubYear,confName
0,1,"A Software Product Line  SPL  is a family of related software systems distinguished by the different sets of features each system provides  Over the last decade, the substantial benefits of SPL practices have been extensively documented and corroborated both in academia and industry  Several architecture methods have been proposed that employ different artifacts for expressing the components of a SPL, their properties and relationships  Of crucial importance for any SPL architecture method is to guarantee that the variability, for instance as expressed in feature models, is not only preserved but also kept consistent across all artifacts used  In this research challenge paper we argue that Safe Composition   the guarantee that all programs of a product line are type safe   can be leveraged to address this guarantee for structural properties of SPL architectures and the challenges that that entails    2010 Springer Verlag Berlin Heidelberg   29 refs",On the need of safe software product line architectures,"['Software design', 'Structural properties', 'Feature models', 'Product-lines', 'Research challenges', 'Software product line architecture', 'Software product lines', 'Software systems', 'Structural Design', 'Computer Programming', 'Materials Science']","['Lopez Herrejon, Roberto E', '', '', ' Egyed, Alexander']","Institute for Systems Engineering and Automation, Johannes Kepler University Linz, Austria",2010,ECSA
1,2,"A Software Product Line  SPL  is a portfolio of products that targets a particular domain  Feature Models are generally used for modeling domain knowledge including variability within SPLs  The Product Line Architecture  PLA  defines the structure that all potential products in the SPL share  Designing a good PLA is challenging since different products may require different characteristics, and it is difficult to achieve an acceptable trade off  In this paper we apply Model Driven Engineering techniques for systematizing the Domain Engineering stage to enable the automation of the Application Engineering stage  We use features to modularize architectural decisions and we encode them as model transformations that render the fragment of the product architecture that addresses the features  Then, we make the rationale explicit, and we enhance evolvability and incrementality diminishing design complexity  Product implementation is derived by means of generators analogously  We show our approach by developing a Meshing Tool SPL    2009 IEEE   29 refs",Feature model to product architectures  Applying MDE to software product lines,"['Architecture', 'Computer software', 'Network architecture', 'Software design', 'Application engineering', 'Architectural decision', 'Design complexity', 'Domain engineering', 'Domain knowledge', 'Evolvability', 'Feature models', 'Meshing tools', 'Model transformation', 'Model-driven Engineering', 'Product architecture', 'Product line architecture', 'Software Product Line', 'Software product lines', 'Buildings and Towers', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Perovich, Daniel', '', '', 'Rossel, Pedro O', '', ',', '', ' Bastarrica, Mar a Cecilia']","CS Department, Universidad de Chile, Santiago, Chile  2  Dept  Ingenier a Inform tica, Univ  Cat lica de la Sant sima Concepci n, Concepci n, Chile",2009,ECSA
2,3,"A Software Product Line  SPL  is a portfolio of products that targets a particular domain  Feature Models are generally used for modeling domain knowledge including variability within SPLs  The Product Line Architecture  PLA  defines the structure that all potential products in the SPL share  Designing a good PLA is challenging since different products may require different characteristics, and it is difficult to achieve an acceptable trade off  In this paper we apply Model Driven Engineering techniques for systematizing the Domain Engineering stage to enable the automation of the Application Engineering stage  We use features to modularize architectural decisions and we encode them as model transformations that render the fragment of the product architecture that addresses the features  Then, we make the rationale explicit, and we enhance evolvability and incrementality diminishing design complexity  Product implementation is derived by means of generators analogously  We show our approach by developing a Meshing Tool SPL    2009 IEEE   29 refs",Feature model to product architectures  Applying MDE to software product lines,"['Architecture', 'Computer software', 'Network architecture', 'Software design', 'Application engineering', 'Architectural decision', 'Design complexity', 'Domain engineering', 'Domain knowledge', 'Evolvability', 'Feature models', 'Meshing tools', 'Model transformation', 'Model-driven Engineering', 'Product architecture', 'Product line architecture', 'Software Product Line', 'Software product lines', 'Buildings and Towers', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Perovich, Daniel', '', '', 'Rossel, Pedro O', '', ',', '', ' Bastarrica, Mar a Cecilia']","CS Department, Universidad de Chile, Santiago, Chile  2  Dept  Ingenier a Inform tica, Univ  Cat lica de la Sant sima Concepci n, Concepci n, Chile",2009,WICSA
3,4,"A Software Product Line  SPL  is a portfolio of products that targets a particular domain  Feature Models are generally used for modeling domain knowledge including variability within SPLs  The Product Line Architecture  PLA  defines the structure that all potential products in the SPL share  Designing a good PLA is challenging since different products may require different characteristics, and it is difficult to achieve an acceptable trade off  In this paper we apply Model Driven Engineering techniques for systematizing the Domain Engineering stage to enable the automation of the Application Engineering stage  We use features to modularize architectural decisions and we encode them as model transformations that render the fragment of the product architecture that addresses the features  Then, we make the rationale explicit, and we enhance evolvability and incrementality diminishing design complexity  Product implementation is derived by means of generators analogously  We show our approach by developing a Meshing Tool SPL    2009 IEEE   29 refs",Feature model to product architectures  Applying MDE to software product lines,"['Architecture', 'Computer software', 'Network architecture', 'Software design', 'Application engineering', 'Architectural decision', 'Design complexity', 'Domain engineering', 'Domain knowledge', 'Evolvability', 'Feature models', 'Meshing tools', 'Model transformation', 'Model-driven Engineering', 'Product architecture', 'Product line architecture', 'Software Product Line', 'Software product lines', 'Buildings and Towers', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Perovich, Daniel', '', '', 'Rossel, Pedro O', '', ',', '', ' Bastarrica, Mar a Cecilia']","CS Department, Universidad de Chile, Santiago, Chile  2  Dept  Ingenier a Inform tica, Univ  Cat lica de la Sant sima Concepci n, Concepci n, Chile",2011,WICSA
4,5,"A catalyst for anode oxidation of methanol, carbon supported pseudo core shell PdCo Pt particles with Pt shell is prepared via a two step procedure, which consists of an organic colloid method and a surface replacement reaction step  Transmission electron microscopy  TEM  and X ray diffraction  XRD  are used for the catalysts characterization  The electrochemical surface areas  ECSA  are 6 and 4 times as large as those of Pt C and PtRu C catalysts, respectively  Furthermore, based on the Pt mass, the cyclic voltammetry  CV  and chronoamperometry results demonstrate that the electrocatalytic activity and stability of the PdCo Pt C catalyst for methanol oxidation are much higher than those of the Pt C and PtRu C catalysts  The PdCo Pt C catalyst is better utilization of Pt than pure Pt and Pt based alloy catalysts    2010 Professor T  Nejat Veziroglu  Published by Elsevier Ltd  All rights reserved   34 refs",Carbon supported Pt shell modified PdCo core with electrocatalyst for methanol oxidation,"['Cerium alloys', 'Chronoamperometry', 'Cyclic voltammetry', 'Electrocatalysts', 'Fuel cells', 'Methanol', 'Nanoparticles', 'Oxidation', 'Platinum', 'Substitution reactions', 'Surface reactions', 'Transmission electron microscopy', 'X ray diffraction', 'Alloy catalyst', 'Anode oxidation', 'Core-shell', 'Electrocatalytic activity and stability', 'Electrochemical surface area', 'Methanol oxidation', 'Organic colloids', 'Pt particle', 'Pt/C catalysts', 'PtRu/C catalysts', 'Replacement reactions', 'Supported Pt', 'TEM', 'Two-step procedure', 'Crystal Lattice', 'Solid State Physics', 'Organic Compounds', 'Chemical Reactions', 'Electrochemistry', 'Nanotechnology', 'Optical Devices and Systems', 'Electric and Magnetic Materials', 'Fuel Cells', 'Rare Earth Metals', 'Precious Metals']","['Wang, Rongfang', ' ,', '', ' Wang, Hui', ' ,', '', ' Wei, Bangxing', ' ,', '', ' Wang, Wei', ' ,', '', ' Lei, Ziqiang', ' ,', '']","Key Laboratory of Eco Environment Related Polymer Materials, Ministry of Education, China  2  Key Laboratory of Gansu Polymer Materials, College of Chemistry and Chemical Engineering, Northwest Normal University, Anning East Road 967, Lanzhou, Gansu 730070, China",2010,ECSA
5,6,"A central aspect of architecting is architecture description  Architecture descriptions take many forms and serve many purposes throughout the life cycle of development, operation and maintenance activities  The use of multiple views   diverse representations for distinct audiences and uses   has been a major tenet of architecture description since the earliest work in software architecture  This tenet has been codified in various ways  Most practising software architects must operate within the confines of a prescribed architecture framework  AF  or architecture description language  ADL  as dictated by their organization or client  Current AFs and ADLs are defined with varying degrees of rigour and offer varying levels of tool support, furthermore, these resources are often closed, making it difficult for the architect to tailor a representational solution to the specific challenges of the project at hand  In this paper we propose an automated infrastructure to support the architecture description related activities of the architect  This infrastructure facilitates customization, composition and reuse of the architect s representational resources  AFs, ADLs and their constituents  to meet project , domain  and organization specific needs  The proposed approach builds upon the conceptual foundations of ISO IEC IEEE 42010 for architecture description  The approach has been evaluated in the context of a complex, real world, public transportation system    2012 IEEE   32 refs",On the composition and reuse of viewpoints across architecture frameworks,"['Architecture description languages', 'Architecture frameworks', 'megamodelling', 'Model-driven Engineering', 'viewpoints', 'Computer Programming']","['Hilliard, Rich', '', '', 'Malavolta, Ivano', '', '', 'Muccini, Henry', '', '', 'Pelliccione, Patrizio']","Dipartimento di Informatica, Universit  dell Aquila, Italy",2012,ECSA
6,7,"A central aspect of architecting is architecture description  Architecture descriptions take many forms and serve many purposes throughout the life cycle of development, operation and maintenance activities  The use of multiple views   diverse representations for distinct audiences and uses   has been a major tenet of architecture description since the earliest work in software architecture  This tenet has been codified in various ways  Most practising software architects must operate within the confines of a prescribed architecture framework  AF  or architecture description language  ADL  as dictated by their organization or client  Current AFs and ADLs are defined with varying degrees of rigour and offer varying levels of tool support, furthermore, these resources are often closed, making it difficult for the architect to tailor a representational solution to the specific challenges of the project at hand  In this paper we propose an automated infrastructure to support the architecture description related activities of the architect  This infrastructure facilitates customization, composition and reuse of the architect s representational resources  AFs, ADLs and their constituents  to meet project , domain  and organization specific needs  The proposed approach builds upon the conceptual foundations of ISO IEC IEEE 42010 for architecture description  The approach has been evaluated in the context of a complex, real world, public transportation system    2012 IEEE   32 refs",On the composition and reuse of viewpoints across architecture frameworks,"['Architecture description languages', 'Architecture frameworks', 'megamodelling', 'Model-driven Engineering', 'viewpoints', 'Computer Programming']","['Hilliard, Rich', '', '', 'Malavolta, Ivano', '', '', 'Muccini, Henry', '', '', 'Pelliccione, Patrizio']","Dipartimento di Informatica, Universit  dell Aquila, Italy",2012,WICSA
7,8,"A central tenet of software architecture design is to base this on a formulation of desired quality attributes, such as buildability, performance, and availability of the target system  Thus there is a need for architectural evaluation   ensuring the architecture s support for desired quality attributes   and a variety of evaluation techniques have been developed, described, and used  Architectural prototyping is an experimental approach that creates executable  skeleton  systems to investigate architectural qualities of a future system  Architectural prototyping is a learning vehicle for exploring an architectural design space as well as an evaluation technique  The contribution of this paper is to explore the evaluation aspect of architectural prototypes from an analytical standpoint  We present an analysis and discussion of architectural prototyping in the context of two well established quality frameworks  Our analysis concludes that architectural prototyping is a viable evaluation technique that may evaluate architectural quality attributes and especially valuable in cases where the balance between opposing qualities must be assessed   29 refs",Exploring quality attributes using architectural prototyping,"['software architecture', 'software prototyping', 'software quality', 'software quality attribute', 'software architectural prototyping', 'software architecture design', 'software architectural evaluation', 'Software engineering techniques']","['Bardram, J E', '', '', ' Christensen, H B', '', '', ' Corry, A V', '', '', ' Hansen, K M', '', '', ' Ingstrup, M', '', '']","Dept  of Comput  Sci , Aarhus Univ , Aarhus, Denmark",2005,QoSA
8,9,"A common approach to adding self management capabilities to a system is to provide one or more external control modules, whose responsibility is to monitor system behavior, and adapt the system at run time to achieve various goals  configure the system, improve performance, recover from faults, etc    An important problem arises when there is more than one such self management module  how can one make sure that they are composed to provide consistent and complementary benefits  In this paper we describe a solution that introduces a self management coordination architecture and infrastructure to support such composition  We focus on the problem of coordinating self configuring and self healing capabilities, particularly with respect to global configuration and incremental repair  We illustrate the approach in the context of a self managing video teleconference system that composes two pre existing adaptation modules to achieve synergistic benefits of both   28 refs",An architecture for coordinating multiple self management systems,"['Computer architecture', 'Decision making', 'Network protocols', 'Problem solving', 'Security of data', 'Synchronization', 'Video conferencing', 'Monitor systems', 'Self-healing', 'Self-managing systems', 'Self-protecting', 'Management', 'Control Systems', 'Artificial Intelligence', 'Data Processing and Image Processing', 'Computer Programming', 'Computer Systems and Equipment', 'Television Systems and Equipment']","['Cheng, Shang Wen', '', '', 'Huang, An Cheng', '', '', 'Garlan, David', '', '', 'Schmerl, Bradley', '', '', 'Steenkiste, Peter']","School of Computer Science, Carnegie Mellon University",2004,WICSA
9,10,"A common approach to adding self management capabilities to a system is to provide one or more external control modules, whose responsibility is to monitor system behavior, and adapt the system at run time to achieve various goals  configure the system, improve performance, recover from faults, etc    An important problem arises when there is more than one such self management module  how can one make sure that they are composed to provide consistent and complementary benefits  In this paper we describe a solution that introduces a self management coordination architecture and infrastructure to support such composition  We focus on the problem of coordinating self configuring and self healing capabilities, particularly with respect to global configuration and incremental repair  We illustrate the approach in the context of a self managing video teleconference system that composes two preexisting adaptation modules to achieve synergistic benefits of both   28 refs",An architecture for coordinating multiple self management systems,"['software architecture', 'software fault tolerance', 'software maintenance', 'teleconferencing', 'multiple self-management system coordination', 'external control modules', 'system behavior monitoring', 'self-managing video teleconference system', 'software architecture', 'self-management systems coordination', 'self-configuration system', 'self-healing system', 'global configuration', 'incremental repair', 'Software engineering techniques', 'Communications computing']","['Shang Wen Cheng', '', '', 'An Cheng Huang', '', '', 'Garlan, D', '', '', ' Schmerl, B', '', '', ' Steenkiste, P', '', '']","Sch  of Comput  Sci , Carnegie Mellon Univ , Pittsburgh, PA, United States",2004,WICSA
10,11,"A common approach to defining architectural views is to have independent heterogeneous representations that are tailored to each view s purpose, but this makes reconciling views into an overall architectural description harder  In this paper we put forward a complementary  not alternative  approach in which some views are derived from a given architecture description language  ADL  in a systematic way, by listing the design questions each view should answer  The approach is based on constructing the language s metamodel and extending it with the entities and associations needed to capture and explicitly relate the required views    2007 IEEE   23 refs",A model driven approach to extract views from an architecture description language,"['Computer hardware description languages', 'Data acquisition', 'Mathematical models', 'Metadata', 'Problem solving', 'Architectural description', 'Architecture description language (ADL)', 'Metamodels', 'Computer Programming', 'Computer Programming Languages', 'Data Processing and Image Processing', 'Artificial Intelligence', 'Computer Applications', 'Mathematics']","['Oliveira, Crist v o', '', '', 'Wermelinger, Michel']","Department of Computer Science, University of Leicester, University Road, Leicester LE1 7RH, United Kingdom  2  Computing Department, Open University, Walton Hall, Milton Keynes MK7 6AA, United Kingdom",2007,WICSA
11,12,"A common approach to defining architectural views is to have independent heterogeneous representations that are tailored to each view s purpose, but this makes reconciling views into an overall architectural description harder  In this paper we put forward a complementary  not alternative  approach in which some views are derived from a given architecture description language  ADL  in a systematic way, by listing the design questions each view should answer  The approach is based on constructing the language s metamodel and extending it with the entities and associations needed to capture and explicitly relate the required views   23 refs",A model driven approach to extract views from an architecture description language,"['high level languages', 'software architecture', 'model-driven approach', 'architecture description language', 'independent heterogeneous representations', 'metamodel', 'Software engineering techniques', 'High level languages']","['Oliveira, C', '', '', ' Wermelinger, M']","Dept  of Comput  Sci , Univ  of Leicester, Leicester, United Kingdom",2007,WICSA
12,13,"A common approach to software architecture documentation in industry projects is the use of file based documents  This approach offers a single dimensional perspective on the architectural knowledge contained  Knowledge retrieval from file based architecture documentation is efficient if the perspective chosen fits the needs of the readers, it is less so if the perspective does not match the needs of the readers  In this paper we describe an approach aimed at addressing architecture documentation retrieval issues  We have employed a software ontology in a semantic wiki optimized for architecture documentation  We have evaluated this ontology based approach in a controlled industry experiment involving software professionals  The efficiency and effectiveness of the proposed approach is found to be better than that of the file based approach    2012 IEEE   29 refs",Ontology based software architecture documentation,"['Semantics', 'Architectural knowledge', 'Industry project', 'Knowledge retrieval', 'Ontology-based', 'Semantic wiki', 'Computer Programming', 'Information Dissemination']","['De Graaf, Klaas Andries', '', '', 'Tang, Antony', '', '', 'Liang, Peng', '', '', 'Van Vliet, Hans']","VU University, Netherlands  2  Swinburne University of Technology, Australia  3  Wuhan University, China",2012,ECSA
13,14,"A common approach to software architecture documentation in industry projects is the use of file based documents  This approach offers a single dimensional perspective on the architectural knowledge contained  Knowledge retrieval from file based architecture documentation is efficient if the perspective chosen fits the needs of the readers, it is less so if the perspective does not match the needs of the readers  In this paper we describe an approach aimed at addressing architecture documentation retrieval issues  We have employed a software ontology in a semantic wiki optimized for architecture documentation  We have evaluated this ontology based approach in a controlled industry experiment involving software professionals  The efficiency and effectiveness of the proposed approach is found to be better than that of the file based approach    2012 IEEE   29 refs",Ontology based software architecture documentation,"['Semantics', 'Architectural knowledge', 'Industry project', 'Knowledge retrieval', 'Ontology-based', 'Semantic wiki', 'Computer Programming', 'Information Dissemination']","['De Graaf, Klaas Andries', '', '', 'Tang, Antony', '', '', 'Liang, Peng', '', '', 'Van Vliet, Hans']","VU University, Netherlands  2  Swinburne University of Technology, Australia  3  Wuhan University, China",2012,WICSA
14,15,"A common practice in software architecture design is to apply architectural views to design software architecture for the various stakeholder concerns  Architectural views are usually developed based on architectural viewpoints which define the conventions for constructing, interpreting and analyzing views  So far most architectural viewpoints seem to have been primarily used either to support the communication among stakeholders, or at the best to provide a blueprint for the detailed design  In this paper we provide a software language engineering approach to define viewpoints as domain specific languages  This enhances the formal precision of architectural viewpoints and leads to executable views that can be interpreted and analyzed by tools  We illustrate our approach for defining domain specific languages for the viewpoints of the Views and Beyond approach    2011 Springer Verlag   13 refs",Software language engineering of architectural viewpoints,"['Design', 'Software design', 'Architectural Viewpoints', 'Architectural views', 'Detailed design', 'Domain specific languages', 'Domain specific modeling', 'Software architecture design', 'Software Language Engineering', 'Software languages', 'Tool Support', 'Structural Design', 'Computer Programming']","['Demirli, Elif', '', '', 'Tekinerdogan, Bedir']","Department of Computer Engineering, Bilkent University, Ankara 06800, Turkey",2011,ECSA
15,16,"A common practice in software architecture design is to apply architectural views to model the design decisions for the various stakeholder concerns  When dealing with quality concerns, however, it is more difficult to address these explicitly in the architectural views  This is because quality concerns do not easily match the architectural elements that seem to be primarily functional in nature  As a result, the communication and analysis of these quality concerns becomes more problematic in practice  We introduce a general and practical approach for supporting architects to model quality concerns by extending the architectural viewpoints of the so called V B approach  We illustrate the approach for defining recoverability and adaptability viewpoints for an open source software architecture    2011 Springer Verlag   8 refs",Defining architectural viewpoints for quality concerns,"['Open systems', 'Software design', 'Architectural element', 'Architectural views', 'Design decisions', 'Model qualities', 'Recoverability', 'Software architecture design', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Tekinerdogan, Bedir', '', '', 'S zer, Hasan']","Bilkent University, Department of Computer Engineering, Bilkent 06800 Ankara, Turkey  2  Ozyegin University, Department of Computer Engineering, Istanbul, Turkey",2011,ECSA
16,17,"A comparative study of the electrochemical stability of Pt25Cu75 and Pt20Cu20Co60 alloy nanoparticle electrocatalysts in liquid electrolyte half cell environment was conducted  The aforementioned catalysts were shown to possess improved resistance to electrochemical surface area  ECSA  loss during voltage cycling relative to commercially available pure Pt electrocatalysts  The difference in ECSA loss was attributed to their initial mean particle size, which varied depending on the temperature at which the alloy catalysts were prepared  e g  600, 800 and 950  C   Higher preparation temperatures resulted in larger particles and lead to lower ECSA loss  Liquid electrolyte environment short term durability testing  5000 voltages cycles  revealed the addition of cobalt to be beneficial as ternary compositions exhibited stability advantages over binary catalysts  Oxygen reduction reaction  ORR  activity and catalyst stability tests were then performed for both Pt25Cu75 and Pt20Cu20Co60 alloy catalysts in membrane electrode assemblies  MEA   ORR activity data, taken both prior to and at the conclusion of 30,000 voltage cycles from 0 5 to 1 0 V vs  reversible hydrogen electrode  RHE , revealed that both Pt25Cu75 and Pt20Cu20Co60 were able to retain both their mass and Pt surface area based activity advantage relative to Pt C  R  Srivastava, P  Mani, N  Hahn, P  Strasser, Angew  Chem  Int  Ed  46  2007 , 8988  P  Mani, R  Srivastava, P  Strasser, J  Phys  Chem  C 112  2008 , 2770  S  Koh, P  Strasser, J  Am  Chem  Soc  129  2007 , 12624   Further analysis revealed that the Pt surface area based activity, measured at 0 9 V vs  RHE, of commercially available Pt catalysts, as well as that for both Pt25Cu75 and Pt20Cu20Co60 increased on the order of tens of   A c mPt  2 per 1000 voltage cycles  This increase in specific activity combined with a reduced ECSA loss resulted in a negligible change for the Pt mass based activity of Pt25Cu75 alloys annealed at 950  C    2008 Elsevier B V  All rights reserved   28 refs",Electrochemical activity and stability of dealloyed Pt Cu and Pt Cu Co electrocatalysts for the oxygen reduction reaction  ORR,"['Alloys', 'Catalysis', 'Catalyst activity', 'Catalysts', 'Cell membranes', 'Cerium alloys', 'Cobalt', 'Copper', 'Copper alloys', 'Electric batteries', 'Electrocatalysis', 'Electrocatalysts', 'Electrochemistry', 'Electrolysis', 'Electrolytes', 'Electrolytic reduction', 'Fuel cells', 'Hydrogen', 'Metallic compounds', 'Nanoparticles', 'Nonmetals', 'Oxygen', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Reduction', 'Solid oxide fuel cells (SOFC)', 'Ternary alloys', 'Ternary systems', 'Transition metals', 'Alloy nanoparticles', 'Dealloyed Pt electrocatalysts', 'Oxygen reduction reaction', 'PEM fuel cell', 'Pt Cu Co ternary alloys', 'Fuel Cells', 'Electric and Magnetic Materials', 'Thermionic Materials', 'Nanotechnology', 'Electrochemistry', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Organic Compounds', 'Inorganic Compounds', 'Solid State Physics', 'Electric Batteries', 'Biological Materials and Tissue Engineering', 'Metallurgy and Metallography', 'Metallurgy', 'Metallography', 'Ore Treatment', 'Copper', 'Copper Alloys', 'Precious Metals', 'Rare Earth Metals', 'Nonferrous Metals and Alloys excluding Alkali and Alkaline Earth Metals', 'Electric Batteries and Fuel Cells']","['Neyerlin, K C', '', '', ' Srivastava, Ratndeep', '', '', 'Yu, Chengfei', '', '', 'Strasser, Peter', ' ,', '']","Department of Chemical and Biomolecular Engineering, University of Houston, Houston, TX 77204, United States  2  Institut fuer Chemie, Technische Universitaet Berlin, 10623 Berlin, Germany",2009,ECSA
17,18,"A controlled composition based method   that is, the microwave assisted ethylene glycol  MEG  method   was successfully developed to prepare bimetallic PtxRu100 x C nanoparticles  NPs  with different alloy compositions  This study highlights the impact of the variation in alloy composition of PtxRu100 x C NPs on their alloying extent  structure  and subsequently their catalytic activity towards the methanol oxidation reaction  MOR   The alloying extent of these PtxRu 100 x C NPs has a strong influence on their Pt d band vacancy and Pt electroactive surface area  Pt ECSA   this relationship was systematically evaluated by using X ray absorption  XAS , scanning electron microscopy  SEM  coupled with energy dispersive X ray spectroscopy  EDX , transmission electron microscopy  TEM , density functional theory  DFT  calculations, and electrochemical analyses  The MOR activity depends on two effects that act in cooperation, namely, the number of active Pt sites and their activity  Here the number of active Pt sites is associated with the Pt ECSA value, whereas the Pt site activity is associated with the alloying extent and Pt d band vacancy  electronic  effects  Among the PtxRu100 x C NPs with various Pt Ru atomic ratios  x 25, 50, and 75 , the Pt75Ru 25 C NPs were shown to be superior in MOR activity on account of their favorable alloying extent, Pt d band vacancy, and Pt ECSA  This short study brings new insight into probing the synergistic effect on the surface reactivity of the PtxRu100 x C NPs, and possibly other bimetallic Pt based alloy NPs  Control and catalysis  This study reports a controlled composition based synthesis and characterization of selected bimetallic PtxRu100 x C nanoparticles and simultaneously demonstrates their physiochemical properties   that is, their alloying extent and electronic structure   by focusing on the catalytic activity  see figure   A methanol oxidation reaction was used as a model system  Copyright   2013 WILEY VCH Verlag GmbH   Co  KGaA, Weinheim   68 refs",Relating the composition of PtxRu100 x C nanoparticles to their structural aspects and electrocatalytic activities in the methanol oxidation reaction,"['Alloying', 'Alloys', 'Catalyst activity', 'Cerium alloys', 'Density functional theory', 'Electronic structure', 'Ethylene glycol', 'Methanol', 'Nanoparticles', 'Oxidation', 'Platinum', 'Ruthenium', 'Ruthenium alloys', 'Scanning electron microscopy', 'Synthesis (chemical)', 'Transmission electron microscopy', 'X ray spectroscopy', 'Alloy compositions', 'Atomic ratio', 'Density functional theory calculations', 'Electroactive surface areas', 'Electrocatalytic activity', 'Electrochemical analysis', 'Electronic effects', 'Energy dispersive X ray spectroscopy', 'Methanol oxidation reactions', 'Microwave-assisted', 'Model system', 'Physio-chemical properties', 'Structural aspects', 'Surface reactivity', 'Synergistic effect', 'Transmission electron microscopy tem', 'Solid State Physics', 'Organic Compounds', 'Chemical Reactions', 'Chemistry', 'Nanotechnology', 'Optical Devices and Systems', 'Light Optics', 'Electric and Magnetic Materials', 'Rare Earth Metals', 'Precious Metals', 'Metallurgy']","['Taufany, Fadlilatul', ' ,', '', ' Pan, Chun Jern', '', '', 'Lai, Feng Ju', '', '', 'Chou, Hung Lung', '', '', 'Sarma, Loka Subramanyam', '', '', 'Rick, John', '', '', 'Lin, Jhih Min', '', '', 'Lee, Jyh Fu', '', '', 'Tang, Mau Tsu', '', '', 'Hwang, Bing Joe', ' ,', '']","Department of Chemical Engineering, National Taiwan University of Science and Technology,  43, Sec  4, Keelung Rd , Taipei, 10607, Taiwan  2  Department of Chemical Engineering, Institut Teknologi Sepuluh Nopember, Surabaya 60111, Indonesia  3  National Synchrotron Radiation Research Center, 101 Hsin Ann Road, Hsinchu Science Park, Hsinchu 30076, Taiwan",2013,ECSA
18,19,"A controlled release system composed of surface modified porous polycaprolactone  PCL  membranes combined with a layer of tetraorthosilicate  TEOS  chitosan sol gel was reported in this study  PCL is a hydrophobic, semi crystalline, and biodegradable polymer with a relatively slow degradation rate  The drugs chosen for release experiments were silver sulfadiazine  AgSD  and ketoprofen which were impregnated in the TEOS chitosan sol gel  The surface modification was achieved by O2 plasma and the surfaces were characterized by water contact angle  WCA  measurements, atomic force microscope  AFM , scanning electron microscope and electron spectroscopy for chemical analysis  ESCA   The results showed that the release of AgSD on O2 plasma treated porous PCL membranes was prolonged when compared with the pristine sample  On the contrary, the release rate of ketoprofen revealed no significant difference on pristine and plasma treated PCL membranes  The prepared PCL membranes showed good biocompatibility for the wound dressing biomaterial applications   All rights reserved Elsevier    38 refs",Integrating sol gel with cold plasmas modified porous polycaprolactone membranes for the drug release of silver sulfadiazine and ketoprofen,"['atomic force microscopy', 'biodegradable materials', 'biomedical materials', 'biomembranes', 'contact angle', 'drug delivery systems', 'drugs', 'ESCA', 'hydrophobicity', 'plasma materials processing', 'polymer gels', 'porosity', 'porous materials', 'scanning electron microscopy', 'silver', 'sol-gel processing', 'sols', 'surface treatment', 'wounds', 'sol-gel integration', 'cold plasma modified porous polycaprolactone membrane surface', 'silver-sulfadiazine drug release', 'ketoprofen drug release', 'tetraorthosilicate-chitosan sol-gel layers', 'hydrophobic polymer', 'semicrystalline polymer', 'biodegradable polymer', 'degradation rate', 'surface modification', 'O2 plasma treatment', 'water contact angle', 'atomic force microscopy', 'AFM', 'scanning electron microscopy', 'electron spectroscopy-for-chemical analysis', 'pristine sample', 'biocompatibility', 'wound dressing biomaterial applications', 'ECSA', 'Ag', 'Biomedical materials', 'Surface treatment and degradation of polymers and plastics', 'Fluid surface energy  surface tension, interface tension, angle of contact, etc', 'A     Solid surface structure', 'Electron spectroscopy for chemical analysis  photoelectron, Auger spectroscopy, etc', 'A    F Physics of subcellular structures', 'Natural and artificial biomembranes', 'Gels and sols', 'Plasma applications in manufacturing and materials processing', 'Structure of powders and porous materials', 'Patient care and treatment']","['Mangindaan, D', '', '', ' Chao Ting Chen', '', '', 'Meng Jiy Wang']","Dept  of Chem  Eng , Nat  Taiwan Univ  of Sci    Technol , Taipei, Taiwan",2012,ECSA
19,20,"A crucial aspect of the software architect s role is to ensure that a system based on their architecture will exhibit the quality properties  performance, security, availability and so on  that are important to their stakeholders  A proven approach to help guide an architect through the process of designing an architecture is to use architectural views, based on formal viewpoint definitions  such as those in the well known  4 1  set   However, a practical problem we have found when using existing viewpoint sets is the lack of guidance relating to system qualities  as opposed to system structures  that they provide  To address this problem, we identified a complimentary concept, called the architectural perspective  15 , to provide an architect with practical guidance as to how to ensure that their system exhibits the right set of quality properties  This paper reviews the idea of the architectural perspective and relates a specific experience of applying them to the architectural definition of an enterprise integration project for a financial markets organisation, explaining the strengths and weaknesses we found in the approach    2005 IEEE   16 refs",Using architectural perspectives,"['Engineers', 'Industrial economics', 'Marketing', 'Problem solving', 'Project management', 'Financial markets', 'Formal viewpoint', 'Software architect', 'Artificial Intelligence', 'Computer Applications', 'Engineering Professional Aspects', 'Industrial Economics', 'Marketing', 'Management']","['Woods, Eoin', '', '', 'Rozanski, Nick']",Artechra,2005,WICSA
20,21,"A discharge test was conducted to evaluate the degradation of the performance of electrocatalysts in direct methanol fuel cells  DMFCs   The results of transmission electron microscopy  TEM  and X ray diffraction  XRD  analyses show that after the test, the mean particle size of the anode electrocatalyst did not change, while that of the cathode electrocatalyst increased remarkably  The main reason for the sintering of electrocatalysts is the existence of liquids  Amorphous Ru species in the anode catalyst inhibit the growing of Pt crystallites  The electrochemical surface area  ECSA  decreased after the discharge test, with a degree higher than the specific surface area SSA , both for the anode and the cathode  Part of ruthenium was lost from the anode electrocatalyst during the discharge test   16 refs",Degradation of electrocatalysts performance in direct methanol fuel cells,[nan],"['Chen, Wei Min', ' Sun, Gong Quan', ' Zhao, Xin Sheng', ' Sun, Pi Chang', ' Yang, Shao Hua', ' Xin, Qin']",None,2007,ECSA
21,22,"A discharge test was conducted to evaluate the degradation of the performance of electrocatalysts in direct methanol fuel cells  DMFCs   The results of transmission electron microscopy  TEM  and X ray diffraction  XRD  analyses show that after the test, the mean particle size of the anode electrocatalyst did not change, while that of the cathode electrocatalyst increased remarkably  The main reason for the sintering of electrocatalysts is the existence of liquids  Amorphous Ru species in the anode catalyst inhibit the growing of Pt crystallites  The electrochemical surface area  ECSA  decreased after the discharge test, with a degree higher than the specific surface area SSA , both for the anode and the cathode  Part of ruthenium was lost from the anode electrocatalyst during the discharge test   16 refs",Degradation of electrocatalysts performance in direct methanol fuel cells,[nan],"['Chen, Wei Min', ' Sun, Gong Quan', ' Zhao, Xin Sheng', ' Sun, Pi Chang', ' Yang, Shao Hua', ' Xin, Qin']",None,2008,ECSA
22,23,"A distributed software system uses a complex system of resources which work together to process a request  A typical web based request flows through various servers including Web servers, database servers, Java application servers, etc, deployed on various hardware platforms  Such a request encounters various forms of delays at and between these servers  communication delay, processing delay and queueing delay  Queueing delay is incurred at every point where there is any contention for resources, e g  for acquiring a thread, or the CPU, or the lock to a log file  Queueing delay depends on the rate at which requests arrive for that particular resource, which in turn depends on the user behavior, the flow of the request, and the deployment of the servers  Given the number and type of soft and hard resources that make up a distributed system, it is a non trivial task to quantify these delays  To address this problem, a number of methodologies and tools have been proposed, which allow a distributed system to be specified at a high level, and which generate and solve an underlying model using queueing theory techniques, to answer questions such as what the response time of a request is, what the bottleneck server is, and so on  In this tutorial we will review the state of the art in methods and tools for modeling and analyzing distributed software systems  This includes  Motivating examples of web based multi tier server systems Queueing systems primer  M M c K, M G 1 etc   Simple examples of application of queueing theory to software servers Introductory example of the  layered queueing network  method Overview of generalized software performance modeling methods and tools Real life applicability of modeling methodologies  comparisons with measured performance   0 refs",Performance analysis of distributed software systems  approaches based on queueing theory,"['Internet', 'queueing theory', 'software performance evaluation', 'performance analysis', 'distributed software systems', 'queueing theory', 'Web-based request flows', 'queueing delay', 'Web-based multi-tier server systems', 'Distributed systems software', 'Software performance evaluation', 'Queueing theory']","['Source', '', '', ' Working IEEE IFIP Conference on Software Architecture', 'WICSA', '', ', p', '', ',', '', '', ' ISBN', '', '', '', '', '', '', '', '', '', 'Conference', '', '', ' Working IEEE IFIP Conference on Software Architecture', 'WICSA', '', ',', '', ' Jan', '', '', ', Mumbai, India', 'Publisher', 'IEEE, Piscataway, NJ, USA']",None,2007,WICSA
23,24,"A domain specific language  DSL  is designed for a certain problem domain  Its notation is tailored to the relevant concepts and features of that domain  In this paper, we present a basis for a DSL for XML security standards  In particular, we focus on three prominent examples, i e  XML Signature, XML Encryption, and SAML that are integrated into a common DSL  The main goals of our DSL are to make it easily comprehensible for security domain experts, easily applicable for people being familiar with at least one GPL, and easily extensible for further XML standards    2014 ACM   15 refs",A domain specific language for XML security standards,"['Problem oriented languages', 'Software architecture', 'Standards', 'Concepts and features', 'Domain specific languages', 'Problem domain', 'Security domains', 'XML encryption', 'XML security', 'XML signature', 'XML standards', 'Computer Software, Data Handling and Applications', 'Codes and Standards']","['Schefer Wenzl, Sigrid', '', '', 'Feiertag, Katharina']","Competence Center for IT Security, University of Applied Sciences Campus Vienna, Vienna, Austria  2  University of Applied Sciences Campus Vienna, Vienna, Austria",2014,ECSA
24,25,"A growing number of mobile users prefer to access information and even make critical business decisions using their mobile phones  We present an integrated architecture developed at SAP Research as a platform for mobile business applications  The immediate goal is to allow mobile users to access information and servies provided by the business back end servers  The long term goal is to develop techniques to overcome many problems mobile users face under such constraints as limited bandwidth, computational power and storage resources  The framework that we propose in this paper enables business applications connected to SAP through common mobile devices  SAP users can access business data and applications on the backend server and execute tasks without a PC  We present components of the Lightweight Architecture  LWA  with specific components in the areas of data management, data compression, connectivity, and user interfaces    2008 IEEE   6 refs",An integrated lightweight software architecture for mobile business applications,"['Architecture', 'Data compression', 'Global system for mobile communications', 'Management information systems', 'Mobile computing', 'Mobile devices', 'Servers', 'Telecommunication', 'Telecommunication equipment', 'User interfaces', 'Back-end servers', 'Business applications', 'Business data', 'Computational power', 'Critical business', 'Data management', 'Experimentation', 'Integrated architectures', 'Lightweight architecture', 'Limited bandwidth', 'Management', 'Measurement', 'Mobile access', 'Mobile business', 'Mobile phones', 'Mobile users', 'Specific components', 'Storage resources', 'Data Processing and Image Processing', 'Computer Programming', 'Computer Peripheral Equipment', 'Computer Systems and Equipment', 'Information Theory and Signal Processing', 'Telecommunication  Radar, Radio and Television', 'Buildings and Towers']","['Dagtas, Serhan', ' ,', '', ' Natchetoi, Yuri', '', '', 'Wu, Huaigu', '', '', 'Hamdi, Louenas']","SAP Labs , Canada  2  University of Arkansas, Little Rock",2008,WICSA
25,26,"A highly active and stable bimetallic nano hybrid catalyst Graphene Cobalt Platinum  G Co Pt  is proposed for the enhanced and cost effective generation of hydrogen from Sodium Borohydride  Three different nano hybrid catalysts namely Graphene Cobalt  G Co , Graphene Platinum  G Pt  and Graphene Cobalt Platinum  G Co Pt  are synthesized, characterized using XRD, FTIR, SEM, HRTEM, EDAX and Cyclic voltammetry  CV  analysis and tested for hydrogen generation  The activity and stability of the catalysts are analyzed by estimating the turnover frequency  TOF , the electrochemically active surface area  ECSA , the percentage decay of current density over ten cycles of CV and the decay in the rate of hydrogen generation with the age of catalyst  Among the three catalysts G Co Pt exhibits the highest catalytic activity  TOF   107 min 1, ECSA   75 32 m2 gm  and stability  The evaluated value of activation energy of the catalytic hydrolysis using G Co Pt is 16   2 kJ mol 1   All rights reserved Elsevier    48 refs",Graphene supported bimetallic G Co Pt nanohybrid catalyst for enhanced and cost effective hydrogen generation,"['catalysts', 'cobalt', 'Fourier transform infrared spectroscopy', 'graphene', 'hydrogen production', 'platinum', 'scanning electron microscopy', 'sodium compounds', 'transmission electron microscopy', 'voltammetry (chemical analysis)', 'X-ray chemical analysis', 'X-ray diffraction', 'graphene', 'bimetallic nanohybrid catalyst', 'hydrogen generation', 'cobalt', 'platinum', 'sodium borohydride', 'X-ray diffraction', 'XRD', 'Fourier transform infrared spectroscopy', 'FTIR', 'scanning electron microscopy', 'SEM', 'high resolution transmission electron microscopy', 'HRTEM', 'EDAX', 'cyclic voltammetry', 'CV analysis', 'turnover frequency', 'TOF', 'electrochemically active surface area', 'ECSA', 'catalytic activity', 'activation energy', 'catalytic hydrolysis', 'NaBH4', 'C-Co-Pt', 'Hydrogen fuel', 'Hydrogen storage and technology', 'Homogeneous catalysis']","['Saha, S', '', '', ' Basak, V', '', '', ' Dasgupta, A', '', '', ' Ganguly, S', '', '', ' Banerjee, D', '', '', ' Kargupta, K', '', '']","Chem  Eng  Dept , Jadavpur Univ , Kolkata, India  2  Chem  Eng  Dept , Univ  Teknol  Petronas, Tronoh, Malaysia  3  Dept  of Phys , Bengal Eng    Sci  Univ , Shibpur, India",2014,ECSA
26,27,"A key aspect in creating autonomous dynamic software systems is the possibility of reasoning about properties of runtime variability and dynamic behavior, e g  when and how to reconfigure the system  Currently these properties are often not made explicit in the software architecture  We argue that having explicit models for the different architectural elements is a necessity, as it enables separation of concerns both pre deployment and post deployment  In this paper we propose a reconfiguration process based on a number of explicit models  Using this process as a basis for architectural development facilitates the design and evolution of autonomous reconfiguration    2005 IEEE   3 refs",Explicit models for dynamic software,"['Autonomous agents', 'Computer aided design', 'Dynamic programming', 'Engineering research', 'Mathematical models', 'Autonomous reconfiguration', 'Computer architectural elements', 'Dynamic software systems', 'Runtime variability', 'Computer Programming', 'Computer Applications', 'Engineering Research', 'Optimization Techniques']","['Bosloper, Ivor', '', '', 'Siljee, Johanneke', '', '', 'Nijhuis, Jos']","Department of Mathematics and Computer Science, University of Groningen, PO Box 800, 9700 AV Groningen, Netherlands",2005,WICSA
27,28,"A key aspect of architecture centric development is the traceability of design documentation  In particular, architects should be always aware of the relationships between the architectural model  as documented  and its corresponding implementation model  The problem is that these two models usually diverge from each other over time, due to factors such as new requirements, refactorings, etc  Therefore, tool assistance is very important to assess the level of conformance between architectural documentation and implementation  In this paper, we present a tool approach called ArchSync that helps architects to conciliate architectural documentation expressed through Use Case Maps with Java source code, as modifications are being made on the code  ArchSync relies on a heuristic that incrementally detects inconsistencies with respect to the architectural prescriptions, based on the analysis of system execution traces  ArchSync can also give suggestions for re synchronization  Results of two case studies showing the applicability of the approach are reported    2009 IEEE   18 refs",Assisting the synchronization of UCM based architectural documentation with implementation,"['Architecture', 'Computer software', 'Architectural models', 'Case maps', 'Case-studies', 'Design documentation', 'Execution trace', 'Implementation models', 'Java source codes', 'Refactorings', 'Resynchronization', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Diaz Pace, J', 'Andres', '', '', 'Carlino, Juan P', '', '', ' Blech, Martin', '', '', 'Soria, Alvaro', '', '', 'Campo, Marcelo R', '', '']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, United States  2  ISISTAN Research Institute, UNICEN University, Tandil, Buenos Aires, Argentina",2009,ECSA
28,29,"A key aspect of architecture centric development is the traceability of design documentation  In particular, architects should be always aware of the relationships between the architectural model  as documented  and its corresponding implementation model  The problem is that these two models usually diverge from each other over time, due to factors such as new requirements, refactorings, etc  Therefore, tool assistance is very important to assess the level of conformance between architectural documentation and implementation  In this paper, we present a tool approach called ArchSync that helps architects to conciliate architectural documentation expressed through Use Case Maps with Java source code, as modifications are being made on the code  ArchSync relies on a heuristic that incrementally detects inconsistencies with respect to the architectural prescriptions, based on the analysis of system execution traces  ArchSync can also give suggestions for re synchronization  Results of two case studies showing the applicability of the approach are reported    2009 IEEE   18 refs",Assisting the synchronization of UCM based architectural documentation with implementation,"['Architecture', 'Computer software', 'Architectural models', 'Case maps', 'Case-studies', 'Design documentation', 'Execution trace', 'Implementation models', 'Java source codes', 'Refactorings', 'Resynchronization', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Diaz Pace, J', 'Andres', '', '', 'Carlino, Juan P', '', '', ' Blech, Martin', '', '', 'Soria, Alvaro', '', '', 'Campo, Marcelo R', '', '']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, United States  2  ISISTAN Research Institute, UNICEN University, Tandil, Buenos Aires, Argentina",2009,WICSA
29,30,"A key aspect of architecture centric development is the traceability of design documentation  In particular, architects should be always aware of the relationships between the architectural model  as documented  and its corresponding implementation model  The problem is that these two models usually diverge from each other over time, due to factors such as new requirements, refactorings, etc  Therefore, tool assistance is very important to assess the level of conformance between architectural documentation and implementation  In this paper, we present a tool approach called ArchSync that helps architects to conciliate architectural documentation expressed through Use Case Maps with Java source code, as modifications are being made on the code  ArchSync relies on a heuristic that incrementally detects inconsistencies with respect to the architectural prescriptions, based on the analysis of system execution traces  ArchSync can also give suggestions for re synchronization  Results of two case studies showing the applicability of the approach are reported    2009 IEEE   18 refs",Assisting the synchronization of UCM based architectural documentation with implementation,"['Architecture', 'Computer software', 'Architectural models', 'Case maps', 'Case-studies', 'Design documentation', 'Execution trace', 'Implementation models', 'Java source codes', 'Refactorings', 'Resynchronization', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Diaz Pace, J', 'Andres', '', '', 'Carlino, Juan P', '', '', ' Blech, Martin', '', '', 'Soria, Alvaro', '', '', 'Campo, Marcelo R', '', '']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, United States  2  ISISTAN Research Institute, UNICEN University, Tandil, Buenos Aires, Argentina",2011,WICSA
30,31,"A key challenge of Web Service  WS  composition is how to ensure reliable execution  Due to their inherent autonomy and heterogeneity, it is difficult to reason about the behavior of service compositions especially in case of failures  Therefore, there is a growing interest for verification techniques which help to prevent service composition execution failures  In this paper, we present a proof and refinement based approach for the formal representation, verification and validation of Web Services transactional compositions using the Event B method    2011 Springer Verlag   9 refs",Verifying composite service transactional behavior with EVENT B,"['Quality of service', 'Software architecture', 'Verification', 'Composite services', 'Event-B', 'Formal representations', 'proof', 'refinement', 'Reliable execution', 'Service compositions', 'Verification and validation', 'Verification techniques', 'web service composition', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Software, Data Handling and Applications']","['Hamel, Lazhar', '', '', 'Graiet, Mohamed', '', '', 'Kmimech, Mourad', '', '', 'Bhiri, Mohamed Tahar', '', '', 'Gaaloul, Walid']","MIRACL, ISIMS, Tunisia  2  Computer Science Department, T l com  SudParis, France",2011,ECSA
31,32,"A key objective for ubiquitous environments is to enable system interoperability between system s components that are highly heterogeneous  In particular, the challenge is to embed in the system architecture the necessary support to cope with behavioral diversity in order to allow components to coordinate and communicate  In this paper we present the design building blocks for the dynamic and on the fly interoperability between heterogeneous components  Specifically, we describe an Architectural Pattern called Mediating Connector, that is the key enabler for communication  In addition, we present a set of Basic Mediator Patterns, that describe the basic mismatches which can occur when components try to interact, and their corresponding solutions    2010 Springer Verlag Berlin Heidelberg   22 refs",Mediating connector patterns for components interoperability,"['Interoperability', 'Architectural pattern', 'Basic Mediator Patterns', 'Behavioral diversity', 'Building blockes', 'Corresponding solutions', 'Heterogeneous component', 'Key objective', 'On-the-fly', 'System architectures', 'System interoperability', 'Ubiquitous environments', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Software, Data Handling and Applications']","['Spalazzese, Romina', '', '', 'Inverardi, Paola']","Universit  Degli Studi dell Aquila, via Vetoio, L Aquila I 67100, Italy",2010,ECSA
32,33,"A lack of insight into the relationship between  non   functional requirements and architectural solutions often leads to problems in real life projects  This paper presents a model that concentrates on the mapping of non functional requirements onto functional requirements for architecture design  We build a framework that both provides a model and a repeatable method to transform conflicting requirements into a system decomposition  This paper presents the framework, and discusses two cases onto which the method is applied  In one case, the method is successfully used to reconstruct the high level structure of a system from its requirements  The second case is one in which the method was actually used to create a system design fitting the stakeholders  needs, and that is reproducible from its requirements   13 refs",Resolving requirement conflicts through non functional decomposition,"['Data reduction', 'Optimization', 'Problem solving', 'Project management', 'Societies and institutions', 'Systems analysis', 'Architectural design process', 'Architectural transformations', 'Non-functional decompositions', 'Software quality', 'Optimization Techniques', 'Operations Research', 'Management', 'Societies and Institutions', 'Artificial Intelligence', 'Data Processing and Image Processing', 'Computer Programming']","['Poort, Eltjo R', '', '', ' De With, Peter H N', '', '']","LogicaCMG Amhem, Meander 901, 6825 MH Arnhem, Netherlands  2  LogicaCMG, Eindhoven Univ  of Technol , P O  Box 513, 5600 MB Eindhoven, Netherlands",2004,WICSA
33,34,"A lack of insight into the relationship between  non  functional requirements and architectural solutions often leads to problems in real life projects  This paper presents a model that concentrates on the mapping of nonfunctional requirements onto functional requirements for architecture design  We build a framework that both provides a model and a repeatable method to transform conflicting requirements into a system decomposition  This paper presents the framework, and discusses two cases onto which the method is applied  In one case, the method is successfully used to reconstruct the high level structure of a system from its requirements  The second case is one in which the method was actually used to create a system design fitting the stakeholders  needs, and that is reproducible from its requirements   13 refs",Resolving requirement conflicts through non functional decomposition,"['formal specification', 'software architecture', 'systems analysis', 'nonfunctional decomposition', 'functional requirements', 'requirement conflict resolution', 'architectural solutions', 'nonfunctional requirements', 'architecture design', 'system decomposition', 'high-level structure', 'system design', 'Software engineering techniques', 'Formal methods']","['Poort, E R', '', '', ' de With, P H N', '', '']","LogicaCMG, Arnhem, Netherlands",2004,WICSA
34,35,"A large IT company is creating a generic architecting process  Since the company has set an objective to achieve Maturity Level 3 of the Capability Maturity Model Integration  CMMI , the process needs to comply with the relevant requirements set by the CMMI  This paper presents the elicitation of such requirements, and the resulting set of requirements  It analyzes their potential impact on generic architecting processes found in literature  It turns out that many key architectural concepts are at best loosely defined in the CMMI  CMMI is strong in support of the development related architecting activities, but gives only indirect support for other architecting activities, particularly in a product development context    2008 Springer Verlag Berlin Heidelberg   13 refs",The influence of CMMI on establishing an architecting process,"['Computer software selection and evaluation', 'Product development', 'Project management', 'Software engineering', 'Architectural concepts', 'Capability Maturity Model Integration', 'International conferences', 'Potential impacts', 'Process needs', 'Quality of softwares', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Management', 'Product Development  Concurrent Engineering']","['Poort, Eltjo R', '', '', ' Postema, Herman', '', '', 'Key, Andrew', '', '', 'De With, Peter H', 'N', '', '']","LogicaCMG, P O  Box 159, Amstelveen 1180 AD, Netherlands  2  LogicaCMG, Stephenson House, 75 Hampstead Road, London NW1 2PL, United Kingdom  3  Eindhoven Univ  of Technol , P O  Box 513, Eindhoven 5600 MB, Netherlands",2007,QoSA
35,36,"A large IT company is creating a generic architecting process  Since the company has set an objective to achieve Maturity Level 3 of the Capability Maturity Model Integration  CMMI , the process needs to comply with the relevant requirements set by the CMMI  This paper presents the elicitation of such requirements, and the resulting set of requirements  It analyzes their potential impact on generic architecting processes found in literature  It turns out that many key architectural concepts are at best loosely defined in the CMMI  CMMI is strong in support of the development related architecting activities, but gives only indirect support for other architecting activities, particularly in a product development context   13 refs",The influence of CMMI on establishing an architecting process,"['Capability Maturity Model', 'DP management', 'program verification', 'software architecture', 'CMMI', 'Capability Maturity Model Integration', 'generic architecting process', 'IT company', 'requirement elicitation', 'product development context', 'Software management', 'Software engineering techniques', 'Diagnostic, testing, debugging and evaluating systems', 'Formal methods']","['Poort, E R', '', '', ' Postema, H', '', '', ' Key, A', '', '', ' de With, P H N', '', '']","LogicaCMG, Amstelveen, Netherlands  2  LogicaCMG, London, United Kingdom  3  Eindhoven Univ  of Technol , Eindhoven, Netherlands",2008,QoSA
36,37,"A major part of software architecture design is learning how specific architectural designs balance the concerns of stakeholders  We explore the notion of  architectural prototypes , correspondingly architectural prototyping, as a means of using executable prototypes to investigate stakeholders  concerns with respect to a system under development  An architectural prototype is primarily a learning and communication vehicle used to explore and experiment with alternative architectural styles, features, and patterns in order to balance different architectural qualities  The use of architectural prototypes in the development process is discussed, and we argue that such prototypes can play a role throughout the entire process  The use of architectural prototypes is illustrated by three distinct cases of creating software systems  We argue that architectural prototyping can provide key insights that may otherwise be difficult to obtain before a system is built  Furthermore, they define skeleton systems that serve as communication means and knowledge transfer among stakeholders   23 refs",Architectural prototyping  an approach for grounding architectural design and learning,"['software architecture', 'software prototyping', 'software architectural prototyping', 'software architectural learning', 'software architecture design', 'architectural qualities', 'knowledge transfer', 'software system development', 'Software engineering techniques']","['Bardram, J E', '', '', ' Christensen, H B', '', '', ' Hansen, K M', '', '']","Dept  of Comput  Sci , Aarhus Univ , Aarhus, Denmark",2004,WICSA
37,38,"A metamodel based approach is proposed to filter the information in an architectural knowledge base and present that information in a convenient form for a stakeholder, as a dynamically generated just in time document targeted for a specific need    2012 IEEE   18 refs",TopDocs  Using software architecture knowledge base for generating topical documents,"['Knowledge based systems', 'Knowledge management', 'Architectural knowledge base', 'Just in time', 'Knowledge base', 'Computer Software, Data Handling and Applications']","['Eloranta, Veli Pekka', '', '', 'Hylli, Otto', '', '', 'Veps l inen, Timo', '', '', 'Koskimies, Kai']","Department of Software Systems, Tampere University of Technology, Tampere, Finland",2012,ECSA
38,39,"A metamodel based approach is proposed to filter the information in an architectural knowledge base and present that information in a convenient form for a stakeholder, as a dynamically generated just in time document targeted for a specific need    2012 IEEE   18 refs",TopDocs  Using software architecture knowledge base for generating topical documents,"['Knowledge based systems', 'Knowledge management', 'Architectural knowledge base', 'Just in time', 'Knowledge base', 'Computer Software, Data Handling and Applications']","['Eloranta, Veli Pekka', '', '', 'Hylli, Otto', '', '', 'Veps l inen, Timo', '', '', 'Koskimies, Kai']","Department of Software Systems, Tampere University of Technology, Tampere, Finland",2012,WICSA
39,40,"A nano scale understanding of the degradation mechanisms responsible for the performance loss of high surface area  HSA  catalysts implemented in polymer electrolyte membrane fuel cells  PEMFC  is essential for the development of improved catalysts  Here we present a systematic study of the degradation mechanisms of a HSA carbon supported Pt  Pt C  catalyst  By monitoring the electrochemical surface area  ECSA  loss under accelerated stress test  AST  protocols with identical location transmission electron microscopy  IL TEM , it is shown that different degradation mechanisms are responsible of the performance loss of Pt C depending on the applied AST protocol  Three different AST protocols have been applied, i e  i  load cycles between 0 6 1 0V RHE, ii  start stop cycles between 1 0 1 5VRHE, and iii  a treatment consisting of a mix of both conditions  cycling between 0 4 1 4V RHE   During load cycles the main degradation mechanisms are nanoparticle  NP  migration as well as Pt dissolution and re deposition  However, after applying start stop cycles only NP detachment from the carbon support is detect, whereas the third AST protocol induces all degradation modes concomitantly    2013 The Electrochemical Society  All rights reserved   40 refs",Probing degradation by IL TEM  The influence of stress test conditions on the degradation mechanism,"['Carbon', 'Catalysts', 'Electric load management', 'Platinum', 'Platinum alloys', 'Proton exchange membrane fuel cells (PEMFC)', 'Transmission electron microscopy', 'Accelerated stress', 'Carbon-supported Pt', 'Degradation mechanism', 'Electrochemical surface area', 'High surface area', 'Performance loss', 'Pt dissolutions', 'Systematic study', 'Precious Metals', 'Fuel Cells', 'Electric Power Systems', 'Optical Devices and Systems', 'Chemical Reactions', 'Chemical Products Generally']","['Zana, Alessandro', '', '', 'Speder, Jozsef', '', '', 'Roefzaad, Melanie', '', '', 'Altmann, Lena', '', '', 'B umer, Marcus', '', '', 'Arenz, Matthias']","Department of Chemistry, University of Copenhagen, DK 2100 Copenhagen, Denmark  2  Institute of Applied and Physical Chemistry, University of Bremen, Bremen D 28334, Germany",2013,ECSA
40,41,"A new breed of Web application, dubbed AJAX, is emerging in response to a limited degree of interactivity in large grain stateless Web interactions  At the heart of this new approach lies a single page interaction model that facilitates rich interactivity  We have studied and experimented with several AJAX frameworks trying to understand their architectural properties  In this paper, we summarize three of these frameworks and examine their properties and introduce the Spiar architectural style  We describe the guiding software engineering principles and the constraints chosen to induce the desired properties  The style emphasizes user interface component development, and intermediary delta communication between client server components, to improve user interactivity and ease of development  In addition, we use the concepts and principles to discuss various open issues in AJAX frameworks and application development   31 refs",An architectural style for AJAX,"['client-server systems', 'Internet', 'Java', 'software architecture', 'user interfaces', 'XML', 'asynchronous JavaScript', 'Web application', 'single page interaction model', 'SPIAR architectural style', 'software engineering', 'user interface component development', 'client-server component', 'XML', 'Object oriented programming', 'Document processing techniques', 'Software engineering techniques', 'Information networks', 'User interfaces', 'Distributed systems software']","['Mesbah, A', '', '', ' van Deursen, A', '', '']","Software Evolution Res  Lab , Delft Univ  of Technol , Delft, Netherlands",2007,WICSA
41,42,"A new breed of web application, dubbed AJAX, is emerging in response to a limited degree of interactivity in large grain stateless Web interactions  At the heart of this new approach lies a single page interaction model that facilitates rich interactivity  We have studied and experimented with several AJAX frameworks trying to understand their architectural properties  In this paper, we summarize three of these frameworks and examine their properties and introduce the S PIAR architectural style  We describe the guiding software engineering principles and the constraints chosen to induce the desired properties  The style emphasizes user interface component development, and intermediary delta communication between client server components, to improve user interactivity and ease of development  In addition, we use the concepts and principles to discuss various open issues in AJAX frameworks and application development    2007 IEEE   31 refs",An architectural style for ajax,"['Client server computer systems', 'Interactive computer systems', 'Large scale systems', 'Software engineering', 'State space methods', 'World Wide Web', 'Client server components', 'Delta-communications', 'Web interactions', 'Computer Systems and Equipment', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Mathematics', 'Systems Science']","['Mesbah, Ali', '', '', 'Van Deursen, Arie']","Software Evolution Research Laboratory, Delft University of Technology, Mekelweg 4, 2628 CD Delft, Netherlands  2  Software Engineering Group, Delft Univ  of Technology, CWI, Mekelweg 4, 2628 CD Delft, Netherlands",2007,WICSA
42,43,"A new catalyst consisting of ionic liquid  IL  functionalized carbon nanotubes  CNTs  obtained through 1,3 dipolar cycloaddition support enhanced electrocatalytic Pd nanoparticles  Pd IL Cl   CNTs  was successfully fabricated and applied in direct ethanol alkaline fuel cells  The morphology, structure, component and stability of Pd IL Cl   CNTs were systematic characterized by transmission electron microscopy  TEM , high resolution transmission electron microscopy  HRTEM , Raman spectra, thermogravimetric analysis  TGA  and X ray diffraction  XRD   The new catalyst exhibited higher electrocatalytic activity, better tolerance and electrochemical stability than the Pd nanoparticles  NPs  immobilized on CNTs  Pd CNTs , which was ascribed to the effects of the IL, larger electrochemically active surface area  ECSA , and greater processing performance  Cyclic voltammograms  CVs  at various scan rates illustrated that the oxidation behaviors of ethanol at all electrodes were controlled by diffusion processes  The investigation of the different counteranions demonstrated that the performance of the IL CNTs hybrid material was profoundly influenced by the subtly varied structures of the IL moiety  All the results indicated that the Pd IL Cl   CNTs catalyst is an efficient anode catalyst, which has potential applications in direct ethanol fuel cells and the strategy of IL functionalization of CNTs could be available to prepare other carbonaceous carrier supports to enhance the dispersivity, stability, and catalytic performance of metal NPs as well  IL overachiever  A new ionic liquid  IL  coated carbon nanotube  CNT  catalyst exhibited higher electrocatalytic activity, better tolerance, and electrochemical stability than the Pd nanoparticles  NPs  immobilized on CNTs  see figure   this is ascribed to the effects of the IL, a larger electrochemically active surface area  ECSA , and greater processing performance  The strategy of IL functionalization of CNTs could be available to prepare other carbonaceous carrier supports  Copyright   2013 WILEY VCH Verlag GmbH   Co  KGaA, Weinheim   45 refs",Microenvironment effects in electrocatalysis  Ionic liquid like coating on carbon nanotubes enhances the Pd electrocatalytic alcohol oxidation,"['Catalyst activity', 'Cycloaddition', 'Direct ethanol fuel cells (DEFC)', 'Electrocatalysis', 'Ethanol', 'Hybrid materials', 'Ionic liquids', 'Nanoparticles', 'Nanotubes', 'Oxidation', 'Palladium', 'Stability', 'Thermogravimetric analysis', 'Transmission electron microscopy', 'X ray diffraction', '1 ,3-Dipolarcycloaddition', 'Alcohol oxidation', 'Catalytic performance', 'Counter anions', 'Cyclic voltammograms', 'Diffusion process', 'Dispersivity', 'Efficient anode', 'Electrocatalytic', 'Electrocatalytic activity', 'Electrochemical stabilities', 'Electrochemically active surface areas', 'Functionalization of CNTs', 'Functionalized carbon nanotubes', 'Microenvironments', 'Oxidation behaviors', 'PD nano particle', 'Potential applications', 'Processing performance', 'Scan rates', 'Transmission electron microscopy tem', 'Crystal Lattice', 'Solid State Physics', 'Chemical Products Generally', 'Chemical Reactions', 'Chemistry', 'Nanotechnology', 'Optical Devices and Systems', 'Electronic and Thermionic Materials', 'Electric and Magnetic Materials', 'Fuel Cells', 'Precious Metals', 'Liquid Fuels', 'Metals, Plastics, Wood and Other Structural Materials']","['Li, Shuwen', '', '', 'Dong, Zhengping', '', '', 'Yang, Honglei', '', '', 'Guo, Shujing', '', '', 'Gou, Galian', '', '', 'Ren, Ren', '', '', 'Zhu, Zhejun', '', '', 'Jin, Jun', '', '', 'Ma, Jiantai']","State Key Laboratory of Applied Organic Chemistry, College of Chemistry and Chemical Engineering, Lanzhou University, Lanzhou 730000, China",2013,ECSA
43,44,"A new type of porous multiwalled carbon nanotube  MWCNT  electrode with a macroporous networking inner structure was prepared  First, the MWCNTs were homogeneously introduced inside and outside of a bacterial cellulose membrane with a 3D inter connected network structure using ultrasound treatment and vacuum filtration in order to form the GDL  Second, the CL was formed on the surface of the GDL through vacuum filtration of the Pt incorporated MWCNTs  Pt MWCNTs   Finally, the electrode was created through freeze drying  The final electrode had a sheet resistance of 80 O  and an electro chemical active surface area  ECSA  of 10 1 m2 g  Although the ECSA of the electrode did not have the efficiency  14 3 m2 g  of a typical electrode  carbon cloth Pt carbon black , these results suggested that the new type of electrode has potential as a proton exchange membrane fuel cell    2009 Elsevier B V  All rights reserved   24 refs",Porous carbon nanotube electrodes supported by natural polymeric membranes for PEMFC,"['Carbon black', 'Carbon nanotubes', 'Diffusion in gases', 'Electric resistance', 'Microfiltration', 'Platinum', 'Polymeric membranes', 'Porous materials', 'Proton exchange membrane fuel cells (PEMFC)', 'Protons', 'Vacuum', 'Active surface area', 'Bacterial cellulose membranes', 'Connected networks', 'Macroporous', 'Porous carbon', 'Porous carbons', 'Ultrasound treatments', 'Vacuum filtration', 'Chemical Agents and Basic Industrial Chemicals', 'Polymer Products', 'Processing Agents', 'Materials Science', 'Physical Properties of Gases, Liquids and Solids', 'High Energy Physics', 'Crystalline Solids', 'Atomic and Molecular Physics', 'Chemical Operations', 'Chemical Plants and Equipment', 'Non Mechanical Properties and Tests of Building Materials', 'Precious Metals', 'Vacuum Technology', 'Electricity  Basic Concepts and Phenomena', 'Fuel Cells', 'Nanotechnology']","['Yun, Young Soo', '', '', 'Bak, Hyeonseong', '', '', 'Jin, Hyoung Joon']","Department of Polymer Science and Engineering, Inha University, 253 Yonghyun Dong, Nam Gu, Incheon, 402 751, Korea, Republic of",2010,ECSA
44,45,"A novel alternated catalyst layer structure  ACLS  has been developed for fuel cell applications  Sputtering process was applied directly on commercial gas diffusion layer  GDL  by depositing catalyst forming material and pore forming material alternately in a nanometer scale and then removing the pore forming material  The main physical features of the ACLS are  1  carbon free and support free  2  a large amount of void layers pores,  3  sheet like catalyst with extended surface and compressed lattice, and  4  a large amount of crystalline planes parallel to catalyst sheet surface  Such characteristics make the ACLS a promising candidate for the PEM cathode application  In this report, some basic evaluation results of the ACLS cathode are presented  Electrochemical surface area  ECSA  evaluations showed that the typical ACLS exhibited a value of 15 30 m2 g and had a high Pt utilization efficiency  For oxygen reduction reaction activity  ORR , the measurement on 5 cm2 fuel cell membrane electrode assemblies showed that an ACLS with 5 nm thick Pt sheets could increase mass activity 1 5 times and specific activity 3 5 times compared to the commercial Pt C  Cathode potential at high current densities was evaluated by H2 O2 single cell test  An ACLS with a Pt loading of 0 07 mg cm2 demonstrated performance comparable to that of a commercial Pt C with 0 2 mg cm2 Pt loading  Excellent durability of the ACLS was also confirmed    The Electrochemical Society   7 refs",Development of alternated catalyst layer structure for PEM fuel cells,"['Catalysts', 'Cathodes', 'Crystallography', 'Electrolytic reduction', 'Platinum', 'Platinum alloys', 'Polyelectrolytes', 'Solids', 'Surfaces', 'Crystalline planes', 'Electrochemical surface area', 'Evaluation results', 'Fuel cell application', 'Gas diffusion layers', 'High current densities', 'Oxygen reduction reaction', 'Pore-forming material', 'Materials Science', 'Crystalline Solids', 'Solid State Physics', 'Classical Physics  Quantum Theory  Relativity', 'Organic Polymers', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Electric Components', 'Fuel Cells', 'Precious Metals']","['Mei, Wu', '', '', 'Fukazawa, Taishi', '', '', 'Nakano, Yoshihiko', '', '', 'Akasaka, Yoshihiro', '', '', 'Naito, Katsuyuki']","Corporate Research and Development Center, Toshiba Corporation, Kawasaki city, 2128582, Japan",2012,ECSA
45,46,"A novel carbon nanostructure grown by catalytic chemical vapour deposition technique has been applied as an electrocatalyst support for oxygen reduction reaction in proton exchange membrane fuel cell  The growth of carbon nanostructure  CNS  is carried over a low cost bi metal oxide catalyst  Fe Sn O  synthesized by sol gel technique  Platinum nanoparticle decoration on Fe Sn O incorporated CNS  CNS FSO  is performed by ethylene glycol reduction method  The structural as well as morphological analysis confirms the formation of CNS FSO and platinum decoration on CNS FSO  The electrochemically active surface area  ECSA  of platinum decorated CNS FSO  Pt CNS FSO  is 68 m2 g  1, as revealed from cyclic voltammetry  Polarization studies are carried out at different temperatures  40  C, 50  C and 60  C  to exploit the oxygen reduction reaction activity of Pt CNS FSO  A maximum power density of 449 mW cm 2  without back pressure  at 60  C shows the potential of this novel CNS FSO as an electrocatalyst support in proton exchange membrane fuel cell  Copyright   2013, Hydrogen Energy Publications, LLC  Published by Elsevier Ltd  All rights reserved   28 refs",Carbon nanostructure grown using bi metal oxide as electrocatalyst support for proton exchange membrane fuel cell,"['Chemical vapor deposition', 'Cyclic voltammetry', 'Electrocatalysts', 'Electrolytic reduction', 'Ethylene glycol', 'Nanostructures', 'Platinum', 'Polarization', 'Proton exchange membrane fuel cells (PEMFC)', 'Sol-gels', 'Tin', 'Carbon Nanostructures', 'Catalytic Chemical Vapour Deposition', 'Electrocatalyst support', 'Electrochemically active surface areas', 'Oxygen Reduction', 'Oxygen reduction reaction', 'Polarization study', 'Power densities', 'Electric Variables Measurements', 'Solid State Physics', 'Organic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Electromagnetic Waves in Different Media', 'Fuel Cells', 'Precious Metals', 'Tin and Alloys']","['Puthusseri, Divya', '', '', 'Baby, Tessy Theres', '', '', 'Bhagavathi Parambhath, Vinayan', '', '', 'Natarajan, Rajalakshmi', '', '', 'Sundara, Ramaprabhu']","Department of Physics, Nano Functional Materials Technology Centre  NFMTC , Indian Institute of Technology Madras, Chennai 600036, India  2  Centre for Fuel Cell Technology, ARCI, 2nd Floor, IITM Research Park, Taramani, Chennai 600 113, India",2013,ECSA
46,47,"A novel particle on alloy nanomaterial has been designed and successfully synthesized for oxygen reduction  ORR  with high activity and long term stability, in which well isolated Pt nanoparticles are supported by amorphous NiCo nanoalloys  The Pt on NiCo nanostructures are prepared through the artificial active collodion membrane by one step method, and experimental data reveals that Pt is isolated and spreads onto the amorphous NiCo nanosupport, and not only Pt but also Ni and Co are metallic in the Pt on NiCo nanostructures  The optimized Pt53 on NiCo nanostructures show higher activities in both the onset potential and kinetic current density toward the ORR relative to the commercial Pt reference catalysts because the Pt on NiCo catalyst could lower the OHad, which is considered to inhibit the ORR toward water  Meanwhile, Pt on NiCo nanostructures exhibit relatively long term stability with only  8  loss in electrochemical surface area  ECSA  for Pt   32 refs",One Step Synthesized Pt on NiCo Nanostructures for Oxygen Reduction with High Activity and Long Term Stability,"['amorphous state', 'catalysts', 'cobalt alloys', 'current density', 'electrochemistry', 'membranes', 'nanofabrication', 'nanoparticles', 'nickel alloys', 'platinum', 'reduction (chemical)', 'oxygen reduction', 'platinum nanoparticles', 'amorphous nanoalloys', 'artificial active collodion membrane', 'one-step method', 'kinetic current density', 'platinum reference catalysts', 'electrochemical surface area', 'electrocatalytic activity', 'long-term stability', 'Pt53-NiCo', 'Methods of nanofabrication and processing', 'Specific chemical reactions  reaction mechanisms', 'Heterogeneous catalysis at surfaces and other surface reactions', 'Electrochemistry and electrophoresis', 'Film and membrane processes  ion exchange  dialysis  osmosis, electro osmosis', 'Structure of solid clusters, nanoparticles, nanotubes and nanostructured materials']","['Qiang Qu', '', '', 'Ming Wen', '', '', 'Mingzhu Cheng', '', '', 'Anwei Zhu', '', '', 'Biao Kong', '', '', 'Yang Tian']","Dept  of Chem , Tongji Univ , Shanghai, China",2012,ECSA
47,48,"A previous study, run by some of the authors in collaboration with practitioners, has emphasized the need to improve architectural languages in order to  i  make them simple and intuitive enough to communicate effectively with project stakeholders, and  ii  enable formality and rigour to allow analysis and other automated tasks  Although a multitude of languages have been created by researchers and practitioners, they rarely address both of these needs  In order to reconcile these divergent needs, this paper presents an approach that  i  combines the rigorous foundations of model driven engineering with the usability of semantic wikis, and  ii  enables continuous syncronization between them, this allows software architects to simultaneously use wiki pages for communication and models for model based analysis and manipulation  In this paper we explain how we applied the approach to an industry inspired case study using the Semantic Media Wiki wiki engine and a model driven architecture description implemented within the Eclipse Modeling Framework  We also discuss how our approach can be generalized to other wiki based and model driven technologies    2014 IEEE   16 refs",Architecture description leveraging model driven engineering and semantic wikis,"['Embedded systems', 'Software architecture', 'Software design', 'Architectural languages', 'Architecture description', 'Eclipse modeling framework', 'Model driven architectures', 'Model-based analysis', 'Model-driven Engineering', 'Project stakeholders', 'Wikis', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Baroni, Alessandro', '', '', 'Muccini, Henry', '', '', 'Malavolta, Ivano', '', '', 'Woods, Eoin']","Department of Information Engineering, Computer Science and Mathematics, University of l Aquila, Italy  2  Gran Sasso Science Institute, L Aquila, Italy  3  Artechra Hemel Hempstead, Hertfordshire, United Kingdom",2014,WICSA
48,49,"A recent survey on software reference architectures  RA  indicates their widespread usage  Among the leading problems when designing and using RA, practitioners point to various aspects of stakeholder management  e g , stakeholder identification, involvement   In this paper, we identify and analyze issues that lie at the basis of the problems reported in stakeholder management, with a goal to improve the state of the practice    2014 Springer International Publishing Switzerland   32 refs",Towards an improved stakeholder management for software reference architectures,"['Artificial intelligence', 'Computer science', 'Computers', 'Reference architecture', 'Software reference architectures', 'Stakeholder identifications', 'Stakeholder management', 'State of the practice', 'Computer Circuits and Logic Elements', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Angelov, Samuil', '', '', 'Hilliard, Rich']","Software Engineering, Fontys University of Applied Sciences, Netherlands  2  Consulting Software Systems Architect, United States",2014,ECSA
49,50,"A recent survey on software reference architectures  RA  indicates their widespread usage  Among the leading problems when designing and using RA, practitioners point to various aspects of stakeholder management  e g , stakeholder identification, involvement   In this paper, we identify and analyze issues that lie at the basis of the problems reported in stakeholder management, with a goal to improve the state of the practice   32 refs",Towards an Improved Stakeholder Management for Software Reference Architectures,"['software architecture', 'software management', 'RA', 'software reference architectures', 'improved stakeholder management', 'Software engineering techniques', 'Software management']","['Angelov, S', '', '', ' Hilliard, R']","Software Eng , Fontys Univ  of Appl  Sci , Eindhoven, Netherlands",2014,ECSA
50,51,"A reference architecture describes core elements of the software architecture for systems that stem from the same domain  A reference architecture ensures interoperability of systems through standardization  It also facilitates the instantiation of new concrete architectures  However, we currently lack procedures for systematically designing reference architectures that are empirically grounded  Being empirically grounded would increase the validity and reusability of a reference architecture  We therefore present an approach which helps systematically design reference architectures  Our approach consists of six steps performed by the software architect and domain experts  It helps design reference architectures either from scratch, or based on existing architecture artifacts  We also illustrate how our approach could be applied to the design of two existing reference architectures found in literature    2011 ACM   18 refs",Empirically grounded reference architectures  A proposal,"['Design', 'Interoperability', 'Reusability', 'Concrete architecture', 'Core elements', 'Design process', 'Domain experts', 'empirically-grounded', 'reference architecture', 'Software architects', 'Structural Design', 'Industrial Wastes', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Software, Data Handling and Applications']","['Galster, Matthias', '', '', 'Avgeriou, Paris']","University of Groningen, Netherlands",2011,QoSA
51,52,"A rigorous paradigm coordinating components is important in the design stage of large scale software engineering  In this paper we propose a new Architecture Description Language, called ACDL, to represent the centralized mode architectural connection in which all components are linked by a single connector  Following one usual approach to architectural description, in which component types and components are distinguished, and connectors integrate behaviors of components by specifying their coordination protocols, ACDL describes connectors in such a way that connectors are insensitive to the numbers of attached same type components  Based on ACDL, we develop analytic techniques to facilitate the system checking of temporal properties of an architecture  In particular, our method shows to what extent one can add, delete and replace components without making the whole system lose desired temporal properties, and improves the system checking in several ways, for example enhancing the use of previous checking results to deal with new checking problems    2010 Springer Verlag Berlin Heidelberg   19 refs",An ADL approach to specifying and analyzing centralized mode architectural connection,"['Analytic technique', 'Architectural descriptions', 'Architecture description languages', 'Coordination protocols', 'Design stage', 'Large-scale softwares', 'Temporal property', 'Whole systems', 'Computer Programming']","['Su, Guoxin', '', '', 'Ying, Mingsheng', ' ,', '', ' Zhang, Chengqi']","Centre for Quantum Computation and Intelligent Systems, Faculty of Engineering and Information Technology, University of Technology, Sydney, NSW 2007, Australia  2  State Key Laboratory of Intelligent Technology and Systems, Department of Computer Science and Technology, Tsinghua University, Beijing 100084, China",2010,ECSA
52,53,"A rigorous paradigm coordinating components is important in the design stage of large scale software engineering  In this paper we propose a new Architecture Description Language, called ACDL, to represent the centralized mode architectural connection in which all components are linked by a single connector  Following one usual approach to architectural description, in which component types and components are distinguished, and connectors integrate behaviors of components by specifying their coordination protocols, ACDL describes connectors in such a way that connectors are insensitive to the numbers of attached same type components  Based on ACDL, we develop analytic techniques to facilitate the system checking of temporal properties of an architecture  In particular, our method shows to what extent one can add, delete and replace components without making the whole system lose desired temporal properties, and improves the system checking in several ways, for example enhancing the use of previous checking results to deal with new checking problems   19 refs",An ADL Approach to Specifying and Analyzing Centralized Mode Architectural Connection,"['program verification', 'software architecture', 'specification languages', 'design stage', 'large-scale software engineering', 'architecture description language', 'ACDL language', 'centralized-mode architectural connection', 'coordination protocol', 'system checking', 'temporal property', 'Software engineering techniques', 'Formal methods', 'Diagnostic, testing, debugging and evaluating systems']","['Guoxin Su', '', '', 'Mingsheng Ying', '', '', 'Chengqi Zhang']","Centre for Quantum Comput    Intell  Syst , Univ  of Technol , Sydney, NSW, Australia",2010,ECSA
53,54,"A series of Pt modified Pd C catalysts  Pt Pd C  with different Pt Pd molar ratio  Pt Pd 1 4, 1 2 and 1 1  are synthesized by a chemical reduction method for oxygen reduction reaction  ORR   X ray diffraction  XRD , transmission electron microscope  TEM  and cyclic voltammetry  CV  measurements confirm that Pt is deposited on the Pd nanoparticles and the Pt Pd C catalysts have a PdcorePtshell structure  In the half cell testing, the catalytic ORR activity of Pt1 Pd2 C and Pt1 Pd4 C are superior to commercial Pt C  Moreover, the electrochemical durability to potential cycling of Pt1 Pd2 C and Pt1 Pd1 C catalysts is better than Pt C catalysts  The improved durability is believed to be associated with the dissolution of Pd and the corresponding structure transformation from core shell structure to Pt Pd alloy with Pt rich surface  The structure change is confirmed by TEM, CV, XRD and X ray photoelectron spectroscopy  XPS   In addition, the electrochemical active surface area  ECSA  loss and polarization behavior in the single cell testing also suggest that the Pt Pd C show a much better durability than Pt C catalysts  Similarly, the dissolution of Pd is observed by CV and scanning electron microscope energy dispersive X ray spectra  SEM EDX   The Pt Pd C electrocatalysts have high ORR activity and this high activity can be further improved during potential cycling, that is, the activity and durability can be obtained simultaneously  This PdcorePtshell structure allows for the development of highly active and durable ORR electrocatalysts, with potential for the application in proton exchange membrane fuel cells  PEMFCs     2012   36 refs",Core shell Pt modified Pd C as an active and durable electrocatalyst for the oxygen reduction reaction in PEMFCs,"['Catalyst activity', 'Cyclic voltammetry', 'Dissolution', 'Durability', 'Electrocatalysts', 'Electrolytic reduction', 'Palladium', 'Photoelectrons', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Scanning electron microscopy', 'Shells (structures)', 'Transmission electron microscopy', 'X ray diffraction', 'X ray photoelectron spectroscopy', 'Chemical reduction methods', 'Core shell structure', 'Core-shell', 'Electrochemical active surface areas', 'Half cells', 'High activity', 'Molar ratio', 'Oxygen Reduction', 'Oxygen reduction reaction', 'PD nano particle', 'Pd/C catalyst', 'Polarization behavior', 'Potential cycling', 'Scanning electrons', 'SEM-EDX', 'Single cells', 'Structure change', 'Structure transformations', 'Transmission electron microscope', 'X-ray spectra', 'XRD', 'Atomic and Molecular Physics', 'Chemistry', 'Electrochemistry', 'Chemical Reactions', 'Chemical Operations', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Optical Devices and Systems', 'Electromagnetic Waves', 'Fuel Cells', 'Precious Metals', 'Strength of Building Materials  Mechanical Properties', 'Structural Members and Shapes', 'Light Optics']","['Zhang, Geng', ' ,', '', ' Shao, Zhi Gang', '', '', 'Lu, Wangting', ' ,', '', ' Xie, Feng', ' ,', '', ' Xiao, Hui', ' ,', '', ' Qin, Xiaoping', '', '', 'Yi, Baolian']","Fuel Cell System and Engineering Group, Dalian Institute of Chemical Physics, Chinese Academy of Sciences, 457 Zhongshan Road, Dalian, China  2  Graduate School of Chinese Academy of Sciences, 19A Yuquan Road, Beijing, China",2013,ECSA
54,55,"A series of platinum coated underlayer materials, alumina, gold, titanium carbide, and titanium disilicide, deposited by a high throughput magnetron sputtering method have been investigated as cathode catalyst supports in fuel cells  Orthogonal thickness gradients of the underlayer materials  0 100 nm planar equivalent  and the platinum top layer  0 75 nm planar equivalent  made up the 76 76 mm libraries  The resulting catalyst films were characterized by surface profilometry, X ray diffraction, scanning electron microscopy, and X ray photoelectron spectroscopy  The electrochemical properties of the catalyst composition spreads were investigated simultaneously in 64 electrode proton exchange membrane fuel cells with emphasis placed on the determination of the electrochemical surface area  ECSA  as a function of underlayer thickness and chemistry  The present study shows that gold and titanium disilicide used as underlayers on 3M s nanostructured thin film supports lead to a loss of ECSA during operation  Migration and surface accumulation were observed when gold was used as underlayer material  For titanium disilicide, alloying and the generation of platinum silicide phases occurred  Alumina and titanium carbide were found to be potentially acceptable underlayer materials as well as alternative support materials on the basis of their influence on the catalyst surface area    2009 The Electrochemical Society   30 refs",Alternative catalyst supports deposited on nanostructured thin films for proton exchange membrane fuel cells,"['Catalysis', 'Chemical detection', 'Coated materials', 'Electrochemical properties', 'Gold', 'Membranes', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Protons', 'Scanning electron microscopy', 'Silicides', 'Surfaces', 'Thin films', 'Titanium', 'Titanium carbide', 'X ray photoelectron spectroscopy', 'Alternative catalysts', 'Catalyst composition', 'Catalyst film', 'Catalyst surfaces', 'Cathode catalyst', 'Disilicides', 'Electrochemical surface area', 'High throughput', 'Magnetron sputtering method', 'Nanostructured thin film', 'Platinum silicides', 'Support materials', 'Surface accumulation', 'Surface profilometry', 'Thickness gradients', 'Underlayer thickness', 'Underlayers', 'Chemical Products Generally', 'Inorganic Compounds', 'Refractories', 'Coatings and Finishes', 'Chemical Agents and Basic Industrial Chemicals', 'Classical Physics  Quantum Theory  Relativity', 'Atomic and Molecular Physics', 'High Energy Physics', 'Materials Science', 'Physical Properties of Gases, Liquids and Solids', 'Chemical Reactions', 'Titanium and Alloys', 'Precious Metals', 'Machining Operations', 'Fuel Cells', 'Metals Corrosion and Protection  Metal Plating', 'Semiconductor Devices and Integrated Circuits', 'Chemistry', 'Physical Chemistry', 'Electrochemistry', 'Light Optics']","['Garsuch, Arnd', '', '', 'Stevens, D A', '', '', ' Sanderson, R J', '', '', ' Wang, S', '', '', ' Atanasoski, R T', '', '', ' Hendricks, S', '', '', ' Debe, M K', '', '', ' Dahn, J R', '', '']","Department of Physics and Atmospheric Science, Dalhousie University, Halifax, NS B3H 3J5, Canada  2  3M Center, 3M Fuel Cell Components Program, St  Paul, MI 55144, United States",2010,ECSA
55,56,"A simple and synthetically directed self assembly approach to the construction of platinum nanochains  PtNCs  has been demonstrated  Micrometre length PtNCs constructed with spherical Pt nanoparticles  PtNPs  of about 5 nm were synthesized by the reduction of Pt EDTA  ethylenediaminetetraacetic acid  chelate complex with sodium borohydride  NaBH4   It was found that EDTA played a critical role in the formation of sphere constructed PtNCs  The PtNPs Nafion glassy carbon  GC  and PtNCs Nafion GC modified electrodes were fabricated and their corresponding electrocatalytic activities were studied  Comparative studies demonstrated that the PtNCs catalyst had a higher electrochemically active surface area  ECSA, almost 2 times  and better catalytic activity  almost 10 times  in comparison with the PtNPs catalyst  The PtNCs catalyst with a high ECSA and catalyst activity will be a good anode catalyst candidate for direct methanol fuel cells    2010 IOP Publishing Ltd   32 refs",EDTA directed self assembly and enhanced catalytic properties of sphere constructed platinum nanochains,"['Electrochemical sensors', 'Fuel cells', 'Metal analysis', 'Methanol', 'Methanol fuels', 'Platinum', 'Platinum compounds', 'Self assembly', 'Sodium', 'Spheres', 'Anode catalysts', 'Catalytic activity', 'Catalytic properties', 'Chelate complex', 'Comparative studies', 'Directed self-assembly', 'Electrocatalytic activity', 'Electrochemically active surface areas', 'Ethylene diamine tetra-acetic acid', 'Modified electrodes', 'Nanochains', 'Pt nanoparticles', 'Sodium borohydrides', 'Materials Science', 'Electrochemistry', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Organic Compounds', 'Inorganic Compounds', 'Atomic and Molecular Physics', 'Crystalline Solids', 'Chemistry', 'Liquid Fuels', 'Metallurgy and Metallography', 'Precious Metals', 'Control Instrumentation', 'Alkali Metals', 'Fuel Cells', 'Semiconductor Devices and Integrated Circuits', 'Fluid Flow']","['Chen, Xiaohua', '', '', 'Xie, Jingsi', '', '', 'Hu, Jianqiang', '', '', 'Feng, Xiumei', '', '', 'Li, Aiqing']","College of Chemistry and Chemical Engineering, South China University of Technology, Guangzhou 510640, China  2  Key Laboratory for Organ Failure Research, Education Ministry of People s Republic of China, Southern Medical University, Guangzhou 510515, China",2010,ECSA
56,57,"A simple process for preparing mesoporous chromium nitride  CrN  by the ammonolysis of a bulk ternary oxide  K2Cr2O7  is reported  The products were characterized by Rietveld refinement of powder X ray diffraction patterns, scanning electron microscopy  SEM , and nitrogen adsorption desorption analysis  Pore sizes ranging from 10 to 20 nm are easily accessible  The conductivity of mesoporous CrN powder compressed at 35 bar is 54 S cm  A Pt CrN catalyst prepared from the mesoporous CrN shows a negative onset potential for methanol electrooxidation  0 20 V vs SCE  similar to that of Pt C  0 22 V vs SCE   The electrochemically active specific surface area  ECSA  of the Pt CrN catalyst  82 m2 g  was only slightly higher than that of Pt C  75 m2 g   More importantly, the Pt CrN catalyst demonstrates high tolerance to corrosion and is a candidate to replace carbon black, which is known to corrode under high potentials, as a support for fuel cell catalysts  This work provides an efficient method for preparing mesoporous metal nitrides that are promising supports for the oxidation of small organic molecules in fuel cells    2013 American Chemical Society   42 refs",Mesoporous chromium nitride as high performance catalyst support for methanol electrooxidation,"['Carbon black', 'Catalysts', 'Chromium', 'Electrooxidation', 'Fuel cells', 'Methanol', 'Nitrides', 'Platinum alloys', 'Refractory metal compounds', 'Rietveld refinement', 'Scanning electron microscopy', 'X ray diffraction', 'CrN', 'Fuel cell catalysts', 'Mesoporous', 'Methanol electrooxidation', 'Nitrogen adsorption', 'Oxidation of small organic molecules', 'Powder X ray diffraction', 'Transition metal nitrides', 'Atomic and Molecular Physics', 'Physical Properties of Gases, Liquids and Solids', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Electrochemistry', 'Chemistry', 'Fuel Cells', 'Precious Metals', 'Chromium and Alloys']","['Yang, Minghui', '', '', 'Guarecuco, Rohiverth', '', '', 'Disalvo, Francis J', '', '']","Department of Chemistry, Cornell University, Ithaca, NY 14853 1301, United States",2013,ECSA
57,58,"A software architecture design captures the main decisions regarding the quality attribute requirements for a system  When constructing these designs, the architect normally evaluates and combines solutions with different quality attribute tradeoffs  This exploration of the design space can be seen as a searching problem, in which the architect s expertise is what directs the search towards a  good enough  solution  Nonetheless, given complexity of this search, assisting the architect with adequate tool support becomes indispensable  In this context, we have investigated the utility of a planning  based tool approach called DesignBots to explore design alternatives  Specifically, the approach considers quality attribute issues as goals achievable by combinations of architectural mechanisms, which are generated by a mixed  initiative and hierarchical planning engine  Our experiences with DesignBots show that the planning approach effectively helps architects to explore design alternatives productively   23 refs",Using planning techniques to assist quality driven architectural design exploration,"['planning (artificial intelligence)', 'software architecture', 'software tools', 'systems analysis', 'planning techniques', 'quality-driven architectural design exploration', 'software architecture design', 'quality-attribute tradeoffs', 'DesignBots', 'planning-based tool', 'Software engineering techniques', 'Programming support', 'Knowledge engineering techniques']","['Diaz Pace, J A', '', '', ' Campo, M R', '', '']","Software Eng  Inst , Pittsburgh, PA, United States  2  ISISTAN Res  Inst , UNICEN Univ , Buenos Aires, Argentina",2008,QoSA
58,59,"A software architecture design captures the main decisions regarding the quality attribute requirements for a system  When constructing these designs, the architect normally evaluates and combines solutions with different quality attribute tradeoffs  This exploration of the design space can be seen as a searching problem, in which the architect s expertise is what directs the search towards a  good enough  solution  Nonetheless, given complexity of this search, assisting the architect with adequate tool support becomes indispensable  In this context, we have investigated the utility of a planning based tool approach called DesignBots to explore design alternatives  Specifically, the approach considers quality attribute issues as goals achievable by combinations of architectural mechanisms, which are generated by a mixed initiative and hierarchical planning engine  Our experiences with DesignBots show that the planning approach effectively helps architects to explore design alternatives productively    2008 Springer Verlag Berlin Heidelberg   23 refs",Using planning techniques to assist quality driven architectural design exploration,"['Architecture', 'Chlorine compounds', 'Computer software selection and evaluation', 'Design', 'Software architecture', 'Software design', 'Solutions', 'Artificial intelligence techniques', 'Design alternatives', 'Design Exploration', 'Design spaces', 'Hierarchical planning', 'International conferences', 'Mixed initiatives', 'Planning techniques', 'Quality of softwares', 'Quality-driven mechanisms', 'Software architecture design', 'Tool support', 'Tool supports', 'Buildings and Towers', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Chemistry', 'Organic Compounds']","['D az Pace, J', 'Andr s', ' ,', '', ' Campo, Marcelo R', '', ',', '']","Software Engineering Institute, 4500 Fifth Av , Pittsburgh, PA 15213 3890, United States  2  ISISTAN Research Institute, Facultad de Cs  Exactas, Pje  Arroyo Seco   Campus Universitario,  7000  Tandil, Buenos Aires, Argentina  3  CONICET, Argentina",2007,QoSA
59,60,"A software component should be trustworthy and behave in a secure manner as it will be reused many times  Despite extensive efforts, usually, it cannot be guaranteed that a developed software component is completely secure  Hence, its execution in the real world needs to be monitored against its security specifications  Each time components are used to develop a component based software  CBS , a new monitor has to be designed to observe the behavior of the CBS  This results in recurring costs as such monitors cannot be reused for other CBS  Moreover, development life cycle artifacts are usually not available when a pre fabricated component is used to build a CBS  Given that, it is imperative that a specification based security monitor is developed along with the monitored component  when all development artifacts are available  and is embedded in the component to increase the component s trustworthiness  In this paper, we identify the types of constraints that may be imposed by security specifications  These constraints should be taken into account while developing the software components and should also be monitored  Furthermore, we propose a design approach to develop components with built in monitors that are able to observe these security constraints  Components developed following this approach would be self monitoring, promote greater reusability, and be more trustworthy  We evaluate our approach by analyzing the performance and design complexity of different versions of CBS  These versions are developed by following the traditional and proposed approaches for monitoring security aspects of CBS    2011 ACM   35 refs",Building components with embedded security monitors,"['Electric circuit breakers', 'Embedded software', 'Reusability', 'Software architecture', 'Specifications', 'Component based software', 'Design approaches', 'Design complexity', 'Embedded security', 'Recurring costs', 'Security constraint', 'Security monitoring', 'self-monitoring', 'Software component', 'Time components', 'Industrial Wastes', 'Electric Power Lines and Equipment', 'Computer Software, Data Handling and Applications', 'Codes and Standards']","['Khan, Muhammad Umair Ahmed', '', '', 'Zulkernine, Mohammad']","School of Computing, Queen s University, Kingston, ON, Canada",2011,QoSA
60,61,A software reconfiguration pattern is a solution to a problem in component based software systems where the configuration needs to be updated while the system is operational  It defines how a set of components participating in a software pattern cooperate to change the configuration  This paper describes an approach for designing software reconfiguration patterns  It also describes how reconfiguration patterns can be used in reconfigurable software product line architectures  A change management model for dynamically evolving a software product line is also described  The paper concludes with a description of case studies and a proof of concept prototype   22 refs,Software reconfiguration patterns for dynamic evolution of software architectures,"['Client server computer systems', 'Computer architecture', 'Computer simulation', 'Distributed computer systems', 'Image reconstruction', 'Middleware', 'Pattern recognition', 'Principal component analysis', 'Software prototyping', 'Object brokering', 'Reconfiguration pattern', 'Software products', 'Software reconfiguration', 'Mathematical Statistics', 'Computer Applications', 'Data Processing and Image Processing', 'Computer Programming', 'Digital Computers and Systems', 'Computer Systems and Equipment', 'Telecommunication  Radar, Radio and Television']","['Gomaa, Hassan', '', '', 'Hussein, Mohamed']","Dept  of Information Engineering, George Mason University, Fairfax, VA 22030",2004,WICSA
61,62,A software reconfiguration pattern is a solution to a problem in component based software systems where the configuration needs to be updated while the system is operational  It defines how a set of components participating in a software pattern cooperate to change the configuration  This paper describes an approach for designing software reconfiguration patterns  It also describes how reconfiguration patterns can be used in reconfigurable software product line architectures  A change management model for dynamically evolving a software product line is also described  The paper concludes with a description of case studies and a proof of concept prototype   22 refs,Software reconfiguration patterns for dynamic evolution of software architectures,"['object-oriented programming', 'software architecture', 'software prototyping', 'software architectures', 'component-based software systems', 'product line architectures', 'change management model', 'proof-of-concept prototype', 'software reconfiguration pattern', 'dynamic software evolution', 'Software engineering techniques', 'Object oriented programming']","['Gomaa, H', '', '', ' Hussein, M', '', '']","Dept  of Inf    Software Eng , George Mason Univ , Fairfax, VA, United States",2004,WICSA
62,63,"A software reference architecture is a generic architecture for a class of information systems that is used as a foundation for the design of concrete architectures from this class  We observe that certain reference architectures have become more successful than others  One of the reasons for this is the level of congruence between their goals, context, and design  In this paper, we provide a framework for the classification of reference architectures  Using our framework on a set of reference architectures, and based on experiences with reference architectures, we define five main types of reference architectures that have congruent goals, context, and design  Reference architectures that can be classified in one of these types have better chances to become a success  We illustrate our conclusions with a number of reference architectures  This research facilitates design of more effective reference architectures    2009 IEEE   31 refs",A classification of software reference architectures  Analyzing their success and effectiveness,"['Architecture', 'Computer software', 'Design', 'Concrete architecture', 'Generic architecture', 'Reference architecture', 'Buildings and Towers', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Engineering Graphics']","['Angelov, Samuil', '', '', 'Grefen, Paul', '', '', 'Greefhorst, Danny']","School of Industrial Eng , Eindhoven Univ  of Technology  2  ArchiXL",2009,ECSA
63,64,"A software reference architecture is a generic architecture for a class of information systems that is used as a foundation for the design of concrete architectures from this class  We observe that certain reference architectures have become more successful than others  One of the reasons for this is the level of congruence between their goals, context, and design  In this paper, we provide a framework for the classification of reference architectures  Using our framework on a set of reference architectures, and based on experiences with reference architectures, we define five main types of reference architectures that have congruent goals, context, and design  Reference architectures that can be classified in one of these types have better chances to become a success  We illustrate our conclusions with a number of reference architectures  This research facilitates design of more effective reference architectures    2009 IEEE   31 refs",A classification of software reference architectures  Analyzing their success and effectiveness,"['Architecture', 'Computer software', 'Design', 'Concrete architecture', 'Generic architecture', 'Reference architecture', 'Buildings and Towers', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Engineering Graphics']","['Angelov, Samuil', '', '', 'Grefen, Paul', '', '', 'Greefhorst, Danny']","School of Industrial Eng , Eindhoven Univ  of Technology  2  ArchiXL",2009,WICSA
64,65,"A software reference architecture is a generic architecture for a class of information systems that is used as a foundation for the design of concrete architectures from this class  We observe that certain reference architectures have become more successful than others  One of the reasons for this is the level of congruence between their goals, context, and design  In this paper, we provide a framework for the classification of reference architectures  Using our framework on a set of reference architectures, and based on experiences with reference architectures, we define five main types of reference architectures that have congruent goals, context, and design  Reference architectures that can be classified in one of these types have better chances to become a success  We illustrate our conclusions with a number of reference architectures  This research facilitates design of more effective reference architectures    2009 IEEE   31 refs",A classification of software reference architectures  Analyzing their success and effectiveness,"['Architecture', 'Computer software', 'Design', 'Concrete architecture', 'Generic architecture', 'Reference architecture', 'Buildings and Towers', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Engineering Graphics']","['Angelov, Samuil', '', '', 'Grefen, Paul', '', '', 'Greefhorst, Danny']","School of Industrial Eng , Eindhoven Univ  of Technology  2  ArchiXL",2011,WICSA
65,66,"A software system s architecture, its elements and the way they interact, constitute valuable assets for comprehending the system  Many approaches have been developed to help comprehending software systems in different manners  Most of them focus on structural aspects  We believe offering multiple views of the same system, using domain knowledge helps understanding a software system as whole  To correlate domain information and existing software systems, different viewpoints are considered and modelled  Viewpoints guide the extraction of architectural views, the later representing different system facets  We propose a recursive framework, an approach that expresses domain knowledge as viewpoints to guide the extraction process  It provides multiple architectural views according to multiple given viewpoints    2009 IEEE   19 refs",Multiple viewpoints architecture extraction,"['Architecture', 'Computer software', 'Architectural views', 'Domain knowledge', 'Extraction process', 'Multiple viewpoints', 'Multiple views', 'Software systems', 'Structural aspects', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Razavizadeh, Azadeh', '', '', 'Verjus, Herve', '', '', 'C mpan, Sorana', '', '', 'Ducasse, St phane']","LISTIC Lab Annecy, University of Savoie, France  2  INRIA Lille Nord Europe, RmoD Team, LIFL Lille, France",2009,ECSA
66,67,"A software system s architecture, its elements and the way they interact, constitute valuable assets for comprehending the system  Many approaches have been developed to help comprehending software systems in different manners  Most of them focus on structural aspects  We believe offering multiple views of the same system, using domain knowledge helps understanding a software system as whole  To correlate domain information and existing software systems, different viewpoints are considered and modelled  Viewpoints guide the extraction of architectural views, the later representing different system facets  We propose a recursive framework, an approach that expresses domain knowledge as viewpoints to guide the extraction process  It provides multiple architectural views according to multiple given viewpoints    2009 IEEE   19 refs",Multiple viewpoints architecture extraction,"['Architecture', 'Computer software', 'Architectural views', 'Domain knowledge', 'Extraction process', 'Multiple viewpoints', 'Multiple views', 'Software systems', 'Structural aspects', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Razavizadeh, Azadeh', '', '', 'Verjus, Herve', '', '', 'C mpan, Sorana', '', '', 'Ducasse, St phane']","LISTIC Lab Annecy, University of Savoie, France  2  INRIA Lille Nord Europe, RmoD Team, LIFL Lille, France",2009,WICSA
67,68,"A software system s architecture, its elements and the way they interact, constitute valuable assets for comprehending the system  Many approaches have been developed to help comprehending software systems in different manners  Most of them focus on structural aspects  We believe offering multiple views of the same system, using domain knowledge helps understanding a software system as whole  To correlate domain information and existing software systems, different viewpoints are considered and modelled  Viewpoints guide the extraction of architectural views, the later representing different system facets  We propose a recursive framework, an approach that expresses domain knowledge as viewpoints to guide the extraction process  It provides multiple architectural views according to multiple given viewpoints    2009 IEEE   19 refs",Multiple viewpoints architecture extraction,"['Architecture', 'Computer software', 'Architectural views', 'Domain knowledge', 'Extraction process', 'Multiple viewpoints', 'Multiple views', 'Software systems', 'Structural aspects', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Razavizadeh, Azadeh', '', '', 'Verjus, Herve', '', '', 'C mpan, Sorana', '', '', 'Ducasse, St phane']","LISTIC Lab Annecy, University of Savoie, France  2  INRIA Lille Nord Europe, RmoD Team, LIFL Lille, France",2011,WICSA
68,69,"A study of the particulate organic carbon  POC  in the estuarine turbidity maxima  ETMs  of the three major French macrotidal estuaries shows that the average contents are 1 5, 3 3 and 3 1   expressed in   of dry suspended sediment  in the Gironde, Loire and Seine Estuaries, respectively  There is no seasonal variation of POC contents in the Gironde Estuary, whereas, they often increase in the Loire and the Seine Estuaries in spring and summer  The lability of the estuarine particulate organic matter was estimated by two analyses  1 labile organic matter was measured as the organic carbon loss during incubation tests over one month  2  the hydrolysable organic fraction was determined after 6N HCl digestion  The organic fractions of the ETMs are mainly refractory  Any increase in the amount of POC as compared to the background levels  cited above  is always correlated to an increase of organic matter lability  The yearly average fluvial contributions by various particulate organic pools  soil and litter organic matter  organic matter of phytoplanktonic and human origin  that enter the three estuaries were quantified  In the Garonne River, soil and litter are the major  90   POC sources  In the Loire system, due to the eutrophication of the river water, phytoplankton contributes up to 50  of the total POC load  In the Seine river, soil and litter contribute 70  of the total POC input  POC of human origin is also significant  10  , due to the impact of the City of Paris  10 million inhabitants   The lability of the different types of organic matter ranks as follows  phytoplankton  litter   human origin organic matter    soil  By combining the POC budgets and the lability of each type of organic fraction, it was possible to explain why the POC of the three ETMs is different and characterizes its refractory vs  labile nature    2007 Springer Science Business Media B V   73 refs","Particulate organic carbon in the estuarine turbidity maxima of the Gironde, Loire and Seine estuaries  Origin and lability","['Biological materials', 'Estuaries', 'Hydrolysis', 'Phytoplankton', 'Refractory materials', 'Soils', 'Organic carbon loss', 'Organic matter lability', 'Particulate organic carbon (POC)', 'Particulate organic matter', 'Organic Compounds', 'Chemical Reactions', 'Soils and Soil Mechanics', 'Refractories', 'Marine Science and Oceanography', 'Biological Materials and Tissue Engineering', 'Waterways', 'Biology']","['Etcheber, Henri', '', '', 'Taillez, Aur lien', '', '', 'Abril, Gwena l', '', '', 'Garnier, Josette', '', '', 'Servais, Pierre', '', '', 'Moatar, Florentina', '', '', 'Commarieu, Marc Vincent']","D partement de G ologie et Oc anographie, UMR CNRS 5805 EPOC, Universit  Bordeaux 1, Avenue des Facult s, 33405 Talence Cedex, France  2  Laboratoire Sisyphe, UMR 7619, Universit  Pierre et Marie Curie Paris VI, Boite 123, 4 place Jussieu, Paris Cedex 05 75252, France  3  Ecologie des Syst mes Aquatiques, Universit  Libre de Bruxelles, Bd du Triomphe, Bruxelles 1050, Belgium  4  Laboratoire de G ologie des Environnements Aquatiques Continentaux, Universit  de Tours, Parc de Grandmont, Tours 37200, France",2007,ECSA
69,70,"A study of the particulate organic carbon  POC  in the estuarine turbidity maxima  ETMs  of the three major French macrotidal estuaries shows that the average contents are 1 5, 3 3 and 3 1   expressed in   of dry suspended sediment  in the Gironde, Loire and Seine Estuaries, respectively  There is no seasonal variation of POC contents in the Gironde Estuary, whereas, they often increase in the Loire and the Seine Estuaries in spring and summer  The lability of the estuarine particulate organic matter was estimated by two analyses  1 labile organic matter was measured as the organic carbon loss during incubation tests over one month  2  the hydrolysable organic fraction was determined after 6N HCl digestion  The organic fractions of the ETMs are mainly refractory  Any increase in the amount of POC as compared to the background levels  cited above  is always correlated to an increase of organic matter lability  The yearly average fluvial contributions by various particulate organic pools  soil and litter organic matter  organic matter of phytoplanktonic and human origin  that enter the three estuaries were quantified  In the Garonne River, soil and litter are the major  90   POC sources  In the Loire system, due to the eutrophication of the river water, phytoplankton contributes up to 50  of the total POC load  In the Seine river, soil and litter contribute 70  of the total POC input  POC of human origin is also significant  10  , due to the impact of the City of Paris  10 million inhabitants   The lability of the different types of organic matter ranks as follows  phytoplankton  litter   human origin organic matter    soil  By combining the POC budgets and the lability of each type of organic fraction, it was possible to explain why the POC of the three ETMs is different and characterizes its refractory vs  labile nature    2007 Springer Science Business Media B V   73 refs","Particulate organic carbon in the estuarine turbidity maxima of the Gironde, Loire and Seine estuaries  Origin and lability","['Biological materials', 'Estuaries', 'Hydrolysis', 'Phytoplankton', 'Refractory materials', 'Soils', 'Organic carbon loss', 'Organic matter lability', 'Particulate organic carbon (POC)', 'Particulate organic matter', 'Organic Compounds', 'Chemical Reactions', 'Soils and Soil Mechanics', 'Refractories', 'Marine Science and Oceanography', 'Biological Materials and Tissue Engineering', 'Waterways', 'Biology']","['Etcheber, Henri', '', '', 'Taillez, Aur lien', '', '', 'Abril, Gwena l', '', '', 'Garnier, Josette', '', '', 'Servais, Pierre', '', '', 'Moatar, Florentina', '', '', 'Commarieu, Marc Vincent']","D partement de G ologie et Oc anographie, UMR CNRS 5805 EPOC, Universit  Bordeaux 1, Avenue des Facult s, 33405 Talence Cedex, France  2  Laboratoire Sisyphe, UMR 7619, Universit  Pierre et Marie Curie Paris VI, Boite 123, 4 place Jussieu, Paris Cedex 05 75252, France  3  Ecologie des Syst mes Aquatiques, Universit  Libre de Bruxelles, Bd du Triomphe, Bruxelles 1050, Belgium  4  Laboratoire de G ologie des Environnements Aquatiques Continentaux, Universit  de Tours, Parc de Grandmont, Tours 37200, France",2008,ECSA
70,71,"A system of systems  SoS  can be understood as a set of complex, independent, heterogeneous constituent systems, which are composed to form a larger and more complex system aiming at accomplishing a given mission  Each constituent system accomplishes its own individual mission and is able to collaboratively contribute to the accomplishment of the global mission of the SoS  Despite the importance and central role played by missions in SoS, the current literature lacks of studies focused on analyzing such missions and their specificities  The existing initiatives are domain specific and are still in an initial stage of development  In this context, the main goal of this paper is to present a study about how missions of SoS can be defined, specified, represented, and implemented  Due to the limitations of the existing proposals for SoS, we have performed a systematic mapping on missions of systems, in a broader extent, aiming at identifying elements that can be brought to SoS  In this paper, we discuss such elements related to missions and other important issues that must be considered when shifting from single and monolithic systems to SoS    2014 ACM   28 refs",On the characterization of missions of systems of systems,"['Mapping', 'Software architecture', 'Domain specific', 'Global missions', 'Missions', 'Monolithic systems', 'SoS', 'System-of-systems', 'Systematic mapping', 'Systems-of-systems', 'Computer Programming', 'Engineering Graphics', 'Industrial Engineering and Management', 'Systems Science']","['Silva, Eduardo', '', '', 'Cavalcante, Everton', ' ,', '', ' Batista, Thais', '', '', 'Oquendo, Flavio', '', '', 'Delicato, Flavia C', '', '', ' Pires, Paulo F', '', '']","DIMAp, Federal University of Rio Grande Do Norte, Natal, Brazil  2  IRISA UMR CNRS, Universit  de Bretagne Sud, Vannes, France  3  DCC PPGI, Universidade Federal Do Rio de Janeiro, Rio de Janeiro, Brazil",2014,ECSA
71,72,"A system of systems  SoS  is a large scale concurrent and distributed system whose components are complex systems  An example of SoS is in the domain of self adaptive systems, where multiple self adaptive systems must be integrated with each other  As for any other kind of SoS, we face the following question  is there any emergent interference as the result of such integration, which prevents the constituent self adaptive systems to achieve their goals  Due to the inherent complexity of an SoS, it is not easy to detect emergent interference manually, if possible at all  We study the suitability of formal modeling and verification for detecting emergent interference in an example of SoS, i e  integration of multiple self adaptive systems  Model checking reveals that although constituent systems behave correctly when executed individually, they fail to provide correct behavior in an SoS context due to unforeseen interference that emerges    2014 ACM   21 refs",Detecting emergent interference in integration of multiple self adaptive systems,"['Adaptive systems', 'Integration', 'Model checking', 'Software architecture', 'Systems engineering', 'Concurrent and distributed systems', 'Formal modeling and verification', 'Inherent complexity', 'mergent behavior', 'Self-adaptive system', 'System of systems', 'Systems of systems', 'UPPAAL', 'Computer Programming', 'Control Systems', 'Industrial Engineering and Management', 'Mathematics', 'Calculus', 'Systems Science']","['Malakuti, Somayeh']","Software Technology Group, Technische Universit t Dresden, Germany",2014,ECSA
72,73,"A template free, surfactant free, simple electrochemical approach has been developed to prepare well dispersed platinum  Pt  nanosheets  By simply changing the anions from SO42 to Cl in the electrodeposition solution, the formed Pt deposits is changed from flower like Pt particles consisting of aggregated Pt nanosheets to well dispersed Pt nanosheets  The surface morphology and structure of the Pt particles nanosheets were investigated by the scanning electron microscopy and X ray diffraction  The amount of the Pt loading was measured by an inductively coupled plasma method  The electrocatalytic activity of the prepared Pt electrocatalysts for ammonia oxidation was characterized by cyclic voltammetry  The result showed that the well dispersed Pt nanosheets exhibits 112  and 89  increase in the mass activity MA  for the ammonia oxidation compared with the flower like Pt particles and commercial Pt C catalyst, respectively  The much improved MA of the well dispersed Pt nanosheets is attributed to not only the increased electrochemically active surface area  ECSA , but also the specific activity  SA   For example, the well dispersed Pt nanosheets shows 88  increase in the SA compared with the commercial Pt C catalyst    2013 Elsevier Ltd  All rights reserved   34 refs",Surfactant free and template free electrochemical approach to prepare well dispersed Pt nanosheets and their high electrocatalytic activities for ammonia oxidation,"['Ammonia', 'Catalyst activity', 'Cyclic voltammetry', 'Electrocatalysts', 'Inductively coupled plasma', 'Nanosheets', 'Oxidation', 'Platinum alloys', 'Scanning electron microscopy', 'X ray diffraction', 'Ammonia oxidation', 'Electrocatalytic activity', 'Electrochemically active surface areas', 'Inductively-coupled', 'Morphology and structures', 'Pt electrocatalysts', 'Specific activity', 'Surfactant-free', 'Crystal Lattice', 'Solid State Physics', 'Plasma Physics', 'Inorganic Compounds', 'Electric Variables Measurements', 'Chemical Agents and Basic Industrial Chemicals', 'Nanotechnology', 'Light Optics', 'Precious Metals', 'Chemical Reactions']","['Du, X T', '', '', ' Yang, Y', '', '', ' Liu, J', '', '', ' Liu, B', '', '', ' Liu, J B', '', ',', '', ' Zhong, C', '', '', ' Hu, W B', '', '']","State Key Laboratory of Metal Matrix Composites, Shanghai Jiao Tong University, Shanghai 200240, China  2  Department of Chemistry, Texas A and M University Kingsville, MSC 161, Kingsville, TX 78363 8012, United States  3  Advanced Light Source, ALS Lawrence Berkeley National Laboratory, Berkeley, CA 94720, United States",2013,ECSA
73,74,"A typical component based system architecture comprises a set of components that have been purposefully designed and structured to ensure that they have  pluggable  interfaces and an acceptable match with a defined system context  However, the black box nature of many software components means there is never a clean match between system specifications and concrete software components  Systematic architecture analysis can provide an effective, rapid and relatively low cost mechanism for addressing risks resulting from architectural adaptation and trade offs  However, a review of current architecture analysis approaches reveals they differ widely with respect to their ability to support black box software development  This paper describes an analysis approach that integrates the strengths of current approaches to provide a practical architecture analysis framework for black box component based development  The approach is illustrated using a real case study    2011 Springer Verlag   13 refs",An architecture analysis approach for supporting black box software development,"['Software design', 'Specifications', 'Analysis approach', 'Architectural analysis', 'Architecture analysis', 'Black boxes', 'Component based systems', 'Component-Based Development', 'Components', 'Services', 'Software component', 'System specification', 'Computer Programming', 'Codes and Standards']","['Admodisastro, Novia', '', '', 'Kotonya, Gerald']","School of Computing and Communications, InfoLab21, Lancaster University, South Drive, Lancaster LA1 4WA, United Kingdom",2011,ECSA
74,75,"A typical software architecture design process requires the architects to make various trade off architecture decisions  The architects need to consider different possibilities and combinations of tactics and patterns to satisfy the elicited quality scenarios of the intended software system, some of which may be conflicting or inconsistent in nature  The formation of the correct composition of these elements of architecture decisions for the satisfaction of the quality scenarios can be considered an important art of the architect  however, in cases where the architect is dealing with multiple stakeholders with inconsistent preferences, this can be an awkward task  In this paper, we formalize this process as a complex multi attribute decision making procedure within the Attribute Driven Design methodology  In such a context, we are able to incrementally elicit the communal preferences of the stakeholders with regards to the available quality scenarios and hence assist the software architect in methodically making the architecture decisions with the highest expected utility for the stakeholders We will also introduce our implementation of a decision support system, which embodies the methods proposed in this paper, along with a case study    2008 Springer Verlag Berlin Heidelberg   10 refs",Automating architecture trade off decision making through a complex multi attribute decision process,"['Administrative data processing', 'Architecture', 'Artificial intelligence', 'Commerce', 'Computer software selection and evaluation', 'Decision support systems', 'Decision theory', 'Management information systems', 'Problem solving', 'Process engineering', 'Software architecture', 'Software design', 'Architecture decisions', 'Case studies', 'Decision processes', 'Decision supports', 'Design methodologies', 'Expected utilities', 'Multi-attribute decision makings', 'Multiple stakeholders', 'Software architects', 'Software architecture designs', 'Software systems', 'Industrial Economics', 'Marketing', 'Management', 'Production Engineering', 'Mathematics', 'Mathematical Statistics', 'Systems Science', 'Automatic Control Principles and Applications', 'Buildings and Towers', 'Structural Design, General', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Data Processing and Image Processing', 'Artificial Intelligence', 'Computer Applications']","['Makki, Majid', '', '', 'Bagheri, Ebrahim', '', '', 'Ghorbani, Ali A', '', '']","Faculty of Computer Science, University of New Brunswick, Fredericton, Canada",2008,ECSA
75,76,"A wireless sensor network is an example of a system that should be able to adapt its sensor nodes to some context changes with minimum human intervention  This means that the architecture of the middleware for sensors must encapsulate a dynamic mechanism to allow reconfiguration  We present a novel approach to achieve self adaptation based on software product lines and on the autonomic computing paradigm for the FamiWare middleware  FamiWare uses feature models to represent the potential middleware configurations at runtime  Each configuration is automatically mapped to the corresponding architectural representation of a specific middleware product  Following the autonomic computing principles, FamiWare defines a reconfiguration mechanism that switches from one architectural configuration to another by means of executing a plan  This is possible thanks to the loosely coupled architecture of FamiWare based on an event based publish and subscribe mechanism  We evaluate our work by showing that the resource consumption and the overhead are not so critical compared with the benefits of providing this self adaptation mechanism    2011 Springer Verlag   23 refs",Autonomic computing driven by feature models and architecture in FamiWare,"['Middleware', 'Network architecture', 'Sensor nodes', 'Software design', 'Architectural representation', 'Autonomic Computing', 'Dynamic mechanism', 'Event-based', 'Feature models', 'Human intervention', 'Loosely coupled architectures', 'Middleware configurations', 'Product-lines', 'Reconfiguration mechanisms', 'Resource consumption', 'Runtimes', 'Self adaptation', 'Self-adaptation mechanisms', 'Software Product Line', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming']","['Gamez, Nadia', '', '', 'Fuentes, Lidia', '', '', 'Arag ez, Miguel A', '', '']","Dpto  de Lenguajes Y Ciencias de la Comunicaci n, Universidad de M laga, Spain",2011,ECSA
76,77,"AO ADL is an aspect oriented architecture description language where  crosscutting  becomes a new kind of relationship between components  The semantic of connectors is extended in order to represent such crosscutting relationships  In this paper we focus on an important contribution of AO ADL, its mechanism for defining aspect oriented connector templates, which capture generic and reusable crosscutting influences, providing an aspect oriented architectural pattern    Springer Verlag Berlin Heidelberg 2007   8 refs",Using connectors to model crosscutting influences in software architectures,"['Computer software reusability', 'Object oriented programming', 'Requirements engineering', 'Semantics', 'Aspect oriented architecture', 'Crosscutting relationships', 'Computer Programming', 'Computer Applications', 'Information Dissemination']","['Fuentes, Lidia', '', '', 'G mez, Nadia', '', '', 'Pinto, M nica', '', '', 'Valenzuela, Juan A', '', '']","Dpto  Lenguajes y Ciencias de la Computaci n, University of M laga, Spain",2007,ECSA
77,78,"AO ADL is an aspect oriented architecture description language where  crosscutting  becomes a new kind of relationship between components  The semantic of connectors is extended in order to represent such crosscutting relationships  In this paper we focus on an important contribution of AO ADL, its mechanism for defining aspect oriented connector templates, which capture generic and reusable crosscutting influences, providing an aspect oriented architectural pattern    Springer Verlag Berlin Heidelberg 2007   8 refs",Using connectors to model crosscutting influences in software architectures,"['Computer software reusability', 'Object oriented programming', 'Requirements engineering', 'Semantics', 'Aspect oriented architecture', 'Crosscutting relationships', 'Computer Programming', 'Computer Applications', 'Information Dissemination']","['Fuentes, Lidia', '', '', 'G mez, Nadia', '', '', 'Pinto, M nica', '', '', 'Valenzuela, Juan A', '', '']","Dpto  Lenguajes y Ciencias de la Computaci n, University of M laga, Spain",2008,ECSA
78,79,"AO ADL is an aspect oriented architecture description language where  crosscutting  becomes a new kind of relationship between components  The semantic of connectors is extended in order to represent such crosscutting relationships  In this paper we focus on an important contribution of AO ADL, its mechanism for defining aspect oriented connector templates, which capture generic and reusable crosscutting influences, providing an aspect oriented architectural pattern   8 refs",Using connectors to model crosscutting influences in software architectures,"['object-oriented languages', 'object-oriented programming', 'software architecture', 'software architectures', 'AO-ADL', 'aspect-oriented architecture description language', 'aspect-oriented connector templates', 'reusable crosscutting influences', 'aspect-oriented architectural pattern', 'Software engineering techniques', 'Object oriented programming']","['Fuentes, L', '', '', ' Gamez, N', '', '', ' Pinto, M', '', '', ' Valenzuela, J A', '', '']","Dipt  Lenguajes y Cienc  de la Comput , Univ  of Malaga, Malaga, Spain",2007,ECSA
79,80,"AO ADL is an aspect oriented architecture description language where  crosscutting  becomes a new kind of relationship between components  The semantic of connectors is extended in order to represent such crosscutting relationships  In this paper we focus on an important contribution of AO ADL, its mechanism for defining aspect oriented connector templates, which capture generic and reusable crosscutting influences, providing an aspect oriented architectural pattern   8 refs",Using connectors to model crosscutting influences in software architectures,"['object-oriented languages', 'object-oriented programming', 'software architecture', 'software architectures', 'AO-ADL', 'aspect-oriented architecture description language', 'aspect-oriented connector templates', 'reusable crosscutting influences', 'aspect-oriented architectural pattern', 'Software engineering techniques', 'Object oriented programming']","['Fuentes, L', '', '', ' Gamez, N', '', '', ' Pinto, M', '', '', ' Valenzuela, J A', '', '']","Dipt  Lenguajes y Cienc  de la Comput , Univ  of Malaga, Malaga, Spain",2008,ECSA
80,81,"Accelerated durability tests were carried out for a carbon supported platinum catalyst using a rotating disk electrode at various rotation rates for various amounts of the catalyst  The loss of the normalized electrochemical surface area  ECSA  of Pt increased with increasing the rotation rate and or decreasing the catalyst amount  The detailed analysis showed that the reciprocal of the normalized ECSA loss rate linearly increases with the increase in   1 2 or the catalyst amount  By extrapolating these linear relations to zero, the ECSA loss rate at the hypothetical conditions, in which all the dissolved Pt ions would flow out to the electrolyte without re deposition, was obtained    The Electrochemical Society   4 refs",The influence of experimental conditions on the catalyst degradation in the accelerated durability test using a rotating disk electrode,"['Catalysts', 'Platinum', 'Polyelectrolytes', 'Proton exchange membrane fuel cells (PEMFC)', 'Rotating disks', 'Accelerated durability tests', 'Catalyst degradation', 'Electrochemical surface area', 'Experimental conditions', 'Linear relation', 'Platinum catalysts', 'Rotating disk electrodes', 'Rotation rate', 'Organic Polymers', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Fuel Cells', 'Machine Components', 'Precious Metals', 'Strength of Building Materials  Mechanical Properties']","['Nagai, T', '', '', ' Murata, H', '', '', ' Morimoto, Y', '', '']","Toyota Central R and D Labs , Inc , 41 1, Yokomichi, Nagakute, Aichi, 480 1192, Japan",2012,ECSA
81,82,"Access to previously made architectural design decisions allows for faster understanding and more educated decisions during software evolution  Templates and ontologies have been proposed to document such decisions  In this paper we argue that documenting the architectural design decisions can be intertwined with a standard architecture documentation process  For that, we propose architecture specific decision types equipped with OCL constraints capable for decision conformance checks  We present an initial evaluation based on a preliminary case study with a typical three tier web application and the decisions associated with its implementation    2013 Springer Verlag   12 refs",Architecture centric modeling of design decisions for validation and traceability,"['Architectural design', 'Model checking', 'Architectural design decisions', 'Architectural models', 'Architecture-centric', 'constraint checking', 'Design decisions', 'Software Evolution', 'Standard architecture', 'traceability', 'Buildings and Towers', 'Computer Programming']","['K ster, Martin']","FZI Research Center for Information Technologies, Software Engineering, Haid und Neu Str  10 14, 76131 Karlsruhe, Germany",2013,ECSA
82,83,"Accurate detection of lip contour is important in many application areas, including biometric authentication, human computer interaction, and facial expression recognition  In this paper, we propose a new lip boundary localization scheme based on Game Theory  GT  to improve the facial expression detection performance  In addition, we use GT for selecting the proper set of facial features  We apply the Extended Contribution Selection Algorithm  ECSA  for the dimensionality reduction of the facial features using a coalitional GT based framework  We have conducted several sets of experiments to evaluate the proposed approach  The results show that the proposed approach has achieved recognition rates of 93 1  and 92 7  on the JAFFE and CK  datasets, respectively    2012 Springer Verlag   15 refs",Facial expression recognition using game theory,"['Algorithms', 'Biometrics', 'Face recognition', 'Game theory', 'Gesture recognition', 'Neural networks', 'Application area', 'Biometric authentication', 'Coalitional game theory', 'Data sets', 'Detection performance', 'Dimensionality reduction', 'Facial expression recognition', 'Facial Expressions', 'Facial feature', 'Lip contour', 'Localization schemes', 'Recognition rates', 'Selection algorithm', 'Probability Theory', 'Mathematics', 'Control Devices', 'Artificial Intelligence', 'Computer Software, Data Handling and Applications', 'Telecommunication  Radar, Radio and Television', 'Bioengineering and Biology']","['Roy, Kaushik', '', '', 'Kamel, Mohamed S', '', '']","Centre for Pattern Analysis and Machine Intelligence, University of Waterloo, ON, Canada",2012,ECSA
83,84,"Advanced asset health management solutions blend business intelligence with analytics that incorporate expert operational knowledge of industrial equipment and systems  Key challenges in developing these solutions include  streamlining the capture and prepackaging of operational experts  knowledge as analytic modules, efficiently evolving the modules as knowledge grows, adapting the analytics in the field for diverse operating circumstances and industries, and executing the analytics with high performance in industrial and enterprise software systems  A Quality Attribute Workshop  QAW  was used to elicit and analyze variability at development time and runtime for creating, integrating, evolving, and tailoring reusable analytic modules for ABB Ventyx asset health solution offerings  Dynamic software product line  DSPL  architecture approaches were then applied in designing an analytics plug in architecture for asset health solutions  This paper describes our approach and experiences in designing the analytics product line architecture and its SME Workbench toolset, and how we achieved significant improvements in speed and flexibility of deploying industrial analytics    2014 IEEE   20 refs","A dynamic software product line architecture for prepackaged expert analytics  Enabling efficient capture, reuse and adaptation of operational knowledge","['Architecture', 'Computer software', 'Enterprise software', 'Health', 'Industry', 'Interoperability', 'Reusability', 'Dynamic software product lines', 'extensibility', 'industrial analytics', 'Industrial software', 'knowledge', 'performance', 'Buildings and Towers', 'Industrial Wastes', 'Computer Software, Data Handling and Applications', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing', 'Industrial Hygiene']","['Smiley, Karen', '', '', 'Mahate, Shakeel', '', '', 'Wood, Paul']","Industrial Software Systems, ABB Corporate Research, Raleigh, NC, United States  2  Software Architecture, Ventyx, ABB Company, Sacramento, CA, United States",2014,WICSA
84,85,"Ageless Software evolves, to meet new requirements, without reducing its efficiency or understandability  Here we introduce a methodology called Informed Evolution for supporting the construction and evolution of ageless software  This methodology integrates the software architecture  structure and constraints  and the system implementation  behaviour  within system execution  Evolution is effected by evolution patterns which are in turn guided by constraints specified in the software architecture  The availability of the software architecture and implementation at run time ensures that changes are informed by design and implementation decisions, thus preserving efficiency and understandability  In this paper, we outline Informed Evolution, and describe how evolution patterns may be expressed for systems developed using this methodology    Springer Verlag Berlin Heidelberg 2007   5 refs",Informed evolution,"['Constraint theory', 'Requirements engineering', 'Software architecture', 'Software design', 'Ageless software', 'Evolution patterns', 'Informed Evolution', 'Computer Programming', 'Computer Applications', 'Systems Science']","['Falkner, Katrina', '', '', 'Balasubramaniam, Dharini', '', '', 'Detmold, Henry', '', '', 'Munro, David S', '', '']","School of Computer Science, University of Adelaide, Adelaide, SA 5005, Australia  2  Department of Computer Science, University of St Andrews, St Andrews, Fife KY16 9SX, United Kingdom",2007,ECSA
85,86,"Ageless Software evolves, to meet new requirements, without reducing its efficiency or understandability  Here we introduce a methodology called Informed Evolution for supporting the construction and evolution of ageless software  This methodology integrates the software architecture  structure and constraints  and the system implementation  behaviour  within system execution  Evolution is effected by evolution patterns which are in turn guided by constraints specified in the software architecture  The availability of the software architecture and implementation at run time ensures that changes are informed by design and implementation decisions, thus preserving efficiency and understandability  In this paper, we outline Informed Evolution, and describe how evolution patterns may be expressed for systems developed using this methodology    Springer Verlag Berlin Heidelberg 2007   5 refs",Informed evolution,"['Constraint theory', 'Requirements engineering', 'Software architecture', 'Software design', 'Ageless software', 'Evolution patterns', 'Informed Evolution', 'Computer Programming', 'Computer Applications', 'Systems Science']","['Falkner, Katrina', '', '', 'Balasubramaniam, Dharini', '', '', 'Detmold, Henry', '', '', 'Munro, David S', '', '']","School of Computer Science, University of Adelaide, Adelaide, SA 5005, Australia  2  Department of Computer Science, University of St Andrews, St Andrews, Fife KY16 9SX, United Kingdom",2008,ECSA
86,87,"Ageless software evolves, to meet new requirements, without reducing its efficiency or understandability  Here we introduce a methodology called informed evolution for supporting the construction and evolution of ageless software  This methodology integrates the software architecture  structure and constraints  and the system implementation  behaviour  within system execution  Evolution is effected by evolution patterns which are in turn guided by constraints specified in the software architecture  The availability of the software architecture and implementation at run time ensures that changes are informed by design and implementation decisions, thus preserving efficiency and understandability  In this paper, we outline informed evolution, and describe how evolution patterns may be expressed for systems developed using this methodology   5 refs",Informed evolution,"['software architecture', 'software prototyping', 'informed evolution', 'ageless software', 'software architecture', 'evolution patterns', 'Software engineering techniques']","['Falkner, K', '', '', ' Balasubramaniam, D', ' Detmold, H', ' Munro, D S']","Sch  of Comput  Sci , Univ  of Adelaide, Adelaide, SA, Australia",2007,ECSA
87,88,"Ageless software evolves, to meet new requirements, without reducing its efficiency or understandability  Here we introduce a methodology called informed evolution for supporting the construction and evolution of ageless software  This methodology integrates the software architecture  structure and constraints  and the system implementation  behaviour  within system execution  Evolution is effected by evolution patterns which are in turn guided by constraints specified in the software architecture  The availability of the software architecture and implementation at run time ensures that changes are informed by design and implementation decisions, thus preserving efficiency and understandability  In this paper, we outline informed evolution, and describe how evolution patterns may be expressed for systems developed using this methodology   5 refs",Informed evolution,"['software architecture', 'software prototyping', 'informed evolution', 'ageless software', 'software architecture', 'evolution patterns', 'Software engineering techniques']","['Falkner, K', '', '', ' Balasubramaniam, D', ' Detmold, H', ' Munro, D S']","Sch  of Comput  Sci , Univ  of Adelaide, Adelaide, SA, Australia",2008,ECSA
88,89,"Agile methods and architectural modelling have been considered to be mutually exclusive  On the one hand, agile methods try to reduce overheads by avoiding activities that do not directly contribute to the immediate needs of the current project  This often leads to bad cross project reuse  On the other hand, architectural modelling is considered a pre requisite for the systematic cross project reuse and for the resulting increase in software developer productivity  The theme of this paper is to address the relationship between agile methods and architectural modelling and to propose a novel process for agile architectural modelling, which drives requirements elicitation through the use of patterns and components  This process is in line with agile principles and is illustrated on an example application  Additionally, the paper points out the challenges connected to the process validation and proposes an approach for the empirical validation addressing these challenges    2011 ACM   66 refs",Towards a process for architectural modelling in agile software development,"['Computer software reusability', 'Software architecture', 'Agile methods', 'architectural modelling', 'component selection', 'design patterns', 'Development process', 'scrum', 'Computer Software, Data Handling and Applications']","['Durdik, Zoya']","Software Engineering  SE , IT Research Center FZI, 76131 Karlsruhe, Germany",2011,QoSA
89,90,"Agile software development approaches have recently gained popularity as a mechanism for reducing cost and increasing ability to handle change in dynamic market conditions  However, there is also a significant concern about the role and importance of the issues related to the software architecture of a system being developed using agile approaches  There is to date little empirical evidence available on what software architecture related practices are followed by teams using agile approaches and the kinds of architectural challenges resulting from using agile approaches  This paper reports a case study aimed to empirically identify and understand the architectural practices and challenges of teams using agile approaches  The findings provide useful information about the researched issues and also highlight the areas that need to be focused on for integrating agile and architecture centric approaches    2009 IEEE   39 refs",An exploratory study of architectural practices and challenges in using agile software development approaches,"['Architecture', 'Computer software', 'Cost reduction', 'Research', 'Software design', 'Agile approaches', 'Agile software development', 'Dynamic market', 'Empirical evidence', 'Empirical studies', 'Exploratory studies', 'Qualitative research', 'Reducing costs', 'Management', 'Industrial Economics', 'Engineering Research', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Buildings and Towers']","['Babar, Muhammad Ali']","Lero, University of Limerick, Ireland",2009,ECSA
90,91,"Agile software development approaches have recently gained popularity as a mechanism for reducing cost and increasing ability to handle change in dynamic market conditions  However, there is also a significant concern about the role and importance of the issues related to the software architecture of a system being developed using agile approaches  There is to date little empirical evidence available on what software architecture related practices are followed by teams using agile approaches and the kinds of architectural challenges resulting from using agile approaches  This paper reports a case study aimed to empirically identify and understand the architectural practices and challenges of teams using agile approaches  The findings provide useful information about the researched issues and also highlight the areas that need to be focused on for integrating agile and architecture centric approaches    2009 IEEE   39 refs",An exploratory study of architectural practices and challenges in using agile software development approaches,"['Architecture', 'Computer software', 'Cost reduction', 'Research', 'Software design', 'Agile approaches', 'Agile software development', 'Dynamic market', 'Empirical evidence', 'Empirical studies', 'Exploratory studies', 'Qualitative research', 'Reducing costs', 'Management', 'Industrial Economics', 'Engineering Research', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Buildings and Towers']","['Babar, Muhammad Ali']","Lero, University of Limerick, Ireland",2009,WICSA
91,92,"Agile software development approaches have recently gained popularity as a mechanism for reducing cost and increasing ability to handle change in dynamic market conditions  However, there is also a significant concern about the role and importance of the issues related to the software architecture of a system being developed using agile approaches  There is to date little empirical evidence available on what software architecture related practices are followed by teams using agile approaches and the kinds of architectural challenges resulting from using agile approaches  This paper reports a case study aimed to empirically identify and understand the architectural practices and challenges of teams using agile approaches  The findings provide useful information about the researched issues and also highlight the areas that need to be focused on for integrating agile and architecture centric approaches    2009 IEEE   39 refs",An exploratory study of architectural practices and challenges in using agile software development approaches,"['Architecture', 'Computer software', 'Cost reduction', 'Research', 'Software design', 'Agile approaches', 'Agile software development', 'Dynamic market', 'Empirical evidence', 'Empirical studies', 'Exploratory studies', 'Qualitative research', 'Reducing costs', 'Management', 'Industrial Economics', 'Engineering Research', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Buildings and Towers']","['Babar, Muhammad Ali']","Lero, University of Limerick, Ireland",2011,WICSA
92,93,"Agreement on Non Functional Requirements between customer and supplier is crucial to a successful IT solution delivery project  In an ideal world, stakeholders and architects cooperate to achieve their common goals in a win win situation  In a commercial setting, however, one dominant feature often introduces powerful forces from outside the technical realm  That feature is the customer supplier relationship, usually formalized in bidding rules or as a delivery contract  Formal customer supplier relationships often place severe limitations on information exchange between stakeholders and architects  In this paper, we explore the effect of such limitations on the interaction of architectural design with the quantification of Non Functional Requirements, and explore a number of avenues to deal with them    2012 IEEE   26 refs",Issues dealing with non functional requirements across the contractual divide,"['Architectural design', 'Project management', 'Commercial settings', 'Ideal worlds', 'Information exchanges', 'IT solution', 'IT Tendering', 'Non-functional requirements', 'Requirements management', 'Win-win', 'Buildings and Towers', 'Computer Programming', 'Management']","['Poort, Eltjo R', '', '', ' Key, Andrew', '', '', 'De With, Peter H N', '', '', ' Van Vliet, Hans']","Logica, Amstelveen, Netherlands  2  Logica, London, United Kingdom  3  Eindhoven University of Technology, Netherlands  4  VU University, Amsterdam, Netherlands",2012,ECSA
93,94,"Agreement on Non Functional Requirements between customer and supplier is crucial to a successful IT solution delivery project  In an ideal world, stakeholders and architects cooperate to achieve their common goals in a win win situation  In a commercial setting, however, one dominant feature often introduces powerful forces from outside the technical realm  That feature is the customer supplier relationship, usually formalized in bidding rules or as a delivery contract  Formal customer supplier relationships often place severe limitations on information exchange between stakeholders and architects  In this paper, we explore the effect of such limitations on the interaction of architectural design with the quantification of Non Functional Requirements, and explore a number of avenues to deal with them    2012 IEEE   26 refs",Issues dealing with non functional requirements across the contractual divide,"['Architectural design', 'Project management', 'Commercial settings', 'Ideal worlds', 'Information exchanges', 'IT solution', 'IT Tendering', 'Non-functional requirements', 'Requirements management', 'Win-win', 'Buildings and Towers', 'Computer Programming', 'Management']","['Poort, Eltjo R', '', '', ' Key, Andrew', '', '', 'De With, Peter H N', '', '', ' Van Vliet, Hans']","Logica, Amstelveen, Netherlands  2  Logica, London, United Kingdom  3  Eindhoven University of Technology, Netherlands  4  VU University, Amsterdam, Netherlands",2012,WICSA
94,95,"Aiming at investigating the effect of structure on electrocatalytic properties, Pd50Ru50 nanoparticles  NPs  with three different structures were carefully designed in a one pot polyol process for application in formic acid electrooxidation  The three structures are   1  single phase PdRu nanodendrites  denoted as PR 1 ,  2  a mixed phase mixture of PdRu nanodendrites and monometallic Ru NPs  denoted as PR 2 , and  3  a mixed phase mixture of monometallic Pd and Ru NPs  denoted as PR 3   From PR 1 to PR 3, the structure was varied from single phase to mixed phase  The relative position of Ru was altered from completely Pd connected  PR 1 , to a mixture of Pd connected and monometallic  PR 2 , and completely monometallic  PR 3   All PdRu NPs outperform the commercial Pd C  PR 2 exhibits the highest peak current density, but its stability is slightly lower than that of PR 3  When both the current density and the durability are taken into consideration, PR 2 is the best choice of catalyst for formic acid oxidation  It indicates that both the Pd connected Ru NPs and monometallic Ru NPs in the mixed phase PR 2 are essential to improve the electrocatalytic properties  Our study also illustrates that the electrochemical active surface area  ECSA  and hydrogen storage capacity of the as prepared PdRu NPs are greatly enhanced after several hundred scans in formic acid, indicating the possibility for highly restorable catalysts in direct formic acid fuel cells   13 refs",Mixed phase PdRu bimetallic structures with high activity and stability for formic acid electrooxidation,"['catalysis', 'current density', 'durability', 'electrochemistry', 'mixtures', 'nanoparticles', 'palladium alloys', 'ruthenium alloys', 'mixed-phase bimetallic structures', 'formic acid electrooxidationt', 'electrocatalytic properties', 'structural properties', 'nanoparticles', 'one-pot polyol process', 'single-phase nanodendrites', 'mixed-phase mixture', 'current density', 'durability', 'electrochemical active surface area', 'ECSA', 'Pd50Ru50', 'Structure of solid clusters, nanoparticles, nanotubes and nanostructured materials', 'Solubility, segregation, and mixing', 'Electrochemistry and electrophoresis', 'Heterogeneous catalysis at surfaces and other surface reactions']","['Dongshuang Wu', '', '', 'Zhaoliang Zheng', '', '', 'Shuiying Gao', '', '', 'Cao, M', '', '', ' Rong Cao']","Key Lab  of Coal to Ethylene Glycol   Its Related Technol , Fujian Inst  of Res  an the Struct  of Matter, Fuzhou, China",2012,ECSA
95,96,"Alternative composite supports for platinum catalysts were synthesized from antimony doped tin dioxide  ATO  nanoparticles  In the range of the antimony content from 0 to 11mol , the highest electrical conductivity of 1 1Scm 1 at 130 C was obtained for the 5mol  Sb ATO, from which composite supports composed of oxides and carbon and supported platinum catalysts were prepared  Using the pure oxide support, the Pt ATO catalyst displayed superior specific activity and stability for the oxygen reduction reactions  ORRs   Low surface area of ATO caused poor dispersion of Pt particles compared to composite supports, which limited the mass activity of the supported catalysts  When the ATO composites were used as supports, the Pt C ATO catalysts showed significantly enhanced catalytic activity and durability for the ORR, attributable to the high ECSA and modified electronic structure of Pt by the ATO phase in the catalyst support    2013   45 refs",Highly active and stable Pt electrocatalysts promoted by antimony doped SnO2 supports for oxygen reduction reactions,"['Catalyst activity', 'Catalyst supports', 'Electrocatalysts', 'Electrolytic reduction', 'Electronic structure', 'Fuel cells', 'Nanocomposites', 'Supports', 'Synthesis (chemical)', 'Tin', 'Antimony-doped tin oxide', 'Electrical conductivity', 'Enhanced catalytic activity', 'Oxygen reduction reaction', 'Platinum catalysts', 'Pt electrocatalysts', 'Specific activity', 'Supported platinum catalysts', 'Solid State Physics', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Crystal Lattice', 'Nanotechnology', 'Fuel Cells', 'Precious Metals', 'Tin and Alloys', 'Electric Power Lines and Equipment']","['Yin, Min', ' ,', '', ' Xu, Junyuan', ' ,', '', ' Li, Qingfeng', '', '', 'Jensen, Jens Oluf', '', '', 'Huang, Yunjie', '', '', 'Cleemann, Lars N', '', '', ' Bjerrum, Niels J', '', '', ' Xing, Wei']","Department of Energy Conversion and Storage, Technical University of Denmark, Kemitorvet 207, DK 2800 Lyngby, Denmark  2  Laboratory of Advanced Power Sources, Changchun Institute of Applied Chemistry, Chinese Academy of Sciences, Changchun 130022, China  3  Department of Physical Chemistry, University of Science and Technology Beijing, 30 College Road, Beijing 100083, China",2013,ECSA
96,97,"Although a lot of research has been carried out in the domains of technical architecture and functional architecture of software systems, up to this point both domains were treated as separate  Additionally, design and documentation of software architecture is still often found absent or incomplete  In this paper, we present the Functional Architecture Modeling method, a streamlined system allowing for quick iterations of software architecture with a focus on ease of use and communicability while maintaining a high quality of designs  The Functional Architecture Modeling method combines elements and lessons learned from the functional and technical software architecture domains into a single software architecture design method    2014 IEEE   9 refs",The functional architecture modeling method applied on web browsers,"['Architecture', 'Documentation of software', 'Ease-of-use', 'Functional architecture', 'High quality', 'Software architecture design', 'Software systems', 'Streamlined systems', 'Technical architecture', 'Buildings and Towers', 'Computer Programming']","['Seele, Wilbert', '', '', 'Syed, Shaheen', '', '', 'Brinkkemper, Sjaak']","Department of Information and Computing Sciences, Utrecht University, Netherlands",2014,WICSA
97,98,"Although a lot of research has been carried out on the technical architecture of software systems, the domain of Functional Architecture in the software product industry lacks a formalization of the related concepts and practices  Functional Architecture Modeling is essential for identifying the functionalities of the software product and translating them into modules, which interact with each other or with third party products  Furthermore, the Functional Architecture serves as a base for mapping the functional requirements and planning the product releases  In this paper, we present the Functional Architecture Diagrams, a powerful modeling tool for the Functional Architecture of software products, which comprises  a modular decomposition of the product functionality  a simple notation for easy comprehension by non specialists  and applicability in any line of business, offering a uniform method for modeling the functionalities of software products    2010 Springer Verlag Berlin Heidelberg   28 refs",Functional architecture modeling for the software product industry,"['Functional architecture', 'Functional requirement', 'Modeling tool', 'Modular decomposition', 'Modularity', 'Product release', 'Software products', 'Software systems', 'Technical architecture', 'Third parties', 'Computer Programming']","['Brinkkemper, Sjaak', '', '', 'Pachidi, Stella']","Department of Information and Computing Sciences, University of Utrecht, P O  Box 80 089, Utrecht, TB 3508, Netherlands",2010,ECSA
98,99,"Although an intensive research attention has been paid to software evolution, there is no established approach which supports a software development and evolution round trip between requirements, design decisions, architectural elements, and code  The ADVERT approach shall provide support for software evolution on an architectural level  ADVERT is based on two core ideas   1  Maintaining trace links between requirements, design decisions, and architecture elements, and  2  explicitly integrating software architecture information into the code  The expected benefits of the approach are   1  Eased understanding of the relationship between requirements and design, and  2  assured compliance between architectural design and implementation  In this position paper we explain our envisioned approach and demonstrate it on a CoCoME based example, which is a benchmark for component based modelling approaches  Copyright 2013 ACM   20 refs",Towards architecture centric evolution of long living systems  The ADVERT approach,"['Architecture', 'Design', 'Trace elements', 'Architectural element', 'Architectural levels', 'Architecture-centric', 'Design and implementations', 'Design decisions', 'Embedded architecture', 'Intensive research', 'Software Evolution', 'Buildings and Towers', 'Structural Design', 'Computer Programming', 'Chemistry', 'Chemical Products Generally']","['Konersmann, Marco', '', '', 'Durdik, Zoya', '', '', 'Goedicke, Michael', '', '', 'Reussner, Ralf H', '', '']","Paluno   The Ruhr Institute for Software Technology, University of Duisburg Essen, 45127 Essen, Germany  2  Software Design and Quality  SDQ , Karlsruhe Institute of Technology  KIT , 76131 Karlsruhe, Germany",2013,QoSA
99,100,"Although enterprises perceive the importance of change, practitioners often report that dealing with changes is still a challenge  One way of addressing change is to guide the decision making of architects using a viewpoint  This paper presents a change viewpoint that frames the concerns of architects related to change  In an attempt to better understand what the architects  concerns are and the kind of support they need for dealing with change, we have conducted a case study in the Dutch Electronic Health Record system  Based on the results of this case study, the change viewpoint, aiming at guiding the architects in their reasoning, has been defined and discussed    2012 IEEE   13 refs",A viewpoint for dealing with change in migration to services,"['change', 'Electronic health record systems', 'knowledge', 'migration to services', 'viewpoint', 'Computer Programming']","['Razavian, Maryam', '', '', 'Lago, Patricia']","Computer Science Department, VU University Amsterdam, Netherlands",2012,ECSA
100,101,"Although enterprises perceive the importance of change, practitioners often report that dealing with changes is still a challenge  One way of addressing change is to guide the decision making of architects using a viewpoint  This paper presents a change viewpoint that frames the concerns of architects related to change  In an attempt to better understand what the architects  concerns are and the kind of support they need for dealing with change, we have conducted a case study in the Dutch Electronic Health Record system  Based on the results of this case study, the change viewpoint, aiming at guiding the architects in their reasoning, has been defined and discussed    2012 IEEE   13 refs",A viewpoint for dealing with change in migration to services,"['change', 'Electronic health record systems', 'knowledge', 'migration to services', 'viewpoint', 'Computer Programming']","['Razavian, Maryam', '', '', 'Lago, Patricia']","Computer Science Department, VU University Amsterdam, Netherlands",2012,WICSA
101,102,"Although several approaches exist for deriving architectures from requirements and environmental constraints, most solutions rely on experienced architects for proposing and choosing feasible architectural solutions  It is critical to develop architecture systematically and without strong dependencies on experienced architects, because the architecture has a deep impact on the quality of a system  This paper presents a question based approach for efficiently finding architecture candidates using annotated pattern and style catalogues  Following this approach allows for a systematic development of architecture, that provides documented common experience    2011 Springer Verlag   11 refs",A question based method for deriving software architectures,"['Architectural solutions', 'Deep impact', 'Environmental constraints', 'Computer Programming']","['M ller, Marco', '', '', 'Kersten, Benjamin', '', '', 'Goedicke, Michael']","Paluno   The Ruhr Institute for Software Technology, University of Duisburg Essen, Gerlingstrae 16, 45127 Essen, Germany",2011,ECSA
102,103,"Although the benefits are well known and undisputed, sharing architectural knowledge is not something architects automatically do  In an attempt to better understand what architects really do and what kind of support they need for sharing knowledge, we have conducted large scale survey research  The results of our study indicate that architects can be characterized as rather lonesome decision makers who mainly consume, but neglect documenting and actively sharing architectural knowledge  Acknowledging this nature of architects suggests ways to develop more effective support for architectural knowledge sharing    2009 IEEE   32 refs",The lonesome architect,"['Architecture', 'Computer software', 'Knowledge acquisition', 'Architectural knowledge', 'Decision makers', 'Sharing knowledge', 'Survey research', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications']","['Farenhorst, Rik', '', '', 'Hoorn, Johan F', '', '', ' Lago, Patricia', '', '', 'Van Vliet, Hans']","Department of Computer Science, VU University, Amsterdam, Netherlands  2  Center for Advanced Media Research Amsterdam, VU University, Amsterdam, Netherlands",2009,ECSA
103,104,"Although the development of service based software has evolved greatly in the last years, there is still a lack of accurate development methodologies applied to service orientation  To solve this, we focus on the Model Driven Development approach, and more specifically in MDA, the proposal by the OMG, as it is one of the main trends in nowadays Software Engineering  Accordingly, we propose to define a Service Oriented Software Architecture  SOSA  model within a model driven methodological framework called MIDAS, for the adaptable and flexible development of modern systems  In the present work we study the concepts and elements that need to be defined at a platform independent and neutral abstraction level  This paper reflects our proposal of PIM level architecture model for Service Oriented Software Architectures within MIDAS    2008 IEEE   17 refs",Defining service oriented software architecture models for a MDA based development process at the PIM level,"['Architecture', 'Intermodulation', 'Intermodulation measurement', 'Software engineering', 'Systems analysis', 'Technology', 'Abstraction levels', 'Architecture modeling', 'Development methodologies', 'Development processes', 'Model-driven', 'Model-Driven Architecture', 'Model-driven development', 'PIM level', 'PIM-level modelling', 'Platform independent', 'Service-based', 'Service-orientation', 'Service-oriented software', 'Service-Oriented Software Architectures', 'Abstraction levels', 'Architecture modeling', 'Development methodologies', 'Development processes', 'Model-driven', 'Model-Driven Architecture', 'Model-driven development', 'PIM level', 'PIM-level modelling', 'Platform independent', 'Service-based', 'Service-orientation', 'Service-oriented software', 'Service-Oriented Software Architectures', 'Buildings and Towers', 'Information Theory and Signal Processing', 'Computer Programming', 'Engineering Profession', 'Operations Research', 'Electric Variables Measurements']","['L pez Sanz, Marcos', '', '', 'Acu a, C sar J', '', '', ' Cuesta, Carlos E', '', '', ' Marcos, Esperanza']","Kybele Research Group, Rey Juan Carlos University, C Tulipan S N, CP 28933 M stoles, Madrid, Spain",2008,WICSA
104,105,"Although the idea of a software component stems back to the end of the sixties, the component based software engineering established itself to an dedicated research area during the end nineties  Nowadays, in particular the research in component models which is motivated by the verification and quality prediction of component based systems forms such a large body of research with a plethora of specific and creative ideas that it is hard to keep the overview  Several conference and workshop series are dedicated to formal component models and their use in verification and quality prediction, such as FMCO, CBSE, FESCA, FACS and QoSA  The organisers of CoCoME came independently to the finding, that these component models are hard to compare, as each research group concentrate on different aspects of formal component modelling and quality prediction    2008 Springer Verlag Berlin Heidelberg",Introduction,"['Engineering research', 'Fischer-Tropsch synthesis', 'Forecasting', 'Software engineering', 'Component models', 'Creative ideas', 'In components', 'Modelling', 'Quality predictions', 'Research areas', 'Research groups', 'Software components', 'Mathematical Statistics', 'Mathematics', 'Management', 'Engineering Research', 'Chemical Reactions', 'Computer Programming', 'Computer Software, Data Handling and Applications']","['Rausch, Andreas', '', '', 'Reussner, Ralf', '', '', 'Mirandola, Raffaela', '', '', 'Pl il, Frantiek']","TU Clausthal  2  Univ  Karlsruhe  TH    FZI  3  Politecnico Milano  4  Charles University, Prague",2008,QoSA
105,106,"Although the reuse of software entities has matured in recent years, it has not become standard practice yet, since reusing component based or service oriented architectures requires the selection, composition, adaptation and evolution of prefabricated software parts  Recent research approaches have tackled independently the discovery, composition, adaptation or monitoring processes  We present the DAMASCo architecture, a framework for composing pre existing services and components  Using model transformation, context awareness, semantic matchmaking, behavioural compatibility, dependency analysis, and fault tolerance, DAMASCo focuses on discovering, adapting and monitoring the composition of context aware services and components in mobile and pervasive systems  DAMASCo is made up of a set of tools that implement the different processes, which have been evaluated on several examples    2011 Springer Verlag   46 refs",DAMASCo  A framework for the automatic composition of component based and service oriented architectures,"['Chemical analysis', 'Computer software reusability', 'Fault tolerance', 'Information services', 'Mathematical models', 'Monitoring', 'Ontology', 'Semantics', 'Software architecture', 'Adaptation', 'Automatic composition', 'Component based', 'Component-based framework', 'Context aware services', 'Context-awareness', 'Dependency analysis', 'Different process', 'Model transformation', 'Monitoring process', 'Ontology-based', 'Pervasive systems', 'Research approach', 'Semantic matchmaking', 'Service Oriented', 'Software entities', 'Software parts', 'Standard practices', 'Moisture, Pressure and Temperature, and Radiation Measuring Instruments', 'Mechanical and Miscellaneous Measuring Instruments', 'Electric and Electronic Measuring Instruments', 'Acoustical and Optical Measuring Instruments', 'Mathematics', 'Information Services', 'Information Dissemination', 'Chemical Products Generally', 'Chemistry', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems']","['Cubo, Javier', '', '', 'Pimentel, Ernesto']","Dept  Computer Science, University of M laga, M laga, Spain",2011,ECSA
106,107,"Although the technologies used to implement and assemble components have improved significantly in recent years, techniques for verifying systems created from them have changed very little  In fact, the correctness and reliability of component based systems are still usually checked using the traditional testing techniques employed before components and services became widespread  These techniques are not only expensive because they treat a system as a monolithic black box, they are not very helpful because they fail to use architectural knowledge to pin point the source of failures  As a result, many of the potential benefits of component based development are outweighed by the costs involved in verifying the resulting systems  In this talk, Colin Atkinson will present an approach that addresses this problem by making the system verification process component oriented as well  Based on the notion of built in tests   tests that are packaged with components and are executed at run time   the approach reduces the level of manual effort needed to verify a system by partially automating the testing process  It involves a method to define how services components should be written to support and exploit built in tests, and a resource aware infrastructure that arranges for tests to be executed when they have a minimal impact on the delivery of system services   0 refs",Component oriented verification of software architectures through built in tests,"['built-in self test', 'program testing', 'program verification', 'software architecture', 'software reliability', 'component-oriented verification', 'software architectures', 'built-in tests', 'monolithic black box', 'component-based development', 'resource-aware infrastructure', 'Diagnostic, testing, debugging and evaluating systems', 'Software engineering techniques']","['Atkinson, C', '', '']","Univ  of Mannheim, Mannheim, Germany",2008,ECSA
107,108,"Although there are contributions on component oriented languages, components are mostly implemented using object oriented  OO  languages  In this perspective, a component corresponds to a set of classes that work together to provide one or more services  Services are grouped together in interfaces that are each implemented by a class  Thus, dependencies between components are defined using the semantic of the enclosed classes, which is mostly structural  This makes it difficult to understand an architecture described with such links  Indeed, at an architectural level dependencies between components must represent functional aspects  This problem is worse, when the components are obtained by re engineering of legacy OO systems  Indeed, in this case the obtained components are mainly based on the consistency of the grouping logic  So, in this paper we propose an approach to identify the interfaces of a component according to its interactions with the other components  To this end, we use formal concept analysis  The evaluation of the proposed approach via an empirical study showed that the identified interfaces overall correspond to the different functional aspects of the components    2014 IEEE   33 refs",Deriving component interfaces after a restructuring of a legacy system,"['Architecture', 'Information analysis', 'Legacy systems', 'Semantics', 'Software architecture', 'Architectural levels', 'Component interfaces', 'Component-based architecture', 'Component-oriented', 'Empirical studies', 'FCA (Formal Concept Analysis)', 'Functional aspects', 'Object oriented', 'Buildings and Towers', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Information Sources and Analysis', 'Information Dissemination']","['Seriai, Abderrahmane', '', '', 'Sadou, Salah', '', '', 'Sahraoui, Houari', '', '', 'Hamza, Salma']","IRISA, Universit  de Bretagne Sud, Vannes, France  2  Universit  de Montr al, Montreal, Canada",2014,WICSA
108,109,"Although there exist methods and tools to support architecture evolution, the derivation and evaluation of alternative evolution paths are realized manually  In this paper, we introduce an approach, where architecture specification is converted to a graph representation  Based on this representation, we automatically generate possible evolution paths, evaluate quality attributes for different architectural configurations, and optimize the selection of a particular path accordingly  We illustrate our approach by modeling the software architecture evolution of a crisis management system    2011 Springer Verlag   12 refs",Guiding architects in selecting architectural evolution alternatives,"['Quality control', 'Architectural evolution', 'Architecture specification', 'Crisis management systems', 'Graph representation', 'Quality attributes', 'Software architecture evolution', 'Computer Programming', 'Quality Assurance and Control']","['Ciraci, Selim', '', '', 'S zer, Hasan', '', '', 'Aksit, Mehmet']","Pacific Northwest National Lab , Richland, WA, United States  2  Ozyegin University, Istanbul, Turkey  3  University of Twente, Enschede, Netherlands",2011,ECSA
109,110,"An analysis of the current practice for representing architectural views reveals that they focus mainly on functional concerns and are limited when considering quality concerns  We introduce the recovery style for modeling the structure of the system related to the recovery concern  The recovery style is a specialization of the module viewtype in the Views   Beyond approach  It is used to communicate and analyze architectural design decisions and to support detailed design with respect to recovery  We illustrate the style for modeling the recovery views for the open source software, MPlayer    2008 IEEE   20 refs",Introducing recovery style for modeling and analyzing system recovery,"['Design', 'Recovery', 'Software architecture', 'Analyzing system', 'Architectural views', 'Design decisions', 'Detailed design', 'Open-source software', 'Buildings and Towers', 'Structural Design', 'Metallurgy and Metallography', 'Computer Programming']","['S zer, Hasan', '', '', 'Tekinerdogan, Bedir']","Department of Computer Science, University of Twente, P O  Box 217, 7500 AE Enschede, Netherlands",2008,WICSA
110,111,"An approach to software architecture creation is described in the context of agile development  It eschews the traditional separation of top down and bottom up design  A concrete, cumulative, least commitment process is demonstrated that establishes an architecture core likely to remain stable as requirements are added    2014 IEEE   12 refs",Cumulative software architecture development,"['Software design', 'Agile development', 'Bottom-up design', 'Topdown', 'Computer Programming']","['Braude, Eric J', '', '']","Computer Science Department, Boston University, Metropolitan College, Boston, MA, United States",2014,WICSA
111,112,"An architectural bad smell is a commonly  although not always intentionally  used set of architectural design decisions that negatively impacts system lifecycle properties, such as understandability, testability, extensibility, and reusability  In our previous short paper, we introduced the notion of architectural bad smells and outlined a few common smells  In this paper, we significantly expand upon that work  In particular, we describe in detail four representative architectural smells that emerged from reverse engineering and re engineering two large industrial systems and from our search through case studies in research literature  For each of the four architectural smells, we provide illustrative examples and demonstrate the smell s impact on system lifecycle properties  Our experiences indicate the need to identify and catalog architectural smells so that software architects can discover and eliminate them from system designs    2009 Springer Berlin Heidelberg   29 refs",Toward a catalogue of architectural bad smells,"['Architectural design', 'Computer software selection and evaluation', 'Odors', 'Reusability', 'Illustrative examples', 'Industrial systems', 'Software architects', 'System design', 'System lifecycle', 'Testability', 'Understandability', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Water Pollution Sources', 'Management', 'Industrial Wastes', 'Air Pollution Sources', 'Structural Design, General', 'Buildings and Towers', 'Sewage']","['Garcia, Joshua', '', '', 'Popescu, Daniel', '', '', 'Edwards, George', '', '', 'Medvidovic, Nenad']","University of Southern California, Los Angeles, CA, United States",2009,QoSA
112,113,"An embedded software system is reconfigurable when it can modify its behavior or its architecture  The reconfigurations are launched according to the evolution of context requirements and the variation of execution environment constraints  In this paper we focus our attention on design model level with two fold purposes  Firstly, building modeling tools to help specify and configure reconfigurability issues  and secondly validating our modeling by its integration in a Model Based Development Approach  The contribution exhibits meta model to deal with reconfiguration component based applications in DRTES at a model level  The elements of this meta model will be used to describe software specifications and requirements, using component as a first class artifact to build such systems  To capture reconfiguration concepts, we introduce the notion of metamodes as a generic set of modes with a specific links between them  By doing so, the reconfiguration activities between metamodes are user specified and the reconfiguration action between modes will be generated automatically  Within this development process, component application and reconfiguration properties are declaratively specified at model level and are transparent for the component implementation  An application is then described using UML and specialized extensions  MARTE profiles from the OMG and our proposal  As a proof of concept, we examine a test case that has reconfiguration requirements  a GPS    2010 ACM   17 refs",Model based engineering for dynamic reconfiguration in DRTES,"['Dynamic models', 'Embedded software', 'Real time systems', 'Software architecture', 'Technical presentations', 'Unified Modeling Language', 'Component-based architecture', 'Distributed real-time embedded systems', 'dynamic reconfiguration', 'Meta model', 'model driven engineering', 'UML profiles', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Mathematics']","['Hamid, Brahim', '', '', 'Krichen, Fatma']","IRIT, University of Toulouse, 118 Route de Narbonne, 31062 Toulouse Cedex 9, France",2010,ECSA
113,114,"An execution view is an important asset for developing large and complex systems  An execution view helps practitioners to describe, analyze, and communicate what a software system does at runtime and how it does it  In this paper, we present an approach to define execution viewpoints for an existing large and complex software intensive system  This definition approach enables the customization and extension of a set of predefined viewpoints to address the requirements of a specific development organization  The application of this approach has helped us to identify a set of execution viewpoints that we are currently using to construct execution views of an MRI system, a large softwareintensive system in the healthcare domain    2009 IEEE   17 refs",Defining execution viewpoints for a large and complex software intensive system,"['Architecture', 'Computer software', 'Complex software', 'Complex systems', 'Healthcare domains', 'Runtimes', 'Software intensive systems', 'Software systems', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Arias, Trosky B', 'Callo', '', '', 'America, Pierre', '', '', 'Avgeriou, Paris']","Department of Mathematics and Computing Science, University of Groningen  2  Philips Research and Embedded Systems Institute, Netherlands",2009,ECSA
114,115,"An execution view is an important asset for developing large and complex systems  An execution view helps practitioners to describe, analyze, and communicate what a software system does at runtime and how it does it  In this paper, we present an approach to define execution viewpoints for an existing large and complex software intensive system  This definition approach enables the customization and extension of a set of predefined viewpoints to address the requirements of a specific development organization  The application of this approach has helped us to identify a set of execution viewpoints that we are currently using to construct execution views of an MRI system, a large softwareintensive system in the healthcare domain    2009 IEEE   17 refs",Defining execution viewpoints for a large and complex software intensive system,"['Architecture', 'Computer software', 'Complex software', 'Complex systems', 'Healthcare domains', 'Runtimes', 'Software intensive systems', 'Software systems', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Arias, Trosky B', 'Callo', '', '', 'America, Pierre', '', '', 'Avgeriou, Paris']","Department of Mathematics and Computing Science, University of Groningen  2  Philips Research and Embedded Systems Institute, Netherlands",2009,WICSA
115,116,"An execution view is an important asset for developing large and complex systems  An execution view helps practitioners to describe, analyze, and communicate what a software system does at runtime and how it does it  In this paper, we present an approach to define execution viewpoints for an existing large and complex software intensive system  This definition approach enables the customization and extension of a set of predefined viewpoints to address the requirements of a specific development organization  The application of this approach has helped us to identify a set of execution viewpoints that we are currently using to construct execution views of an MRI system, a large softwareintensive system in the healthcare domain    2009 IEEE   17 refs",Defining execution viewpoints for a large and complex software intensive system,"['Architecture', 'Computer software', 'Complex software', 'Complex systems', 'Healthcare domains', 'Runtimes', 'Software intensive systems', 'Software systems', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Arias, Trosky B', 'Callo', '', '', 'America, Pierre', '', '', 'Avgeriou, Paris']","Department of Mathematics and Computing Science, University of Groningen  2  Philips Research and Embedded Systems Institute, Netherlands",2011,WICSA
116,117,"An important step in achieving robustness to run time faults is the ability to detect and repair problems when they arise in a running system  Effective fault detection and repair could be greatly enhanced by run time fault diagnosis and localization, since it would allow the repair mechanisms to focus adaptation effort on the parts most in need of attention  In this paper we describe an approach to run time fault diagnosis that combines architectural models with spectrum based reasoning for multiple fault localization  Spectrum based reasoning is a lightweight technique that takes a form of trace abstraction and produces a list  ordered by probability  of likely fault candidates  We show how this technique can be combined with architectural models to support run time diagnosis that can  a  scale to modern distributed software systems   b  accommodate the use of black box components and proprietary infrastructure for which one has neither a specification nor source code  and  c  handle inherent uncertainty about the probable cause of a problem even in the face of transient faults and faults that arise only when certain combinations of system components interact    2011 Springer Verlag   30 refs",Architecture based run time fault diagnosis,"['Diagnosis', 'Repair', 'Software architecture', 'Architectural models', 'Autonomic Computing', 'Black-box components', 'Distributed software system', 'Multiple faults', 'Repair mechanism', 'Running systems', 'Runtimes', 'Source codes', 'System components', 'Transient faults', 'Strength of Building Materials  Test Equipment and Methods', 'Medicine and Pharmacology', 'Computer Programming', 'Maintenance']","['Casanova, Paulo', '', '', 'Schmerl, Bradley', '', '', 'Garlan, David', '', '', 'Abreu, Rui']","School of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213, United States  2  Department of Informatics Engineering, Faculty of Engineering, University of Porto, Porto, Portugal",2011,ECSA
117,118,An in house architecture team helps the organizations in meeting the challenges of the ever changing IT industry  The paper after briefly discussing the importance of architecture describes the desired structure for an architect team and defines the roles and responsibilities of the various team members  The paper defines the expectations from the organization during the team building process and suggests the required investments and the time lines for setting up the team    2007 IEEE   15 refs,Setting up architect team,"['Electronic states', 'Electronics industry', 'Information dissemination', 'Information technology', 'Investments', 'Architect teams', 'Architecture teams', 'Team members', 'Electronic Structure of Solids', 'Industrial Economics', 'Information Dissemination', 'Information Science', 'Computer Applications', 'Computer Programming', 'Electronic and Thermionic Materials']","['Sarang, Poornachandra']","Univ  Dept  of Computer Science, University of Mumbai, Director Architecture, Kynetia, Spain",2007,WICSA
118,119,An in house architecture team helps the organizations in meeting the challenges of the ever changing IT industry  The paper after briefly discussing the importance of architecture describes the desired structure for an architect team and defines the roles and responsibilities of the various team members  The paper defines the expectations from the organization during the team building process and suggests the required investments and the time lines for setting up the team   15 refs,Setting up architect team,"['DP industry', 'software architecture', 'software development management', 'team working', 'in-house architecture team building process', 'IT industry', 'software architecture', 'C0310F Software management   C6110B Software engineering techniques   D5000 Office automation   computing']","['Sarang, P', '', '']","Dept of Comput  Sci , Univ  of Mumbai, Kynetia, Spain",2007,WICSA
119,120,An industrial case study in stakeholder identification and quality attribute prioritization for a Vehicle Control System  VCS  is presented  The system stakeholders were identified and a list of quality attributes was developed  A team of co located Ford Motor Company engineering liaisons identified and interviewed stakeholders from their home organizations  The interview results were processed quantitatively and the top quality attributes were identified  Lessons learned from the process are included    2010 ACM   11 refs,Stakeholder identification and quality attribute prioritization for a global vehicle control system,"['Computer software selection and evaluation', 'Control system synthesis', 'Identification (control systems)', 'Industrial applications', 'Industry', 'Research', 'Technical presentations', 'Vehicles', 'automotive', 'Industrial case study', 'Quality attributes', 'stakeholders', 'vehicle control system', 'Industrial Engineering and Management', 'Cost and Value Engineering  Industrial Economics', 'Engineering Research', 'Production Planning and Control  Manufacturing', 'Education', 'Computer Software, Data Handling and Applications', 'Highway Transportation', 'Control Systems']","['McGee, Ryan A', '', '', ' Eklund, Ulrik', '', '', 'Lundin, Mats']","Research and Advanced Engineering, Ford Motor Company, Dearborn, MI, United States  2  Electric and Electronic Systems Engineering, Volvo Car Corporation, G teborg, Sweden",2010,ECSA
120,121,"An intertidal salt marsh fish assemblage inhabiting two creeks on North Bull Island, Dublin Bay was sampled monthly from June 2000 until May 2002  Water temperature and salinity were recorded in situ and samples were also taken for Suspended Particulate Matter  SPM  and Chlorophyll a  All fish caught were weighed and measured and classified into functional guilds  A total of 6,549 individuals comprising 10 fish species from 10 families were recorded within the two creeks  The community was dominated by a few species, a feature common to other estuarine fish populations  Of the 10 species found, the common goby, Pomatoschistus microps, the 3 spined stickleback, Gasterosteus aculeatus, the thick lipped grey mullet, Chelon labrosus and the flounder, Platichthys flesus contributed 98 4  of all fish sampled  The fish population of the channels at Bull Island, Dublin, was dominated by the resident gobies  true estuarine resident species , but also hosted juveniles of species such as the bass, Dicentrarchus labrax  marine juvenile migrant species   In turn, the nekton populations were dominated by the brown shrimp, Crangon crangon and the fairy shrimp, Palaemonetes varians especially in winter when fewer fish  numbers of species and abundance  were found  Multivariate analysis of fish diversity and abundance revealed a strong seasonal pattern but there was little evidence of difference between creeks, nor of tidal  spring neap  effects  The estuarine fish using the intertidal marsh creeks have been little studied in Europe yet they play a major role with the decapods in these habitats  This role needs to be quantified for a proper understanding of the system s function    2007 Springer Science Business Media B V   52 refs","The fish assemblage of the intertidal salt marsh creeks in North Bull Island, Dublin Bay  Seasonal and tidal changes in composition, distribution and abundance","['Chlorophyll', 'Hydrodynamics', 'Salinity measurement', 'Temperature measurement', 'Tides', 'Community structures', 'Fish assemblage', 'North Bull Island', 'Salt marsh habitats', 'Water Resources', 'Environmental Engineering', 'Seawater, Tides and Waves', 'Liquid Dynamics', 'Organic Compounds', 'Temperature Measurements']","['Koutsogiannopoulou, Violetta', '', '', 'Wilson, James G', '', '']","Zoology Department, Trinity College Dublin, Dublin 2, Ireland",2007,ECSA
121,122,"An intertidal salt marsh fish assemblage inhabiting two creeks on North Bull Island, Dublin Bay was sampled monthly from June 2000 until May 2002  Water temperature and salinity were recorded in situ and samples were also taken for Suspended Particulate Matter  SPM  and Chlorophyll a  All fish caught were weighed and measured and classified into functional guilds  A total of 6,549 individuals comprising 10 fish species from 10 families were recorded within the two creeks  The community was dominated by a few species, a feature common to other estuarine fish populations  Of the 10 species found, the common goby, Pomatoschistus microps, the 3 spined stickleback, Gasterosteus aculeatus, the thick lipped grey mullet, Chelon labrosus and the flounder, Platichthys flesus contributed 98 4  of all fish sampled  The fish population of the channels at Bull Island, Dublin, was dominated by the resident gobies  true estuarine resident species , but also hosted juveniles of species such as the bass, Dicentrarchus labrax  marine juvenile migrant species   In turn, the nekton populations were dominated by the brown shrimp, Crangon crangon and the fairy shrimp, Palaemonetes varians especially in winter when fewer fish  numbers of species and abundance  were found  Multivariate analysis of fish diversity and abundance revealed a strong seasonal pattern but there was little evidence of difference between creeks, nor of tidal  spring neap  effects  The estuarine fish using the intertidal marsh creeks have been little studied in Europe yet they play a major role with the decapods in these habitats  This role needs to be quantified for a proper understanding of the system s function    2007 Springer Science Business Media B V   52 refs","The fish assemblage of the intertidal salt marsh creeks in North Bull Island, Dublin Bay  Seasonal and tidal changes in composition, distribution and abundance","['Chlorophyll', 'Hydrodynamics', 'Salinity measurement', 'Temperature measurement', 'Tides', 'Community structures', 'Fish assemblage', 'North Bull Island', 'Salt marsh habitats', 'Water Resources', 'Environmental Engineering', 'Seawater, Tides and Waves', 'Liquid Dynamics', 'Organic Compounds', 'Temperature Measurements']","['Koutsogiannopoulou, Violetta', '', '', 'Wilson, James G', '', '']","Zoology Department, Trinity College Dublin, Dublin 2, Ireland",2008,ECSA
122,123,"An organisation that had developed a large Information System wanted to embark on a programme of significant evolution for the system  As a precursor to this, it was decided to create a comprehensive architectural description  This undertaking faced a number of challenges, including a low general awareness of software modelling and software architecture practices  The approach taken for this project included the definition of a simple, specific, architecture description language  This paper describes the experiences of the project and the ADL created as part of it    2012 IEEE   15 refs",Using an architecture description language to model a large scale information system   An industrial experience report,"['Information systems', 'Legacy systems', 'ADL', 'Architectural descriptions', 'Architecture description languages', 'Architecture practice', 'Description languages', 'Industrial experience', 'Large-scale information systems', 'Software modelling', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Woods, Eoin', '', '', 'Bashroush, Rabih']","Artechra, Hemel Hempstead, Hertfordshire, United Kingdom  2  University of East London, London, United Kingdom",2012,ECSA
123,124,"An organisation that had developed a large Information System wanted to embark on a programme of significant evolution for the system  As a precursor to this, it was decided to create a comprehensive architectural description  This undertaking faced a number of challenges, including a low general awareness of software modelling and software architecture practices  The approach taken for this project included the definition of a simple, specific, architecture description language  This paper describes the experiences of the project and the ADL created as part of it    2012 IEEE   15 refs",Using an architecture description language to model a large scale information system   An industrial experience report,"['Information systems', 'Legacy systems', 'ADL', 'Architectural descriptions', 'Architecture description languages', 'Architecture practice', 'Description languages', 'Industrial experience', 'Large-scale information systems', 'Software modelling', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Woods, Eoin', '', '', 'Bashroush, Rabih']","Artechra, Hemel Hempstead, Hertfordshire, United Kingdom  2  University of East London, London, United Kingdom",2012,WICSA
124,125,"An organization is architecturally competent if it has the ability to acquire, use and sustain the skills and knowledge necessary to carry out architecture related practices that lead to systems that serve the organization s business goals  This paper presents some principles of architecture competence, based on four models that aid in explaining, measuring, and improving the architecture competence of an individual or an organization with respect to these principles, The principles are based on a set of fundamental beliefs about software architecture    2008 IEEE   8 refs",Evaluating the software architecture competence of organizations,"['Architectural design', 'Architecture', 'Societies and institutions', 'Business goals', 'Buildings and Towers', 'Computer Programming', 'Societies and Institutions']","['Bass, Len', '', '', 'Clements, Paul', '', '', 'Kazman, Rick', '', '', 'Klein, Mark']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA 15213, United States",2008,WICSA
125,126,"Aniline as a possible contaminant in polymer electrolyte membrane fuel cells  PEMFCs  has been studied by several ex situ techniques  The aniline isotherm for MEA shows more affinity to ion exchange with the PEM than other monovalent such as sodium and ammonium ions, thus indicating stronger performance loss at the same concentration  The results of cyclic voltammetry  CV  of Pt C show the loss of electrochemical surface area  ECSA  by with the addition of aniline in the electrolyte  The appearance of unknown peaks in CV may indicate the production of polyaniline  PAN1  film which appears to grow with the number of CV tests  These studies indicate that the use of balance of plant components that leach aniline should be avoided since its presence appears to decrease the electrochemical activity of the electrode for the oxygen reduction reaction  Further studies on aniline with in situ experiment may not be warranted   The Electrochemical Society   18 refs",Aniline as a cationic and aromatic contaminant in PEMFCs,"['Ammonium compounds', 'Aniline', 'Cyclic voltammetry', 'Electrochemistry', 'Electrolytic reduction', 'Ion exchange', 'Ions', 'Leaching', 'Oxygen', 'Polyaniline', 'Polyelectrolytes', 'Polymers', 'Ammonium ions', 'Aromatic contaminants', 'Balance of plant', 'Electrochemical activities', 'Electrochemical surface area', 'Ex situ', 'In-situ experiments', 'Oxygen reduction reaction', 'Performance loss', 'Polymer electrolyte membrane fuel cells', 'Organic Polymers', 'Polymeric Materials', 'Organic Compounds', 'Chemical Products Generally', 'Chemical Operations', 'Chemical Reactions', 'Electrochemistry', 'Chemistry', 'Fuel Cells']","['Cho, Hyun Seok', '', '', 'Jung, Myunghee', '', '', 'Navarro, Jose', '', '', 'Ohashi, Masato', '', '', 'Van Zee, J W', '', '']","Department of Chemical Engineering, University of South Carolina, Columbia, SC 29208, United States",2010,ECSA
126,127,"Applications executed on a shared distributed platform compete for resources provided by the platform  In case these applications have highly fluctuating resource demands, a software architecture is required that provides support for runtime resource management  In position paper  1 , we have proposed such architecture and have introduced its key concepts and entities  In this paper, we introduce a metamodel that captures the key concepts and we identify lifecycle models for both applications and individual components  A set of dynamic reconfiguration strategies is introduced and their relationship to the stages of the application lifecycle is given    2011 Springer Verlag   8 refs",Dynamically reconfigurable resource aware component framework  Architecture and concepts,"['Dynamic models', 'Life cycle', 'Natural resources management', 'Resource allocation', 'Component framework', 'component lifecycle', 'dynamic reconfiguration', 'networked services', 'Resource management', 'Water Resources', 'Environmental Engineering', 'Computer Programming', 'Operations Research', 'Production Engineering', 'Mathematics']","['Orlic, Bojan', '', '', 'David, Ionut', '', '', 'Mak, Rudolf H', '', '', ' Lukkien, Johan J', '', '']","Eindhoven University of Technology, Eindhoven, Netherlands",2011,ECSA
127,128,"Applying architecture knowledge promotes quality, reduces risks, and is crucial to best meet stakeholders  expectations  Current architecture knowledge is vast and ever growing, however, it is also heterogeneous, diverse, disperse, and expressed at different levels of abstraction and rigor  In practice, architecture design is bounded by the architect s skills, experience, and the subset of knowledge he masters, and it also requires a huge effort to adjust such knowledge to the development scenario  The resulting architecture is therefore not as good as it could be  Moreover, the architect s effort is not repeatable as it is implicitly embedded in the architecture descriptions  Although model based approaches are being used to capture particular domains and methods, most approaches lack either generality or homogeneity, making it hard to integrate, adapt and apply such knowledge  In this work, we use megamodeling to provide an homogeneous means for capturing architecture knowledge, making it shareable and reusable  We formally define a mapping from key architecture concepts to modeling artifacts  Also, an architecture design scripting language is used to capture the fine grained design actions, making architecture design repeatable    2014 IEEE   11 refs",Model based formalization of software architecture knowledge,"['Design', 'Architecture description', 'Architecture designs', 'Development scenarios', 'Levels of abstraction', 'Megamodeling', 'Model based approach', 'Scripting languages', 'Structural Design', 'Computer Programming']","['Perovich, Daniel', '', '', 'Bastarrica, Maria Cecilia']","CS Department, Universidad de Chile, Chile",2014,WICSA
128,129,"Approaches for sharing and reusing architectural knowledge  AK  have found some application in practice  Capturing AK during software design and development, however, is still a problem  Main reasons are the effort involved in capturing, as well as lack of time and budget, and lack of short term benefits for the involved stakeholders  We propose using context information about currently modified artifacts, like time, existing relations, and user information, for automatically identifying and presenting relevant AK  The main aim is to simplify the use of AK during development by presenting a continuously updated context relevant view on AK for currently viewed artifacts  This facilitates capturing and maintaining of relations among knowledge entities, updating existing entities, and finding relevant entities during architecture analysis and reviews  In this paper we present the main concepts of our approach, report on first experiences, and discuss future work    2012 IEEE   20 refs",Capturing and maintaining architectural knowledge using context information,"['Knowledge management', 'Semantics', 'Architectural knowledge', 'Architecture analysis', 'Context information', 'Design decisions', 'Knowledge context', 'Software design and development', 'User information', 'Computer Programming', 'Information Dissemination', 'Information Retrieval and Use']","['Miesbauer, Cornelia', '', '', 'Weinreich, Rainer']","Johannes Kepler University Linz, Linz, Austria",2012,ECSA
129,130,"Approaches for sharing and reusing architectural knowledge  AK  have found some application in practice  Capturing AK during software design and development, however, is still a problem  Main reasons are the effort involved in capturing, as well as lack of time and budget, and lack of short term benefits for the involved stakeholders  We propose using context information about currently modified artifacts, like time, existing relations, and user information, for automatically identifying and presenting relevant AK  The main aim is to simplify the use of AK during development by presenting a continuously updated context relevant view on AK for currently viewed artifacts  This facilitates capturing and maintaining of relations among knowledge entities, updating existing entities, and finding relevant entities during architecture analysis and reviews  In this paper we present the main concepts of our approach, report on first experiences, and discuss future work    2012 IEEE   20 refs",Capturing and maintaining architectural knowledge using context information,"['Knowledge management', 'Semantics', 'Architectural knowledge', 'Architecture analysis', 'Context information', 'Design decisions', 'Knowledge context', 'Software design and development', 'User information', 'Computer Programming', 'Information Dissemination', 'Information Retrieval and Use']","['Miesbauer, Cornelia', '', '', 'Weinreich, Rainer']","Johannes Kepler University Linz, Linz, Austria",2012,WICSA
130,131,"Aqueducts define a variant of the pipe filter style designed to handle and manage semi structured data streams, including those describing system structures themselves, such as XML based architecture descriptions  This style is based on the concept of aqueduct, a higher order filter which comprises a sequence of filters able to define a process logic using flow control constructs  Those filters can be expanded, then defining an inner layer in the Aqueducts hierarchy    Springer Verlag Berlin Heidelberg 2007   8 refs",Aqueducts  A layered pipeline based architecture for XML processing,"['Data flow analysis', 'Data structures', 'Logic programming', 'Pipeline processing systems', 'XML', 'Process logic', 'XML based architecture descriptions', 'Digital Computers and Systems', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications']","['Mart nez Prieto, Miguel A', '', '', ' Cuesta, Carlos E', '', '', ' De La Fuente, Pablo']","GRINBD, Depto  de Inform tica, Universidad de Valladolid, 47011 Valladolid, Spain  2  Kybele, Depto  Lenguajes y Sistemas Inform ticos II, E T S  de Ingenier a Inform tica, Universidad Rey Juan Carlos, 28933 M stoles, Madrid, Spain",2007,ECSA
131,132,"Aqueducts define a variant of the pipe filter style designed to handle and manage semi structured data streams, including those describing system structures themselves, such as XML based architecture descriptions  This style is based on the concept of aqueduct, a higher order filter which comprises a sequence of filters able to define a process logic using flow control constructs  Those filters can be expanded, then defining an inner layer in the Aqueducts hierarchy    Springer Verlag Berlin Heidelberg 2007   8 refs",Aqueducts  A layered pipeline based architecture for XML processing,"['Data flow analysis', 'Data structures', 'Logic programming', 'Pipeline processing systems', 'XML', 'Process logic', 'XML based architecture descriptions', 'Digital Computers and Systems', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications']","['Mart nez Prieto, Miguel A', '', '', ' Cuesta, Carlos E', '', '', ' De La Fuente, Pablo']","GRINBD, Depto  de Inform tica, Universidad de Valladolid, 47011 Valladolid, Spain  2  Kybele, Depto  Lenguajes y Sistemas Inform ticos II, E T S  de Ingenier a Inform tica, Universidad Rey Juan Carlos, 28933 M stoles, Madrid, Spain",2008,ECSA
132,133,"Aqueducts define a variant of the pipe filter style designed to handle and manage semi structured data streams, including those describing system structures themselves, such as XML based architecture descriptions  This style is based on the concept of aqueduct, a higher order filter which comprises a sequence of filters able to define a process logic using flow control constructs  Those filters can be expanded, then defining an inner layer in the Aqueducts hierarchy   8 refs",Aqueducts  a layered pipeline based architecture for XML processing,"['pipeline processing', 'XML', 'Aqueducts', 'layered pipeline-based architecture', 'XML processing', 'semistructured data stream', 'pipe-filter style', 'Document processing techniques']","['Martfnez Prieto, M A', '', '', ' Cuesta, C E', ' de la Fuente, P']","Depto  de Inf , Univ  de Valladolid, Valladolid, Spain",2007,ECSA
133,134,"Aqueducts define a variant of the pipe filter style designed to handle and manage semi structured data streams, including those describing system structures themselves, such as XML based architecture descriptions  This style is based on the concept of aqueduct, a higher order filter which comprises a sequence of filters able to define a process logic using flow control constructs  Those filters can be expanded, then defining an inner layer in the Aqueducts hierarchy   8 refs",Aqueducts  a layered pipeline based architecture for XML processing,"['pipeline processing', 'XML', 'Aqueducts', 'layered pipeline-based architecture', 'XML processing', 'semistructured data stream', 'pipe-filter style', 'Document processing techniques']","['Martfnez Prieto, M A', '', '', ' Cuesta, C E', ' de la Fuente, P']","Depto  de Inf , Univ  de Valladolid, Valladolid, Spain",2008,ECSA
134,135,ArchE  Architecture Expert  is an rule based system that contains a model of modifiability  The model plus modifiability scenarios that characterize expected change enable ArchE to collaborate with an architect to produce a design of the architecture that supports the expected change  ArchE has been used with real requirements from a manufacturer  This paper describes the model used in ArchE and how the architect and ArchE interact in order to produce a design   10 refs,Experience using an expert system to assist an architect in designing for modifiability,"['Decision theory', 'Functions', 'Graph theory', 'Knowledge engineering', 'Probability', 'Problem solving', 'Impact graphs', 'Modifiability', 'Rule base systems', 'Sensor based systems', 'Expert Systems', 'Mathematics', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory', 'Probability Theory']","['Bachmann, Felix', '', '', 'Bass, Len', '', '', 'Klein, Mark', '', '', 'Shelton, Charles']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA 15213, United States  2  Research Technology Center, Robert Bosch North America, Pittsburgh, PA 15212, United States",2004,WICSA
135,136,ArchE  Architecture Expert  is an rule based system that contains a model of modifiability  The model plus modifiability scenarios that characterize expected change enable ArchE to collaborate with an architect to produce a design of the architecture that supports the expected change  ArchE has been used with real requirements from a manufacturer  This paper describes the model used in ArchE and how the architect and ArchE interact in order to produce a design   10 refs,Experience using an expert system to assist an architect in designing for modifiability,"['architectural CAD', 'expert systems', 'expert system', 'architect assistance', 'modifiability desing', 'ArchE', 'Architecture Expert', 'rule based system', 'model plus modifiability scenarios', 'Civil and mechanical engineering computing']","['Bachmann, F', '', '', ' Bass, L', '', '', ' Klein, M', '', '', ' Shelton, C']","Software Eng  Inst , Carnegie Mellon Univ , Pittsburgh, PA, United States",2004,WICSA
136,137,"Architecting is a communication intensive task in which architectural knowledge is shared between the architect and the stakeholders  The software architect s communicative action is often conducted face to face, e g  in presentations and workshops  A software architecture documentation as a carrier of explicit architectural knowledge can also be seen as an architect s communicative action  This perspective opens the door for treating a software architecture documentation as an expression of an asynchronous knowledge communication process enabling the application of principles from communication theory  In this paper this perspective is taken and specific requirements are derived for software architecture knowledge management tools with respect to the context oriented communication model    2010 Springer Verlag Berlin Heidelberg   21 refs",Communicating architectural knowledge  Requirements for software architecture knowledge management tools,"['Communication', 'Information theory', 'Knowledge management', 'Technical presentations', 'Architectural knowledge', 'Communication models', 'Communication theory', 'Communicative actions', 'Knowledge communication', 'Knowledge management tool', 'Software architects', 'Telecommunication  Radar, Radio and Television', 'Information Theory and Signal Processing', 'Computer Programming', 'Computer Applications', 'Information Dissemination']","['Schwittek, Widura', '', '', 'Eicker, Stefan']","Paluno   the Ruhr Institute for Software Technology, University of Duisburg Essen, Universit tsstr  9, Essen 45141, Germany",2010,ECSA
137,138,"Architecting software systems is an integral part of the software development lifecycle  However, often the implementation of the resultant software ends up diverging from the designed architecture due to factors such as time pressures on the development team during implementation evolution, or the lack of architectural awareness on the part of  possibly new  programmers  In such circumstances, the quality requirements addressed by the as designed architecture are likely to be unaddressed by the as implemented system  This paper reports on in vivo case studies of the ACTool, a tool which supports real time Reflexion Modeling for architecture recovery and on going consistency  It describes our experience conducting architectural recovery sessions on three deployed, commercial software systems in two companies with the tool, as a first step towards ongoing architecture consistency in these systems  Our findings provide the first in depth characterization of real time Reflexion based architectural recovery in practice, highlighting the architectural recovery agendas at play, the modeling approaches employed, the mapping approaches employed and characterizing the inconsistencies encountered  Our findings also discuss the usefulness of the ACTool for these companies  Copyright   2012 ACM   26 refs",Characterizing real time reflexion based architecture recovery  An in vivo multi case study,"['Computer software', 'Industry', 'Research', 'ACTool', 'Architectural conformance', 'Architectural recovery', 'Architecture recovery', 'Commercial software systems', 'Development teams', 'In-vivo', 'Integral part', 'Modeling approach', 'Quality requirements', 'Software development life cycle', 'Software systems', 'Time pressures', 'Metallurgy and Metallography', 'Computer Software, Data Handling and Applications', 'Engineering Research', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Ali, Nour', '', '', 'Rosik, Jacek', '', '', 'Buckley, Jim']","Lero The Irish Software Engineering Research Centre, University of Limerick, Limerick, Ireland",2012,QoSA
138,139,"Architectural Knowledge  AK  is defined as the integrated representation of the software architecture of a software intensive system or family of systems along with architectural decisions and their rationale, external influence and the development environment  The SHARK workshop series focuses on current methods, languages, and tools that can be used to extract, represent, share, apply, and reuse AK, and the experimentation and or exploitation thereof  In this seventh SHARK workshop we will focus on current approaches tackling the problem of supporting the software engineering tasks driven by or producing architectural knowledge  Workshop on SHAring and Reusing architectural Knowledge  SHARK 2012  Copyright is held by author owner s    7 refs",Workshop on SHAring and reusing architectural knowledge  SHARK 2012,"['Knowledge management', 'Architectural decision', 'Architectural knowledge', 'Development environment', 'External influences', 'On currents', 'Software intensive systems', 'Computer Programming', 'Computer Applications']","['Zdun, Uwe', '', '', 'Capilla, Rafael']","Faculty of Computer Science, University of Vienna, Austria  2  Rey Juan Carlos University, Madrid, Spain",2012,ECSA
139,140,"Architectural Knowledge  AK  is defined as the integrated representation of the software architecture of a software intensive system or family of systems along with architectural decisions and their rationale, external influence and the development environment  The SHARK workshop series focuses on current methods, languages, and tools that can be used to extract, represent, share, apply, and reuse AK, and the experimentation and or exploitation thereof  In this seventh SHARK workshop we will focus on current approaches tackling the problem of supporting the software engineering tasks driven by or producing architectural knowledge  Workshop on SHAring and Reusing architectural Knowledge  SHARK 2012  Copyright is held by author owner s    7 refs",Workshop on SHAring and reusing architectural knowledge  SHARK 2012,"['Knowledge management', 'Architectural decision', 'Architectural knowledge', 'Development environment', 'External influences', 'On currents', 'Software intensive systems', 'Computer Programming', 'Computer Applications']","['Zdun, Uwe', '', '', 'Capilla, Rafael']","Faculty of Computer Science, University of Vienna, Austria  2  Rey Juan Carlos University, Madrid, Spain",2012,WICSA
140,141,"Architectural aspects are expected to modularize widelyscoped concerns that naturally crosscut the boundaries of system components at the software architecture level  However, there is no empirical knowledge about the positive and negative influences of aspectual decompositions on architecture stability  This paper analyzes the influence exerted by the aspect oriented composition mechanisms in the stability of crosscutting concerns in an evolving multi agent software architecture  Our investigation encompassed a comparative analysis of aspectual and non aspectual decompositions based on different architectural styles  In particular, we assessed various facets of components  and compositions  stability through such alternative designs of the same multi agent system using conventional quantitative indicators  The evaluation focused upon a number of architecturally relevant changes that are typically performed through real life maintenance tasks    2008 IEEE   29 refs",On the quantitative analysis of architecture stability in aspectual decompositions,"['Architectural design', 'Architecture', 'Chemical analysis', 'Computer software maintenance', 'Multi agent systems', 'Software agents', 'System stability', 'Alternative designs', 'Architectural styles', 'Architecture level', 'Aspect-oriented composition', 'Comparative analysis', 'Crosscutting concerns', 'Empirical knowledge', 'Maintenance tasks', 'Multi agents', 'Quantitative analysis', 'Quantitative indicators', 'System components', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Chemistry', 'Systems Science']","['Molesini, Ambra', '', '', 'Garcia, Alessandro', '', '', 'Von Flach G', 'Chavez, Christina', '', '', 'Batista, Thais']","Universit  di Bologna, Italy  2  Lancaster University, United Kingdom  3  Universidade Federal da Bahia, Brazil  4  Universidade Federal do Rio Grande do Norte, Brazil",2008,WICSA
141,142,"Architectural decision making is a non trivial task for architects in the software development projects  Researchers have developed several concepts, methods and tools to assist practitioners in their decision making and decision capturing activities  One of these approaches is a decision identification technique that creates architectural guidance models from decisions made in previous projects and from knowledge about a domain found in the literature  To apply this technique, significant manual knowledge engineering effort has to be invested initially  In this paper, we introduce a framework that automatically extracts architectural knowledge entities from architectural related documents by applying natural language processing  A knowledge engineer then manually post processes and fine tunes the extracted knowledge entities  We applied evaluation techniques from the information retrieval community to measure the sensitivity and accuracy of the framework  Our results show that the automatic approach has the highest recall and shortest processing time while the semi automatic approach has the highest precision   16 refs",Semi automated Design Guidance Enhancer  SADGE   A Framework for Architectural Guidance Development,"['decision making', 'information retrieval', 'knowledge acquisition', 'natural language processing', 'software architecture', 'architectural knowledge entity extraction', 'evaluation techniques', 'information retrieval community', 'natural language processing', 'architectural related documents', 'manual knowledge engineering', 'decision identification technique', 'decision capturing activity', 'software development projects', 'architectural decision making', 'architectural guidance development framework', 'SADGE', 'semiautomated design guidance enhancer', 'Software engineering techniques', 'Natural language processing', 'Knowledge engineering techniques', 'Information retrieval techniques']","['Anvaari, M', '', '', ' Zimmermann, O', '', '']","Norwegian Univ  of Sci    Technol , Trondheim, Norway  2  Univ  of Appl  Sci  of Eastern Switzerland, Rapperswil, Switzerland",2014,ECSA
142,143,"Architectural decisions  such as selecting patterns, technologies, or decomposing systems  and their rationale are a significant aspect of architectural knowledge  In this paper, we present a tool that helps architects capture tacit knowledge about architectural decisions  Furthermore, the tool helps architects and other stakeholders analyze decisions  Finally, the tool supports group decision making  The tool is based on theoretical and conceptual foundations created and evaluated in previous work  We developed the tool as a research tool in an academic environment, and we used the tool with industrial practitioners  The tool is web based and available as an open source project  In this paper we highlight the underlying research contributions of the tool and show how research approaches and findings have been transferred into a working tool    2014 Authors   19 refs",Capturing and making architectural decisions  An open source online tool,"['Decision making', 'Industrial research', 'Open source software', 'Software architecture', 'Tools', 'Academic environment', 'Architectural decision', 'Architectural knowledge', 'Conceptual foundations', 'Group Decision Making', 'Industrial practitioners', 'Open source projects', 'Research approach', 'Machine Tools', 'Small Tools and Hardware', 'Computer Software, Data Handling and Applications', 'Industrial Engineering', 'Management']","['Tofan, Dan', '', '', 'Galster, Matthias']","University of Groningen, Groningen, Netherlands  2  University of Canterbury, Christchurch, New Zealand",2014,ECSA
143,144,"Architectural design has been characterized as making a series of decisions that have system wide impact  These decisions have side effects which can have significant impact on the system  However, the impact may be first understood much later  when the system architecture is difficult to change  Architecture patterns can help architects understand the impact of the architectural decisions at the time these decisions are made, because patterns contain information about consequences and context of the pattern usage  However, this information has been of limited use because it is not presented consistently or systematically  We discuss the current limitations of patterns on evaluating their impact on quality attributes, and propose integrating the information of patterns  impact on quality attributes in order to increase the usefulness of architecture patterns    Springer Verlag Berlin Heidelberg 2007   21 refs",Leveraging architecture patterns to satisfy quality attributes,"['Decision making', 'Information dissemination', 'Pattern recognition', 'Architecture patterns', 'Quality attributes', 'System architecture', 'Telecommunication  Radar, Radio and Television', 'Computer Programming', 'Computer Applications', 'Information Dissemination', 'Management']","['Harrison, Neil B', '', '', ' Avgeriou, Paris']","Department of Mathematics and Computing Science, University of Groningen, Groningen, Netherlands",2007,ECSA
144,145,"Architectural design has been characterized as making a series of decisions that have system wide impact  These decisions have side effects which can have significant impact on the system  However, the impact may be first understood much later  when the system architecture is difficult to change  Architecture patterns can help architects understand the impact of the architectural decisions at the time these decisions are made, because patterns contain information about consequences and context of the pattern usage  However, this information has been of limited use because it is not presented consistently or systematically  We discuss the current limitations of patterns on evaluating their impact on quality attributes, and propose integrating the information of patterns  impact on quality attributes in order to increase the usefulness of architecture patterns    Springer Verlag Berlin Heidelberg 2007   21 refs",Leveraging architecture patterns to satisfy quality attributes,"['Decision making', 'Information dissemination', 'Pattern recognition', 'Architecture patterns', 'Quality attributes', 'System architecture', 'Telecommunication  Radar, Radio and Television', 'Computer Programming', 'Computer Applications', 'Information Dissemination', 'Management']","['Harrison, Neil B', '', '', ' Avgeriou, Paris']","Department of Mathematics and Computing Science, University of Groningen, Groningen, Netherlands",2008,ECSA
145,146,"Architectural design has been characterized as making a series of decisions that have system wide impact  These decisions have side effects which can have significant impact on the system  However, the impact may be first understood much later  when the system architecture is difficult to change  Architecture patterns can help architects understand the impact of the architectural decisions at the time these decisions are made, because patterns contain information about consequences and context of the pattern usage  However, this information has been of limited use because it is not presented consistently or systematically  We discuss the current limitations of patterns on evaluating their impact on quality attributes, and propose integrating the information of patterns  impact on quality attributes in order to increase the usefulness of architecture patterns   21 refs",Leveraging architecture patterns to satisfy quality attributes,"['software architecture', 'software quality', 'architecture pattern', 'system-wide impact', 'system architecture', 'pattern usage', 'Software engineering techniques', 'Software management']","['Harrison, N B', '', '', ' Avgeriou, P', '', '']","Dept  of Math    Comput  Sci , Univ  of Groningen, Groningen, Netherlands",2007,ECSA
146,147,"Architectural design has been characterized as making a series of decisions that have system wide impact  These decisions have side effects which can have significant impact on the system  However, the impact may be first understood much later  when the system architecture is difficult to change  Architecture patterns can help architects understand the impact of the architectural decisions at the time these decisions are made, because patterns contain information about consequences and context of the pattern usage  However, this information has been of limited use because it is not presented consistently or systematically  We discuss the current limitations of patterns on evaluating their impact on quality attributes, and propose integrating the information of patterns  impact on quality attributes in order to increase the usefulness of architecture patterns   21 refs",Leveraging architecture patterns to satisfy quality attributes,"['software architecture', 'software quality', 'architecture pattern', 'system-wide impact', 'system architecture', 'pattern usage', 'Software engineering techniques', 'Software management']","['Harrison, N B', '', '', ' Avgeriou, P', '', '']","Dept  of Math    Comput  Sci , Univ  of Groningen, Groningen, Netherlands",2008,ECSA
147,148,"Architectural knowledge consists of architecture design as well as the design decisions, assumptions, context, and other factors that together determine why a particular solution is the way it is  Except for the architecture design part, most of the architectural knowledge usually remains hidden, tacit in the heads of the architects  We conjecture that an explicit representation of architectural knowledge is helpful for building and evolving quality systems  If we had a repository of architectural knowledge for a system, what would it ideally contain, how would we build it, and exploit it in practice  In this paper we describe a use case model for an architectural knowledge base, together with its underlying ontology  We present a small case study in which we model available architectural knowledge in a commercial tool, the Aduna Cluster Map Viewer, which is aimed at ontology based visualization  Putting together ontologies, use cases and tool support, we are able to reason about which types of architecting tasks can be supported, and how this can be done    2006 Springer Verlag   27 refs",Building up and reasoning about architectural knowledge,"['Computer software selection and evaluation', 'Knowledge based systems', 'Knowledge representation', 'Ontology', 'Architectural knowledge', 'Architectural knowledge base', 'Architecture designs', 'Commercial tools', 'Design decisions', 'Explicit representation', 'Ontology-based', 'Particular solution', 'Quality systems', 'Tool support', 'Use case model', 'Management', 'Information Science', 'Computer Applications', 'Expert Systems', 'Artificial Intelligence', 'Computer Programming', 'Computer Software, Data Handling and Applications']","['Kruchten, Philippe', '', '', 'Lago, Patricia', '', '', 'Van Vliet, Hans']","University of British Columbia, Vancouver, BC, Canada  2  Vrije Universiteit, Amsterdam, Netherlands",2006,QoSA
148,149,"Architectural knowledge consists of architecture design as well as the design decisions, assumptions, context, and other factors that together determine why a particular solution is the way it is  Except for the architecture design part, most of the architectural knowledge usually remains hidden, tacit in the heads of the architects  We conjecture that an explicit representation of architectural knowledge is helpful for building and evolving systems  If we had a repository of architectural knowledge for a system, what would it ideally contain, how would we build it, and exploit it in practice  In this paper we describe a use case model for an architectural knowledge system    2005 IEEE   10 refs",Building up and exploiting architectural knowledge,"['Computer aided design', 'Context sensitive languages', 'Decision making', 'Engineering education', 'Knowledge based systems', 'Mathematical models', 'Computer architectural knowledge', 'Computer architecture designs', 'Design decisions', 'Mathematics', 'Management', 'Education', 'Computer Applications', 'Expert Systems', 'Computer Programming Languages', 'Computer Programming']","['Kruchten, Philippe', '', '', 'Lago, Patricia', '', '', 'Van Vliet, Hans', '', '', 'Wolf, Timo']","University of British Columbia, Vancouver, BC, Canada  2  Vrije Universiteit, Amsterdam, NL  3  Technische Universit t, M nchen, Germany",2005,WICSA
149,150,"Architectural knowledge is reflected in various artifacts of a software product  In the case of a software product audit this architectural knowledge needs to be uncovered and its effects assessed, in order to evaluate the quality of the software product  A particular problem is to find and comprehend the architectural knowledge that resides in the software product documentation  The amount of documents, and the differences in for instance target audience and level of abstraction, make it a difficult job for the auditors to find their way through the documentation  This paper discusses how the use of a technique called Latent Semantic Analysis can guide the auditors through the documentation to the architectural knowledge they need  Using Latent Semantic Analysis, we effectively construct a reading guide for software product audits    2007 IEEE   20 refs",Constructing a reading guide for software product audits,"['Knowledge based systems', 'Problem solving', 'Program documentation', 'Quality of service', 'Semantics', 'Architectural knowledge', 'Latent Semantic Analysis', 'Software product documentation', 'Software products', 'Computer Programming', 'Expert Systems', 'Computer Applications', 'Information Dissemination']","['De Boer, Remco C', '', '', ' Van Vliet, Hans']","Department of Computer Science, Vrije Universiteit, Amsterdam, Netherlands",2007,WICSA
150,151,"Architectural knowledge is reflected in various artifacts of a software product  In the case of a software product audit this architectural knowledge needs to be uncovered and its effects assessed, in order to evaluate the quality of the software product  A particular problem is to find and comprehend the architectural knowledge that resides in the software product documentation  The amount of documents, and the differences in for instance target audience and level of abstraction, make it a difficult job for the auditors to find their way through the documentation  This paper discusses how the use of a technique called latent semantic analysis can guide the auditors through the documentation to the architectural knowledge they need  Using latent semantic analysis, we effectively construct a reading guide for software product audits   20 refs",Constructing a reading guide for software product audits,"['software architecture', 'software metrics', 'software quality', 'system documentation', 'user manuals', 'reading guide construction', 'software product audit', 'software product architecture', 'software product quality evaluation', 'software product documentation', 'latent semantic analysis', 'Software engineering techniques', 'Software metrics']","['de Boer, R C', '', '', ' van Vliet, H', '', '']","Dept  of Comput  Sci , Vrije Univ , Amsterdam, Netherlands",2007,WICSA
151,152,"Architectural level analysis of a software system for its quality attributes is a proven cost effective approach  This is particularly significant for performance, which defines multiple aspects of the quality of the system  In this paper we outline the contribution of a PhD, which provides architecture viewpoint based modeling and analysis support for parallelism and flow latency aspects of the performance, in legacy systems  The main contribution of the PhD includes Parallelism Viewpoint and Flow Latency Viewpoint  We use the proposed viewpoints to find parallelism and flow latencies specific performance bottlenecks of an industrial case, a precision critical electron microscope software system  The preliminary results of using Parallelism Viewpoint for our example case show that the viewpoint provides a profound insight into the thread model of the system, which helps in reducing the excessively used parallelism in the system    2010 ACM   8 refs",Model based enhancement of software performance for precision critical systems,"['Computer software selection and evaluation', 'Industry', 'Legacy systems', 'Technical presentations', 'Architectural levels', 'Cost-effective approach', 'Critical systems', 'flow latency viewpoint', 'Latency aspects', 'Model-based', 'Modeling and analysis', 'parallelism viewpoint', 'Performance bottlenecks', 'Quality attributes', 'Software performance', 'Software systems', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Muhammad, Naeem', '', '', 'Boucke, Nelis', '', '', 'Berbers, Yolande']","DistriNet Research Group, Department of Computer Science, Katholieke Universiteit Leuven, Leuven, Belgium",2010,ECSA
152,153,"Architectural modeling using the Unified Modeling Language  UML  can support the development of concurrent applications, but the problem of mapping the model to a concurrent implementation remains  This paper defines a scheme to map concurrent UML designs to a concurrent object oriented program  Using the COMET method for the architectural design of concurrent object oriented systems, each component and connector is annotated with a stereotype indicating its behavioral design pattern  For each of these patterns, a reference implementation is provided using SCOOP, a concurrent object oriented programming model  Given the strong execution guarantees of the SCOOP model, which is free of data races by construction, this development method eliminates a source of intricate concurrent programming errors    2013 Springer Verlag   15 refs",Concurrent object oriented development with behavioral design patterns,"['Object oriented programming', 'Unified Modeling Language', 'Architectural modeling', 'Concurrent object-oriented programming', 'Concurrent object-oriented programs', 'Concurrent programming', 'Design Patterns', 'Development method', 'Object-oriented system', 'Reference implementation', 'Computer Programming', 'Computer Programming Languages']","['Morandi, Benjamin', '', '', 'West, Scott', '', '', 'Nanz, Sebastian', '', '', 'Gomaa, Hassan']","ETH Zurich, Switzerland  2  George Mason University, United States",2013,ECSA
153,154,"Architectural patterns are important artefacts containing specialized design knowledge to build good quality systems  Complex systems often exhibit several architectural patterns in their design which leads to the need of architectural pattern composition  Unfortunately, information about the composition of patterns tend to be vaporized right after the composition process which causes problems of traceability and reconstructability of patterns  This paper proposes a pattern description language that first, facilitates several types of pattern merging operation and second, allows the traceability of pattern composition  More specifically, the approach consists of a proper description of pattern that supports composition operations and a two step pattern design process that helps to preserve pattern composition information    2013 Springer Verlag   22 refs",Composition centered architectural pattern description language,"['Product design', 'Architectural pattern', 'Design knowledge', 'Pattern composition', 'Pattern description', 'Pattern designs', 'Computer Programming', 'Production Engineering']","['Ton That, Minh Tu', '', '', 'Sadou, Salah', '', '', 'Oquendo, Flavio', '', '', 'Borne, Isabelle']","Universit  de Bretagne Sud, IRISA, Vannes, France",2013,ECSA
154,155,"Architectural patterns are often combined with other, relevant architectural patterns during software architecture design  However, combining patterns effectively remains a challenging task  first because the integration of any two architectural patterns can take several forms  second because existing pattern languages only mention generic pattern to pattern relationships and do not go into the details of their combination  In this paper, we propose to address this problem by discovering and defining a handful of recurring pattern relationships at the level of the participants of patterns  We have studied 32 industrial case studies and mined a number of relationships between participants of different patterns  We present a few of these relationships and outline some examples of their appearance    2010 Springer Verlag Berlin Heidelberg   7 refs",Mining relationships between the participants of architectural patterns,"['Software design', 'Architectural pattern', 'Generic patterns', 'Industrial case study', 'Pattern languages', 'Pattern relationships', 'Software architecture design', 'Computer Programming']","['Kamal, Ahmad Waqas', '', '', 'Avgeriou, Paris']","Department of Mathematics and Computing Science, University of Groningen, Netherlands",2010,ECSA
155,156,"Architectural patterns have an impact on both the structure and the behavior of a system at the architecture design level  However, it is challenging to model patterns  behavior in a systematic way because modeling languages do not provide the appropriate abstractions and because each pattern addresses a whole solution space comprised of potentially infinite solution variants  In this paper, we advocate the use of architectural primitives for systematically modeling architectural patterns in the behavioral view  These architectural primitives are found among a number of architectural patterns and serve as the basic building blocks for modeling patterns  behavior  The main contribution of this work lies in the discovery of architectural primitives, defining architectural primitives using UML, and capturing the missing pattern semantics by using UML s stereotypes    2008 Springer Verlag Berlin Heidelberg   14 refs",Modeling architectural patterns  behavior using architectural primitives,"['Information theory', 'Unified Modeling Language', 'Architectural patterns', 'Architectural primitives', 'Architecture designs', 'Basic building blocks', 'Modeling', 'Modeling languages', 'Solution spaces', 'UML', 'Information Theory and Signal Processing', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications']","['Kamal, Ahmad Waqas', '', '', 'Avgeriou, Paris']","Department of Mathematics and Computer Science, University of Groningen, Netherlands",2008,ECSA
156,157,"Architectural prototyping is a widely used practice, concerned with taking architectural decisions through experiments with lightweight implementations  However, many architectural decisions are only taken when systems are already  partially  implemented  This is problematic in the context of architectural prototyping since experiments with full systems are complex and expensive and thus architectural learning is hindered  In this paper, we propose a novel technique for harvesting architectural prototypes from existing systems,  architectural slicing , based on dynamic program slicing  Given a system and a slicing criterion, architectural slicing produces an architectural prototype that contains the elements in the architecture that are dependent on the elements in the slicing criterion    2013 Springer Verlag   7 refs",Architectural slicing  Towards automatic harvesting of architectural prototypes,"['Experiments', 'Software architecture', 'Architectural decision', 'Existing systems', 'Novel techniques', 'ON dynamics', 'Slicing criterion', 'Buildings and Towers', 'Computer Programming', 'Engineering Research']","['Christensen, Henrik Brbak', '', '', 'Hansen, Klaus Marius']","Department of Computer Science, Aarhus University, Aarhus, Denmark  2  Department of Computer Science  DIKU , University of Copenhagen, Copenhagen, Denmark",2013,ECSA
157,158,"Architectural recovery techniques analyze a software system s implementation level artifacts to suggest its likely architecture  However, different techniques will often suggest different architectures for the same system, making it difficult to interpret these results and determine the best technique without significant human intervention  Researchers have tried to assess the quality of recovery techniques by comparing their results with authoritative recoveries  meticulous, labor intensive recoveries of existing well known systems in which one or more engineers is integrally involved  However, these engineers are usually not a system s original architects or even developers  This carries the risk that the authoritative recoveries may miss domain , application , and system context specific information  To deal with this problem, we propose a framework comprising a set of principles and a process for recovering a system s ground truth architecture  The proposed recovery process ensures the accuracy of the obtained architecture by involving a given system s architect or engineer in a limited, but critical fashion  The application of our work has the potential to establish a set of  ground truths  for assessing existing and new architectural recovery techniques  We illustrate the framework on a case study involving Apache Hadoop    2012 IEEE   14 refs",A framework for obtaining the ground truth in architectural recovery,"['Computer software', 'Engineers', 'Software architecture', 'Architectural recovery', 'Ground truth', 'Human intervention', 'Quality of recovery', 'Recovery process', 'Software systems', 'Metallurgy and Metallography', 'Computer Software, Data Handling and Applications', 'Personnel']","['Garcia, Joshua', '', '', 'Krka, Ivo', '', '', 'Medvidovic, Nenad', '', '', 'Douglas, Chris']","Computer Science Department, University of Southern California, Los Angeles, CA 90089, United States  2  Yahoo Labs , United States",2012,ECSA
158,159,"Architectural recovery techniques analyze a software system s implementation level artifacts to suggest its likely architecture  However, different techniques will often suggest different architectures for the same system, making it difficult to interpret these results and determine the best technique without significant human intervention  Researchers have tried to assess the quality of recovery techniques by comparing their results with authoritative recoveries  meticulous, labor intensive recoveries of existing well known systems in which one or more engineers is integrally involved  However, these engineers are usually not a system s original architects or even developers  This carries the risk that the authoritative recoveries may miss domain , application , and system context specific information  To deal with this problem, we propose a framework comprising a set of principles and a process for recovering a system s ground truth architecture  The proposed recovery process ensures the accuracy of the obtained architecture by involving a given system s architect or engineer in a limited, but critical fashion  The application of our work has the potential to establish a set of  ground truths  for assessing existing and new architectural recovery techniques  We illustrate the framework on a case study involving Apache Hadoop    2012 IEEE   14 refs",A framework for obtaining the ground truth in architectural recovery,"['Computer software', 'Engineers', 'Software architecture', 'Architectural recovery', 'Ground truth', 'Human intervention', 'Quality of recovery', 'Recovery process', 'Software systems', 'Metallurgy and Metallography', 'Computer Software, Data Handling and Applications', 'Personnel']","['Garcia, Joshua', '', '', 'Krka, Ivo', '', '', 'Medvidovic, Nenad', '', '', 'Douglas, Chris']","Computer Science Department, University of Southern California, Los Angeles, CA 90089, United States  2  Yahoo Labs , United States",2012,WICSA
159,160,"Architectural runtime reconfiguration is a promising means for controlling the quality of service  QoS  of distributed software systems  Particularly self adaptation approaches rely on runtime reconfiguration capabilities provided by the systems under control  For example, our online capacity management approach SLAstic employs changing component deployments and server allocations to control the performance and resource efficiency of component based  C B  software systems at runtime  In this context, we developed a performance simulator for runtime configurable C B software systems, called SLAstic SIM  The system architectures to be simulated are specified as instances of the Palladio Component Model  PCM   The simulation is driven by external workload traces and reconfiguration plans which can be requested during simulation, based on continuously accessible monitoring data of the simulated systems  This paper demonstrates SLAstic SIM including a quantitative evaluation of its performance    2011 Springer Verlag   17 refs",Performance simulation of runtime reconfigurable component based software architectures,"['C (programming language)', 'Computer simulation', 'Computer software', 'Network architecture', 'Online systems', 'Quality control', 'Quality of service', 'Capacity management', 'Component based', 'Component deployment', 'Component model', 'Component-based software architecture', 'Configurable', 'Distributed software system', 'Performance simulation', 'Performance simulator', 'Quantitative evaluation', 'Reconfiguration plans', 'Resource efficiencies', 'Run time reconfiguration', 'Run-time reconfigurable', 'Runtimes', 'Self adaptation', 'Simulated system', 'Software systems', 'System architectures', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Quality Assurance and Control']","['Von Massow, Robert', '', '', 'Van Hoorn, Andr', '', '', ' Hasselbring, Wilhelm']","Software Engineering Group, University of Kiel, D 24098 Kiel, Germany",2011,ECSA
160,161,"Architectural synthesis  AS  activity plays a key role in architecture design as it essentially links the problem to the solution space  To reuse successful design experience, architects may use architectural patterns in AS to generate candidate solutions  In a pattern based AS, there are two challenges  one is class responsibility assignment  CRA  when using specific patterns and the other is pattern synthesis which attempts to avoid the pattern constraint violations  In this paper, we propose a cooperative coevolution approach to assign class responsibility and synthesize pattern automatically in a pattern based AS  We formally translate the problem of the automated pattern based AS into a multi objective optimization problem, and describe the approach in detail   12 refs",Co evolving Pattern Synthesis and Class Responsibility Assignment in Architectural Synthesis,"['evolutionary computation', 'software architecture', 'co-evolving pattern synthesis', 'class responsibility assignment', 'architecture design', 'architectural pattern sythesis', 'CRA', 'pattern constraint violations', 'cooperative coevolution approach', 'automated pattern-based AS', 'multiobjective optimization problem', 'software-intensive system', 'software architecture', 'Software engineering techniques', 'Optimisation techniques']","['Yongrui Xu', '', '', 'Peng Liang']","State Key Lab  of Software Eng , Wuhan Univ , Wuhan, China",2014,ECSA
161,162,"Architectural technical debt  ATD  is incurred by design decisions that consciously or unconsciously compromise system wide quality attributes, particularly maintainability and evolvability  ATD needs to be identified and measured, so that it can be monitored and eventually repaid, when appropriate  In practice, ATD is difficult to identify and measure, since ATD does not yield observable behaviors to end users  One indicator of ATD, is the average number of modified components per commit  ANMCC   a higher ANMCC indicates more ATD in a software system  However, it is difficult and sometimes impossible to calculate ANMCC, because the data  i e , the log of commits  are not always available  In this work, we propose to use software modularity metrics, which can be directly calculated based on source code, as a substitute of ANMCC to indicate ATD  We validate the correlation between ANMCC and modularity metrics through a holistic multiple case study on thirteen open source software projects  The results of this study suggest that two modularity metrics, namely Index of Package Changing Impact  IPCI  and Index of Package Goal Focus  IPGF , have significant correlation with ANMCC, and therefore can be used as alternative ATD indicators  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   19 refs",An empirical investigation of modularity metrics for indicating architectural technical debt,"['Open source software', 'Commit', 'Empirical investigation', 'Modularity metric', 'Multiple-case study', 'Observable behavior', 'Open source software projects', 'Software modularity', 'Technical debts', 'Computer Programming']","['Li, Zengyang', '', '', 'Guelfi, Nicolas', '', '', 'Liang, Peng', '', '', 'Avgeriou, Paris', '', '', 'Ampatzoglou, Apostolos']","Department of Mathematics and Computer Science, University of Groningen, Nijenborgh 9, 9747 AG Groningen, Netherlands  2  Computer Science and Communications Research Unit, University of Luxembourg, 6, rue Richard Coudenhove Kalergi, L 1359, Luxembourg  3  State Key Lab of Software Engineering, School of Computer, Wuhan University, Luojiasha 430072, Wuhan, China",2014,QoSA
162,163,"Architecture Compliance Checking  ACC  is an approach to verify the conformance of implemented program code to high level models of architectural design  Static ACC is focused on the module views of architecture and especially on rules constraining the modular elements  This paper proposes an approach for support of semantically rich modular architectures  SRMAs  in the context of static ACC  An SRMA contains modules of semantically different types, like layers and components, constrained by rules of different types  Our approach is grounded in a metamodel, which enables support of rich sets of module and rule types and which enables extensive support of the semantics of these types  To validate the feasibility of the metamodel, an open source prototype implementation was developed, tested and applied in practice  Copyright   is held by the author s   Publication rights licensed to ACM   25 refs",A metamodel for the support of semantically rich modular architectures in the context of static Architecture Compliance Checking,"['Architecture', 'Open source software', 'Semantics', 'Static analysis', 'Architecture compliance', 'High-level models', 'Meta model', 'Modular architectures', 'Open sources', 'Program code', 'Prototype implementations', 'Static architecture', 'Buildings and Towers', 'Computer Programming', 'Information Dissemination']","['Pruijt, Leo', '', '', 'Brinkkemper, Sjaak']","Information Systems Architecture Research Group, HU University of Applied Sciences, Utrecht, Netherlands  2  Department of Information and Computing Sciences, University Utrecht, Utrecht, Netherlands",2014,WICSA
163,164,"Architecture Description Languages  ADLs  are the means to define the software architecture of a complex system  ADLs are strongly related to stakeholder concerns  they must capture all design decisions fundamental for system s stakeholders  Stakeholder concerns are various and ever evolving, thus it is impossible to capture all system s concerns with a single ADL  The evolution of a concern may cause the used ADLs  or even the whole architecture framework  not to fit any more with the system of interest  In this work we propose an approach for describing software architectures with multiple and evolving stakeholder concerns  Under this perspective, the proposed approach allows  i  to define customized ADLs depending on the concerns held by the system s stakeholders,  ii  to provide interoperability between either customized and already existing ADLs,  iii  to realize architecture frameworks in which viewpoints, views and languages are set up depending on the system s stakeholders concerns  The approach is based on model driven engineering technologies    2010 ACM   14 refs",A model driven approach for managing software architectures with multiple evolving concerns,"['Large scale systems', 'Technical presentations', 'ADL', 'Architecture description languages', 'architecture framework', 'Architecture frameworks', 'Complex systems', 'Design decisions', 'Model driven approach', 'Model-driven Engineering', 'modeling', 'Computer Programming', 'Information Dissemination', 'Systems Science']","['Malavolta, Ivano']","Dipartimento di Informatica, Universit  dell Aquila, L Aquila, Italy",2010,ECSA
164,165,"Architecture Description Languages usually specify software architectures in the levels of types and instances  Components instantiate component types by parameterization and type conformance  Behavioral analysis of dynamic architectures needs to deal with the uncertainty of actual configurations of components, even if the type level architectural descriptions are explicitly provided  This paper addresses this verification difficulty for connector based architecture styles, in which all communication channels of a system are between components and a connector  The contribution of this paper is two fold   1  We propose a process algebraic model, in which the main architectural concepts  such as component type and component conformance  and several fundamental architectural properties  i e  deadlock freedom, non starvation, conservation, and completeness  are formulated   2  We demonstrate that the state space of verification of these properties can be reduced from the entire universe of possible configurations to specific configurations that are fixed according to the type level architectural descriptions    2012 IEEE   20 refs",Semantic analysis of component aspect dynamism for connector based architecture styles,"['Algebra', 'Connectors (structural)', 'Semantics', 'Uncertainty analysis', 'Architectural concepts', 'Architectural descriptions', 'Architectural properties', 'Architecture description languages', 'Architecture styles', 'Behavioral analysis', 'Deadlock freedom', 'Dynamic architecture', 'Dynamic software architecture', 'Process algebras', 'Semantic analysis', 'State space', 'Structural Members and Shapes', 'Computer Programming', 'Information Dissemination', 'Algebra', 'Probability Theory']","['Su, Guoxin', '', '', 'Ying, Mingsheng', ' ,', '', ' Zhang, Chengqi']","QCIS, University of Technology, Syndey, NSW, Australia  2  Dept  of Computer Sci  and Tech , Tsinghua University, China",2012,ECSA
165,166,"Architecture Description Languages usually specify software architectures in the levels of types and instances  Components instantiate component types by parameterization and type conformance  Behavioral analysis of dynamic architectures needs to deal with the uncertainty of actual configurations of components, even if the type level architectural descriptions are explicitly provided  This paper addresses this verification difficulty for connector based architecture styles, in which all communication channels of a system are between components and a connector  The contribution of this paper is two fold   1  We propose a process algebraic model, in which the main architectural concepts  such as component type and component conformance  and several fundamental architectural properties  i e  deadlock freedom, non starvation, conservation, and completeness  are formulated   2  We demonstrate that the state space of verification of these properties can be reduced from the entire universe of possible configurations to specific configurations that are fixed according to the type level architectural descriptions    2012 IEEE   20 refs",Semantic analysis of component aspect dynamism for connector based architecture styles,"['Algebra', 'Connectors (structural)', 'Semantics', 'Uncertainty analysis', 'Architectural concepts', 'Architectural descriptions', 'Architectural properties', 'Architecture description languages', 'Architecture styles', 'Behavioral analysis', 'Deadlock freedom', 'Dynamic architecture', 'Dynamic software architecture', 'Process algebras', 'Semantic analysis', 'State space', 'Structural Members and Shapes', 'Computer Programming', 'Information Dissemination', 'Algebra', 'Probability Theory']","['Su, Guoxin', '', '', 'Ying, Mingsheng', ' ,', '', ' Zhang, Chengqi']","QCIS, University of Technology, Syndey, NSW, Australia  2  Dept  of Computer Sci  and Tech , Tsinghua University, China",2012,WICSA
166,167,"Architecture based approaches for runtime evolution enable software systems to dynamically move between consistent architectural variants  Successful runtime evolution must enable the new, replacement variant to be initialized with the data of the replaced one  In distributed systems, however, the initialization is complex and may be time consuming due to data transfers across sites  Identifying systems  components subject to change is then critical for planning evolution and reducing replacement actions, avoid unnecessary data transfers, and then, reduce downtime of system services  Addressing this issue, this paper presents an approach to runtime evolution of distributed applications  We present how a development process allows to 1  specify architectural variants of an application and 2  identify components subject to change and operations for transferring data managed by these components  Moreover, the design information is used at runtime to automatically plan evolution    2010 Springer Verlag Berlin Heidelberg   19 refs",Modelling changes and data transfers for architecture based runtime evolution of distributed applications,"['Biology', 'Data transfer', 'Design information', 'Development process', 'Distributed applications', 'Distributed systems', 'Identifying system', 'Runtime evolution', 'Runtimes', 'Software systems', 'System services', 'Biology', 'Computer Software, Data Handling and Applications']","['Phung Khac, An', '', '', 'Gilliot, Jean Marie', '', '', 'Segarra, Maria Teresa', '', '', 'Beugnard, Antoine', '', '', 'Kabor , Eveline']","Department of Computer Science, T l com Bretagne, Technop le Brest Iroise, Brest Cedex 3, CS 83818   29238, France",2010,ECSA
167,168,"Architecture based development of software product lines requires well established methodologies for both development and assessment of software product line architectures  While several methodologies for the development of such systems have been proposed, their assessment has mostly relied on methods developed for single product architectures  In this paper, we extend the popular ATAM  Architecture Tradeoff Analysis Method  method to cover both the core architecture of the product line and the individual product architectures  In addition, the extended method prescribes a qualitative analytical treatment of variation points using scenarios  We present the main tenets of the new method and illustrate its use through a small case study    2005 IEEE   16 refs",Extending the ATAM architecture evaluation to product line architectures,"['Computer aided software engineering', 'Product development', 'Software design', 'Architecture Tradeoff Analysis Method (ATAM)', 'Software product', 'Computer Programming', 'Computer Applications', 'Product Development  Concurrent Engineering']","['Olumofin, Femi G', '', '', ' Miic, Vojislav B', '', '']","University of Manitoba, Winnipeg, Man , Canada",2005,WICSA
168,169,"Architecture based self adaptation is considered as a promising approach to drive down the development and operation costs of complex software systems operating in ever changing environments  However, there is still a lack of evidence supporting the arguments for the beneficial impact of architecture based self adaptation on resilience with respect to other customary approaches, such as embedded code based adaptation  In this paper, we report on an empirical study about the impact on resilience of incorporating architecture based self adaptation in an industrial middle  ware used to collect data in highly populated networks of devices  To this end, we compare the results of resilience evaluation between the original version of the middleware, in which adaptation mechanisms are embedded at the code  level, and a modified version of that middleware in which the adaptation mechanisms are implemented using Rainbow, a framework for architecture based self adaptation  Our results show improved levels of resilience in architecture based compared to embedded code based self adaptation  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   32 refs",Empirical resilience evaluation of an architecture based self adaptive software system,"['Codes (symbols)', 'Complex networks', 'Digital storage', 'Middleware', 'Model checking', 'Adaptation mechanism', 'Complex software systems', 'Development and operations', 'Probabilistic model checking', 'Rainbow', 'Resilience evaluation', 'Self adaptation', 'Self-adaptive software systems', 'Computer Systems and Equipment', 'Data Storage, Equipment and Techniques', 'Computer Programming', 'Data Processing and Image Processing']","['C mara, Javier', '', '', 'Correia, Pedro', '', '', 'De Lemos, Rog rio', '', '', 'Vieira, Marco']","Institute for Software Research, Carnegie Mellon University, United States  2  Department of Informatics Engineering, University of Coimbra, Portugal  3  School of Computing, University of Kent, United Kingdom",2014,QoSA
169,170,"Architecture centric software generation has the potential to support flexible design and large scale reuse  This paper describes the development of an architecture centric framework that consists of multiple architecture alternatives, from which the architect can select and generate a working prototype in a top down manner through a user interface rather than building it from scratch  The framework is primarily built with well understood design patterns in distributed and concurrent computing  The development process involves extensive domain analysis, variability management, and bottom up component engineering effort  The framework enables the architect or designer to effectively conduct upfront software architecture analysis and or rapid architectural prototyping    2010 Springer Verlag Berlin Heidelberg   27 refs",Towards architecture centric software generation,"['Computer software reusability', 'Design', 'User interfaces', 'Concurrency', 'Domain analysis', 'Generative techniques', 'Patterns', 'Variability management', 'Structural Design', 'Computer Peripheral Equipment', 'Computer Software, Data Handling and Applications']","['Lung, Chung Horng', '', '', 'Balasubramaniam, Balasangar', '', '', 'Selvarajah, Kamalachelva', '', '', 'Elankeswaran, Poopalasinkam', '', '', 'Gopalasundaram, Umatharan']","Department of Systems and Computer Engineering, Carleton University, Ottawa, ON, Canada  2  Nortel Networks, Ottawa, ON, Canada",2010,ECSA
170,171,"Architecture centric, component based development intensively reuses components from repositories  Such development processes produce architecture definitions, using architecture description languages  Adls   This paper proposes a three step process  Architecture specifications first capture abstract and ideal architectures imagined by architects to meet requirements  Specifications do not describe complete component types but only component roles  usages   Architecture configurations then capture implementation decisions, as the architects select specific component classes from the repository to implement component roles  Finally, architecture assemblies define how components instances are created and initialized to customize the deployment of architectures in their own execution contexts  This development process is supported by a three level Adl which enables the separate definition of these three representations  The refinement relationships between these architecture representations are also discussed    2010 Springer Verlag Berlin Heidelberg   16 refs",Architecture centric component based development needs a three level ADL,"['Specifications', 'Architecture configuration', 'Architecture description languages', 'Architecture specification', 'Component-Based Development', 'Development process', 'Execution context', 'Specific component', 'Three-level', 'Three-step process', 'Computer Programming', 'Codes and Standards']","['Zhang, Huaxi', '', '', 'Urtado, Christelle', '', '', 'Vauttier, Sylvain']","LGI2P   Ecole des Mines d Al s, N mes, France",2010,ECSA
171,172,"Architecture decisions are often not explicitly documented in practice but reside in the architect s mind as tacit knowledge, even though explicit capturing and documentation of architecture decisions has been associated with a multitude of benefits  As part of a research collaboration with ABB, we developed a tool to document architecture decisions  This tool is an add in for Enterprise Architect and is an implementation of a viewpoint based decision documentation framework  To validate the add in, we conducted an exploratory case study with ABB architects  In the study, we assessed the status quo of architecture decision documentation, identified architects  expectations of the ideal decision documentation tool, and evaluated the new add in  We found that although awareness of decision documentation is increasing at ABB, several barriers exist that limit the use of decisions in practice  Regarding their ideal tool, architects want a descriptive and efficient approach  Supplemental features like reporting or decision sharing are requested  The new add in, was well perceived by the architects  As a result of the study, we propose a clearer separation of problem, outcomes, and alternatives for the decision documentation framework    2014 IEEE   24 refs",Industrial implementation of a documentation framework for architectural decisions,"['Industrial applications', 'Architectural decision', 'Architectural viewpoints', 'Architecture decisions', 'Exploratory case studies', 'Industrial case study', 'Industrial implementation', 'Research collaborations', 'tool-support', 'Computer Programming', 'Production Planning and Control  Manufacturing']","['Manteuffel, Christian', '', '', 'Tofan, Dan', '', '', 'Koziolek, Heiko', '', '', 'Goldschmidt, Thomas', '', '', 'Avgeriou, Paris']","University of Groningen, Netherlands  2  ABB Corporate Research, Ladenburg, Germany",2014,WICSA
172,173,"Architecture definition requires architects who are highly qualified in both the use of architectural patterns and the analysis of the application s requirements  This is because they have to identify what patterns satisfy the application s functional requirements  FR  and quality attributes  QA , and the interrelationships between them  However, since QAs and FRs are usually addressed separately, their interrelationships are not detailed in full  This situation means that the architect has to expend considerable effort on their identification, with the risk of misinterpretations that lead to an inappropriate choice of patterns  We here present a model that allows the FRs to be marked with the constraints imposed by the QAs  The marks are conceived to be re used during the architecture definition  The model brings knowledge of the requirements and their relationships closer to the architect, allowing patterns aligned with the requirements to be identified with less effort    2010 Springer Verlag Berlin Heidelberg   18 refs",Facilitating the selection of architectural patterns by means of a marked requirements model,"['Computer software selection and evaluation', 'Requirements engineering', 'Architectural pattern', 'Functional requirement', 'Quality attributes', 'Requirements Models', 'Computer Software, Data Handling and Applications']","['Berrocal, Javier', '', '', 'Garc a Alonso, Jos', '', '', ' Murillo, Juan Manuel']","Escuela Polit cnica, University of Extremadura, Av  Universidad S N, C ceres 10071, Spain",2010,ECSA
173,174,"Architecture description languages  ADLs  should consider both structural and runtime perspectives of software architectures, an important requirement for current software systems  However, most existing ADLs are disconnected from the runtime level, thus entailing architectural mismatches and inconsistencies between architecture and implementation  With the emergence of the new generation programming languages for large scale, dynamic, and distributed systems, this problem becomes worse since most existing ADLs do not capture the features of this type of language  In this context, we investigate the generation of source code in the Go programming language from architecture descriptions in the p ADL language as they are both based on the p calculus process algebra  We define the correspondences between p ADL and Go elements and present how architecture descriptions in p ADL can be automatically translated to their respective implementations in Go through a real world flood monitoring system   21 refs",Architecture Based Code Generation  From p ADL Architecture Descriptions to Implementations in the Go Language,"['pi calculus', 'program compilers', 'programming languages', 'software architecture', 'source code (software)', 'architecture-based code generation', 'p-ADL architecture descriptions', 'architecture description languages', 'software architectures', 'software systems', 'runtime level', 'distributed systems', 'Go programming language', 'p-calculus process algebra', 'real-world flood monitoring system', 'source code generation', 'Programming languages', 'Compilers, interpreters and other processors', 'Software engineering techniques', 'Formal logic']","['Cavalcante, E', '', '', ' Oquendo, F', '', '', ' Batista, T', '', '']","DIMAp, Fed  Univ  of Rio Grande do Norte, Natal, Brazil  2  IRISA, Univ  de Bretagne Sud, Vannes, France",2014,ECSA
174,175,"Architecture evaluation has become a mature sub discipline in architecting with high quality practical and scientific literature available  However, publications on industrial applications and concrete experiences are rare  We want to fill this gap and share our experiences   having performed more than 50 architecture evaluations for industrial customers in the last decade  We compiled facts and consolidated our findings about architecture evaluations in 1industry  In this paper, we provide a critical retrospective on more than 50 projects and share our lessons learned  This industrial and practical perspective allows practitioners to benefit from our experience in their daily architecture work and scientific community to focus their research work on the generalizability of our findings    2014 IEEE   18 refs",Software architecture evaluation in practice  Retrospective on more than 50 architecture evaluations in industry,"['Architecture', 'Industrial applications', 'Industrial research', 'Industry', 'Architecture evaluation', 'empirical evidences', 'Experience report', 'High quality', 'Industrial customer', 'Scientific community', 'Scientific literature', 'Software architecture evaluation', 'Buildings and Towers', 'Computer Programming', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Industrial Engineering', 'Production Planning and Control  Manufacturing']","['Knodel, Jens', '', '', 'Naab, Matthias']","Fraunhofer IESE, Fraunhofer Platz 1, 67663 Kaiserslautern, Germany",2014,WICSA
175,176,"Architecture level decisions, directly influenced by environmental factors, are crucial to preserve modularity and stability throughout software development life cycle  Tradeoffs of modularization alternatives, such as aspect oriented vs  object oriented decompositions, thus need to be assessed from architecture models instead of source code  In this paper, we present a suite of architecture level metrics, taking external factors that drive software changes into consideration and measuring how well an architecture produces independently substitutable modules  We formalize these metrics using logical models to automate quantitative stability and modularity assessment  We evaluate the metrics using eight aspectoriented and object oriented releases of a software product line architecture, driven by a series of heterogeneous changes  By contrasting with an implementation level analysis, we observe that these metrics can effectively reveal which modularization alternative generates more stable, modular design from highlevel models    2009 IEEE   18 refs",From retrospect to prospect  Assessing modularity and stability from software architecture,"['Architecture', 'Computer software', 'Modular construction', 'Object oriented programming', 'Stability', 'Architecture models', 'Aspect-oriented', 'Design stability', 'Environmental factors', 'External factors', 'High-level models', 'Logical models', 'Modular designs', 'Modularizations', 'Object oriented', 'Quantitative stability', 'Software change', 'Software development life cycle', 'Software modularity', 'Software products', 'Source codes', 'Materials Science', 'Classical Physics  Quantum Theory  Relativity', 'Chemistry', 'System Stability', 'Systems Science', 'Computer Applications', 'Computer Software, Data Handling and Applications', 'Construction Methods', 'Buildings and Towers', 'Computer Programming']","['Sethi, Kanwarpreet', '', '', 'Cai, Yuanfang', '', '', 'Wong, Sunny', '', '', 'Garcia, Alessandro', '', '', 'Sant Anna, Claudio']","Department of Computer Science, Drexel University, Philadelphia, PA, United States  2  Informatics Department, Pontifical Catholic University, Rio de Janeiro, Brazil  3  Computer Science Department, Federal University of Bahia, Salvador, Brazil",2009,ECSA
176,177,"Architecture level decisions, directly influenced by environmental factors, are crucial to preserve modularity and stability throughout software development life cycle  Tradeoffs of modularization alternatives, such as aspect oriented vs  object oriented decompositions, thus need to be assessed from architecture models instead of source code  In this paper, we present a suite of architecture level metrics, taking external factors that drive software changes into consideration and measuring how well an architecture produces independently substitutable modules  We formalize these metrics using logical models to automate quantitative stability and modularity assessment  We evaluate the metrics using eight aspectoriented and object oriented releases of a software product line architecture, driven by a series of heterogeneous changes  By contrasting with an implementation level analysis, we observe that these metrics can effectively reveal which modularization alternative generates more stable, modular design from highlevel models    2009 IEEE   18 refs",From retrospect to prospect  Assessing modularity and stability from software architecture,"['Architecture', 'Computer software', 'Modular construction', 'Object oriented programming', 'Stability', 'Architecture models', 'Aspect-oriented', 'Design stability', 'Environmental factors', 'External factors', 'High-level models', 'Logical models', 'Modular designs', 'Modularizations', 'Object oriented', 'Quantitative stability', 'Software change', 'Software development life cycle', 'Software modularity', 'Software products', 'Source codes', 'Materials Science', 'Classical Physics  Quantum Theory  Relativity', 'Chemistry', 'System Stability', 'Systems Science', 'Computer Applications', 'Computer Software, Data Handling and Applications', 'Construction Methods', 'Buildings and Towers', 'Computer Programming']","['Sethi, Kanwarpreet', '', '', 'Cai, Yuanfang', '', '', 'Wong, Sunny', '', '', 'Garcia, Alessandro', '', '', 'Sant Anna, Claudio']","Department of Computer Science, Drexel University, Philadelphia, PA, United States  2  Informatics Department, Pontifical Catholic University, Rio de Janeiro, Brazil  3  Computer Science Department, Federal University of Bahia, Salvador, Brazil",2009,WICSA
177,178,"Architecture level decisions, directly influenced by environmental factors, are crucial to preserve modularity and stability throughout software development life cycle  Tradeoffs of modularization alternatives, such as aspect oriented vs  object oriented decompositions, thus need to be assessed from architecture models instead of source code  In this paper, we present a suite of architecture level metrics, taking external factors that drive software changes into consideration and measuring how well an architecture produces independently substitutable modules  We formalize these metrics using logical models to automate quantitative stability and modularity assessment  We evaluate the metrics using eight aspectoriented and object oriented releases of a software product line architecture, driven by a series of heterogeneous changes  By contrasting with an implementation level analysis, we observe that these metrics can effectively reveal which modularization alternative generates more stable, modular design from highlevel models    2009 IEEE   18 refs",From retrospect to prospect  Assessing modularity and stability from software architecture,"['Architecture', 'Computer software', 'Modular construction', 'Object oriented programming', 'Stability', 'Architecture models', 'Aspect-oriented', 'Design stability', 'Environmental factors', 'External factors', 'High-level models', 'Logical models', 'Modular designs', 'Modularizations', 'Object oriented', 'Quantitative stability', 'Software change', 'Software development life cycle', 'Software modularity', 'Software products', 'Source codes', 'Materials Science', 'Classical Physics  Quantum Theory  Relativity', 'Chemistry', 'System Stability', 'Systems Science', 'Computer Applications', 'Computer Software, Data Handling and Applications', 'Construction Methods', 'Buildings and Towers', 'Computer Programming']","['Sethi, Kanwarpreet', '', '', 'Cai, Yuanfang', '', '', 'Wong, Sunny', '', '', 'Garcia, Alessandro', '', '', 'Sant Anna, Claudio']","Department of Computer Science, Drexel University, Philadelphia, PA, United States  2  Informatics Department, Pontifical Catholic University, Rio de Janeiro, Brazil  3  Computer Science Department, Federal University of Bahia, Salvador, Brazil",2011,WICSA
178,179,"Architecture patterns are an important tool in architectural design  However, while many architecture patterns have been identified, there is little in depth understanding of their actual use in software architectures  For instance, there is no overview of how many patterns are used per system or which patterns are the most common or most important for particular domains  In addition, little is known of how architecture patterns ay interact with each other  We studied architecture documentation of 47 systems to learn about their architecture patterns  Most systems had two or more architecture patterns, and certain patterns were prominent in different application domains  We identified several patterns that are commonly used together, and are beginning to learn how such combinations may impact system quality attributes  This information can be used to help designers select architecture patterns, can help people learn both architectures and patterns, and can be useful in architectural reviews    2008 IEEE   28 refs",Analysis of architecture pattern usage in legacy system architecture documentation,"['Administrative data processing', 'Architectural design', 'Architecture', 'Computer systems', 'Design', 'Legacy systems', 'Management information systems', 'System program documentation', 'Application domains', 'Architecture patterns', 'In-depth understanding', 'System architectures', 'System quality', 'Buildings and Towers', 'Structural Design', 'Computer Systems and Equipment', 'Computer Programming', 'Data Processing and Image Processing']","['Harrison, Neil B', '', ',', '', ' Avgeriou, Paris']","Department of Computing and Networking Sciences, Utah Valley State College, Orem, UT, United States  2  Department of Mathematics and Computing Science, University of Groningen, Groningen, Netherlands",2008,WICSA
179,180,"Architecture patterns have a direct effect  positive or negative  on a system s quality attributes  e g , performance   Therefore, information about patterns used in a product can provide valuable insights to, e g , component integrators who wish to evaluate a software product  Unfortunately, this information is often not readily available, in particular for Open Source Software  OSS  products, which are increasingly used in component based development  This paper presents the design and evaluation of a process for Identifying Architecture Patterns in OSS   IDAPO    The results of the evaluation suggest that IDAPO is helpful to identify potentially present patterns, and that a process framework may provide better opportunities for tailoring to the users  needs    2011 Springer Verlag   35 refs",Design and evaluation of a process for identifying architecture patterns in open source software,"['Computer software', 'Open systems', 'Architecture patterns', 'Empirical evaluations', 'Open Source Software', 'quality attributes', 'quasi-experiment', 'Computer Software, Data Handling and Applications']","['Stol, Klaas Jan', '', '', 'Avgeriou, Paris', '', '', 'Ali Babar, Muhammad']","Lero   The Irish Software Engineering Research Centre, University of Limerick, Ireland  2  University of Groningen, Netherlands  3  IT University of Copenhagen, Denmark",2011,ECSA
180,181,"Architecture reconstruction is a form of reverse engineering that reconstructs architectural views from an existing system  It is often necessary because a complete and authentic architectural description is not available  This paper puts forward the goals of architecture reconstruction, revisits the technical difficulties we are facing in architecture reconstruction, and presents a summary of a literature survey about the types of architectural viewpoints addressed in reverse engineering research    2005 IEEE   8 refs",What architects should know about reverse engineering and reengineering,"['Engineers', 'Professional aspects', 'Reengineering', 'Software architecture', 'Architects', 'Architecture reconstruction', 'Computer Software, Data Handling and Applications', 'Computer Applications', 'Engineering Professional Aspects', 'Quality Assurance and Control']","['Koschke, Rainer']","University of Bremen, Germany",2005,WICSA
181,182,"Architecture recovery aims at providing a high level abstraction of a system using the architectural elements to represent functionalities and interactions  This architecture makes easier the program comprehension and then provides many advantages during all the phases of software life cycle  Nevertheless, most architecture recovery approaches fail to combine the human expertise on the system with a high automation level  In order to solve this issue, we propose to use the intentional architecture of a system, which represent the system as imagined by its designers, to improve the adequation between the resulting software architecture and the architect s expectations without requiring more human expertise  Thus, we present in this paper a semi automatic process to recover intentional architecture from the available documentation and the expert recommendations  This process is an extension of ROMANTIC, an approach aiming at recovering a component based architecture of an existing object oriented system    2010 Springer Verlag Berlin Heidelberg   18 refs",Software architecture recovery process based on object oriented source code and documentation,"['Object oriented programming', 'Recovery', 'Architectural element', 'Architecture recovery', 'Component-based architecture', 'Expert recommendations', 'High automation', 'High-level abstraction', 'Human expertise', 'Object oriented', 'Object-oriented system', 'Program comprehension', 'Semi-automatics', 'Software architecture recovery', 'Software life cycles', 'Source codes', 'Metallurgy and Metallography', 'Computer Programming']","['Chardigny, Sylvain', '', '', 'Seriai, Abdelhak']","MGPS, Port Saint Louis, France  2  LIRMM, University of Montpellier II CNRS, Montpellier, France",2010,ECSA
182,183,"Architecture recovery is usually supported by a set of tools that implement techniques, such as concept analysis, clustering, data mining and pattern matching for abstracting low level source code elements into higher level architectural elements  However, the decision making in this process usually depends on a previously defined high level model of the system architecture or on criteria that are application dependent  In this paper we present a set of application independent clustering criteria to support architectural elements definition  These criteria help the user in his decision making and can be reused in many different contexts    2005 IEEE   6 refs",Towards a set of application independent clustering criteria within an architecture recovery approach,"['Abstracting', 'Codes (symbols)', 'Computer software selection and evaluation', 'Data mining', 'Decision making', 'Information analysis', 'Abstracting', 'Codes (symbols)', 'Computer software selection and evaluation', 'Data mining', 'Decision making', 'Information analysis', 'Architecture recovery', 'High level models', 'Low level source codes', 'System architecture', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Information Sources and Analysis', 'Management']","['Vasconcelos, Aline', ' ,', '', ' Werner, Cl udia']","CEFET Campos, Dr  Siqueira, 273   Pq  Dom Bosco, Campos dos Goytacazes   RJ  2  COPPE UFRJ, P O  Box 68511, 21945 970   Rio de Janeiro   RJ, Brazil",2005,WICSA
183,184,"Architecture views have long been used in software industry to systematically model complex systems by representing them from the perspective of related stakeholder concerns  However, consensus has not been reached for the architecture views between automotive architecture description languages and automotive architecture frameworks  Therefore, this paper presents the automotive architecture views based on an elaborate study of existing automotive architecture description techniques  Furthermore, we propose a method to formalize correspondence rules between architecture views to enforce consistency between architecture views  The approach was implemented in a Java plugin for IBM Rational Rhapsody and evaluated in a case study based on the Adaptive Cruise Control system  The outcome of the evaluation is considered to be a useful approach for formalizing correspondences between different views and a useful tool for automotive architects  Copyright   2014 ACM 978 1 4503 2577 6 14  06     15 00   39 refs",Formalizing correspondence rules for automotive architecture views,"['Adaptive cruise control', 'Computer control', 'Large scale systems', 'Software engineering', 'Architecture description', 'Architecture description languages', 'Architecture frameworks', 'Architecture view', 'Correspondence rule', 'Plug-ins', 'Software industry', 'Buildings and Towers', 'Highway Systems', 'Computer Programming', 'Computer Applications', 'Systems Science']","['Dajsuren, Yanja', '', '', 'Gerpheide, Christine M', '', '', ' Serebrenik, Alexander', '', '', 'Wijs, Anton', '', '', 'Vasilescu, Bogdan', '', '', 'Van Den Brand, Mark G', 'J', '', '']","Eindhoven University of Technology, 5612 AZ Eindhoven, Netherlands",2014,QoSA
184,185,"As new market opportunities, technologies, platforms, and frameworks become available, systems require large scale and systematic architectural restructuring to accommodate them  Today s architects have few tools and techniques to help them plan this architecture evolution  In particular, they have little assistance in planning alternative evolution paths, trading off various aspects of the different paths, or knowing best practices for particular domains  In this paper we describe an approach for assisting architects in developing and reasoning about architectural evolution paths  The key insight of our approach is that, architecturally, many system evolutions follow certain common patterns   or evolution styles  We define what we mean by an evolution style, and show how it can be used to provide automated assistance for expressing architectural evolution, and for reasoning about both the correctness and quality of evolution paths    2009 IEEE   40 refs",Evolution styles  Foundations and tool support for software architecture evolution,"['Architecture', 'Automata theory', 'Computer software', 'Architectural evolution', 'Automated assistance', 'Best practice', 'Market opportunities', 'Software architecture evolution', 'System evolution', 'Tool support', 'Tools and techniques', 'Buildings and Towers', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Garlan, David', '', '', 'Barnes, Jeffrey M', '', '', ' Schmerl, Bradley', '', '', 'Celiku, Orieta']","Carnegie Mellon University, Pittsburgh, PA 15213, United States",2009,ECSA
185,186,"As new market opportunities, technologies, platforms, and frameworks become available, systems require large scale and systematic architectural restructuring to accommodate them  Today s architects have few tools and techniques to help them plan this architecture evolution  In particular, they have little assistance in planning alternative evolution paths, trading off various aspects of the different paths, or knowing best practices for particular domains  In this paper we describe an approach for assisting architects in developing and reasoning about architectural evolution paths  The key insight of our approach is that, architecturally, many system evolutions follow certain common patterns   or evolution styles  We define what we mean by an evolution style, and show how it can be used to provide automated assistance for expressing architectural evolution, and for reasoning about both the correctness and quality of evolution paths    2009 IEEE   40 refs",Evolution styles  Foundations and tool support for software architecture evolution,"['Architecture', 'Automata theory', 'Computer software', 'Architectural evolution', 'Automated assistance', 'Best practice', 'Market opportunities', 'Software architecture evolution', 'System evolution', 'Tool support', 'Tools and techniques', 'Buildings and Towers', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Garlan, David', '', '', 'Barnes, Jeffrey M', '', '', ' Schmerl, Bradley', '', '', 'Celiku, Orieta']","Carnegie Mellon University, Pittsburgh, PA 15213, United States",2009,WICSA
186,187,"As new market opportunities, technologies, platforms, and frameworks become available, systems require large scale and systematic architectural restructuring to accommodate them  Today s architects have few tools and techniques to help them plan this architecture evolution  In particular, they have little assistance in planning alternative evolution paths, trading off various aspects of the different paths, or knowing best practices for particular domains  In this paper we describe an approach for assisting architects in developing and reasoning about architectural evolution paths  The key insight of our approach is that, architecturally, many system evolutions follow certain common patterns   or evolution styles  We define what we mean by an evolution style, and show how it can be used to provide automated assistance for expressing architectural evolution, and for reasoning about both the correctness and quality of evolution paths    2009 IEEE   40 refs",Evolution styles  Foundations and tool support for software architecture evolution,"['Architecture', 'Automata theory', 'Computer software', 'Architectural evolution', 'Automated assistance', 'Best practice', 'Market opportunities', 'Software architecture evolution', 'System evolution', 'Tool support', 'Tools and techniques', 'Buildings and Towers', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Garlan, David', '', '', 'Barnes, Jeffrey M', '', '', ' Schmerl, Bradley', '', '', 'Celiku, Orieta']","Carnegie Mellon University, Pittsburgh, PA 15213, United States",2011,WICSA
187,188,"As the software for avionics becomes more complex, the challenge to provide the required reliability and safety mechanisms becomes also more complex  Embracing the ARINC 650 and 653 standards to provide a means to embark several systems into a single hardware cabinet opens the door to the development of even more elaborated software avionics systems, by overcoming the space constraints once found in this kind of system  Nevertheless, ARINC 653 exhibits also some limitations regarding fault redundancy management, especially when handling redundant applications with spares that back up other applications  In this paper, a framework to support fault tolerance and reconfiguration in avionics systems under the umbrella of ARINC 653 standard is described  This paper represents part of the results of the research projects carried out during the last two years by Eurocopter Espana in collaboration with the University of Castilla La Mancha    2012 IEEE   26 refs",Supporting ARINC 653 based dynamic reconfiguration,"['Dynamic models', 'Fault tolerance', 'Redundancy', 'Software architecture', 'Software reliability', 'ARINC 653', 'Avionics systems', 'Back up', 'Dynamic re-configuration', 'Eurocopters', 'Fault redundancy', 'Integrated modular avionics', 'reconfiguration', 'RTOS', 'Safety mechanisms', 'Space constraints', 'Voting algorithm', 'Mathematics', 'Safety Engineering', 'Quality Assurance and Control', 'Information Science', 'Computer Programming', 'Digital Computers and Systems', 'Electronic Equipment, General Purpose and Industrial']","['L pez Jaquero, Victor', '', '', 'Montero, Francisco', '', '', 'Navarro, Elena', '', '', 'Esparcia, Antonio', '', '', 'Catal n, Jos', 'Antonio']","Computing Systems Department, University of Castilla La Mancha, Albacete, Spain  2  Eurocopter Espa a, EADS Group, Albacete, Spain",2012,ECSA
188,189,"As the software for avionics becomes more complex, the challenge to provide the required reliability and safety mechanisms becomes also more complex  Embracing the ARINC 650 and 653 standards to provide a means to embark several systems into a single hardware cabinet opens the door to the development of even more elaborated software avionics systems, by overcoming the space constraints once found in this kind of system  Nevertheless, ARINC 653 exhibits also some limitations regarding fault redundancy management, especially when handling redundant applications with spares that back up other applications  In this paper, a framework to support fault tolerance and reconfiguration in avionics systems under the umbrella of ARINC 653 standard is described  This paper represents part of the results of the research projects carried out during the last two years by Eurocopter Espana in collaboration with the University of Castilla La Mancha    2012 IEEE   26 refs",Supporting ARINC 653 based dynamic reconfiguration,"['Dynamic models', 'Fault tolerance', 'Redundancy', 'Software architecture', 'Software reliability', 'ARINC 653', 'Avionics systems', 'Back up', 'Dynamic re-configuration', 'Eurocopters', 'Fault redundancy', 'Integrated modular avionics', 'reconfiguration', 'RTOS', 'Safety mechanisms', 'Space constraints', 'Voting algorithm', 'Mathematics', 'Safety Engineering', 'Quality Assurance and Control', 'Information Science', 'Computer Programming', 'Digital Computers and Systems', 'Electronic Equipment, General Purpose and Industrial']","['L pez Jaquero, Victor', '', '', 'Montero, Francisco', '', '', 'Navarro, Elena', '', '', 'Esparcia, Antonio', '', '', 'Catal n, Jos', 'Antonio']","Computing Systems Department, University of Castilla La Mancha, Albacete, Spain  2  Eurocopter Espa a, EADS Group, Albacete, Spain",2012,WICSA
189,190,"As wireless communications are enhanced towards  beyond 3G   B3G , multicast transmission is attracting more and more attention because it offers a more cost effective provision of the multimedia content than the traditional unicast transmission  In this context, a problem emerges regarding the multimedia content delivery in a B3G environment, as users are reachable through several overlapping wireless access networks which potentially are multicast enabled  A mechanism is proposed in this paper to address this problem  The objective is to determine the best access network and the QoS level for each user in order to maximize the overall utilities in the system  This is achieved by three functions, namely, service scheduling  SS , network selection  NS  and QoS adaptation  QoSA   SS utilizes multicast transmission capability to save radio resource by scheduling a copy of the multimedia content to a group of users  NS and QoSA enable intelligent network resource allocation in overlapping multicast enabled networks while respecting users  preferences and QoS expectation  Simulation results confirm the significant benefit of the proposed mechanism    2005 IEEE   16 refs",Efficient multimedia content delivery over cooperative 3G and broadcasting networks,"['Broadcasting', 'Cost effectiveness', 'Multicasting', 'Quality of service', 'Wireless networks', 'Wireless telecommunication systems', 'Content delivery', 'Wireless access networks', 'Telecommunication  Radar, Radio and Television', 'Radio Systems and Equipment', 'Optical Communication', 'Data Communication, Equipment and Techniques', 'Industrial Economics']","['Huang, Luan', '', '', 'Chew, Kar Ann', '', '', 'Tafazolli, Rahim']","Mobile Communications Research Group, Center for Communication System Research, University of Surrey, Guildford, GU2 7XH, United Kingdom  2  2B Rigel House, Adastral Park, Martlesham Heaty, Ipswich, IPS 3RE, United Kingdom",2005,QoSA
190,191,"As wireless communications are enhanced towards  beyond 3G   B3G , multicast transmission is attracting more and more attention because it offers a more cost effective provision of the multimedia content than the traditional unicast transmission  In this context, a problem emerges regarding the multimedia content delivery in a B3G environment, as users are reachable through several overlapping wireless access networks, which potentially are multicast enabled  A mechanism is proposed in this paper to address this problem  The objective is to determine the best access network and the QoS level for each user in order to maximize the overall utilities in the system  This is achieved by three functions, namely, service scheduling  SS , network selection  NS  and QoS adaptation  QoSA , SS utilizes multicast transmission capability to save radio resource by scheduling a copy of the multimedia content to a group of users  NS and QoSA enable intelligent network resource allocation in overlapping multicast enabled networks while respecting users  preferences and QoS expectation  Simulation results confirm the significant benefit of the proposed mechanism   16 refs",Efficient multimedia content delivery over cooperative 3G and broadcasting networks,"['3G mobile communication', 'broadcasting', 'intelligent networks', 'mobile radio', 'multicast communication', 'multimedia communication', 'quality of service', 'radio access networks', 'resource allocation', 'scheduling', 'multimedia content delivery', 'cooperative third generation network', 'broadcasting network', 'beyond 3G', 'B3G', 'multicast transmission', 'wireless access networks', 'service scheduling', 'network selection', 'quality-of-service adaptation', 'QoS', 'radio resource', 'intelligent network resource allocation', 'Mobile radio systems', 'Radio access systems', 'Multimedia communications', 'Intelligent networks']","['Luan Huang', '', '', 'Chew, K A', ' Tafazolli, R']","Mobile Commun  Res  Group, Surrey Univ , Guildford, United Kingdom",2005,QoSA
191,192,"Aspect oriented  AO  middleware is a promising technology for the realisation of dynamic reconfiguration in distributed systems  Similar to other dynamic reconfiguration approaches, AO middleware based reconfiguration requires that the consistency of the system is maintained across reconfigurations  AO middleware based reconfiguration is an ongoing research topic and several consistency approaches have been proposed  However, most of these approaches tend to be targeted at specific narrow contexts, whereas for heterogeneous distributed systems it is crucial to cover a wide range of operating conditions  In this paper we address this problem by exploring a flexible, framework based consistency management approach that cover a wide range of operating conditions ensuring distributed dynamic reconfiguration in a consistent manner for AO middleware architectures    2014 Springer International Publishing Switzerland   15 refs",A consistency framework for dynamic reconfiguration in AO middleware architectures,"['Dynamic models', 'Software architecture', 'Aspect-oriented', 'Consistency management', 'Distributed dynamics', 'Distributed systems', 'Dynamic re-configuration', 'Heterogeneous distributed systems', 'Operating condition', 'Research topics', 'Computer Programming', 'Mathematics']","['Surajbali, Bholanathsingh', '', '', 'Grace, Paul', '', '', 'Coulson, Geoff']","Smart Research Development Centre, CAS Software AG, Karlsruhe, Germany  2  IT Innovation, University of Southampton, Southampton, United Kingdom  3  School of Computing and Communication, Lancaster University, Lancaster, United Kingdom",2014,ECSA
192,193,"Aspect oriented  AO  middleware is a promising technology for the realisation of dynamic reconfiguration in distributed systems  Similar to other dynamic reconfiguration approaches, AO middleware based reconfiguration requires that the consistency of the system is maintained across reconfigurations  AO middleware based reconfiguration is an ongoing research topic and several consistency approaches have been proposed  However, most of these approaches tend to be targeted at specific narrow contexts, whereas for heterogeneous distributed systems it is crucial to cover a wide range of operating conditions  In this paper we address this problem by exploring a flexible, framework based consistency management approach that cover a wide range of operating conditions ensuring distributed dynamic reconfiguration in a consistent manner for AO middleware architectures   15 refs",A consistency framework for dynamic reconfiguration in AO middleware architectures,"['aspect-oriented programming', 'middleware', 'software architecture', 'consistency framework', 'AO-middleware architectures', 'aspect-oriented middleware', 'system consistency', 'AO middleware-based reconfiguration', 'heterogeneous distributed systems', 'operating conditions', 'framework-based consistency management', 'distributed dynamic reconfiguration', 'Other distributed systems software', 'Software engineering techniques', 'Object oriented programming']","['Surajbali, B', '', '', ' Grace, P', '', '', ' Coulson, G', '', '']","Smart Res  Dev  Centre, CAS Software AG, Karlsruhe, Germany  2  IT Innovation, Univ  of Southampton, Southampton, United Kingdom  3  Sch  of Comput    Commun , Lancaster Univ , Lancaster, United Kingdom",2014,ECSA
193,194,"Authentic descriptions of a software architecture are required as a reliable foundation for any but trivial changes to a system  Far too often, architecture descriptions of existing systems are out of sync with the implementation  If they are, they must be reconstructed  There are many existing techniques for reconstructing individual architecture views, but no information about how to select views for reconstruction, or about process aspects of architecture reconstruction in general  In this paper we describe view driven process for reconstructing software architecture that fills this gap  To describe Symphony, we present and compare different case studies, thus serving a secondary goal of sharing real life reconstruction experience  The Symphony process incorporates the state of the practice, where reconstruction is problem driven and uses a rich set of architecture views  Symphony provides a common framework for reporting reconstruction experiences and for comparing reconstruction approaches  Finally, it is a vehicle for exposing and demarcating research problems in software architecture reconstruction   33 refs",Symphony  View driven software architecture reconstruction,"['Codes (symbols)', 'Information analysis', 'Knowledge engineering', 'Problem solving', 'Risk assessment', 'Systems analysis', 'Hyperstructure', 'Software architecture', 'Source text', 'Symphony process', 'Computer Programming', 'Data Processing and Image Processing', 'Artificial Intelligence', 'Information Sources and Analysis', 'Operations Research', 'Accidents and Accident Prevention']","['Van Deursen, Arie', '', '', 'Hofmeister, Christine', '', '', 'Koschke, Rainer', '', '', 'Moonen, Leon', '', '', 'Riva, Claudio']","CWI, Delft Univ  of Technology, Netherlands  2  Lehigh University, United States  3  University of Stuttgart, Germany  4  Nokia Research Center, Helsinki, Finland",2004,WICSA
194,195,"Authentic descriptions of a software architecture are required as a reliable foundation for any but trivial changes to a system  Far too often, architecture descriptions of existing systems are out of sync with the implementation  If they are, they must be reconstructed  There are many existing techniques for reconstructing individual architecture views, but no information about how to select views for reconstruction, or about process aspects of architecture reconstruction in general  In this paper we describe view driven process for reconstructing software architecture that fills this gap  To describe Symphony, we present and compare different case studies, thus serving a secondary goal of sharing real life reconstruction experience  The Symphony process incorporates the state of the practice, where reconstruction is problem driven and uses a rich set of architecture views  Symphony provides a common framework for reporting reconstruction experiences and for comparing reconstruction approaches  Finally, it is a vehicle for exposing and demarcating research problems in software architecture reconstruction   33 refs",Symphony  view driven software architecture reconstruction,"['reverse engineering', 'software architecture', 'Symphony', 'view-driven software architecture reconstruction', 'Software engineering techniques']","['van Deursen, A', '', '', ' Hofmeister, C', ' Koschke, R', ' Moonen, L', ' Riva, C']","CWI   Delft Univ  of Technol , Netherlands",2004,WICSA
195,196,"Automated services help enterprises create new value from reuse of software and resources and achieve new levels of agility through greater flexibility and lower cost structures  As services come in many flavors and guises they have differing characteristics  In this paper we describe the most necessary aspects and features of automated services  We also focus on the interplay of SOAs and Business Process Management technologies and argue that the key enablers for Service Oriented Architectures  SOAs  should focus on four inter related elements  engineering and planning the SOA, SOA implementation, SOA management and monitoring and SOA governance    Springer Verlag Berlin Heidelberg 2007   16 refs",What s in a service,"['Condition monitoring', 'Electronic commerce', 'Information management', 'Planning', 'Automated services', 'Business processes', 'Service oriented architecture', 'Computer Programming', 'Computer Applications', 'Information Dissemination', 'Management', 'Maintenance']","['Papazoglou, Michael P', '', '']","INFOLAB, Tilburg University, Dept  of Information Systems and Management, Tilburg, LE 5000, Netherlands",2007,ECSA
196,197,"Automated services help enterprises create new value from reuse of software and resources and achieve new levels of agility through greater flexibility and lower cost structures  As services come in many flavors and guises they have differing characteristics  In this paper we describe the most necessary aspects and features of automated services  We also focus on the interplay of SOAs and Business Process Management technologies and argue that the key enablers for Service Oriented Architectures  SOAs  should focus on four inter related elements  engineering and planning the SOA, SOA implementation, SOA management and monitoring and SOA governance    Springer Verlag Berlin Heidelberg 2007   16 refs",What s in a service,"['Condition monitoring', 'Electronic commerce', 'Information management', 'Planning', 'Automated services', 'Business processes', 'Service oriented architecture', 'Computer Programming', 'Computer Applications', 'Information Dissemination', 'Management', 'Maintenance']","['Papazoglou, Michael P', '', '']","INFOLAB, Tilburg University, Dept  of Information Systems and Management, Tilburg, LE 5000, Netherlands",2008,ECSA
197,198,"Automating sophisticated, personalized expert activities, which are based on the application of professional knowledge to process an individual case, remains a great challenge  It is all the more relevant in some complex domains such as preventive medicine or e learning where reliable and self adaptive solutions are expected by users  In this paper we analyze differences between typical procedure based business processes automation and expert activities automation  We propose to integrate context related knowledge into the business process modeling via the development of an intelligent process management agent  The latter is designed to dynamically orchestrate the set of services that will build up the process reproducing an expert activity, adapted to the concrete client s context    2010 Springer Verlag Berlin Heidelberg   4 refs",Expert activities automation through enhanced business services orchestration,"['Automation', 'Ontology', 'Web services', 'Dynamic business process', 'Expert activity', 'Model-driven', 'Ontology-based approach', 'Web services orchestration', 'Computer Software, Data Handling and Applications', 'Automatic Control Principles and Applications', 'Control Devices', 'Information Science']","['Krupaviciute, Asta', '', '', 'Fayn, Jocelyne']","MTIC EA4171, INSA de Lyon, Universit  de Lyon 1, Bron F69677, France",2010,ECSA
198,199,"Banking applications require a high standard of security, resilience and adaptation  The results presented here were obtained from a case study of the deployment of the security metrics driven adaptive security solutions of a distributed middleware in the context of monetary transfers  The focus of this study is on the analysis of the applicability of security metrics for adaptive authentication, authorization, and end to end confidentiality, and the applicability of trust metrics    2010 ACM   28 refs",Applicability of security metrics for adaptive security management in a universal banking hub system,"['Authentication', 'Middleware', 'Technical presentations', 'Adaptive security', 'Distributed middleware', 'High standards', 'Hub systems', 'Security measure', 'Security metrics', 'Trust metrics', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Information Dissemination']","['Blasi, Lorenzo', '', '', 'Savola, Reijo', '', '', 'Abie, Habtamu', '', '', 'Rotondi, Domenico']","Italy Innovation Center, Hewlett Packard Italiana S r l , Cernusco s N  MI , Italy  2  VTT Technical Research Centre of Finland, Oulu, Finland  3  Norwegian Computing Center, Oslo, Norway  4  TXT e solutions S p A , Valenzano  BA , Italy",2010,ECSA
199,200,"Based on elliptic curve discrete logarithm problem and KEM DEM hybrid encryption construction, a novel certificateless hybrid encryption scheme is proposed  Elliptic Curve Signature Algorithm ECSA  is used to provide unforgeability of user public key  Owing to KEM DEM construction user public key is used to generate session key and session key encapsulation  Plaintext is encrypted by symmetry encryption scheme with session kev  which provides the confidentiality of plaintext without the strict limitation for plaintext message space  Tin  main operations is point operation in elliptic curve  Compared with previous certificateless encryption schemes related to bilinear pairing operation the scheme is more efficient on computation   7 refs",Certificateless hybrid encryption based on elliptic curve discrete logarithm,"['public key cryptography', 'certificateless hybrid encryption', 'elliptic curve discrete logarithm', 'public key', 'plaintext', 'symmetry encryption', 'session kev', 'bilinear pairing operation', 'Cryptography', 'Data security']","['Lai Xin', '', '', 'He Da ke', '', '', 'Huang Xiao fang']","Inf  Security   Nat  Comput  Grid Lab   IS NC , Southwest Jiaotong Univ , Chengdu, China  2  Inf  Security Center, Beijing Univ  of Post   Telecommun , Beijing, China",2008,ECSA
200,201,"Because of their widespread geographical distribution and high capacity of bioaccumulation, bivalve species, in particular blue mussels  Mytilus edulis , are considered as sentinel organisms in Ecotoxicology for monitoring the effects of xenobiotics in estuaries and coastal areas  The purpose of this study was to identify molecular biomarkers for atrazine exposure by using differential analysis of gene expression  For this, the digestive gland transcriptome of atrazine exposed mussels  1  g l 1, 24 h  was compared to that of control animals  Candidate transcripts for differential expression were isolated by Subtractive PCR Suppressive Hybridization  SSH   A total of 543 potentially regulated clones was isolated  A part of these clones was sequenced and extensive similarity searches in genome data bases were carried out  Among the sequenced cDNA clones, gld15, gld122 and gld177 which corresponded to potentially down regulated mRNA, were likely to encode for a Mytilus edulis DnaK type molecular chaperone of the Heat shock 70 protein family  As a matter of fact, the deduced peptide sequence of gld15 comprised 223 amino acids and possessed 87 4  of identity with the human Hsc70  Heat shock proteins and, in particular Hsc70 and Hsp70, are considered as molecular chaperones involved in various cellular processes including refolding of damaged proteins and apoptosis  The fact that atrazine potentially down regulates the expression of a cytoprotective gene was unexpected and further experiments are required to measure the kinetics and dose response effects of atrazine on DnaK gene expression  Differential gene expression analysis is one of most widely used approach of the postgenomics era in the biomedical field of research and it may prove to be a valuable tool for the identification of new and relevant biomarkers in Ecotoxicology    2007 Springer Science Business Media B V   41 refs",Identification of the gene encoding a Dnak type molecular chaperone as potentially down regulated in blue mussels  Mytilus edulis  following acute exposure to atrazine,"['Bioaccumulation', 'Biomarkers', 'Herbicides', 'Molecular structure', 'Toxicity', 'Bivalve', 'Mytilus edulis', 'Subtractive PCR Suppressive Hybridization', 'Health Care', 'Biology', 'Geology', 'Physical Chemistry', 'Organic Compounds', 'Atomic and Molecular Physics']","['Masson, R', '', '', ' Loup, B', '', '', ' Bultelle, F', '', '', ' Siah, A', '', '', ' Leboulenger, F', '', '', ' Danger, J M', '', '']","Laboratoire d Ecotoxicologie   Milieux Aquatiques  UPRES EA 3222, IFRMP23, GDR IFREMER , University of Le Havre, Le Havre Cedex 76058, France",2007,ECSA
201,202,"Because of their widespread geographical distribution and high capacity of bioaccumulation, bivalve species, in particular blue mussels  Mytilus edulis , are considered as sentinel organisms in Ecotoxicology for monitoring the effects of xenobiotics in estuaries and coastal areas  The purpose of this study was to identify molecular biomarkers for atrazine exposure by using differential analysis of gene expression  For this, the digestive gland transcriptome of atrazine exposed mussels  1  g l 1, 24 h  was compared to that of control animals  Candidate transcripts for differential expression were isolated by Subtractive PCR Suppressive Hybridization  SSH   A total of 543 potentially regulated clones was isolated  A part of these clones was sequenced and extensive similarity searches in genome data bases were carried out  Among the sequenced cDNA clones, gld15, gld122 and gld177 which corresponded to potentially down regulated mRNA, were likely to encode for a Mytilus edulis DnaK type molecular chaperone of the Heat shock 70 protein family  As a matter of fact, the deduced peptide sequence of gld15 comprised 223 amino acids and possessed 87 4  of identity with the human Hsc70  Heat shock proteins and, in particular Hsc70 and Hsp70, are considered as molecular chaperones involved in various cellular processes including refolding of damaged proteins and apoptosis  The fact that atrazine potentially down regulates the expression of a cytoprotective gene was unexpected and further experiments are required to measure the kinetics and dose response effects of atrazine on DnaK gene expression  Differential gene expression analysis is one of most widely used approach of the postgenomics era in the biomedical field of research and it may prove to be a valuable tool for the identification of new and relevant biomarkers in Ecotoxicology    2007 Springer Science Business Media B V   41 refs",Identification of the gene encoding a Dnak type molecular chaperone as potentially down regulated in blue mussels  Mytilus edulis  following acute exposure to atrazine,"['Bioaccumulation', 'Biomarkers', 'Herbicides', 'Molecular structure', 'Toxicity', 'Bivalve', 'Mytilus edulis', 'Subtractive PCR Suppressive Hybridization', 'Health Care', 'Biology', 'Geology', 'Physical Chemistry', 'Organic Compounds', 'Atomic and Molecular Physics']","['Masson, R', '', '', ' Loup, B', '', '', ' Bultelle, F', '', '', ' Siah, A', '', '', ' Leboulenger, F', '', '', ' Danger, J M', '', '']","Laboratoire d Ecotoxicologie   Milieux Aquatiques  UPRES EA 3222, IFRMP23, GDR IFREMER , University of Le Havre, Le Havre Cedex 76058, France",2008,ECSA
202,203,"Being able to specify and verify contractual application properties at the architecture level allows architects to build better architected and more reliable systems  In this paper, we propose a model based framework for designing contractualized architecture, independently of any paradigm  components or services   It enables a software architect to express the structural, behavioral, dataflow and QoS properties of his her application  Our framework composes these properties in order to compute and check the properties of the assemblies incrementally  This allows architects to see the influence of their design decisions on the quality of his her architecture and thus helps them to better design their systems architecture    2008 Springer Berlin Heidelberg   29 refs",Architectural specification and static analyses of contractual application properties,"['Computer software selection and evaluation', 'Application properties', 'Architectural specifications', 'Dataflow', 'Design decisions', 'Model-based', 'QoS properties', 'Reliable systems', 'Software architects', 'Systems architecture', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Waignier, Guillaume', '', '', 'Le Meur, Anne Fran oise', '', '', 'Duchien, Laurence']","Universit  Lille 1, LIFL, INRIA, 40, avenue Halley, 59650 Villeneuve d Ascq, France",2008,QoSA
203,204,"Being able to specify and verify contractual application properties at the architecture level allows architects to build better architected and more reliable systems  In this paper, we propose a model based framework for designing contractualized architecture, independently of any paradigm  components or services   It enables a software architect to express the structural, behavioral, dataflow and QoS properties of his her application  Our framework composes these properties in order to compute and check the properties of the assemblies incrementally  This allows architects to see the influence of their design decisions on the quality of his her architecture and thus helps them to better design their systems architecture   29 refs",Architectural specification and static analyses of contractual application properties,"['formal specification', 'program diagnostics', 'program verification', 'software architecture', 'software reliability', 'systems analysis', 'architectural specification', 'static analyses', 'contractual application properties', 'contractualized architecture design', 'software architect', 'QoS properties', 'Software engineering techniques', 'Formal methods', 'Diagnostic, testing, debugging and evaluating systems']","['Waignier, G', '', '', ' Le Meur, A', 'F', '', '', ' Duchien, L']","INRIA 40, LIFL CNRS UMR 8022   INRIA 40, Villeneuve d Ascq, France",2008,QoSA
204,205,"Besides structural and behavioural properties, rationale plays a crucial role in defining the architecture of a software system  However, unlike other architectural features, rationale often remains unspecified and inaccessible to tools  Existing approaches for recording rationale are not widely adopted  This paper proposes a simple model for capturing rationales as part of an architecture specification and attaching them to elements in the architecture  The bi directional links between rationales and elements enable forward and backward traceability  We describe a textual architecture description language named Grasp that implements this model, and illustrate its capabilities using an example    2011 Springer Verlag   16 refs",A model for specifying rationale using an architecture description language,"['Mathematical models', 'Architectural features', 'Architecture description languages', 'Architecture specification', 'Bi-directional links', 'Software systems', 'Computer Programming', 'Mathematics']","['De Silva, Lakshitha', '', '', 'Balasubramaniam, Dharini']","School of Computer Science, University of St  Andrews, St Andrews, KY16 9SX, United Kingdom",2011,ECSA
205,206,"Bi functional catalysts are used to solve the poisoning problem caused by carbon monoxide  CO  which is the intermediate of direct methanol fuel cells  DMFCs   Flower like vivianite  Fe3 PO4  2 8H2O  spheres with diameter around 10  m are originally used as supports of Pt to form bifunction catalysts  The cyclic voltammetry in 1 M H2SO4 indicates that the electrochemical surface area  ECSA  of Pt reduced on as prepared vivianite  Pt Vi  was 105, greater than 91 m2 g 1 for the commercial Pt C  Besides, Pt Vi reveals the less CO poisoning effects, including the greater mass activity in methanol oxidation and the lower onset potential in CO stripping than Pt C  These excellent performances on electrolyzes are related to the chemical state of Fe3  and the coexistence of Pt0 and Pt2  in Pt Vi  The former activates the water and yields Fe OHads at lower potential and the latter may offer an easy way of electron transition  Crown Copyright   2012, Hydrogen Energy Publications, LLC  Published by Elsevier Ltd  All rights reserved   48 refs",Platinum vivianite bifunction catalysts for DMFC,"['Carbon monoxide', 'Cyclic voltammetry', 'Direct methanol fuel cells (DMFC)', 'Electron transitions', 'Phosphate minerals', 'Platinum', 'Platinum alloys', 'Bi-functional catalysts', 'Bifunction catalyst', 'Direct methanol fuel cells (DMFCs)', 'Electrochemical surface area', 'Methanol Oxidation', 'Onset potential', 'Poisoning problem', 'Vivianite', 'Inorganic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Electric Variables Measurements', 'Electromagnetic Waves in Different Media', 'Precious Metals', 'Minerals', 'Fuel Cells']","['Pai, Nai Su', '', '', 'Chang, Po Sheng', '', '', 'Yen, Shiow Kang']","Department of Materials Science and Engineering, National Chung Hsing University, 250, Kuo Kuang Road, Taichung 40227, Taiwan",2013,ECSA
206,207,"Big Data Management has become a critical task in many application systems, which usually rely on heavyweight batch processes to process large amounts of data  However, batch architectures are not an adequate choice for the design of real time systems, where expected response times are several orders of magnitude underneath  This paper outlines the foundations for defining an architecture able to deal with such an scenario, fulfilling the specific needs of real time systems which expose big RDF datasets  Our proposal  Solid  is a tiered architecture which separates the complexities of Big Data management from their real time data generation and consumption  Big semantic data are stored and indexed in a compressed way following the Rdf Hdt proposal  while at the same time, real time requirements are addressed using NoSQL technology  Both are efficient layers, but their approaches are quite different and their combination is not easy  Two additional layers are required to achieve an overall high performance, satisfying real time needs, and able to work even in a mobile context    2013 Springer Verlag   16 refs",Towards an architecture for managing big semantic data in real time,"['Batch data processing', 'Information management', 'Real time systems', 'Software architecture', 'Application systems', 'Critical tasks', 'Large amounts of data', 'Mobile context', 'Orders of magnitude', 'Real time requirement', 'Real-time data', 'Tiered architecture', 'Buildings and Towers', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Cuesta, Carlos E', '', '', ' Mart nez Prieto, Miguel A', '', ',', ',', '', ' Fern ndez, Javier D', '', ',', ',', '']","VorTIC3 Research Group, Dept  of Comp  Languages and Systems II, Rey Juan Carlos University, Madrid, Spain  2  DataWeb Research, Dept  of Computer Science, University of Valladolid, Segovia, Spain  3  DataWeb Research, Dept  of Computer Science, University of Valladolid, Valladolid, Spain  4  Dept  of Computer Science, University of Chile, Santiago, Chile",2013,ECSA
207,208,"Big data phenomenon refers to the practice of collection and processing of very large data sets and associated systems and algorithms used to analyze these massive datasets  Architectures for big data usually range across multiple machines and clusters, and they commonly consist of multiple special purpose sub systems  Coupled with the knowledge discovery process, big data movement offers many unique opportunities for organizations to benefit  with respect to new insights, business optimizations, etc    However, due to the difficulty of analyzing such large datasets, big data presents unique systems engineering and architectural challenges  In this paper, we present three system design principles that can inform organizations on effective analytic and data collection processes, system organization, and data dissemination practices  The principles presented derive from our own research and development experiences with big data problems from various federal agencies, and we illustrate each principle with our own experiences and recommendations    2012 IEEE   23 refs",Design principles for effective knowledge discovery from big data,"['Architecture', 'Big datum', 'Business optimization', 'Data collection process', 'Data dissemination', 'Design Principles', 'Federal agency', 'Knowledge discovery process', 'Large datasets', 'Massive data sets', 'Multiple machine', 'Research and development', 'Sub-systems', 'Three systems', 'Very large datum', 'Buildings and Towers', 'Computer Programming']","['Begoli, Edmon', '', '', 'Horey, James']","Computational Sciences and Engineering Division, Oak Ridge National Laboratory, Oak Ridge, TN, United States",2012,ECSA
208,209,"Big data phenomenon refers to the practice of collection and processing of very large data sets and associated systems and algorithms used to analyze these massive datasets  Architectures for big data usually range across multiple machines and clusters, and they commonly consist of multiple special purpose sub systems  Coupled with the knowledge discovery process, big data movement offers many unique opportunities for organizations to benefit  with respect to new insights, business optimizations, etc    However, due to the difficulty of analyzing such large datasets, big data presents unique systems engineering and architectural challenges  In this paper, we present three system design principles that can inform organizations on effective analytic and data collection processes, system organization, and data dissemination practices  The principles presented derive from our own research and development experiences with big data problems from various federal agencies, and we illustrate each principle with our own experiences and recommendations    2012 IEEE   23 refs",Design principles for effective knowledge discovery from big data,"['Architecture', 'Big datum', 'Business optimization', 'Data collection process', 'Data dissemination', 'Design Principles', 'Federal agency', 'Knowledge discovery process', 'Large datasets', 'Massive data sets', 'Multiple machine', 'Research and development', 'Sub-systems', 'Three systems', 'Very large datum', 'Buildings and Towers', 'Computer Programming']","['Begoli, Edmon', '', '', 'Horey, James']","Computational Sciences and Engineering Division, Oak Ridge National Laboratory, Oak Ridge, TN, United States",2012,WICSA
209,210,"Both  Ni, Pt  and bimetallic  NixPt  x   1, 2, 3  nanoparticles have been synthesized by hydrogenation of Ni cod 2 ad Pt 2 dba 3 in the presence of a weak coordinating ligand, hexadecylamine  CH3 CH2 15NH2, HDA   These nanostructures were characterized by different techniques  Fourier Transform Infrared Spectroscopy  FT IR , High Resolution Transmission Electron Microscopy  HRTEM  , and were evaluated as Hydrogen Evolution Reaction electrocatalysts in 0 5 M sulfuric acid  The effects of varying the platinum amount during the synthesis were systematically studied by Cyclic Voltammetry  CV , polarization measurements and electrochemical impedance spectroscopy  EIS  techniques  HRTEM shows that the bimetallic nanostructures display a different morphology compared to that observed for pure Ni and Pt ones  The process of hydrogen adsorption desorption in the as prepared electrodes seems to occur in  110  and  100  facets  It was found that the increase in the activity for the HER is due to an increased electrochemical active surface area  ECSA  and or stabilization in the case of elemental electrode materials  and to the effect of Pt amount in the case of the Ni Pt nanostructures  synergistic effect leads to lower overpotential   It has been established that the main pathway for the HER is Volmer Heyrovsky    2011, Hydrogen Energy Publications, LLC  Published by Elsevier Ltd  All rights reserved   68 refs","Kinetics of hydrogen evolution reaction on stabilized Ni, Pt and Ni Pt nanoparticles obtained by an organometallic approach","['Cyclic voltammetry', 'Electrocatalysts', 'Electrochemical impedance spectroscopy', 'Hydrogen', 'Infrared spectroscopy', 'Kinetic parameters', 'Nanoparticles', 'Organometallics', 'Platinum', 'Reaction kinetics', 'Sulfuric acid', 'Synthesis (chemical)', 'Transmission electron microscopy', 'Adsorption desorption', 'Bimetallic nanostructures', 'Coordinating ligands', 'Electrochemical active surface areas', 'Electrochemical impedance', 'Electrode material', 'Hexadecylamine', 'Hydrogen evolution reaction', 'Hydrogen evolution reactions', 'Ni-base alloys', 'Overpotential', 'Polarization measurements', 'Synergistic effect', 'Solid State Physics', 'Physical Properties of Gases, Liquids and Solids', 'Classical Physics  Quantum Theory  Relativity', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Electrochemistry', 'Chemistry', 'Nanotechnology', 'Optical Devices and Systems', 'Light Optics', 'Electric and Magnetic Materials', 'Precious Metals']","['Dom nguez Crespo, M A', '', '', ' Ram rez Meneses, E', '', '', ' Torres Huerta, A M', '', '', ' Garibay Febles, V', '', '', ' Philippot, K', '', ',', '']","Centro de Investigaci n en Ciencia Aplicada y Tecnolog a Avanzada, CICATA IPN Unidad Altamira, Carretera Tampico Puerto Industrial, C P  89600 Altamira, Tamaulipas, Mexico  2  Universidad Iberoamericana, Departamento de Ingenier a y Ciencias Qu micas, Prolongaci n Paseo de la Reforma 880, Lomas de Santa Fe M xico, C P  01219, Mexico  3  Laboratorio de Microscopia de Ultra Alta Resoluci n, Instituto Mexicano Del Petr leo, Eje Central L zaro C rdenas No  152, C P  07730, Mexico  4  CNRS, LCC  Laboratorie de Chimie de Coordination , 205 Route de Narbonne, F 31077 Toulouse, France  5  Universit  Toulouse, UPS, LCC, F 31077 Toulouse, France",2012,ECSA
210,211,"Building and maintaining non trivial software systems that are independently extensible is a difficult task  This is because the combination of independent extensions tends to produce conflicts that are difficult to anticipate, and to which no general resolution strategy exists  In this paper, we show how some of these conflicts can be avoided if domain specific contexts are modeled using a representation that is open for extension and safe for sharing among independent extensions    2010 Springer Verlag Berlin Heidelberg   17 refs",Independently extensibile contexts,"['Context', 'Domain specific', 'Independent extensibility', 'Non-trivial', 'Openness', 'Resolution strategy', 'Sharing', 'Software systems', 'Computer Programming']","['Rytter, Martin', '', '', 'Jrgensen, Bo Nrregaard']","Maersk Mc Kinney Moller Institute, University of Southern Denmark, Campusvej 55, Odense M 5230, Denmark",2010,ECSA
211,212,"Building autonomic applications, which are systems that must adapt to their execution context, requires architects to calibrate and validate the adaptation rules by executing their applications in a realistic execution context  Unfortunately, existing works do not allow architects to monitor and visualize the impact of their rules, nor that they let them adjust these rules easily  This paper presents a model based framework that enables architects to design and debug autonomic systems in an iterative and uniformed process  At design time, architects can specify, using models, the application s structure and properties, as well as the desired adaptation rules  At debugging time, the running application and the models coexist such that the models control the application dynamic adaptation, thanks to a control loop that reified runtime events  Each triggered adaptation is first tested at the model level to check that no application property is broken  Furthermore, architects can at any time modify the models in order to adjust the adaptation rules or even parts of the application  All changes at the model level, if checked correct, are directly propagated to the running application  Our solution is generic regarding the underlying platforms and we provide a performance evaluation of our framework implementation    2009 Springer Berlin Heidelberg   26 refs",A model based framework to design and debug safe component based autonomic systems,"['Computer software selection and evaluation', 'Adaptation rules', 'Application properties', 'Autonomic applications', 'Autonomic Systems', 'Component based', 'Control loop', 'Debugging-time', 'Dynamic adaptations', 'Execution context', 'Model-based', 'Performance evaluation', 'Running applications', 'Runtimes', 'Structure and properties', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Waignier, Guillaume', '', '', 'Le Meur, Anne Fran oise', '', '', 'Duchien, Laurence']","Universit  Lille 1, LIFL CNRS UMR 8022, INRIA, Villeneuve d Ascq 59650, France",2009,QoSA
212,213,"Building high performance analytical applications for data streams generated from sensors is a challenging software engineering problem  Such applications typically comprise a complex pipeline of processing components that capture, transform and analyze the incoming data stream  In addition, applications must provide high throughput, be scalable and easily modifiable so that new analytical components can be added with minimum effort  In this paper we describe the MeDICi Integration Framework  MIF , which is a middleware platform we have created to address these challenges  The MIF extends an open source messaging platform with a component based API for integrating components into analytical pipelines  We describe the features and capabilities of the MIF, and show how it has been used to build a production analytical application for detecting cyber security attacks  The application was composed from multiple independently developed components using several different programming languages  The resulting application was able to process network sensor traffic in real time and provide insightful feedback to network analysts as soon as potential attacks were recognized   22 refs",The MeDICi Integration Framework  A platform for high performance data streaming applications,"['Application programming interfaces (API)', 'Chlorine compounds', 'Computer software', 'Computer systems programming', 'Data mining', 'Data processing', 'Data reduction', 'Electron beam lithography', 'High performance liquid chromatography', 'Integration', 'Middleware', 'Pipelines', 'Sensor networks', 'Sensors', 'Software architecture', 'Software engineering', 'Technology', 'Throughput', 'Analytical applications', 'Component-based', 'Cyber-security', 'Data streaming', 'High throughputs', 'Integration frameworks', 'Middleware platforms', 'Open sources', 'Performance data', 'Programming languages', 'Real time', 'Sensor traffic', 'Calculus', 'Management', 'Engineering Profession', 'Organic Compounds', 'Chemistry', 'Printing', 'Control Instrumentation', 'Control Systems', 'Data Processing and Image Processing', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Pipe, Piping and Pipelines', 'Air Pollution Control']","['Gorton, Ian', '', '', 'Wynne, Adam', '', '', 'Almquist, Justin', '', '', 'Chatterton, Jack']","Pacific Northwest National Lab , Richland, WA 99352, United States",2008,WICSA
213,214,"Business and design decisions regarding software development should be based on data, not opinions among developers, domain experts or managers  The company running the most and fastest experiments among the customer base against the lowest cost per experiment outcompetes others by having the data to engineer products with outstanding qualities such as power consumption and user experience  Innovation experiment systems for mass produced devices with embedded software is an evolution of current R D practices, going from where innovations are internally evaluated by the original equipment manufacturer to where they are tried by real users in a scale relevant to the full customer base  The turnaround time from developing and deploying an embedded product to getting customer feedback is decreased to weeks, the limit being the speed of the software development teams  The paper presents an embedded architecture for realising such a novel innovation experiment system based on a set of scenarios of what to evaluate in the experiments  A case is presented implementing an architecture in a prototype in vehicle infotainment system where comparative testing between two software alternatives was performed    2012 IEEE   9 refs",Architecture for large scale innovation experiment systems,"['Automobile manufacture', 'Embedded software', 'Product development', 'Software architecture', 'Software design', 'Software testing', 'Turnaround time', 'Comparative testing', 'Customer feedback', 'Customerbase', 'Design decisions', 'Domain experts', 'Embedded architecture', 'Experiment system', 'In-vehicle', 'Infotainment systems', 'Large-scale innovations', 'Original equipment manufacturers', 'Software development teams', 'User experience', 'Automobiles', 'Computer Software, Data Handling and Applications', 'Computer Applications', 'Engineering Research', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Eklund, Ulrik', '', '', 'Bosch, Jan']","Software Engineering Division, Dept  of Computer Science and Engineering, Chalmers University of Technology, G teborg, Sweden",2012,ECSA
214,215,"Business and design decisions regarding software development should be based on data, not opinions among developers, domain experts or managers  The company running the most and fastest experiments among the customer base against the lowest cost per experiment outcompetes others by having the data to engineer products with outstanding qualities such as power consumption and user experience  Innovation experiment systems for mass produced devices with embedded software is an evolution of current R D practices, going from where innovations are internally evaluated by the original equipment manufacturer to where they are tried by real users in a scale relevant to the full customer base  The turnaround time from developing and deploying an embedded product to getting customer feedback is decreased to weeks, the limit being the speed of the software development teams  The paper presents an embedded architecture for realising such a novel innovation experiment system based on a set of scenarios of what to evaluate in the experiments  A case is presented implementing an architecture in a prototype in vehicle infotainment system where comparative testing between two software alternatives was performed    2012 IEEE   9 refs",Architecture for large scale innovation experiment systems,"['Automobile manufacture', 'Embedded software', 'Product development', 'Software architecture', 'Software design', 'Software testing', 'Turnaround time', 'Comparative testing', 'Customer feedback', 'Customerbase', 'Design decisions', 'Domain experts', 'Embedded architecture', 'Experiment system', 'In-vehicle', 'Infotainment systems', 'Large-scale innovations', 'Original equipment manufacturers', 'Software development teams', 'User experience', 'Automobiles', 'Computer Software, Data Handling and Applications', 'Computer Applications', 'Engineering Research', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Eklund, Ulrik', '', '', 'Bosch, Jan']","Software Engineering Division, Dept  of Computer Science and Engineering, Chalmers University of Technology, G teborg, Sweden",2012,WICSA
215,216,"By allowing resources to be acquired on demand and in variable amounts, cloud computing provides an appealing environment for deploying pilot projects and for performance testing of Web applications and services  However, setting up cloud environments for performance testing still requires a significant amount of manual effort  To aid performance engineers in this task, we developed a framework that integrates several common benchmarking and monitoring tools  The framework helps performance engineers to test applications under various configurations and loads  Furthermore, the framework supports dynamic server allocation based on incoming load using a response time aware heuristics  We validated the framework by deploying and stress testing the MediaWiki application  An experimental evaluation was conducted aimed at comparing the response time aware heuristics against Amazon Auto Scale  Copyright 2012 ACM   13 refs",Framework for monitoring and testing web application scalability on the cloud,"['Cloud computing', 'Software architecture', 'World Wide Web', 'Auto-scale', 'Auto-scaling', 'Experimental evaluation', 'MediaWiki', 'Monitoring tools', 'Performance testing', 'Pilot projects', 'Test applications', 'WEB application', 'Production Planning and Control  Manufacturing', 'Industrial Engineering and Management', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television']","['Vasar, Martti', '', '', 'Srirama, Satish Narayana', '', '', 'Dumas, Marlon']","Institute of Computer Science, University of Tartu J , Liivi 2, Tartu, Estonia",2012,ECSA
216,217,"By allowing resources to be acquired on demand and in variable amounts, cloud computing provides an appealing environment for deploying pilot projects and for performance testing of Web applications and services  However, setting up cloud environments for performance testing still requires a significant amount of manual effort  To aid performance engineers in this task, we developed a framework that integrates several common benchmarking and monitoring tools  The framework helps performance engineers to test applications under various configurations and loads  Furthermore, the framework supports dynamic server allocation based on incoming load using a response time aware heuristics  We validated the framework by deploying and stress testing the MediaWiki application  An experimental evaluation was conducted aimed at comparing the response time aware heuristics against Amazon Auto Scale  Copyright 2012 ACM   13 refs",Framework for monitoring and testing web application scalability on the cloud,"['Cloud computing', 'Software architecture', 'World Wide Web', 'Auto-scale', 'Auto-scaling', 'Experimental evaluation', 'MediaWiki', 'Monitoring tools', 'Performance testing', 'Pilot projects', 'Test applications', 'WEB application', 'Production Planning and Control  Manufacturing', 'Industrial Engineering and Management', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television']","['Vasar, Martti', '', '', 'Srirama, Satish Narayana', '', '', 'Dumas, Marlon']","Institute of Computer Science, University of Tartu J , Liivi 2, Tartu, Estonia",2012,WICSA
217,218,"COMMUNITY is a formal approach to software architecture  Its main characteristics are  a precise, yet intuitive mathematical semantics based on categorical diagrams  a clear separation between computation, coordination, and distribution  including mobility   and a simple state based language, inspired by Unity, to describe behaviour  This paper discusses the applicability of this approach to locationaware systems through the modelling of the GSM handover protocol, namely the way communication with a moving cellular phone passes from one station to another  The case study was developed with the COMMUNITY Workbench, a tool that animates distributed and mobile architectural models   8 refs",An architectural approach to mobility   The handover case study,"['Cellular telephone systems', 'Channel capacity', 'Computer software', 'Global system for mobile communications', 'Mathematical models', 'Network protocols', 'Query languages', 'Semantics', 'Base transceiver system (BTS)', 'Mobile service switching center (MSC)', 'Mobile station (MS)', 'Subscriber indentification modules (SIM)', 'Information Dissemination', 'Computer Programming Languages', 'Computer Software, Data Handling and Applications', 'Mathematics', 'Computer Systems and Equipment', 'Information Theory and Signal Processing', 'Telecommunication  Radar, Radio and Television', 'Radio Systems and Equipment']","['Oliveira, Crist v o', ' ,', '', ' Wermelinger, Michel', '', '', 'Fiadeiro, Jos', 'Luiz', '', '', 'Lopes, Ant nia']","Dep  de Inform tica, Univ  Nova de Lisboa, 2829 516 Caparica, Portugal  2  Dep  of Computer Science, Univ  of Leicester, Leicester LE1 7RH, United Kingdom  3  Dep  de Inform tica, Univ  de Lisboa, 1749 016 Lisboa, Portugal",2004,WICSA
218,219,"Capturing architectural knowledge is very important for the evolution of software products  There is increasing awareness that an essential part of this knowledge is in fact the very process of architectural reasoning and decision making, and not just its end results  Therefore, a conceptual framework is needed that provides support for the process of architectural reasoning and making decisions  In this paper we introduce diagrams that advance existing achievements, address observed problems, and capture known insights in order to facilitate the process of architectural reasoning and its documentation, and in that way provide support for processes such as e g  product evolution, architecture evaluation, and change impact analysis  An approach to architectural knowledge management is proposed in which a software architecture is modeled by a set of architectural reasoning diagrams, where each diagram is composed of several layers and addresses certain aspects of the system  These diagrams supplement existing ways to capture architecture descriptions, they share a set of common elements, and capture design decisions, their motivations and dependencies  A metamodel is given that defines those common elements and also defines the dependencies that exist between these elements both within and between layers  The proposed concepts and diagrams are illustrated on a software architecture for a component based framework that needs to satisfy a given set of requirements and to address concerns of particular stakeholders  Copyright   2011 ACM   14 refs",Concepts and diagram elements for architectural knowledge management,"['Decision making', 'Flow visualization', 'Knowledge management', 'Visualization', 'Architectural element', 'Architectural knowledge', 'Architectural reasoning', 'Architecture description', 'Architecture evaluation', 'Change impact analysis', 'Component-based framework', 'Conceptual frameworks', 'Decisions', 'Design decisions', 'Making decision', 'Meta model', 'Product evolution', 'Requirements', 'Software products', 'Fluid Flow, General', 'Computer Programming', 'Computer Applications', 'Engineering Graphics', 'Management']","['Orlic, Bojan', '', '', 'Mak, Rudolf', '', '', 'David, Ionut', '', '', 'Lukkien, Johan']","Technische Universiteit Eindhoven, Eindhoven, Netherlands",2011,ECSA
219,220,"Carbon supported Pd and Pd3M  M   Fe, Ni, Cu  electrocatalysts were synthesized by the co precipitation method and subsequently annealed at temperatures ranging from 300 to 800  C  X ray diffraction patterns of the Pd alloys revealed a major diffraction peak shift to higher diffraction angles, indicating alloy formation  The crystallite sizes of the electrocatalysts were significantly altered at higher annealing temperatures, especially at 600 and 800  C  The change in electrochemically active surface area  ECSA  with annealing temperature was characterized by cyclic voltammetry  Pd 3Fe C annealed at 800  C showed 3 fold higher ECSA compared to Pd annealed at same temperature  A comparison of the kinetic currents for the oxygen reduction reaction  ORR  obtained on the various Pd3M alloys revealed higher ORR activity for Pd3Fe C  60 mA mgPd  and Pd3Cu C  42 mA mgPd  annealed at temperatures of 800  C and 600  C respectively, when compared with pure Pd  33 mA mg Pd  and other variants  Koutecky  Levich plots for Pd 3Fe C and Pd3Cu C indicated that the four electron transfer pathway for oxygen reduction was followed in these alloys    2012 Elsevier Ltd  All rights reserved   29 refs","Kinetics of the oxygen reduction reaction on Pd3M  M   Cu, Ni, Fe  electrocatalysts synthesized at elevated annealing temperatures","['Alloys', 'Cerium alloys', 'Cyclic voltammetry', 'Electrocatalysts', 'Electrolysis', 'Electrolytic reduction', 'Fuel cells', 'Palladium', 'Reaction kinetics', 'Rotating disks', 'X ray diffraction', 'Alloy formation', 'Annealing temperatures', 'Coprecipitation method', 'Diffraction peaks', 'Electrochemical active surface areas', 'Electrochemically active surface areas', 'Elevated annealing', 'Higher diffraction', 'Kinetic currents', 'Oxygen Reduction', 'Oxygen reduction reaction', 'Pd alloy', 'Transfer pathway', 'Atomic and Molecular Physics', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Physical Chemistry', 'Fuel Cells', 'Electric Variables Measurements', 'Electric Batteries and Fuel Cells', 'Rare Earth Metals', 'Precious Metals', 'Heat Treatment Processes', 'Metallurgy', 'Machine Components']","['Ramanathan, Mayandi', '', '', 'Ramani, Vijay', '', '', 'Prakash, Jai']","Center for Electrochemical Science and Engineering, Department of Chemical and Biological Engineering, Illinois Institute of Technology, Chicago, IL 60616, United States",2012,ECSA
220,221,"Carbon supported Pt PdCo and Pt Au PdCo catalysts with a low Pt loading were prepared by a combined underpotential deposition and galvanic replacement route  The X ray diffraction results show that after annealing in H 2 Ar atmosphere, the alloy degree of PdCo is enhanced  The average metal particle size of PdCo C, PdCo C H, Pt PdCo C and Pt Au PdCo C, characterized by transmission electron microscopy, is about 2 6, 4 1, 5 3 and 5 5 nm, respectively  The electrochemical characterizations show that the Pt PdCo C electrocatalyst exhibits a high activity toward the oxygen reduction reaction  ORR  but is unstable in electrochemical environment  After the accelerated aging tests  AAT , the electrochemical surface area  ECSA  for the Pt PdCo C catalyst decreases by 48  and the half wave potential of the ORR polarization curve  E1 2  shifts 35 mV negatively  After decorated by Au, both the catalytic activity and stability of the Pt PdCo C catalyst are improved significantly  Compared to Pt PdCo C, the E1 2 for Pt Au PdCo C shifts 22 mV toward higher potentials  After the AAT, the ECSA decreases only 26 , and the E1 2 shifts 13 mV negatively for Pt Au PdCo C  The enhanced catalytic activity and stability should be due to the high resistance to be oxidized for Pt and the suppressed OH adsorption on the Au decorated Pt surface    2012 Published by Elsevier Ltd  All rights reserved   45 refs",Enhanced activity and stability of a Au decorated Pt PdCo C electrocatalyst toward oxygen reduction reaction,"['Adsorption', 'Convergence of numerical methods', 'Electrocatalysts', 'Electrolytic reduction', 'Gold', 'Platinum', 'Stability', 'Surface structure', 'Transmission electron microscopy', 'X ray diffraction', 'Accelerated aging test', 'Electrochemical characterizations', 'Electrochemical environments', 'Electrochemical surface area', 'Enhanced catalytic activity', 'Half-wave potential', 'High activity', 'High resistance', 'Metal particle', 'Oxygen Reduction', 'Oxygen reduction reaction', 'Polarization curves', 'Pt loading', 'Underpotential deposition', 'Systems Science', 'Materials Science', 'Atomic and Molecular Physics', 'Classical Physics  Quantum Theory  Relativity', 'Numerical Methods', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Operations', 'Chemical Reactions', 'Electrochemistry', 'Chemistry', 'Optical Devices and Systems', 'Precious Metals']","['Tang, Qiwen', ' ,', ',', '', ' Jiang, Luhua', ' ,', '', ' Jiang, Qian', ' ,', ',', '', ' Wang, Suli', ' ,', '', ' Sun, Gongquan', ' ,', '']","Dalian Institute of Chemical Physics, Chinese Academy of Sciences, Dalian, 116023, China  2  Dalian National Laboratory for Clean Energy, Dalian 116023, China  3  Graduate University, Chinese Academy of Sciences, Beijing 100039, China",2012,ECSA
221,222,"Carbon supported polyhedral Pd Pt nanocrystallines  Pd Pt C  are synthesized using a facile surfactant free process  The morphology of nanocrystallines is tailored by ammonia complexation and Pd Pt ratios of the metallic precursors  The as prepared Pd Pt C catalysts with low Pt content exhibit oxygen reduction reaction  ORR  activity comparable to that of the commercial Pt C catalyst, while having much higher methanol tolerance  Compared with the spherical Pd6Pt C catalyst, the polyhedral Pd 6Pt C catalyst shows 1 56 fold higher mass specific activity for ORR, while its electrochemical surface area  ECSA  is only half of the former  The superior ORR activity may be attributed to the more exposed regular  111  planes, the higher ratio of metallic form and the surface enrichment of Pt atoms    2013 Elsevier B V  All rights reserved   23 refs","Surfactant free synthesis of highly methanol tolerant, polyhedral Pd Pt nanocrystallines for oxygen reduction reaction","['Electrolytic reduction', 'Methanol', 'Platinum', 'Platinum alloys', 'Synthesis (chemical)', 'Methanol tolerance', 'Nanocrystallines', 'Oxygen reduction reaction', 'Palladium-platinum', 'Platinum catalysts', 'Surfactant-free', 'Precious Metals', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Organic Compounds']","['Tang, Yongfu', '', '', 'Gao, Faming', '', '', 'Yu, Shengxue', '', '', 'Li, Zhiping', '', '', 'Zhao, Yufeng']","Key Laboratory of Applied Chemistry, Yanshan University, Qinhuangdao, Hebei 066004, China",2013,ECSA
222,223,"Catalyst poisoning by the SO2 supply to proton exchange membrane fuel cells  PEMFCs  under open circuit voltage  OCV  and load operational conditions was examined using simultaneous monitoring of cell voltage and SO2 emissions from the cathode exhaust  Results show that cell voltage reduction is inversely proportional to the concentration of supplied SO2  Experiments with different relative humidity conditions and measurement of the electro chemical surface area  ECSA  by cyclic voltammetry investigated considerable RH effects on contamination of anode  At OCV condition, anode contamination was observed with a decrease of RH condition  little poisoning existed in fully dried conditions  On the other hand, little poisoning occurred at load operational conditions   The Electrochemical Society   16 refs",Effect of SO2 concentration and relative humidity on contamination of cathode and anode in PEMFC,"['Atmospheric humidity', 'Catalyst poisoning', 'Cyclic voltammetry', 'Membranes', 'Moisture', 'Open circuit voltage', 'Protons', 'Cathode and anode', 'Cell voltages', 'Chemical surfaces', 'Concentration of', 'Operational conditions', 'Relative humidities', 'Electric Variables Measurements', 'High Energy Physics', 'Atomic and Molecular Physics', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Materials Science', 'Chemical Reactions', 'Physical Chemistry', 'Fuel Cells', 'Electricity  Basic Concepts and Phenomena', 'Atmospheric Properties', 'Electrochemistry']","['Kaneko, K', '', '', ' Tsushima, S', '', '', ' Hirai, S', '', '']","Research Center for Carbon Recycling and Energy, Tokyo Institute of Technology, Tokyo, 152 8552, Japan",2009,ECSA
223,224,"Change impact analysis is fundamental in software evolution, since it allows one to determine potential effects upon a system resulting from changing requirements  While prior work has generically considered change impact analysis at architectural level, there is a distinct lack of support for the kinds of architectures used to realize software product lines, so called product line architectures  PLAs   In particular, prior approaches do not account for variability, a specific characteristic of software product lines  This paper presents a new technique for change impact analysis that targets product line architectures  We propose to join a traceability based algorithm and a rule based inference engine to effectively traverse modeling artifacts that account for variability  In contrast to prior approaches, our technique supports the mechanisms for  i  specifying variability in PLAs,  ii  documenting PLA knowledge, and  iii  tracing variability between requirements and PLAs  We demonstrate our technique by applying it to the analysis of requirements changes in the product line architecture of a banking system    2011 Springer Verlag   40 refs",Change impact analysis in product line architectures,"['Inference engines', 'Architectural levels', 'Banking systems', 'Change impact analysis', 'Potential effects', 'Product line architecture', 'product-line evolution', 'Requirements change', 'Rule-based inference', 'Software Evolution', 'Software Product Line', 'Computer Software, Data Handling and Applications']","['D az, Jessica', '', '', 'P rez, Jennifer', '', '', 'Garbajosa, Juan', '', '', 'Wolf, Alexander L', '', '']","Technical University of Madrid,  UPM    Universidad Polit cnica de Madrid, Systems and Software Technology Group  SYST , Madrid, Spain  2  Department of Computing, Imperial College of London, London, United Kingdom",2011,ECSA
224,225,"Classical science advances via the dance between quantitative observation and theoretical construction  It has been ten years since the first International Software Architecture Workshop, and since that time there has been a steady increase in the number of people who call themselves  software architect  and a similar growth in the value that organizations place in software architecture  It is a sign of maturity for any given engineering discipline when we can name, study, and apply the patterns relevant to that domain but, unfortunately, no such reference yet exists for software intensive systems  We ve architected and deployed many systems, but have studied their patterns of success and failure only a little  we ve explored theoretical frameworks for describing software architectures and processes to build them, but we ve done only a modest job in validating them in the real world  In this presentation, I ll summarize the things we know and the things we don t know  and speculate on the things we don t know we know  about software architecture  I ll then examine an effort to create a handbook of software architecture to help fill this gap between observation and construction    2005 IEEE",Quantitative observation and theoretical construction in software architecture,"['Computer science', 'Curricula', 'Teaching', 'Engineering discipline', 'Theoretical construction', 'Computer Circuits and Logic Elements', 'Education']","['Booch, Grady']",IBM Rational,2005,WICSA
225,226,"Cloud Computing provides an infrastructure to utilise and share both computational and data resources whilst allowing a pay peruse model  It is useful to cost effectively manage hardware investment or to maximise its utilisation  Cloud Computing also offers transitory access to scalable amounts of computational resources, something that is especially important due to the time and financial constraints of many user communities  The typical use cases for public clouds involve non business critical applications, particularly where issues around security of utilization of applications or deposited data within shared public services are binding requisites  In this poster, a use case is presented illustrating how the integration of Trusted Computing technologies into an available Infrastructure as a Service  IaaS  platform   Eucalyptus   allows the security critical energy industry to exploit the flexibility and potential economic benefits of Cloud Computing for their business critical applications  Copyright is held by author owner s    5 refs",MyTrustedCloud  Trusted Cloud Infrastructure for security critical computation and data management,"['Cloud computing', 'Economics', 'Information management', 'Investments', 'Software architecture', 'Computational resources', 'Critical applications', 'Data resources', 'Economic benefits', 'Energy industry', 'Financial constraints', 'Public services', 'Trusted computing technology', 'User communities', 'Digital Computers and Systems', 'Computer Programming', 'Information Dissemination', 'Industrial Economics', 'Social Sciences']","['Wallom, David', '', '', 'Turilli, Matteo', '', '', 'Martin, Andrew', '', '', 'Raun, Anbang', '', '', 'Taylor, Gareth', '', '', 'Hargreaves, Nigel', '', '', 'McMoran, Alan']","Oxford E Research Centre, University of Oxford, Oxford, United Kingdom  2  Department of Computer Science, University of Oxford, Oxford, United Kingdom  3  Brunel Institute of Power Systems, Brunel University, London, United Kingdom  4  Open Grid Systems Ltd , Glasgow, United Kingdom",2012,ECSA
226,227,"Cloud Computing provides an infrastructure to utilise and share both computational and data resources whilst allowing a pay peruse model  It is useful to cost effectively manage hardware investment or to maximise its utilisation  Cloud Computing also offers transitory access to scalable amounts of computational resources, something that is especially important due to the time and financial constraints of many user communities  The typical use cases for public clouds involve non business critical applications, particularly where issues around security of utilization of applications or deposited data within shared public services are binding requisites  In this poster, a use case is presented illustrating how the integration of Trusted Computing technologies into an available Infrastructure as a Service  IaaS  platform   Eucalyptus   allows the security critical energy industry to exploit the flexibility and potential economic benefits of Cloud Computing for their business critical applications  Copyright is held by author owner s    5 refs",MyTrustedCloud  Trusted Cloud Infrastructure for security critical computation and data management,"['Cloud computing', 'Economics', 'Information management', 'Investments', 'Software architecture', 'Computational resources', 'Critical applications', 'Data resources', 'Economic benefits', 'Energy industry', 'Financial constraints', 'Public services', 'Trusted computing technology', 'User communities', 'Digital Computers and Systems', 'Computer Programming', 'Information Dissemination', 'Industrial Economics', 'Social Sciences']","['Wallom, David', '', '', 'Turilli, Matteo', '', '', 'Martin, Andrew', '', '', 'Raun, Anbang', '', '', 'Taylor, Gareth', '', '', 'Hargreaves, Nigel', '', '', 'McMoran, Alan']","Oxford E Research Centre, University of Oxford, Oxford, United Kingdom  2  Department of Computer Science, University of Oxford, Oxford, United Kingdom  3  Brunel Institute of Power Systems, Brunel University, London, United Kingdom  4  Open Grid Systems Ltd , Glasgow, United Kingdom",2012,WICSA
227,228,"Cloud computing has captured the attention of both the researchers and practitioners alike  Companies and other cloud users are expecting to receive significant benefits from the new cloud based technologies  To what extent these benefits materialize for enterprise IT is not clearly understood  In this paper, we examine the perceived benefits of cloud computing from the cloud users  perspectives  Cloud users include users of SaaS PaaS IaaS, ranging from end users, to service developers and system administrators  Using content analysis techniques, weexamine one of the major discussion forums of cloud computing  Rather than offering a yes no answer to the question posed, we offer five empirically drawn insights on the perceived benefits of cloud computing  It is proposed that the empirical insights gained are valuable to both researchers and practitioners  The value lies in a more holistic view on the promised benefits  landscape  Copyright 2012 ACM   27 refs",Does cloud computing deliver the promised benefitsfor IT industry,"['Industry', 'Software architecture', 'Content analysis', 'IaaS', 'PaaS', 'Perceived benefits', 'SaaS', 'Digital Computers and Systems', 'Computer Programming', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Phaphoom, Nattakarn', '', '', 'Oza, Nilay', '', '', 'Wang, Xiaofeng', '', '', 'Abrahamsson, Pekka']","Free University of Bozen Bolzano, Piazza Domenicani, 3, I 39100 Bolzano, Italy  2  University of Helsinki, PO Box 68, FI 00014, Helsinki, Finland",2012,ECSA
228,229,"Cloud computing has captured the attention of both the researchers and practitioners alike  Companies and other cloud users are expecting to receive significant benefits from the new cloud based technologies  To what extent these benefits materialize for enterprise IT is not clearly understood  In this paper, we examine the perceived benefits of cloud computing from the cloud users  perspectives  Cloud users include users of SaaS PaaS IaaS, ranging from end users, to service developers and system administrators  Using content analysis techniques, weexamine one of the major discussion forums of cloud computing  Rather than offering a yes no answer to the question posed, we offer five empirically drawn insights on the perceived benefits of cloud computing  It is proposed that the empirical insights gained are valuable to both researchers and practitioners  The value lies in a more holistic view on the promised benefits  landscape  Copyright 2012 ACM   27 refs",Does cloud computing deliver the promised benefitsfor IT industry,"['Industry', 'Software architecture', 'Content analysis', 'IaaS', 'PaaS', 'Perceived benefits', 'SaaS', 'Digital Computers and Systems', 'Computer Programming', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Phaphoom, Nattakarn', '', '', 'Oza, Nilay', '', '', 'Wang, Xiaofeng', '', '', 'Abrahamsson, Pekka']","Free University of Bozen Bolzano, Piazza Domenicani, 3, I 39100 Bolzano, Italy  2  University of Helsinki, PO Box 68, FI 00014, Helsinki, Finland",2012,WICSA
229,230,"Cloud computing is an increasingly popular paradigm that allows individuals and enterprises to provision and deploy software applications over the Internet  Customers can lease services provided by these  cloud  applications  a k a cloud apps , ramping up or down the capacity as they need and paying only for what they use  Cloud apps are used in about every industry today  from financial, retail, education, and communications, to manufacturing, utilities and transportation  Forrester Research predicts that cloud apps sales will account for more than 16  of the total software market by 2016  However, cloud apps dependability is still a major issue for both providers and users  Failures of cloud apps generally result in big economic losses as core business activities now rely on them  In this position paper we discuss the current state of the dependability of cloud apps and advocate for the use of fault tolerance mechanisms to improve the dependability of cloud apps  Copyright   2014 ACM 978 1 4503 2523 3 14 04 15 00   17 refs",On improving the dependability of cloud applications with fault tolerance,"['Application programs', 'Losses', 'Sales', 'Software architecture', 'Cloud applications', 'Dependability', 'Fault tolerance mechanisms', 'Forrester Research', 'Position papers', 'Recovery mechanisms', 'Software applications', 'Software markets', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Industrial Economics', 'Marketing']","['Khomh, Foutse']","SWAT Lab , DGIGL, Polytechnique Montr al, Qu bec, Canada",2014,WICSA
230,231,"Cloud computing is being increasingly adopted in various domains for providing on demand infrastructure and Software as a service  SaaS  by leveraging the utility computing model and virtualization technologies  One of the domains, where cloud computing is expected to gain huge traction is Global Software Development  GSD  that has emerged as a popular software development model  Despite several promised benefits, GSD is characterized by not only technical issues but also the complexities associated with its processes  One of the key challenges of GSD is to provide appropriate tools more efficiently and cost effectively  Moreover, variations in tools available used by different GSD team members can also pose challenges  We assert that providing Tools as a Service  TaaS  to GSD teams through a cloud based infrastructure can be a promising solution to address the tools related challenges in GSD projects  Through an extensive review of the relevant literature on GSD and Cloud Computing, we have identified a set of quality attributes and potential architectural solutions for a cloud based infrastructure that can provide TaaS to GSD teams  This paper outlines the promised benefits of TaaS to GSD teams, describes the expected quality attributes of a cloud based infrastructure and how these quality attributes can be achieved  We also present a reference architecture for a cloud based infrastructure to provide TaaS in GSD projects and describe its use with a detailed scenario of GSD projects  Copyright 2012 ACM   35 refs",Cloud infrastructure for providing tools as a service  Quality attributes and potential solutions,"['Cloud computing', 'Software design', 'Software engineering', 'Web services', 'Architectural solutions', 'Global software development', 'Potential solutions', 'Quality attributes', 'Reference architecture', 'Software as a service', 'Software development models', 'Team members', 'Utility computing', 'Virtualizations', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Programming']","['Chauhan, Muhammad Aufeef', '', '', 'Babar, Muhammad Ali']","Software and Systems Group, IT University of Copenhagen, Copenhagen, Denmark",2012,ECSA
231,232,"Cloud computing is being increasingly adopted in various domains for providing on demand infrastructure and Software as a service  SaaS  by leveraging the utility computing model and virtualization technologies  One of the domains, where cloud computing is expected to gain huge traction is Global Software Development  GSD  that has emerged as a popular software development model  Despite several promised benefits, GSD is characterized by not only technical issues but also the complexities associated with its processes  One of the key challenges of GSD is to provide appropriate tools more efficiently and cost effectively  Moreover, variations in tools available used by different GSD team members can also pose challenges  We assert that providing Tools as a Service  TaaS  to GSD teams through a cloud based infrastructure can be a promising solution to address the tools related challenges in GSD projects  Through an extensive review of the relevant literature on GSD and Cloud Computing, we have identified a set of quality attributes and potential architectural solutions for a cloud based infrastructure that can provide TaaS to GSD teams  This paper outlines the promised benefits of TaaS to GSD teams, describes the expected quality attributes of a cloud based infrastructure and how these quality attributes can be achieved  We also present a reference architecture for a cloud based infrastructure to provide TaaS in GSD projects and describe its use with a detailed scenario of GSD projects  Copyright 2012 ACM   35 refs",Cloud infrastructure for providing tools as a service  Quality attributes and potential solutions,"['Cloud computing', 'Software design', 'Software engineering', 'Web services', 'Architectural solutions', 'Global software development', 'Potential solutions', 'Quality attributes', 'Reference architecture', 'Software as a service', 'Software development models', 'Team members', 'Utility computing', 'Virtualizations', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Programming']","['Chauhan, Muhammad Aufeef', '', '', 'Babar, Muhammad Ali']","Software and Systems Group, IT University of Copenhagen, Copenhagen, Denmark",2012,WICSA
232,233,"Cloud computing, a new paradigm of distributed computing, introduces many new ideas, concepts, principals, technologies and architectural styles into enterprise service oriented computing  The enterprise service oriented architecture  ESOA  style is an abstraction of concrete enterprise service orientated architectures, which includes SOA architectural elements, service design patterns as well as principles, and SOA quality attributes  It can be extended to a new style for realizing enterprise cloud computing  Meanwhile, the principles and style of enterprise service oriented computing facilitate the enterprise wide adoption of cloud computing  This paper extends the ESOA style to a new hybrid architectural style, Enterprise Cloud Service Architecture  ECSA   The style is described by extending enterprise service oriented formula for ESOA  We model the style through specifying each element in the formula with both service oriented and cloud architectural styles    2010 IEEE   37 refs",Enterprise Cloud Service Architecture,"['Grid computing', 'Industry', 'Information services', 'Architectural element', 'Architectural style', 'Cloud computing', 'Cloud services', 'Distributed Computing', 'Enterprise services', 'Quality attributes', 'Service design', 'Service Oriented', 'Buildings and Towers', 'Digital Computers and Systems', 'Information Services', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Tang, Longji', '', '', 'Dong, Jing', '', '', 'Zhao, Yajing', '', '', 'Zhang, Liang Jie']","Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States  2  T J  Watson Research Center, IBM, 19 Skyline Drive, Hawthorne, NY 10532, United States",2010,ECSA
233,234,"Code clones are a substantial problem for code based development  it is not surprising that model clones are a problem for model based development, too  Past experience with model version control vs  code version control suggests, however, that there are radically different problems and techniques on the code level than on the model level  In this paper, we explore the problems and possibilities associated with detecting clones in UML domain models  In particular, we have designed a number of algorithms and heuristics to detect clones, and have implemented them in the MQlone tool  read as  m clone    However, all of the approaches we have studied so far have their weak spots, so that we cannot present a universal solution  Further work is required to refine and combine the approaches studied here, and test them on larger populations of models  While the related work faces similar unsolved problems our approach is the first one to deal with UML as a whole rather than with Matlab Simulink or individual UML model types    2010 ACM   24 refs",Towards clone detection in UML domain models,"['Cloning', 'Technical presentations', 'Unified Modeling Language', 'Clone detection', 'Code clone', 'Code versions', 'Domain model', 'MATLAB /simulink', 'Model based development', 'UML', 'UML Model', 'Universal solutions', 'Unsolved problems', 'Version control', 'Genetic Engineering', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['St rrle, Harald']","Technical University of Denmark, Richard Petersens Plads, 2800 Lyngby, Denmark",2010,ECSA
234,235,"Combining agile project management approaches such as Scrum and software architecture related work has been found problematic  In this paper, we propose several models to align architecture knowledge management with Scrum, based on different architecture work practices in Scrum identified in the industry  The proposed models exploit an architectural knowledge base with a capability to generate architectural documents, and a decision based architecture evaluation method  Copyright 2012 ACM   14 refs",Aligning architecture knowledge management with Scrum,"['Knowledge based systems', 'Knowledge management', 'Management science', 'Project management', 'Agile', 'Agile project management', 'Architectural knowledge base', 'Architecture evaluation', 'Scrum', 'Work practices', 'Computer Software, Data Handling and Applications', 'Management']","['Eloranta, Veli Pekka', '', '', 'Koskimies, Kai']","Tampere University of Technology, P O  Box 553, 33101 Tampere, Finland",2012,ECSA
235,236,"Combining agile project management approaches such as Scrum and software architecture related work has been found problematic  In this paper, we propose several models to align architecture knowledge management with Scrum, based on different architecture work practices in Scrum identified in the industry  The proposed models exploit an architectural knowledge base with a capability to generate architectural documents, and a decision based architecture evaluation method  Copyright 2012 ACM   14 refs",Aligning architecture knowledge management with Scrum,"['Knowledge based systems', 'Knowledge management', 'Management science', 'Project management', 'Agile', 'Agile project management', 'Architectural knowledge base', 'Architecture evaluation', 'Scrum', 'Work practices', 'Computer Software, Data Handling and Applications', 'Management']","['Eloranta, Veli Pekka', '', '', 'Koskimies, Kai']","Tampere University of Technology, P O  Box 553, 33101 Tampere, Finland",2012,WICSA
236,237,"Community is a formal approach to software architecture  Its main characteristics are  a precise, yet intuitive mathematical semantics based on categorical diagrams  a clear separation between computation, coordination, and distribution  including mobility   and a simple state based language, inspired by Unity, to describe behaviour  This paper discusses the applicability of this approach to location aware systems through the modelling of the GSM handover protocol, namely the way communication with a moving cellular phone passes from one station to another  The case study was developed with the Community Workbench, a tool that animates distributed and mobile architectural models   8 refs",An architectural approach to mobility   the handover case study,"['cellular radio', 'formal specification', 'mobile computing', 'protocols', 'software architecture', 'mobility architectural approach', 'formal approach', 'software architecture', 'mathematical semantics', 'categorical diagrams', 'state-based language', 'location-aware systems', 'GSM handover protocol', 'cellular phone', 'Community Workbench', 'distributed architectural models', 'mobile architectural models', 'Mobile radio systems', 'Protocols', 'Software engineering techniques', 'Formal methods', 'Distributed systems software', 'Protocols']","['Oliveira, C', '', '', ' Wermelinger, M', '', '', ' Fiadeiro, J L', ' Lopes, A']","Dept  de Inf , Univ  Nova de Lisboa, Caparica, Portugal",2004,WICSA
237,238,"Company wide reference architectures are an important means for standardization and reuse  Standardization is enforced through reference architecture conformance checking  Manual conformance checking is too time  and resource intensive to be performed continuously for the various systems that are part of a SOA  We present an approach for automatic reference architecture conformance checking of SOA based software systems  Reference architectures are defined based on rules consisting of roles and of constraints on roles and role relationships  By mapping the roles to the elements of a software architecture representation, reference architecture specifications are reusable for different software systems  Through automating the whole checking process, including architecture extraction, role mapping, and rule evaluation, the approach can be applied continuously for the different systems that are part of a SOA  The approach has been developed and refined by applying it to a SOA in the banking domain  During its evolution from semi automatic to a fully automatic approach it has also changed the way of how architecture information is provided as part of the system implementation in this domain    2014 IEEE   28 refs",Automatic reference architecture conformance checking for SOA   Based software systems,"['Computer software', 'Information services', 'Mapping', 'Service oriented architecture (SOA)', 'Software architecture', 'Standardization', 'Automatic approaches', 'Conformance checking', 'Reference architecture', 'Rule evaluation', 'Semi-automatics', 'Software systems', 'System implementation', 'Buildings and Towers', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Engineering Graphics', 'Codes and Standards', 'Information Services']","['Weinreich, Rainer', '', '', 'Buchgeher, Georg']","Johannes Kepler University Linz, Linz, Austria  2  Software Competence Center Hagenberg, Linz, Austria",2014,WICSA
238,239,"Component based applications require runtime support to be able to guarantee non functional properties  This paper proposes an architecture for a real time capable, component based runtime environment, which allows to separate non functional and functional concerns in component based software development  The architecture is presented with particular focus on the real time non real  time split of the runtime environment and the communication issues of respective component types and container parts   16 refs",The COMQUAD component container architecture,"['Computer software', 'Quality of service', 'Query languages', 'Real time systems', 'Servers', 'Telecommunication links', 'Video on demand', 'XML', 'Architectural description languages (ADL)', 'Assembly descriptors', 'Non-real-time (NRT) codes', 'Runtime environment', 'Telecommunication  Radar, Radio and Television', 'Television Systems and Equipment', 'Computer Systems and Equipment', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Programming Languages']","['G bel, Steffen', '', '', 'Pohl, Christoph', '', '', 'Aigner, Ronald', '', '', 'Pohlack, Martin', '', '', 'R ttger, Simone', '', '', 'Zschaler, Steffen']","Institute for System Architecture, TU Dresden, Germany  2  Institute for Software Engineering, TU Dresden, Germany",2004,WICSA
239,240,"Component based applications require runtime support to be able to guarantee non functional properties  This paper proposes an architecture for a real time capable, component based runtime environment, which allows to separate non functional and functional concerns in component based software development  The architecture is presented with particular focus on the real time non real time split of the runtime environment and the communication issues of respective component types and container parts   16 refs",The COMQUAD component container architecture,"['object-oriented programming', 'software architecture', 'COMQUAD component container architecture', 'component-based applications', 'runtime support', 'nonfunctional properties', 'real-time-capable environment', 'component-based runtime environment', 'component-based software development', 'component container architecture', 'Object oriented programming', 'Software engineering techniques']","['Gobel, S', '', '', ' Aigner, R', '', '', ' Pohl, C', '', '', ' Pohlack, M', '', '', ' Rottger, S', ' Zschaler, S']","Inst  for Syst  Archit , Tech  Univ  Dresden, Dresden, Germany",2004,WICSA
240,241,"Component based approaches to elaborate software must deal with the fact that in practical settings, components information may be incomplete, imprecise and uncertain, and requirements may be likewise  Architects wanting to evaluate candidate architectures regarding requirements satisfaction need to use whatever information available about components, however imperfect  Imperfect information can be dealt with using specialized analytical formalisms, such as fuzzy values for imprecision and rough sets for incompleteness  but if used, evaluations need to compare and rank using non scalar, non symbolic values  This article presents an approach to systematically describe components  imperfect information, and to evaluate and rank whole component assemblies, by using credibility values based  support scores  that aggregate imperfect information about requirements, mechanisms and components  The approach builds on the Azimut framework, which offers progressive refinement of architectural entities via architectural policies, architectural mechanisms, components, and component assemblies  An example of the proposed approach and  what if  analysis are illustrated   28 refs",Evaluating alternative COTS assemblies from imperfect component information,"['formal verification', 'object-oriented programming', 'program diagnostics', 'software architecture', 'COTS assemblies', 'component-based software', 'component information', 'software architecture', 'requirement satisfaction', 'credibility values', 'Azimut framework', 'what-if analysis', 'Object oriented programming', 'Software engineering techniques', 'Formal methods', 'Diagnostic, testing, debugging and evaluating systems']","['Astudillo, H', '', '', ' Pereira, J', ' Lopez, C']","Dept  de Inf , Univ  Tecnica Federico Santa Maria, Valparaiso, Chile",2006,QoSA
241,242,"Component based approaches to elaborate software must deal with the fact that in practical settings, components information may be incomplete, imprecise and uncertain, and requirements may be likewise  Architects wanting to evaluate candidate architectures regarding requirements satisfaction need to use whatever information be available about components, however imperfect  Imperfect information can be dealt with using specialized analytical formalisms, such as fuzzy values for imprecision and rough sets for incompleteness  but if used, evaluations need to compare and rank using non scalar, non symbolic values  This article presents an approach to systematically describe components  imperfect information, and to evaluate and rank whole component assemblies, by using credibility values based  support scores  that aggregate imperfect information about requirements, mechanisms and components  The approach builds on the Azimut framework, which offers progressive refinement of architectural entities via architectural policies, architectural mechanisms, components, and component assemblies  An example of the proposed approach and  what if  analysis are illustrated    2006 Springer Verlag   28 refs",Evaluating alternative COTS assemblies from imperfect component information,"['Computer software selection and evaluation', 'Information use', 'Set theory', 'Component assembly', 'Component based approach', 'Imperfect information', 'Progressive refinement', 'Rough set', 'Symbolic value', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Information Retrieval and Use', 'Management', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory']","['Astudillo, Hern n', '', '', 'Pereira, Javier', '', '', 'L pez, Claudia']","Universidad T cnica Federico Santa Mar a, Departamento de Inform tica, Avenida Espa a 1680, Valpara so, Chile  2  Universidad Diego Portales, Escuela de Ingenier a Inform tica, Av  Ej rcito 441, Santiago, Chile",2006,QoSA
242,243,"Component based architectures are natural for Cloud computing  However, few current software development frameworks are exploiting this fact  A proof of the concept implementation of an open source Platform as a service dedicated to the development of component based applications is shortly presented in this paper  Copyright is held by the author owner s    8 refs",Towards component based software engineering of Cloud applications,"['Cloud computing', 'Component based applications', 'Component-based architecture', 'Component-Based Development', 'Component-based software engineering', 'Open-source', 'PaaS', 'Software development framework', 'Digital Computers and Systems', 'Computer Programming']","['Petcu, Dana', '', '', 'Sandru, Calin']","Institute E Austria Timisoara, West University of Timisoara, Romania",2012,ECSA
243,244,"Component based architectures are natural for Cloud computing  However, few current software development frameworks are exploiting this fact  A proof of the concept implementation of an open source Platform as a service dedicated to the development of component based applications is shortly presented in this paper  Copyright is held by the author owner s    8 refs",Towards component based software engineering of Cloud applications,"['Cloud computing', 'Component based applications', 'Component-based architecture', 'Component-Based Development', 'Component-based software engineering', 'Open-source', 'PaaS', 'Software development framework', 'Digital Computers and Systems', 'Computer Programming']","['Petcu, Dana', '', '', 'Sandru, Calin']","Institute E Austria Timisoara, West University of Timisoara, Romania",2012,WICSA
244,245,"Component based development helps to improve the modularity and reusability of embedded systems  Component models devised for embedded systems are typically restricted due to the limited computing, storage and power resources of the target systems  Most existing component models for embedded systems therefore only support a static component architecture and provide a simple and lightweight core  With the increasing demand for more feature rich embedded systems these component architectures must be extended  In order to remain useful for the development of resource restricted embedded systems, however, the extensions must be optional  Creating such extensions requires a cost effective development process that can produce reusable, rather than application  specific, extensions  This necessitates a systematic approach to seamlessly integrate application specific requirements of the extension, the existing component model and the constraints of the computing environment  In this paper we propose a scenario based architectural approach to extending the capabilities of the CAmkES component model  This approach is used to distil application specific requirements and computing constraints, summarise generic scenarios, drive the extension to the core CAmkES architecture  We illustrate our approach with a case study involving the addition of dynamic capabilities to CAmkES    2008 Springer Verlag Berlin Heidelberg   16 refs",Extending the capabilities of component models for embedded systems,"['Architecture', 'Codes (symbols)', 'Computer programming languages', 'Computer software reusability', 'Computer software selection and evaluation', 'Computer systems', 'Cost effectiveness', 'Energy policy', 'Integrated circuits', 'Software architecture', 'Application-specific', 'Application-specific requirements', 'Architectural approach', 'Architecture design', 'Case studies', 'Component', 'Component architectures', 'Component modelling', 'Component-based development', 'Computing environments', 'Development processes', 'Dynamic Capabilities', 'Embedded system', 'Extension', 'International conferences', 'Power resources', 'Quality of softwares', 'Scenario', 'Systematic approaches', 'Target systems', 'Industrial Economics', 'Data Processing and Image Processing', 'Computer Programming Languages', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Systems and Equipment', 'Semiconductor Devices and Integrated Circuits', 'Energy Policy', 'Buildings and Towers']","['Kuz, Ihor', '', '', 'Liu, Yan']",National ICT Australia,2007,QoSA
245,246,"Component based development helps to improve the modularity and reusability of embedded systems  Component models devised for embedded systems are typically restricted due to the limited computing, storage and power resources of the target systems  Most existing component models for embedded systems therefore only support a static component architecture and provide a simple and lightweight core  With the increasing demand for more feature rich embedded systems these component architectures must be extended  In order to remain useful for the development of resource restricted embedded systems, however, the extensions must be optional  Creating such extensions requires a cost effective development process that can produce reusable, rather than application specific, extensions  This necessitates a systematic approach to seamlessly integrate application specific requirements of the extension, the existing component model and the constraints of the computing environment  In this paper we propose a scenario based architectural approach to extending the capabilities of the CAmkES component model  This approach is used to distil application specific requirements and computing constraints, summarise generic scenarios, drive the extension to the core CAmkES architecture  We illustrate our approach with a case study involving the addition of dynamic capabilities to CAmkES   16 refs",Extending the capabilities of component models for embedded systems,"['embedded systems', 'software architecture', 'software reusability', 'component models', 'embedded systems', 'modularity', 'reusability', 'resource-restricted embedded systems', 'CAmkES component model', 'Software engineering techniques']","['Kuz, I', '', '', ' Yan Liu']","Nat  ICT Australia, Sydney, NSW, Australia",2008,QoSA
246,247,"Component based development, which had been successful in enterprise computing, shows promises to be a good development model for automotive systems  This is possible if several dependability concerns of the embedded systems can be properly addressed by the models, frameworks and integration platforms  SaveCCM is a component model for automotive systems developed by employing component based system design  Our ongoing research is related to estimation of software reliability for this model  In this paper, we provide a survey of the state of the art on research techniques for the estimation of system reliability based on component reliabilities and architectures  We further discuss their pros and cons with reference to our architectural model and discuss some practical considerations  Based on this we also present the basics of our approach to reliability modeling of SaveCCM architectures   24 refs",On the estimation of software reliability of component based dependable distributed systems,"['embedded systems', 'object-oriented programming', 'software architecture', 'software quality', 'software reliability', 'software reliability estimation', 'component-based development', 'distributed systems', 'automotive system', 'embedded system', 'SaveCCM architecture', 'Software engineering techniques', 'Object oriented programming']","['Dimov, A', '', '', ' Punnekkat, S']","Dept  of Inf  Technol , Sofia Univ , Sofia, Bulgaria",2005,QoSA
247,248,"Component based product line architectures  PLAs  must support two operations  application configuration   the construction of valid application specifications   and application generation   the compilation of specifications into executable applications  Whereas configuration is a combinatorial task involving advanced knowledge based reasoning, generation is a deterministic compilation process  This suggests an application synthesis model where configuration and generation are carried out separately by interoperable tools  To this end, we introduce a PLA development toolkit which includes a constraint based configuration language and an aspect based generation language supporting the same architecture model  The toolkit imposes dual PLA implementations consisting of a configuration program and a generation program  The compilation of the configuration program yields an interactive configurator used to produce valid configurations at run time  Valid configurations are then compiled by the generator with the generation program to produce Java applications  Overall, this model allows the use of powerful configuration and generation technologies   namely, constraint programming and aspect oriented programming   while enforcing view consistency and tool interoperability   24 refs",Aspects and constraints for implementing configurable product line architectures,"['constraint handling', 'formal specification', 'Java', 'object-oriented programming', 'software architecture', 'software tools', 'configurable product-line architectures', 'component-based architectures', 'application configuration', 'application specification construction', 'application generation', 'specification compilation', 'combinatorial task', 'knowledge-based reasoning', 'deterministic compilation', 'development toolkit', 'constraint-based configuration language', 'aspect-based generation language', 'configuration program', 'generation program', 'Java applications', 'constraint programming', 'aspect-oriented programming', 'view consistency', 'tool interoperability', 'Software engineering techniques', 'Object oriented programming', 'Logic programming', 'Programming support', 'Formal methods']","['Lesaint, D', '', '', ' Papamargaritis, G', '', '']","Intelligent Syst  Lab , BT Exact, Courbevoie, France",2004,WICSA
248,249,"Component based product line architectures  PLAs  must support two operations  application configuration   the construction of valid application specifications  , and application generation   the compilation of specifications into executable applications  Whereas configuration is a combinatorial task involving advanced knowledge based reasoning, generation is a deterministic compilation process  This suggests an application synthesis model where configuration and generation are carried out separately by interoperable tools  To this end, we introduce a PLA development toolkit which includes a constraint based configuration language and an aspect based generation language supporting the same architecture model  The toolkit imposes dual PLA implementations consisting of a configuration program and a generation program  The compilation of the configuration program yields an interactive configurator used to produce valid configurations at run time  Valid configurations are then compiled by the generator with the generation program to produce Java applications  Overall, this model allows the use of powerful configuration and generation technologies   namely, Constraint Programming and Aspect Oriented Programming   while enforcing view consistency and tool interoperability   24 refs",Aspects and constraints for implementing configurable product line architectures,"['Algorithms', 'Constraint theory', 'Interoperability', 'Java programming language', 'Knowledge engineering', 'Product development', 'Specifications', 'Application generation', 'Graph algorithm', 'Knowledge-based reasoning', 'Product-line architecture (PLA)', 'Telecommunication  Radar, Radio and Television', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming', 'Computer Programming Languages', 'Artificial Intelligence', 'Production Engineering']","['Lesaint, David', '', '', 'Papamargaritis, George']","BT Exact, Intelligent Systems Lab , 11, place des Vosges, 92061 Courbevoie, France  2  BT Exact, Intelligent Systems Lab , Adastral Park, Martlesham Heath, Suffolk IP5 3RE, United Kingdom",2004,WICSA
249,250,"Component integration plays a decisive role in service oriented architectures  SOAs   The technical implementation must faithfully reflect business and enterprise integration requirements  This implies a good understanding of the globally observable message choreography but also of how messages are handled by the involved components and by the SOA middleware  In this paper we present a solution to the problem of keeping global and local viewpoints in synchronization via a common message choreography metamodel  As main contribution we shape various interpretations of global choreographies, which were left unspecified in state of the art choreography approaches  We have implemented a message choreography modeling  MCM  environment incorporating these contributions  MCM seamlessly complements existing models at SAP  We show how service integration experts, architects, and testers can benefit from our approach that enables model based integration testing and model verification facilities    2009 IEEE   16 refs",Viewpoints for modeling choreographies in service oriented architectures,"['Architecture', 'Information services', 'Middleware', 'Semantic Web', 'Service oriented architecture (SOA)', 'Component integration', 'Enterprise Integration', 'Integration testing', 'Meta model', 'Model verification', 'Model-based', 'Service integration', 'Technical implementation', 'Information Services', 'Information Science', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Buildings and Towers']","['Wieczorek, Sebastian', '', '', 'Roth, Andreas', '', '', 'Stefanescu, Alin', '', '', 'Kozyura, Vitaly', '', '', 'Charfi, Anis', '', '', 'Kraft, Frank Michael', '', '', 'Schieferdecker, Ina']","SAP Research, Bleichstr  8, 64283 Darmstadt, Germany  2  SAP AG, Dietmar Hopp Allee 16, 69190 Walldorf, Germany  3  Fraunhofer FOKUS, Kaiserin Augusta Allee 31, 10589 Berlin, Germany",2009,ECSA
250,251,"Component integration plays a decisive role in service oriented architectures  SOAs   The technical implementation must faithfully reflect business and enterprise integration requirements  This implies a good understanding of the globally observable message choreography but also of how messages are handled by the involved components and by the SOA middleware  In this paper we present a solution to the problem of keeping global and local viewpoints in synchronization via a common message choreography metamodel  As main contribution we shape various interpretations of global choreographies, which were left unspecified in state of the art choreography approaches  We have implemented a message choreography modeling  MCM  environment incorporating these contributions  MCM seamlessly complements existing models at SAP  We show how service integration experts, architects, and testers can benefit from our approach that enables model based integration testing and model verification facilities    2009 IEEE   16 refs",Viewpoints for modeling choreographies in service oriented architectures,"['Architecture', 'Information services', 'Middleware', 'Semantic Web', 'Service oriented architecture (SOA)', 'Component integration', 'Enterprise Integration', 'Integration testing', 'Meta model', 'Model verification', 'Model-based', 'Service integration', 'Technical implementation', 'Information Services', 'Information Science', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Buildings and Towers']","['Wieczorek, Sebastian', '', '', 'Roth, Andreas', '', '', 'Stefanescu, Alin', '', '', 'Kozyura, Vitaly', '', '', 'Charfi, Anis', '', '', 'Kraft, Frank Michael', '', '', 'Schieferdecker, Ina']","SAP Research, Bleichstr  8, 64283 Darmstadt, Germany  2  SAP AG, Dietmar Hopp Allee 16, 69190 Walldorf, Germany  3  Fraunhofer FOKUS, Kaiserin Augusta Allee 31, 10589 Berlin, Germany",2009,WICSA
251,252,"Component integration plays a decisive role in service oriented architectures  SOAs   The technical implementation must faithfully reflect business and enterprise integration requirements  This implies a good understanding of the globally observable message choreography but also of how messages are handled by the involved components and by the SOA middleware  In this paper we present a solution to the problem of keeping global and local viewpoints in synchronization via a common message choreography metamodel  As main contribution we shape various interpretations of global choreographies, which were left unspecified in state of the art choreography approaches  We have implemented a message choreography modeling  MCM  environment incorporating these contributions  MCM seamlessly complements existing models at SAP  We show how service integration experts, architects, and testers can benefit from our approach that enables model based integration testing and model verification facilities    2009 IEEE   16 refs",Viewpoints for modeling choreographies in service oriented architectures,"['Architecture', 'Information services', 'Middleware', 'Semantic Web', 'Service oriented architecture (SOA)', 'Component integration', 'Enterprise Integration', 'Integration testing', 'Meta model', 'Model verification', 'Model-based', 'Service integration', 'Technical implementation', 'Information Services', 'Information Science', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Buildings and Towers']","['Wieczorek, Sebastian', '', '', 'Roth, Andreas', '', '', 'Stefanescu, Alin', '', '', 'Kozyura, Vitaly', '', '', 'Charfi, Anis', '', '', 'Kraft, Frank Michael', '', '', 'Schieferdecker, Ina']","SAP Research, Bleichstr  8, 64283 Darmstadt, Germany  2  SAP AG, Dietmar Hopp Allee 16, 69190 Walldorf, Germany  3  Fraunhofer FOKUS, Kaiserin Augusta Allee 31, 10589 Berlin, Germany",2011,WICSA
252,253,"Component interfaces, as advanced by the Common Component Architecture  CCA , enable easy access to complex software packages for high performance scientific computing  A recent focus has been incorporating support for computational quality of service  CQoS , or the automatic composition, substitution, and dynamic reconfiguration of component applications  Several leading quantum chemistry packages have achieved interoperability by adopting CCA components  Running these computations on diverse computing platforms requires selection among many algorithmic and hardware configuration parameters  typical educated guesses or trial and error can result in unexpectedly low performance  Motivated by the need for faster runtimes and increased productivity for chemists, we present a flexible CQoS approach for quantum chemistry that uses a generic CQoS database component to create a training database with timing results and metadata for a range of calculations  The database then interacts with a chemistry CQoS component and other infrastructure to facilitate adaptive application composition for new calculations    2009 Springer Berlin Heidelberg   40 refs",Adaptive application composition in quantum chemistry,"['Computer science', 'Computer software selection and evaluation', 'Dynamic models', 'Metadata', 'Quality of service', 'Quantum theory', 'Adaptive application', 'Automatic composition', 'Common component architecture', 'Complex software', 'Component application', 'Component interfaces', 'Computational quality', 'Computing platform', 'Database components', 'Dynamic re-configuration', 'Hardware configurations', 'Increased productivity', 'Runtimes', 'Scientific computing', 'Training database', 'Trial and error', 'Quantum Theory  Quantum Mechanics', 'Mathematics', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Systems and Equipment', 'Computer Circuits and Logic Elements', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television']","['Li, Li', '', '', 'Kenny, Joseph P', '', '', ' Wu, Meng Shiou', '', '', 'Huck, Kevin', '', '', 'Gaenko, Alexander', '', '', 'Gordon, Mark S', '', '', ' Janssen, Curtis L', '', '', ' Curfman McInnes, Lois', '', '', 'Mori, Hirotoshi', '', '', 'Netzloff, Heather M', '', '', ' Norris, Boyana', '', '', 'Windus, Theresa L', '', '']","Argonne National Laboratory, Argonne, IL, United States  2  Sandia National Laboratories, Livermore, CA, United States  3  Ames Laboratory, Ames, IA, United States  4  University of Oregon, Eugene, OR, United States  5  Ochanomizu University, Japan",2009,QoSA
253,254,"Composite nanostrucutres of TiSi2Ox coated nitrogen doped carbon nanotubes  NCNTs  were synthesized by a combination of chemical vapor deposition  CVD  and magnetron sputtering processes  The synthesized nanostructures were used as supports for Pt catalyst for oxygen reduction reaction  ORR  in proton exchange memberane fuel cells  PEMFCs   An amorphous layer of TiSi2Ox with controlled thicknesses was sputtered on NCNTs and followed by post treatment at high temperature  1000 C, An TiSi2Ox NCNTs , inducing TiO2 nanoparticles of around 5 nm in diameter embedded in the amorphous layer  Further analyses via X ray absorption spectroscopy of the Ti K edge and Si K edge revealed the Ti atoms were in a TiO2 rutile environment and the Si atoms were in a SiO2 environment  Pt nanoparticles with an average diameter of 3 nm were deposited on the composite support, and their electrochemical behaviors toward ORR were studied  It was revealed that, even with lower electrochemical surface area  ECSA , Pt An TiSi2Ox NCNTs showed better catalytic activity toward ORR than Pt NCNT catalysts  The origin of enhanced activity of Pt An TiSi2Ox NCNTs was examined by high resolution transmission electron microscopy  HRTEM  and the X ray absorption near edge structure spectra  XANES  of the deposited Pt nanoparticles    2013 American Chemical Society   67 refs",TiSi2Ox coated N doped carbon nanotubes as Pt catalyst support for the oxygen reduction reaction in PEMFCs,"['Carbon nanotubes', 'Catalyst supports', 'Chemical vapor deposition', 'Doping (additives)', 'Electrolytic reduction', 'High resolution transmission electron microscopy', 'Nanoparticles', 'Oxide minerals', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Silicon', 'Titanium dioxide', 'X ray absorption near edge structure spectroscopy', 'X ray absorption spectroscopy', 'Chemical vapor depositions (CVD)', 'Composite support', 'Electrochemical behaviors', 'Electrochemical surface area', 'Magnetron sputtering process', 'Nitrogen-doped carbon nanotubes', 'Oxygen reduction reaction', 'X-ray absorption near-edge structure', 'Solid State Physics', 'Inorganic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Electrochemistry', 'Chemistry', 'Nanotechnology', 'Optical Devices and Systems', 'Single Element Semiconducting Materials', 'Electric and Magnetic Materials', 'Fuel Cells', 'Precious Metals']","['Banis, Mohammad Norouzi', '', '', 'Sun, Shuhui', '', '', 'Meng, Xiangbo', '', '', 'Zhang, Yong', '', '', 'Wang, Zhiqiang', '', '', 'Li, Ruying', '', '', 'Cai, Mei', '', '', 'Sham, Tsun Kong', '', '', 'Sun, Xueliang']","Department of Mechanical and Materials Engineering, University of Western Ontario, London, ON N6A 5B9, Canada  2  General Motors RandD Center, Warren, MI 48090 9055, United States  3  Department of Chemistry, University of Western Ontario, London, ON N6A 5B7, Canada",2013,ECSA
254,255,"Computation on traditional CPU platforms consumes large amount of time owing to large SAR echo data and imaging algorithm complexity  GPU has the great advantage of many processing cores suitable for the acceleration of independent parallel structure algorithms  With the powerful floating point and parallel processing capabilities of GPU, the ECSA SAR imaging algorithm is verified on the GPU with good results, and the comprehensive  computation time   IO time  speedup has been raised  Since CUDA GPU utilization will be the future of high resolution spaceborne SAR imaging, the paper gives a preliminary indication of the feasibility of GPU to process spaceborne SAR data, which lays the foundation for further procedure optimization   9 refs",High resolution space borne SAR imaging based on GPU,"['graphics processing units', 'image processing', 'radar imaging', 'synthetic aperture radar', 'high resolution space-borne SAR imaging', 'synthetic aperture radar imaging', 'graphics processing unit', 'SAR echo data', 'imaging algorithm complexity', 'parallel structure algorithms', 'CUDA-GPU utilization', 'Radar equipment, systems and applications', 'Optical, image and video signal processing', 'Microprocessors and microcomputers', 'Computer vision and image processing techniques', 'Microprocessor chips']",['Hou Minghui'],"Dept  of R D, China Center of Resources Satellite Data   Applic , Beijing, China",2013,ECSA
255,256,"Computations are pervasive across many domains, where end users have to compose various heterogeneous computational entities to perform professional activities  Service Oriented Architecture  SOA  is a widely used mechanism that can support such forms of compositions as it allows heterogeneous systems to be wrapped as services that can then be combined with each other  However, current SOA orchestration languages require writing scripts that are typically too low level for end users to write, being targeted at professional programmers and business analysts  To address this problem, this paper proposes a composition approach based on an end user specification style called SCORE  SCORE is an architectural style that uses high level constructs that can be tailored for different domains and automatically translated into executable constructs by tool support  We demonstrate the use of SCORE in two domains   dynamic network analysis and neuroscience, where users are intelligence analysts and neuroscientists respectively, who use the architectural style based vocabulary in SCORE as a basis of their domain specific compositions that can be formally analyzed    2011 Springer Verlag   15 refs",An architectural approach to end user orchestrations,"['Architecture', 'Dynamic analysis', 'Information services', 'Network architecture', 'Software architecture', 'Architectural approach', 'Architectural style', 'Business analysts', 'Computational entities', 'Different domains', 'Domain specific', 'Dynamic network analysis', 'End users', 'Heterogeneous systems', 'Intelligence analysts', 'Professional activities', 'Professional programmers', 'Service Oriented', 'Tool support', 'Two domains', 'Buildings and Towers', 'Strength of Building Materials', 'Methods', 'Computer Systems and Equipment', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Information Services']","['Dwivedi, Vishal', '', '', 'Velasco Elizondo, Perla', '', '', 'Maria Fernandes, Jose', '', '', 'Garlan, David', '', '', 'Schmerl, Bradley']","School of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213, United States  2  Centre for Mathematical Research  CIMAT , Zacatecas, ZAC, 98060, Mexico  3  IEETA DETI, Uni  of Aveiro, Campus Universitario de Santiago, 3810 193 Aveiro, Portugal",2011,ECSA
256,257,"Configurable software systems allow stakeholders to derive variants by selecting software and or hardware features  Performance analysis of feature based systems has been of large interest in the last few years, however a major research challenge is still to conduct such analysis before achieving full knowledge of the system, namely under a certain degree of uncertainty  In this paper we present an approach to analyze the correlation between selection of features embedding uncertain parameters and system performance  In particular, we provide best and worst case performance bounds on the basis of selected features and, in cases of wide gaps among these bounds, we carry on a sensitivity analysis process aimed at taming the uncertainty of parameters  The application of our approach to a case study in the e health domain demonstrates how to support stakeholders in the identification of system variants that meet performance requirements  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   23 refs",Performance based selection of software and hardware features under parameter uncertainty,"['Hardware', 'Software architecture', 'Uncertainty analysis', 'Degree of uncertainty', 'Identification of systems', 'Parameter uncertainty', 'Performance analysis', 'Performance requirements', 'Selection of software', 'Uncertainty', 'Worst-case performance', 'Small Tools and Hardware', 'Telecommunication  Radar, Radio and Television', 'Computer Programming', 'Probability Theory']","['Etxeberria, Leire', '', '', 'Trubiani, Catia', '', '', 'Cortellessa, Vittorio', '', '', 'Sagardui, Goiuria']","Mondragon Unibertsitatea, Mondragon, Spain  2  Gran Sasso Science Institute, L Aquila, Italy  3  University of L Aquila, L Aquila, Italy",2014,QoSA
257,258,"Consumer initiated sporadic operations on cloud applications, such as deployment, upgrade and reconfiguration, may fail because of the inherent uncertainty of operating in a cloud environment  For example, if a VM is not able to start, operations dependent on that VM will fail  In this paper we propose an approach for analyzing sporadic operations on cloud applications to facilitate recovery  We do this by first creating a process model of the sporadic cloud operation  The Process may not be suitable for recovery operations or the application s deployment architecture since an individual step may be at the wrong level of granularity or a failure may unnecessarily affect multiple steps  We then propose a set of process division criteria for revising an operation process to support recovery  This set of criteria contains four aspects  1  Atomicity to support the imposition of transactions on portions of the process, 2  Idempotence to allow for re execution of a failed portion, 3  Granularity to allow reuse of existing steps, 4  Recovery Actions Identifiable to allow proper recovery actions to be taken to recover from the errors occurring during the operation  We demonstrate the feasibility of imposing these criteria by using the rolling upgrade operation in Asgard   a popular cloud management tool for AWS EC2    2014 IEEE   21 refs",A recoverability oriented analysis for operations on cloud applications,"['Software architecture', 'Cloud applications', 'Cloud environments', 'Cloud managements', 'consumer-initiated', 'Deployment architecture', 'Division criteria', 'Process Modeling', 'Support recoveries', 'Metallurgy and Metallography', 'Computer Programming']","['Fu, Min', ' ,', '', ' Zhu, Liming', ' ,', '', ' Bass, Len', ' ,', '', ' Xu, Xiwei', ' ,', '']","Software Systems Research Group, NICTA, Sydney, Australia  2  School of Computer Science and Engineering, University of New South Wales, Sydney, Australia",2014,WICSA
258,259,"Contemporary software systems are becoming increasingly large, heterogeneous, and decentralised  They operate in dynamic environments and their architectures exhibit complex trade offs across dimensions of goals, time, and interaction, which emerges internally from the systems and externally from their environment  This gives rise to the vision of self aware architecture, where design decisions and execution strategies for these concerns are dynamically analysed and seamlessly managed at run time  Drawing on the concept of self awareness from psychology, this paper extends the foundation of software architecture styles for self adaptive systems to arrive at a new principled approach for architecting self aware systems  We demonstrate the added value and applicability of the approach in the context of service provisioning to cloud reliant service based applications    2014 IEEE   11 refs",Architecting self aware software systems,"['Computer software', 'Architecture styles', 'Execution strategies', 'Self adaptation', 'Self-adaptive system', 'Self-awareness', 'Service provisioning', 'Service-based applications', 'Software architecture style', 'Computer Software, Data Handling and Applications']","['Faniyi, Funmilade', '', '', 'Lewis, Peter R', '', '', ' Bahsoon, Rami', '', '', 'Yao, Xin']","School of Computer Science, University of Birmingham, Birmingham B15 2TT, United Kingdom  2  School of Engineering and Applied Science, Aston University, Birmingham B4 7ET, United Kingdom",2014,WICSA
259,260,"Context  A system of systems is an assemblage of components which individually may be regarded as systems, and which possesses the additional properties that the constituent systems are operationally independent, and are managerially independent  Much has been published about the field of systems of systems by researchers and practitioners, often with the assertion that the system of systems design context necessitates the use of architecture approaches that are somewhat different from system level architecture  However, no systematic review has been conducted to provide an extensive overview of system of systems architecture research  Objective  This paper presents such a systematic review  The objective of this review is to classify and provide a thematic analysis of the reported results in system of systems architecture  Method  The primary studies for the systematic review were identified using a predefined search strategy followed by an extensive manual selection process  Results  We found the primary studies published in a large number of venues, mostly domain oriented, with no obvious center of a research community of practice  The field seems to be maturing more slowly than other software technologies  Most reported results described individuals or teams working in apparent isolation to develop solutions to particular system of systems architecture problems, with no techniques gaining widespread adoption  Conclusions  A comprehensive research agenda for this field should be developed, and further studies should be performed to determine whether the information system related problems of system of systems architecture are covered by existing software architecture knowledge, and if not, to develop general methods for system of systems architecture  Copyright   ACM   22 refs",A systematic review of system of systems architecture research,"['Architecture', 'Software architecture', 'Systems engineering', 'Comprehensive research', 'Research communities', 'Software technology', 'System of systems', 'System-level architectures', 'System-of-systems architecture', 'Systematic Review', 'Systems of systems', 'Buildings and Towers', 'Computer Programming', 'Engineering Research', 'Industrial Engineering and Management', 'Systems Science']","['Klein, John', '', '', 'Van Vliet, Hans']","Software Engineering Institute, Pittsburgh, PA, United States  2  VU Amsterdam, Amsterdam, Netherlands",2013,QoSA
260,261,"Context  With the increasing industrial demands for seamless exchange of data and services among information systems, architectural solutions are a promising research direction which supports high levels of interoperability at early development stages   Objectives  This research aims at identifying the architectural problems and before release solutions of interoperability on its different levels in information systems, and exploring the interoperability metrics and research methods used to evaluate identified solutions   Methods  We performed a scoping study in five digital libraries and descriptively analyzed the results of the selected studies   Results  From the 22 studies included, we extracted a number of architectural interoperability problems on the technical, syntactical, semantic, and pragmatic levels  Many problems are caused by systems  heterogeneity on data representation, meaning or context  The identified solutions include standards, ontologies, wrappers, or mediators  Evaluation methods to validate solutions mostly included toy examples rather than empirical studies   Conclusions  Progress has been made in the software architecture research area to solve interoperability problems  Nevertheless, more researches need to be spent on solutions for the higher levels of interoperability accompanied with proper empirical evaluation for their effectiveness and usefulness    2014 Springer International Publishing Switzerland   18 refs",Interoperability related architectural problems and solutions in information systems  A scoping study,"['Digital libraries', 'Industrial research', 'Information systems', 'Semantics', 'Software architecture', 'Architectural problems', 'Architectural solutions', 'Architecture research', 'Data representations', 'Empirical evaluations', 'Evaluation methods', 'Scoping', 'Software interoperability', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Software, Data Handling and Applications', 'Engineering Research', 'Information Dissemination', 'Libraries']","['Abukwaik, Hadil', '', '', 'Taibi, Davide', '', '', 'Rombach, Dieter']","University of Kaiserslautern, Gottlieb Daimler Strae 47, 67663 Kaiserslautern, Germany",2014,ECSA
261,262,"Context  With the increasing industrial demands for seamless exchange of data and services among information systems, architectural solutions are a promising research direction which supports high levels of interoperability at early development stages   Objectives  This research aims at identifying the architectural problems and before release solutions of interoperability on its different levels in information systems, and exploring the interoperability metrics and research methods used to evaluate identified solutions   Methods  We performed a scoping study in five digital libraries and descriptively analyzed the results of the selected studies   Results  From the 22 studies included, we extracted a number of architectural interoperability problems on the technical, syntactical, semantic, and pragmatic levels  Many problems are caused by systems  heterogeneity on data representation, meaning or context  The identified solutions include standards, ontologies, wrappers, or mediators  Evaluation methods to validate solutions mostly included toy examples rather than empirical studies   Conclusions  Progress has been made in the software architecture research area to solve interoperability problems  Nevertheless, more researches need to be spent on solutions for the higher levels of interoperability accompanied with proper empirical evaluation for their effectiveness and usefulness   18 refs",Interoperability related architectural problems and solutions in information systems  a scoping study,"['information systems', 'open systems', 'software architecture', 'interoperability-related architectural problems', 'information systems', 'before-release solutions', 'system heterogeneity', 'data representation', 'standards', 'ontologies', 'wrappers', 'mediators', 'software architecture', 'pragmatic levels', 'semantic levels', 'syntactical levels', 'technical levels', 'Business and administrative computing', 'Software engineering techniques', 'Distributed systems software']","['Abukwaik, H', '', '', ' Taibi, D', '', '', ' Rombach, D', '', '']","Univ  of Kaiserslautern, Kaiserslautern, Germany",2014,ECSA
262,263,"Contract models underlying architecture level verification methods must suit a range of different accuracy vs analytical complexity tradeoffs depending on domain  For example, trustworthiness in safety critical systems is enabled by representational simplicity leading to comprehensible proofs while real time systems require precise characterisation of execution time  A family of mutually compatible parameterised contract models enabling such tradeoffs is needed, supporting reasoning about consistency and conformance  replaceability  which is bidirectional  from requirements to provisions and vice versa  and parametric  context sensitive   This paper proposes a framework for such a family  The framework extends a previous formalisation of parameterised contracts  It provides more general notions of conformance, bidirectional reasoning and parameterisation, suitable for compositional architectural analyses of software products and product lines, for which software architects do not only need checking but scope for restricting or enriching service and interface contracts in predictable and compositional ways  The family of mechanisms presented here covers a range of levels of expressiveness, spanning the established four levels of component contracts, and is worked out in detail with examples for two common existing representations   tables and finite automata    2011 ACM   25 refs",Systematic simplicity accuracy tradeoffs in parameterised contract models,"['Models', 'Parameterization', 'Real time systems', 'Architectural analysis', 'architectural dependence', 'Characterisation', 'Component contracts', 'Context-sensitive', 'design by contract', 'Execution time', 'Formalisation', 'parameterised contracts', 'Product-lines', 'Safety critical systems', 'Software architects', 'software components', 'Software products', 'Verification method', 'Digital Computers and Systems', 'Computer Programming', 'Engineering Graphics', 'Mathematics']","['Peake, Ian D', '', '', ' Schmidt, Heinz W', '', '']","School of Computer Science and Information Technology, RMIT University, Melbourne, VIC, Australia",2011,QoSA
263,264,"Controlling the morphologies of Pt nanocrystals provide effective opportunities to promote the electrochemical properties and enhance the mass activity  Recently we have reported that Pluronic F127  PEO 100PPO65PEO100  could serve as reducing reagent for synthesis of highly electrocatalytic activity of branched Pt nanocrystal  Herein, we further synthesize another novel Pt nanosponge foil  Pt NSF  under the same system with Pluronic F127  We expect to build the relationship between block copolymer system and morphology design of synthesized nanocrystal with specific electrochemical property  The electrochemical active areas  ECSA  of Pt NSF and Pt black are of the order of 20 m2 g 1  On one hand, step atoms, dislocations, grain boundaries, which observed from HRTEM  high resolution transmission electron microscope , are all prevalent on Pt NSF, which could serve as active adsorption sites  On the other hand, Pt NSF looks like an aggregation of many Pt black nanoparticles, the connection formed skeleton is conducive to electron transfer  These reasons aroused the mass activity and the specific activity of Pt NSF were much higher than each of Pt black toward the oxygen reduction reaction activity  ORR  at 0 9 V respectively  Durability tests show that the ECSA of Pt NSF and Pt black declined, but the activity of Pt NSF toward the ORR was almost unchanged  The impact of structures on the electrochemical properties is described in detail    2013 Elsevier Ltd  All rights reserved   32 refs",A novel Pt nanosponge foil with high activity for oxygen reduction reaction,"['Block copolymers', 'Crystal defects', 'Durability', 'Electrocatalysts', 'Electrochemical properties', 'Electrolytic reduction', 'Grain boundaries', 'Morphology', 'Nanocrystals', 'Electrocatalytic activity', 'F127', 'High-resolution transmission electron microscopes', 'Nanosponge', 'Oxygen reduction reaction', 'Pluronics', 'Reducing reagents', 'Specific activity', 'Crystalline Solids', 'Polymeric Materials', 'Electrochemistry', 'Materials Science', 'Nanotechnology', 'Precious Metals', 'Strength of Building Materials  Mechanical Properties', 'Semiconducting Materials']","['Wang, Yan', ' ,', '', ' Zhang, Lijuan', '', '', 'Li, Fan', '', '', 'Gu, Baoshan']","Department of College of Environmental and Energy Engineering, Beijing University of Technology, 100124 Beijing, China  2  National Engineering Laboratory for Advanced Coatings Technology of Metal Material, China Iron and Steel Research Institute Group, 100081 Beijing, China",2013,ECSA
264,265,"Conventional data networks are based on layered architectures  The introduction of wireless networks has created a need to violate this layering discipline to create crosslayer designs or adaptations  Ad hoc implementations of such cross layer adaptations reduce the level of modularity and abstraction in the network s implementation, giving rise to a significant increase in complexity  We present a taxonomy of possible cross layer adaptations that is then used to derive an architecture for their implementation that significantly preserves the networks structure  We present implementation results that validate this architecture in the context of a real wireless network implementation    2008 IEEE   11 refs",A software architecture for cross layer wireless network adaptations,"['Architecture', 'Chlorine compounds', 'Software architecture', 'Cross layering', 'Data networks', 'Layered architectures', 'Buildings and Towers', 'Radio Systems and Equipment', 'Computer Programming', 'Organic Compounds']","['Choi, Soon Hyeok', '', '', 'Perry, Dewayne E', '', '', ' Nettles, Scott M', '', '']","Department of Electrical and Computer Engineering, University of Texas at Austin, Austin, TX 78712",2008,WICSA
265,266,"Core shell structured Co PUC electrocatalysts containing different mass fractions of Co to Pt, which are represented as 20   w  Co Pt 1 1  C and 20   w  Co Pt 1 3  C, were prepared by changing the ratio of metallic precursors using a successive reduction method  The structure and electrochemical performance of the as prepared catalysts were characterized by transmission electron microscopy  TEM , X ray photoelectron spectroscopy  XPS , cyclic voltammetry  CV , and linear sweep voltammetry  LSV   The performance of the as prepared catalysts was compared with that of 40   w  Co PUC catalyst we synthesized previously  The sizes of Co Pt 1 1  and Co Pt 1 3  particles ranged from 2 2 to 2 3 nm, and the metal particles were well dispersed on the carbon support  The electrochemical specific area  ECSA  of 20  Co Pt 1 1  C  56 m2   g 1  and 20  Co Pt 1 3  C  60 m2   g 1  were higher than that of commercial 20  PUC  E tek   54 m2   g 1   Compared with those of 40  Co Pt 1 1  C and 40  Co Pt 1 3  C, the half wave potentials of 20  Co Pt 1 1  C and 20  Co Pt 1 3  C shifted to the positive direction, and they correspondingly showed improved catalytic performance  The low cost and high performance of the 20  Co PUC catalyst make it a promising low Pt catalyst for proton exchange membrane fuel cells   26 refs",Effects of Pt content on the catalytic performance of Co Pt C core shell structured electrocatalysts,"['carbon', 'catalysis', 'catalysts', 'cobalt', 'electrochemistry', 'materials preparation', 'particle reinforced composites', 'particle size', 'platinum', 'reduction (chemical)', 'transmission electron microscopy', 'voltammetry (chemical analysis)', 'X-ray photoelectron spectra', 'catalytic performance', 'core-shell structured electrocatalysts', 'metallic precursors', 'successive reduction method', 'structural property', 'electrochemical property', 'transmission electron microscopy', 'TEM', 'X-ray photoelectron spectroscopy', 'XPS', 'cyclic voltammetry', 'linear sweep voltammetry', 'particle size', 'carbon support', 'electrochemical specific area', 'half-wave potentials', 'proton exchange membrane fuel cells', 'Co-Pt-C', 'Electrochemistry and electrophoresis', 'Specific chemical reactions  reaction mechanisms', 'Electron spectroscopy for chemical analysis  photoelectron, Auger spectroscopy, etc', 'A    F Electrochemical analytical methods', 'Other methods of preparation of materials', 'Heterogeneous catalysis at surfaces and other surface reactions']","['Zhao Tian Tian', '', '', 'Lin Rui', '', '', 'Zhang Lu', '', '', 'Cao Chui Hui', '', '', 'Ma Jian Xin']","Clean Energy Automotive Eng  Center, Tongji Univ , Shanghai, China",2013,ECSA
266,267,"Correct assembly of software components is an important issue in Component Based Software Engineering  Composing a system from reusable components often introduces a set of problems related to communication and compatibility  In particular, one of the main problems in component assembly is that components may have incompatible interaction behavior  In this paper, we address this problem using an architecture based approach that can detect integration mismatches, and semi automatically synthesize a suitable adaptor, or glue code, to bridge them    2005 IEEE   4 refs",Adaptor synthesis for protocol enhanced component based architectures,"['Adaptive systems', 'Automation', 'Interactive computer systems', 'Network protocols', 'Problem solving', 'Software engineering', 'Adaptor synthesis', 'Component based architectures', 'Interaction behavior', 'Software components', 'Digital Computers and Systems', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Automatic Control Principles and Applications']","['Tivoli, Massimo', '', '', 'Garlan, David']","University of l Aquila, via Vetoio 1, 67100 L Aquila  2  Carnegie Mellon University, 5000 Forbes Avenue, Pittsburgh, PA 15213 3891",2005,WICSA
267,268,"Creating architecture for a complex telecommunication system is a difficult task and requires expertise of many different stakeholders  The software architecture design process relies on understanding the architecturally significant requirements  ASRs  for the system under design  This paper describes experiences in creating a new base station product line  A goal was to create a process to facilitate fulfillment of ASRs during the development of the product line  The approach proved to be feasible for developing large scale systems in the telecommunications infrastructure domain  This paper describes the approach taken, experiences gathered during the development process and promotes the idea of defining concrete ASRs for each project and refining them through architecture for all relevant subsystems    2010 Springer Verlag Berlin Heidelberg   7 refs",Experiences in making architectural decisions during the development of a New Base Station platform,"['Base stations', 'Design', 'Refining', 'Software design', 'Architectural decision', 'Design decisions', 'Development process', 'Product-lines', 'Refinement', 'Requirements process', 'Software architecture design', 'Station platforms', 'Telecommunications infrastructures', 'Structural Design', 'Radio Systems and Equipment', 'Computer Programming', 'Papermaking Processes']","['Savolainen, Juha', '', '', 'Kuusela, Juha', '', '', 'M nnist , Tomi', '', '', 'Nyyss nen, Aki']","Nokia Research Center, It merenkatu 11 13, Helsinki 00180, Finland  2  Nokia Devices, Keilalahdentie 4, Espoo 02150, Finland  3  Aalto University, Tekniikantie 14, Espoo 02150, Finland  4  Nokia Siemens Networks, Kaapelitie 4, Oulu 90650, Finland",2010,ECSA
268,269,"Critical embedded systems  CES  have become ubiquitous in the modern society, like in cars and energy appliances  However, besides their popularity, engineering of these systems is still particularly challenging  One of the greatest challenges in the development of such systems is their expected high standards of reliability  One of the key solutions to overcome this challenge is to design a sound architecture and validate it against critical quality attributes  CQAs , such as safety, dependability, security and performance  However, currently there are no established architecting processes or methods that are specialized for the domain of CES  Consequently, these systems are sometimes developed without focusing on their architectural design and their level of quality  Thus, the main goal of this PhD project is to develop an architecture design method, specialized in decisions that impacts CQAs  In the context of this project, the proposed method will be evaluated, through an industrial collaborations, with companies of two important application domains  Smart Grid and Ambient Assisted Living  Copyright   2014 ACM 1 58113 000 0 00 0010 15 00   17 refs",An architecture design method for critical embedded systems,"['Architecture', 'Design', 'Software architecture', 'Software engineering', 'Ambient assisted living', 'Architecture designs', 'Critical quality', 'Design method', 'High standards', 'Industrial collaboration', 'Security and performance', 'Sound architecture', 'Buildings and Towers', 'Structural Design', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming']","['Feitosa, Daniel']","University of Groningen, Nijenborgh 9, 9747 AG, Groningen, Netherlands",2014,WICSA
269,270,"Critical properties of software systems, such as reliability, should be considered early in the development, when they can govern crucial architectural design decisions  A number of design time reliability analysis methods has been developed to support this task  However, the methods are often based on very low level formalisms, and the connection to different architectural aspects  e g , the system usage profile  is either hidden in the constructs of a formal model  e g , transition probabilities of a Markov chain , or even neglected  e g , resource availability   This strongly limits the applicability of the methods to effectively support architectural design  Our approach, based on the Palladio Component Model  PCM , integrates the reliability relevant architectural aspects in a highly parameterized UML like model, which allows for transparent evaluation of architectural design options  It covers the propagation of the system usage profile throughout the architecture, and the impact of the execution environment, which are neglected in most of the existing approaches  Before analysis, the model is automatically transformed into a formal Markov model in order to support effective analytical techniques to be employed  The approach has been validated against a reliability simulation of a distributed Business Reporting System    2010 Springer Verlag   25 refs",Parameterized reliability prediction for component based software architectures,"['Architectural design', 'Availability', 'Computer software selection and evaluation', 'Markov processes', 'Reliability analysis', 'Security of data', 'Software architecture', 'Software reliability', 'Structural design', 'Analysis method', 'Analytical techniques', 'Component model', 'Component-based software architecture', 'Critical properties', 'Execution environments', 'Formal model', 'Markov Chain', 'Markov model', 'Parameterized', 'Reliability prediction', 'Reliability simulation', 'Reporting systems', 'Resource availability', 'Software systems', 'Transition probabilities', 'Probability Theory', 'Maintenance', 'Quality Assurance and Control', 'Production Engineering', 'Production Planning and Control  Manufacturing', 'Management', 'Computer Applications', 'Data Processing and Image Processing', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Strength of Building Materials', 'Methods', 'Structural Design, General', 'Buildings and Towers']","['Brosch, Franz', '', '', 'Koziolek, Heiko', '', '', 'Buhnova, Barbora', '', '', 'Reussner, Ralf']","FZI Karlsruhe, Haid und Neu Str  10 14, 76131 Karlsruhe, Germany  2  ABB Corporate Research, Wallstadter Str  59, 68526 Ladenburg, Germany  3  Masaryk University, Botanicka 68a, 60200 Brno, Czech Republic",2010,QoSA
270,271,"Current IT markets exhibit many constraints  e g  budget, staff shortage, etc    These constraints force IT companies to increase productivity using globally distributed manpower  Literature shows that global software development  GSD  indeed raises productivity but reduces communication and collaboration between teams  Consequently, the risk of failure increases  To ease communication and collaboration among teams, novel engineering methods must be provided  To address this problem, we propose using Agile Service Networks  ASNs   ASNs are an emergent paradigm in which service oriented applications  network nodes  collaborate through agile and dynamic service interactions  network edges   Agile interaction among ASN nodes, allow mitigating distance  typical of GSD  by dynamically adapting communication and collaboration as needed  Through ASNs, GSD can be seen as a global network of resources  teams, documentation, knowledge, etc   among which agile interactions allow flexible knowledge exchange and team collaboration  To establish feasibility of our proposal, we investigated how ASNs can support GSD  Based on existing works in the fields of both ASNs and GSD, we mapped GSD challenges on ASNs key features and devised a meta model showing how ASNs are used to support GSD requirements    2011 Springer Verlag   15 refs",Supporting communication and cooperation in global software development with agile service networks,"['Communication', 'Knowledge management', 'Network architecture', 'Productivity', 'Software architecture', 'Agile interaction', 'Dynamic services', 'Engineering methods', 'Global networks', 'Global software development', 'IT companies', 'Key feature', 'Knowledge exchange', 'Meta model', 'Network edges', 'Network node', 'Risk of failure', 'Service network', 'Service oriented application', 'Staff shortages', 'Team collaboration', 'Telecommunication  Radar, Radio and Television', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Production Engineering']","['Tamburri, Damian Andrew', '', '', 'Lago, Patricia']","VU University Amsterdam, Netherlands",2011,ECSA
271,272,"Current tools to analyze software architecture structure and its evolution tend to focus more towards exploring the architectural elements, their quality measures, and their evolution as compared to the information contained in the inter dependencies of the system itself  In this tool demo paper, we present our eCITY  tool that provides an interactive visualization aimed at assisting software engineers and architects to additionally comprehend the architectural ties between software components  Further, it shows how these relations evolve over time  To achieve these goals, eCITY  represents architectural relationships as hierarchical edge bundles on top of an evolving software city metaphor and unravels the evolution of these relations through the use of animations  Additionally, we present a discussion on the challenges while implementing these ideas in the large    2014 Authors   15 refs",eCITY   A tool to analyze software architectural relations through interactive visual support,"['Reverse engineering', 'Visualization', 'Architectural element', 'Inter-dependencies', 'Interactive visualizations', 'Quality measures', 'Software architectural', 'Software component', 'Software dependencies', 'Software Evolution', 'Computer Software, Data Handling and Applications', 'Engineering Graphics']","['Khan, Taimur', '', '', 'Humayoun, Shah Rukh', '', '', 'Amrhein, Karsten', '', '', 'Barthel, Henning', '', '', 'Ebert, Achim', '', '', 'Liggesmeyer, Peter']","University of Kaiserslautern, 67663 Kaiserslautern, Germany  2  Fraunhofer IESE, Fraunhofer Platz 1, 67663 Kaiserslautern, Germany",2014,ECSA
272,273,"Currently Web services remain one of the leading technologies for implementing components of distributed service oriented software architectures  One of the most frequent form of compositions of these entities is Web service orchestration  As any other software artifact, such service compositions are subject to an unescapable evolution  Lehman s first law of software evolution   Either for answering new user requirements, for adapting, for correcting or for enhancing the provided functionality or quality, an architect has to conduct some evolutions on the design of these artifacts  In this paper, we present a method which aims at helping software architects of Web service orchestrations in processing an evolution of quality requirements  This method introduces a template for describing quality evolution  intents   It then analyzes these intents and assists the architects in answering them by proposing some patterns  We consider in our work the postulate stating that quality can be implemented through patterns, which are specified with checkable process able languages  Besides this, the method that we propose simulates the application of these patterns and notifies the architect with its consequences on the other implemented qualities    2014 IEEE   20 refs",Processing the evolution of quality requirements of web service orchestrations  A pattern based approach,"['Web services', 'Websites', 'BPEL', 'Distributed service', 'Quality attributes', 'Quality requirements', 'Service compositions', 'SOA Pattern', 'Software architects', 'Web service orchestration', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Software, Data Handling and Applications']","['Zernadji, Tarek', '', '', 'Tibermacine, Chouki', '', '', 'Cherif, Foudil']","Computer Science Department, University of Biskra, Algeria  2  LIRMM, CNRS, Montpellier II University, France",2014,WICSA
273,274,"Currently, architectural knowledge management focuses mostly on the explicit representation of knowledge, under the codification strategy  Due to its limitations, recent research favors a hybrid approach, combining the codification and personalization strategies  In this paper, we argue that tacit architectural knowledge can help solve this problem  We propose to investigate the knowledge conversion processes of internalization and socialization and their real world impact    2010 ACM   9 refs",Tacit architectural knowledge,"['Decision making', 'Knowledge management', 'Knowledge representation', 'Technical presentations', 'Architectural knowledge', 'design decisions', 'Explicit representation', 'Hybrid approach', 'Knowledge conversion', 'Personalizations', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Management']","['Tofan, Dan']","Department of Computing Science, University of Groningen, Nijenborgh 9, 9747 AG, Netherlands",2010,ECSA
274,275,"Currently, gamification is a new trend under which all activities are subsumed that try to introduce game mechanics into non gaming applications in order to increase user engagement, motivation, and participation  This approach is especially promising in the enterprise domain since enterprise information systems  EIS  mainly focus on efficiency aspects rather than individual long term motivation and enjoyment  Prior research has shown that these latter variables lead to higher positive organizational outcomes, e g , job performance  Additionally, first vendors have successfully implemented platforms for gamification  However, these platforms are designed for business toconsumer  B2C  purposes, require high integration effort and lead to silo based applications  Requirements for EIS strongly differ from consumer web or desktop applications  Hence, we present a generic platform for enterprise gamification  We derive an architecture for gamification systematically from serviceoriented and event driven principles and best practices  Based on this architecture, we identify important research challenges for subsequent work  Ultimately, we validate the architecture s feasibility in a prototypical implementation    2012 IEEE   21 refs",A generic platform for enterprise gamification,"['Architecture', 'Information systems', 'Integration', 'Motivation', 'Software architecture', 'Desktop applications', 'Enterprise information system', 'Gamification', 'Generic platforms', 'Job performance', 'Organizational outcomes', 'Prototypical implementation', 'Research challenges', 'Service Oriented', 'User engagement', 'Production Planning and Control  Manufacturing', 'Personnel', 'Industrial Engineering and Management', 'Calculus', 'Cost and Value Engineering  Industrial Economics', 'Computer Programming', 'Buildings and Towers', 'Information Dissemination']","['Herzig, Philipp', '', '', 'Ameling, Michael', '', '', 'Schill, Alexander']","SAP Research, Chemnitzer Strae 48, Dresden, Germany  2  TU Dresden, N thnitzer Strae 46, Dresden, Germany",2012,ECSA
275,276,"Currently, gamification is a new trend under which all activities are subsumed that try to introduce game mechanics into non gaming applications in order to increase user engagement, motivation, and participation  This approach is especially promising in the enterprise domain since enterprise information systems  EIS  mainly focus on efficiency aspects rather than individual long term motivation and enjoyment  Prior research has shown that these latter variables lead to higher positive organizational outcomes, e g , job performance  Additionally, first vendors have successfully implemented platforms for gamification  However, these platforms are designed for business toconsumer  B2C  purposes, require high integration effort and lead to silo based applications  Requirements for EIS strongly differ from consumer web or desktop applications  Hence, we present a generic platform for enterprise gamification  We derive an architecture for gamification systematically from serviceoriented and event driven principles and best practices  Based on this architecture, we identify important research challenges for subsequent work  Ultimately, we validate the architecture s feasibility in a prototypical implementation    2012 IEEE   21 refs",A generic platform for enterprise gamification,"['Architecture', 'Information systems', 'Integration', 'Motivation', 'Software architecture', 'Desktop applications', 'Enterprise information system', 'Gamification', 'Generic platforms', 'Job performance', 'Organizational outcomes', 'Prototypical implementation', 'Research challenges', 'Service Oriented', 'User engagement', 'Production Planning and Control  Manufacturing', 'Personnel', 'Industrial Engineering and Management', 'Calculus', 'Cost and Value Engineering  Industrial Economics', 'Computer Programming', 'Buildings and Towers', 'Information Dissemination']","['Herzig, Philipp', '', '', 'Ameling, Michael', '', '', 'Schill, Alexander']","SAP Research, Chemnitzer Strae 48, Dresden, Germany  2  TU Dresden, N thnitzer Strae 46, Dresden, Germany",2012,WICSA
276,277,"Currently, most software systems have a dynamic nature and evolve at run time  The dynamic reconfiguration of software architectures has to be supported in order to enable their architectural element instances and their links to be created and destroyed at run time  Complex components also need reconfiguration capabilities to evolve their internal compositions  This paper introduces an approach to support the dynamic reconfiguration of software architectures taking advantage of aspect oriented techniques  It enables complex components to autonomously reconfigure themselves  they are capable of both having knowledge of their current configuration and reconfiguring themselves at run time  This approach has been developed for the PRISMA aspect oriented architectural model  A new kind of aspect has been created in PRISMA in order to provide dynamic reconfiguration services to each complex component  it is called the Configuration Aspect    Springer Verlag Berlin Heidelberg 2007   9 refs",Dynamic reconfiguration of software architectures through aspects,"['Computer aided design', 'Object oriented programming', 'Dynamic reconfiguration', 'Software systems', 'Computer Programming', 'Computer Applications']","['Costa, Crist bal', '', '', 'Ali, Nour', '', '', 'P rez, Jennifer', '', '', 'Cars , Jos', ' ngel', '', '', 'Ramos, Isidro']","Department of Information Systems and Computation, Polytechnic University of Valencia, Camino de Vera s n, 46022 Valencia, Spain  2  Technical University of Madrid  UPM , E U  Inform tica, Ctra  Valencia km 7, 28051 Madrid, Spain",2007,ECSA
277,278,"Currently, most software systems have a dynamic nature and evolve at run time  The dynamic reconfiguration of software architectures has to be supported in order to enable their architectural element instances and their links to be created and destroyed at run time  Complex components also need reconfiguration capabilities to evolve their internal compositions  This paper introduces an approach to support the dynamic reconfiguration of software architectures taking advantage of aspect oriented techniques  It enables complex components to autonomously reconfigure themselves  they are capable of both having knowledge of their current configuration and reconfiguring themselves at run time  This approach has been developed for the PRISMA aspect oriented architectural model  A new kind of aspect has been created in PRISMA in order to provide dynamic reconfiguration services to each complex component  it is called the Configuration Aspect    Springer Verlag Berlin Heidelberg 2007   9 refs",Dynamic reconfiguration of software architectures through aspects,"['Computer aided design', 'Object oriented programming', 'Dynamic reconfiguration', 'Software systems', 'Computer Programming', 'Computer Applications']","['Costa, Crist bal', '', '', 'Ali, Nour', '', '', 'P rez, Jennifer', '', '', 'Cars , Jos', ' ngel', '', '', 'Ramos, Isidro']","Department of Information Systems and Computation, Polytechnic University of Valencia, Camino de Vera s n, 46022 Valencia, Spain  2  Technical University of Madrid  UPM , E U  Inform tica, Ctra  Valencia km 7, 28051 Madrid, Spain",2008,ECSA
278,279,"Currently, most software systems have a dynamic nature and evolve at run time  The dynamic reconfiguration of software architectures has to be supported in order to enable their architectural element instances and their links to be created and destroyed at run time  Complex components also need reconfiguration capabilities to evolve their internal compositions  This paper introduces an approach to support the dynamic reconfiguration of software architectures taking advantage of aspect oriented techniques  It enables complex components to autonomously reconfigure themselves  they are capable of both having knowledge of their current configuration and reconfiguring themselves at run time  This approach has been developed for the PRISMA aspect oriented architectural model  A new kind of aspect has been created in PRISMA in order to provide dynamic reconfiguration services to each complex component  it is called the Configuration Aspect   9 refs",Dynamic reconfiguration of software architectures through aspects,"['object-oriented programming', 'software architecture', 'dynamic software architecture reconfiguration', 'software systems', 'PRISMA aspect-oriented architectural model', 'aspect-oriented software development', 'Software engineering techniques', 'Object oriented programming']","['Costa, C', '', '', ' Ali, N', '', '', ' Perez, J', ' Carsi, J A', ' Ramos, I']","Dept  of Inf  Syst    Comput , Polytech  Univ  of Valencia, Valencia, Spain",2007,ECSA
279,280,"Currently, most software systems have a dynamic nature and evolve at run time  The dynamic reconfiguration of software architectures has to be supported in order to enable their architectural element instances and their links to be created and destroyed at run time  Complex components also need reconfiguration capabilities to evolve their internal compositions  This paper introduces an approach to support the dynamic reconfiguration of software architectures taking advantage of aspect oriented techniques  It enables complex components to autonomously reconfigure themselves  they are capable of both having knowledge of their current configuration and reconfiguring themselves at run time  This approach has been developed for the PRISMA aspect oriented architectural model  A new kind of aspect has been created in PRISMA in order to provide dynamic reconfiguration services to each complex component  it is called the Configuration Aspect   9 refs",Dynamic reconfiguration of software architectures through aspects,"['object-oriented programming', 'software architecture', 'dynamic software architecture reconfiguration', 'software systems', 'PRISMA aspect-oriented architectural model', 'aspect-oriented software development', 'Software engineering techniques', 'Object oriented programming']","['Costa, C', '', '', ' Ali, N', '', '', ' Perez, J', ' Carsi, J A', ' Ramos, I']","Dept  of Inf  Syst    Comput , Polytech  Univ  of Valencia, Valencia, Spain",2008,ECSA
280,281,"Currently, the size and complexity of software systems, as well as critical time to market, demand new approaches from Software Engineering discipline for building such systems  In this context, the use of reference architectures and product line architectures is becoming a common practice  However, both of these concepts are sometimes mistakenly seen as the same thing  it is also not clearly established how they can be explored in a complementary way in order to contribute to software development  The main contribution of this paper is to make a clear differentiation between these architectures, by investigating and establishing definitions for each of them  Based on this, we also propose the use of reference architectures as a basis for product line architectures  As a result, a better understanding of both reference architectures and product line architectures, as well as an understanding of how to explore them jointly, can contribute to promoting more effective reuse in the development of software systems    2011 Springer Verlag   8 refs",Reference architecture and product line architecture  A subtle but critical difference,"['Computer software reusability', 'Software design', 'Critical time', 'Engineering disciplines', 'Product line architecture', 'Reference architecture', 'Software systems', 'Computer Software, Data Handling and Applications']","['Nakagawa, Elisa Yumi', '', '', 'Oliveira Antonino, Pablo', '', '', 'Becker, Martin']","Dept  of Computer Systems, University of S o Paulo   USP, PO Box 668, 13560 970, S o Carlos, SP, Brazil  2  Fraunhofer Institute for Experimental Software Engineering, Fraunhofer Platz 1, 67663, Kaiserslautern, Germany",2011,ECSA
281,282,"Customers of today s complex embedded systems demand the optimization of multiple system qualities under varying operational conditions  To be able to influence the system qualities, the system must have parameters that can be adapted  Constraints may be defined on the value of these parameters  Optimizing multiple system qualities under the given set of parameters and constraints is called Multi  Objective Optimization  MOO   This is a well known mathematical problem, for which numerous solutions have been proposed  The application of an MOO solution in an embedded system involves specific design decisions  It is preferable that these design decisions are documented in the architectural description  Therefore, this paper presents an architectural style, which specializes the Component and Connector viewtype, to enable the analysis and design of an architecture from an MOO point of view  A case study from industry is used to demonstrate the usage of this style    2009 IEEE   14 refs",An architectural style for optimizing system qualities in adaptive embedded systems using multi objective optimization,"['Architecture', 'Computer software', 'Embedded systems', 'Multiobjective optimization', 'Analysis and design', 'Architectural descriptions', 'Architectural style', 'Design decisions', 'Mathematical problems', 'Multiple systems', 'Operational conditions', 'Specific design', 'System quality', 'Buildings and Towers', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Optimization Techniques']","['De Roo, Arjan', '', '', 'S zer, Hasan', '', '', 'Aksit, Mehmet']","Software Engineering Group, University of Twente, Enschede, Netherlands",2009,ECSA
282,283,"Customers of today s complex embedded systems demand the optimization of multiple system qualities under varying operational conditions  To be able to influence the system qualities, the system must have parameters that can be adapted  Constraints may be defined on the value of these parameters  Optimizing multiple system qualities under the given set of parameters and constraints is called Multi  Objective Optimization  MOO   This is a well known mathematical problem, for which numerous solutions have been proposed  The application of an MOO solution in an embedded system involves specific design decisions  It is preferable that these design decisions are documented in the architectural description  Therefore, this paper presents an architectural style, which specializes the Component and Connector viewtype, to enable the analysis and design of an architecture from an MOO point of view  A case study from industry is used to demonstrate the usage of this style    2009 IEEE   14 refs",An architectural style for optimizing system qualities in adaptive embedded systems using multi objective optimization,"['Architecture', 'Computer software', 'Embedded systems', 'Multiobjective optimization', 'Analysis and design', 'Architectural descriptions', 'Architectural style', 'Design decisions', 'Mathematical problems', 'Multiple systems', 'Operational conditions', 'Specific design', 'System quality', 'Buildings and Towers', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Optimization Techniques']","['De Roo, Arjan', '', '', 'S zer, Hasan', '', '', 'Aksit, Mehmet']","Software Engineering Group, University of Twente, Enschede, Netherlands",2009,WICSA
283,284,"Customers of today s complex embedded systems demand the optimization of multiple system qualities under varying operational conditions  To be able to influence the system qualities, the system must have parameters that can be adapted  Constraints may be defined on the value of these parameters  Optimizing multiple system qualities under the given set of parameters and constraints is called Multi  Objective Optimization  MOO   This is a well known mathematical problem, for which numerous solutions have been proposed  The application of an MOO solution in an embedded system involves specific design decisions  It is preferable that these design decisions are documented in the architectural description  Therefore, this paper presents an architectural style, which specializes the Component and Connector viewtype, to enable the analysis and design of an architecture from an MOO point of view  A case study from industry is used to demonstrate the usage of this style    2009 IEEE   14 refs",An architectural style for optimizing system qualities in adaptive embedded systems using multi objective optimization,"['Architecture', 'Computer software', 'Embedded systems', 'Multiobjective optimization', 'Analysis and design', 'Architectural descriptions', 'Architectural style', 'Design decisions', 'Mathematical problems', 'Multiple systems', 'Operational conditions', 'Specific design', 'System quality', 'Buildings and Towers', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Optimization Techniques']","['De Roo, Arjan', '', '', 'S zer, Hasan', '', '', 'Aksit, Mehmet']","Software Engineering Group, University of Twente, Enschede, Netherlands",2011,WICSA
284,285,"Cyber physical systems  CPS  are systems of cooperating autonomous components which closely interact with and control the physical environment  Being distributed and typically based on periodic activities, CPS have to cope with the problem that data capturing a distributed state of the system and its environment are inherently inaccurate  they represent belief on the state   In particular, this poses a problem when dependability is being pursued  In this paper we address this issue by modeling belief at the architecture level  In particular, we enhance the architecture by models describing belief inaccuracy over time  We exploit these models to quantify at runtime the impact of belief staleness on its inaccuracy  We then use this quantification to drive architectural adaptation with the aim to increase dependability of the running CPS system    2014 IEEE   17 refs",Architecture adaptation based on belief inaccuracy estimation,"['Digital storage', 'Embedded systems', 'Software architecture', 'belief', 'Component architectures', 'Cyber physical systems (CPSs)', 'Self-adaptivity', 'State-space models', 'Computer Systems and Equipment', 'Data Storage, Equipment and Techniques', 'Computer Software, Data Handling and Applications', 'Engineering Graphics']","['Ali, Rima Al', '', '', 'Bures, Tomas', ' ,', '', ' Gerostathopoulos, Ilias', '', '', 'Keznikl, Jaroslav', ' ,', '', ' Plasil, Frantisek']","Charles University in Prague, Faculty of Mathematics and Physics, Prague, Czech Republic  2  Institute of Computer Science, Academy of Sciences of the Czech Republic, Prague, Czech Republic",2014,WICSA
285,286,"Cyber physical systems and the Internet of Things illustrate the proliferation of sensors  The full potential of ubiquitous sensors can only be realized, if sensors and traditional data sources are integrated into one system  This leads to large, complex systems which are harder to use and manage, and where maintaining desired behavior is increasingly difficult  We suggest a novel approach to handle the complexity of these systems  users focus on the desired behavior of the system and use a declarative policy language  DPL  to state these behaviors  An enhanced message oriented middleware processes the policies and automatically generates components which execute the policies  We compared our approach against other approaches in a case study and found that it does indeed simplify the use of cyber physical systems    2014 Springer International Publishing Switzerland   30 refs",Using policies for handling complexity of event driven architectures,"['Software architecture', 'Cyber physical systems (CPSs)', 'Data-sources', 'Event-driven architectures', 'Message oriented middleware', 'Policy language', 'Ubiquitous sensor', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Freudenreich, Tobias', '', '', 'Appel, Stefan', '', '', 'Frischbier, Sebastian', '', '', 'Buchmann, Alejandro P', '', '']","Databases and Distributed Systems, TU Darmstadt, Darmstadt, Germany",2014,ECSA
286,287,"Cyber physical systems and the Internet of Things illustrate the proliferation of sensors  The full potential of ubiquitous sensors can only be realized, if sensors and traditional data sources are integrated into one system  This leads to large, complex systems which are harder to use and manage, and where maintaining desired behavior is increasingly difficult  We suggest a novel approach to handle the complexity of these systems  users focus on the desired behavior of the system and use a declarative policy language  DPL  to state these behaviors  An enhanced message oriented middleware processes the policies and automatically generates components which execute the policies  We compared our approach against other approaches in a case study and found that it does indeed simplify the use of cyber physical systems   30 refs",Using policies for handling complexity of event driven architectures,"['computational complexity', 'Internet of Things', 'message passing', 'middleware', 'program diagnostics', 'software architecture', 'complexity handling policies', 'event-driven architectures', 'Cyber-physical systems', 'Internet of Things', 'sensor proliferation', 'ubiquitous sensors', 'complex systems', 'declarative policy language', 'DPL', 'message-oriented middleware', 'automatic component generation', 'policy execution', 'Software engineering techniques', 'Object oriented programming', 'Diagnostic, testing, debugging and evaluating systems', 'Mobile, ubiquitous and pervasive computing']","['Freudenreich, T', '', '', ' Appel, S', '', '', ' Frischbier, S', '', '', ' Buchmann, A P', '', '']","Databases   Distrib  Syst , Tech  Univ  Darmstadt, Darmstadt, Germany",2014,ECSA
287,288,"Daily net surface radiation fluxes are estimated for Indian land mass at spatial grid intervals of 0 1 degree  Two approaches are employed to obtain daily net radiation for four sample days viz , November 19, 2013, December 16, 2013, January 8, 2014 and March 20, 2014  Both the approaches compute net shortwave and net longwave fluxes, separately and sum them up to obtain net radiation  The first approach computes net shortwave radiation using daily insolation product of Kalpana VHRR and 15 days time composited broadband albedo product of Oceansat OCM2  The net outgoing longwave radiation is computed using Stefan Boltzmann equation corrected for humidity and cloudiness  In the second approach, instantaneous clear sky net shortwave radiation is estimated using computed clear sky incoming shortwave radiation and the gridded MODIS 16 day time composited albedo product  The net longwave radiation is obtained by estimating outgoing and incoming longwave radiation fluxes, independently  In this, MODIS derived surface emissivity and skin temperature parameters are used for estimating outgoing longwave radiation component  In both the approaches, surface air temperature data required for estimation of net longwave radiation fluxes are extracted from India Meteorological Department s  IMD  Automatic Weather Station  AWS  records  Estimates by the two different approaches are evaluated by comparing daily net radiation fluxes with CERES based estimates corresponding to the sample days, through statistical measures  The estimated all sky daily net radiation using the first approach compared well with CERES SYN1deg daily average net radiation with r2 values of the order of 0 7 and RMS errors of the order of 8 16 w m2   13 refs",Estimation of net radiation using satellite based data inputs,"['Atmospheric temperature', 'Boltzmann equation', 'Electromagnetic wave emission', 'Incident solar radiation', 'Radiometers', 'Solar radiation', 'Weather information services', 'Air temperature', 'Data input', 'Emissivity', 'Shortwave albedo', 'Surface radiation', 'Meteorology', 'Atmospheric Properties', 'Fluid Flow', 'Solar Energy and Phenomena', 'Electromagnetic Waves', 'Statistical Methods', 'Radiation Measuring Instruments']","['Krishna, S', 'V', 'S', 'Sai', '', '', 'Manavalan, P', '', '', ' Rao, P V N', '', '']","Atmosphere and Climate Sciences Group  ACSG , Earth and Climate Science Area  ECSA , NRSC, Hyderabad, India",2014,ECSA
288,289,"Daily net surface radiation fluxes are estimated for Indian land mass at spatial grid intervals of 0 1 degree  Two approaches are employed to obtain daily net radiation for four sample days viz , November 19, 2013, December 16, 2013, January 8, 2014 and March 20, 2014  Both the approaches compute net shortwave and net longwave fluxes, separately and sum them up to obtain net radiation  The first approach computes net shortwave radiation using daily insolation product of Kalpana VHRR and 15 days time composited broadband albedo product of Oceansat OCM2  The net outgoing longwave radiation is computed using Stefan Boltzmann equation corrected for humidity and cloudiness  In the second approach, instantaneous clear sky net shortwave radiation is estimated using computed clear sky incoming shortwave radiation and the gridded MODIS 16 day time composited albedo product  The net longwave radiation is obtained by estimating outgoing and incoming longwave radiation fluxes, independently  In this, MODIS derived surface emissivity and skin temperature parameters are used for estimating outgoing longwave radiation component  In both the approaches, surface air temperature data required for estimation of net longwave radiation fluxes are extracted from India Meteorological Department s  IMD  Automatic Weather Station  AWS  records  Estimates by the two different approaches are evaluated by comparing daily net radiation fluxes with CERES based estimates corresponding to the sample days, through statistical measures  The estimated all sky daily net radiation using the first approach compared well with CERES SYN1deg daily average net radiation with r2 values of the order of 0 7 and RMS errors of the order of 8 16 w m2   13 refs",Estimation of net radiation using satellite based data inputs,"['Boltzmann equation', 'Electromagnetic wave emission', 'Incident solar radiation', 'Radiometers', 'Weather information services', 'Air temperature', 'Data input', 'Emissivity', 'Shortwave albedo', 'Surface radiation', 'Meteorology', 'Atmospheric Properties', 'Fluid Flow', 'Solar Energy and Phenomena', 'Electromagnetic Waves', 'Statistical Methods', 'Radiation Measuring Instruments']","['Krishna, S V S', 'Sai', '', '', 'Manavalan, P', '', '', ' Rao, P V N', '', '']","Atmosphere and Climate Sciences Group  ACSG , Earth and Climate Science Area  ECSA , National Remote Sensing Centre  NRSC , Hyderabad, India",2014,ECSA
289,290,"Data Distribution Service  DDS  is the Object Management Group s  OMG  new standard middleware after Common Object Request Broker Architecture  CORBA , which is becoming increasingly popular  One of the important problems in DDS Based Software Systems is the deployment configuration of DDS modules to the physical resources  In general, this can be done in many different ways whereby each deployment alternative will perform differently  Currently, the deployment configuration is decided after the coding phase and usually performed manually  For large configurations, finding the feasible deployment might require serious rework with costly and time consuming iterations  In this paper, we present the tool Deploy DDS to support the selection and generation of deployment architectures of DDS based systems  The tool can be used to perform an evaluation during the design phase and generate the selected feasible configuration    2014 Authors   10 refs",Deploy DDS  Tool framework for supporting deployment architecture of data distribution service based systems,"['Computer architecture', 'Information management', 'Middleware', 'Data distribution services', 'Deployment architecture', 'Design phase', 'Object management groups', 'Physical resources', 'Research tools', 'Software systems', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Information Dissemination']","['Celik, Turgay', '', '', 'Koksal, Omer', '', '', 'Tekinerdogan, Bedir']","MilSOFT Software Technologies, Ankara, Turkey  2  ASELSAN, Ankara, Turkey  3  Bilkent University, Dept  of Computer Engineering, Ankara, Turkey",2014,ECSA
290,291,"Data intensive computing is concerned with creating scalable solutions for capturing, analyzing, managing and understanding multi terabyte and petabyte data volumes  Such data volumes exist in a diverse range of application domains, including scientific research, bioinformatics, cyber security, social computing and commerce  Innovative hardware and software technologies to address these problems must scale to meet these ballooning data volumes and simultaneously reduce the time needed to provide effective data analysis  This paper describes some of the software architecture challenges that must be addressed when building data intensive applications and supporting infrastructures  These revolve around requirements for adaptive resource utilization and management, flexible integration, robustness and scalable data management   4 refs",Software architecture challenges for data intensive computing,"['Bioinformatics', 'Management information systems', 'Security of data', 'Statistical methods', 'Technology', 'Adaptive resource utilization', 'Application domains', 'Cyber-security', 'Data analysis', 'Data management', 'Data volumes', 'Data-intensive applications', 'Data-intensive computing', 'Diverse range', 'Hardware and software', 'Scalable solutions', 'Scientific researches', 'Social computing', 'Bioinformatics', 'Computer Programming', 'Data Processing and Image Processing', 'Engineering Profession', 'Mathematical Statistics']","['Gorton, Ian']","Pacific Northwest National Lab , Richland, WA 99352, United States",2008,WICSA
291,292,"Dealloying of Pt bimetallic nanoparticles is a promising synthesis method to prepare highly active electrocatalysts for oxygen reduction reaction  ORR  in alkaline and acidic PEM fuel cells  We present here a structural, compositional and electrochemical characterization linked with ORR activity for carbon supported PtCu3, PtCu, and Pt3Cu alloy nanoparticles in different electrolytes and pH values  The effects of electrolyte and pH are systematically examined on the ECSA and Pt mass based activity  j mass  for various Pt Cu alloys  We observed the formation of Cu oxide species and redissolutionredeposition of Cu species during the voltage cycling up to 1 0 V RHE in 0 1 M KOH  In contrast, the voltage cycling in 0 1 M HClO4 immediately causes the dissolution of Cu and results in Pt enriched particle surface  We have correlated the ECSA and mass activity with the as synthesized composition in dependence on both electrolytes  In summary, after voltage cycling in 0 1 M HClO4 the values of jmass increase according  Pt3Cu 3  However, after voltage cycling in 0 1 M KOH the values of jmass increase in the following trend  PtCu3 3Cu  Only after activation process, PtCu3 core shell catalyst shows significantly enhanced ORR activity in 0 1 M KOH compared to pure Pt    2012 The Electrochemical Society   82 refs","PtCu3, PtCu and Pt3Cu alloy nanoparticle electrocatalysts for oxygen reduction reaction in alkaline and acidic media","['Alkalinity', 'Copper alloys', 'Electrocatalysts', 'Electrolytes', 'Electrolytic reduction', 'Nanoparticles', 'pH effects', 'Synthesis (chemical)', 'Acidic media', 'Activation process', 'Bimetallic nanoparticles', 'Core-shell', 'Cu alloy', 'Cu oxide', 'Cu species', 'Dealloying', 'Electrochemical characterizations', 'Mass activity', 'Oxygen reduction reaction', 'Particle surface', 'PEM fuel cell', 'pH value', 'Synthesis method', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Chemistry, General', 'Solid State Physics', 'Nanotechnology', 'Electric Batteries and Fuel Cells', 'Precious Metals', 'Copper Alloys', 'Electric and Magnetic Materials']","['Oezaslan, Mehtap', '', '', 'Hasch , Fr d ric', '', '', 'Strasser, Peter']","Department of Chemistry, Chemical Engineering Division, Technical University Berlin, Berlin 10623, Germany",2012,ECSA
292,293,"Decentralized systems are systems of systems whose services are governed by two or more separate organizations under distinct spheres of authority  Coordinated evolution of the various elements of a decentralized system may be difficult, if not impossible, as individual organizations evolve their service offerings in response to organization  and service specific pressures, including market demand, technology, competitive and cooperative interests, and funding  Consequently, decentralized services offer unique challenges for evolution and adaptation that reach well beyond any   one single organizational boundary  However, client driven service customization and tailoring is a powerful tool for meeting conflicting, independent client demands in an environment where disorderly and uneven service evolution predominates  To this end, we contribute an architectural style, COmputAtional State Transfer  COAST , designed to provide extensive, safe, and secure client directed customization of decentralized services  COAST combines mechanisms from software architecture, cryptography, security, and programming languages, granting application architects flexible provisioning of their core services and assets while protecting those services and assets from attack and misuse    2012 IEEE   52 refs",COAST  An architectural style for decentralized on demand tailored services,"['Architecture', 'Information services', 'Service oriented architecture (SOA)', 'Architectural style', 'client-driven adaptation', 'Decentralized system', 'Market demand', 'Organizational boundaries', 'Service customization', 'Service offering', 'State transfer', 'Systems-of-systems', 'Buildings and Towers', 'Digital Computers and Systems', 'Computer Programming', 'Information Services']","['Gorlick, Michael M', '', '', ' Strasser, Kyle', '', '', 'Taylor, Richard N', '', '']","Institute for Software Research, University of California, Irvine, Irvine, CA, United States",2012,ECSA
293,294,"Decentralized systems are systems of systems whose services are governed by two or more separate organizations under distinct spheres of authority  Coordinated evolution of the various elements of a decentralized system may be difficult, if not impossible, as individual organizations evolve their service offerings in response to organization  and service specific pressures, including market demand, technology, competitive and cooperative interests, and funding  Consequently, decentralized services offer unique challenges for evolution and adaptation that reach well beyond any   one single organizational boundary  However, client driven service customization and tailoring is a powerful tool for meeting conflicting, independent client demands in an environment where disorderly and uneven service evolution predominates  To this end, we contribute an architectural style, COmputAtional State Transfer  COAST , designed to provide extensive, safe, and secure client directed customization of decentralized services  COAST combines mechanisms from software architecture, cryptography, security, and programming languages, granting application architects flexible provisioning of their core services and assets while protecting those services and assets from attack and misuse    2012 IEEE   52 refs",COAST  An architectural style for decentralized on demand tailored services,"['Architecture', 'Information services', 'Service oriented architecture (SOA)', 'Architectural style', 'client-driven adaptation', 'Decentralized system', 'Market demand', 'Organizational boundaries', 'Service customization', 'Service offering', 'State transfer', 'Systems-of-systems', 'Buildings and Towers', 'Digital Computers and Systems', 'Computer Programming', 'Information Services']","['Gorlick, Michael M', '', '', ' Strasser, Kyle', '', '', 'Taylor, Richard N', '', '']","Institute for Software Research, University of California, Irvine, Irvine, CA, United States",2012,WICSA
294,295,"Design activity is core to modern engineering practice  Some design experience is demanded by professional bodies that accredit degree engineering programmes  e g  ABET and ECSA   The purpose of this paper is to track design related topics through the curriculum of the mechanical engineering degree programme at the University of Botswana  A questionnaire was designed and administered to staff teaching on the programme  The responses were used to map design components in the curriculum and assess the design experience of students  The results showed that design topics were delivered in various courses and the knowledge gained by students increased steadily from Year 3 to Year 5  Some observed deficiencies in the teaching of design included lack of industry recommended projects, negligible application of design software, and the use of only single discipline based problems  i e  no multi disciplinary teaching approach   It was concluded that a programme review is needed to improve the pedagogy of design and enhance programme robustness  It is envisaged that the study will help in designing a new mechanical engineering curriculum to satisfy accreditation requirements     2012  Trans Tech Publications, Switzerland   13 refs",Tracking design elements in a mechanical engineering curriculum,"['Accreditation', 'Design', 'Engineering education', 'Mapping', 'Maps', 'Mechanical engineering', 'Software design', 'Teaching', 'Botswana', 'Design activity', 'Design experience', 'Design softwares', 'Engineering programmes', 'Map design', 'Mechanical engineering curriculum', 'Modern engineering', 'Multi-disciplinary', 'Teaching approaches', 'Track design', 'Tracking design', 'Structural Design', 'Mechanical Engineering, General', 'Computer Programming', 'Education', 'Engineering Graphics']","['Oladiran, M', 'Tunde', '', '', 'Uziak, Jacek', '', '', 'Kommula, Venkata P', '', '']","Department of Mechanical Engineering, University of Botswana, P Bag 0061, Gaborone, Botswana",2012,ECSA
295,296,"Design activity is core to modern engineering practice  Some design experience is demanded by professional bodies that accredit degree engineering programmes  e g  ABET and ECSA   The purpose of this paper is to track design related topics through the curriculum of the mechanical engineering degree programme at the University of Botswana  A questionnaire was designed and administered to staff teaching on the programme  The responses were used to map design components in the curriculum and assess the design experience of students  The results showed that design topics were delivered in various courses and the knowledge gained by students increased steadily from Year 3 to Year 5  Some observed deficiencies in the teaching of design included lack of industry recommended projects, negligible application of design software, and the use of only single discipline based problems  i e  no multi disciplinary teaching approach   It was concluded that a programme review is needed to improve the pedagogy of design and enhance programme robustness  It is envisaged that the study will help in designing a new mechanical engineering curriculum to satisfy accreditation requirements   13 refs",Tracking design elements in a mechanical engineering curriculum,"['design engineering', 'educational institutions', 'engineering education', 'mechanical engineering', 'teaching', 'mechanical engineering curriculum', 'design activity', 'design experience', 'mechanical engineering degree program', 'University of Botswana', 'staff teaching', 'design topic', 'design teaching', 'design software', 'single discipline based problem', 'program review', 'design pedagogy', 'accreditation requirement', 'design element tracking', 'Design', 'Education and training']","['Oladiran, M T', '', '', ' Uziak, J', '', '', ' Kommula, V', '', '']","Dept  of Mech  Eng , Univ  of Botswana, Gaborone, Botswana",2010,ECSA
296,297,"Design decisions for complex, component based systems impact multiple quality of service  QoS  properties  Often, means to improve one quality property deteriorate another one  In this scenario, selecting a good solution with respect to a single quality attribute can lead to unacceptable results with respect to the other quality attributes  A promising way to deal with this problem is to exploit multi objective optimization where the objectives represent different quality attributes  The aim of these techniques is to devise a set of solutions, each of which assures a trade off between the conflicting qualities  To automate this task, this paper proposes a combined use of analytical optimization techniques and evolutionary algorithms to efficiently identify a significant set of design alternatives, from which an architecture that best fits the different quality objectives can be selected  The proposed approach can lead both to a reduction of development costs and to an improvement of the quality of the final system  We demonstrate the use of this approach on a simple case study    2010 Springer Verlag   36 refs",A hybrid approach for multi attribute QoS optimisation in component based software systems,"['Evolutionary algorithms', 'Multiobjective optimization', 'Quality of service', 'Software architecture', 'Best fit', 'Component based systems', 'Component-based software systems', 'Design alternatives', 'Design decisions', 'Development costs', 'Hybrid approach', 'Multi-attributes', 'Multiple quality', 'Optimisations', 'Optimization techniques', 'Quality attributes', 'Quality properties', 'Optimization Techniques', 'Mathematics', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television']","['Martens, Anne', '', '', 'Ardagna, Danilo', '', '', 'Koziolek, Heiko', '', '', 'Mirandola, Raffaela', '', '', 'Reussner, Ralf']","Karlsruhe Institute of Technology, Karlsruhe, Germany  2  Politecnico di Milano, Dipartimento di Elettronica e Informazione, Milano, Italy  3  ABB Corporate Research, Ladenburg, Germany",2010,QoSA
297,298,"Design decisions made early in software development have great impact on the software product quality  Design time reliability prediction is one of the techniques that support software engineers in early design decisions, based on the evaluation of reliability impact of the individual design alternatives  The accuracy of reliability prediction is critically dependent on the accuracy of reliability prediction models, which relies on uncertain failure parameters  such as the failure probability of component internal actions   Although the effectiveness of the failure parameter estimation critically influences the usability of the prediction techniques, the parameter estimation often relies on expert knowledge and is not receiving systematic attention  This paper aims to survey existing techniques for estimation and collection of failure parameters in architecture based reliability prediction models, and presents the findings that can be learned from their detailed analysis  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   57 refs",Failure data collection for reliability prediction models  A survey,"['Data acquisition', 'Design', 'Failure (mechanical)', 'Forecasting', 'Mathematical models', 'Reliability analysis', 'Software reliability', 'Surveying', 'Surveys', 'Uncertainty analysis', 'Data collection', 'Early design decisions', 'Failure parameters', 'Prediction techniques', 'Reliability impacts', 'Reliability prediction', 'Software product quality', 'Value estimation', 'Surveying', 'Structural Design', 'Strength of Building Materials  Mechanical Properties', 'Data Processing and Image Processing', 'Computer Applications', 'Control Systems', 'Production Planning and Control  Manufacturing', 'Quality Assurance and Control', 'Mathematics', 'Probability Theory']","['Buhnova, Barbora', '', '', 'Chren, Stanislav', '', '', 'Fabrikov , Lucie']","Masaryk University, Brno, Czech Republic",2014,QoSA
298,299,"Design decisions should take quality characteristics into account  To support such decisions, we capture various solution artifacts with different levels of satisfying quality requirements as variabilities in the solution space and provide them with rationales for selecting suitable variants  We present a UML based approach to modeling variability in the problem and the solution space by adopting the notion of feature modeling  It provides a mapping of requirements variability to design solution variability to be used as a part of a general process for generating design alternatives  Our approach supports the software engineer in the process of decision making for selecting suitable solution variants, reflecting quality concerns, and reasoning about it  Copyright   2012 ACM   20 refs",Supporting quality driven design decisions by modeling variability,"['Decision making', 'Design alternatives', 'Design decisions', 'Design solutions', 'Feature modeling', 'Modeling variability', 'Quality characteristic', 'Quality requirements', 'Requirements variability', 'Software engineers', 'Solution space', 'Suitable solutions', 'UML-based approach', 'Variability modeling', 'Structural Design', 'Management']","['Alebrahim, Azadeh', '', '', 'Heisel, Maritta']","Paluno   The Ruhr Institute for Software Technology, University of Duisburg, Essen, Germany",2012,QoSA
299,300,Design patterns are a meaningful technology for supporting the construction and modeling of software systems  Besides their use is related to the non functional requirements fulfillment that is also an open challenge in the field of software design  In this work we propose a theoretical approach for modeling relationships and sequences of patterns and for modeling the taxonomy that relates patterns with ensured non functional requirements for given application contexts  The approach is based on the use of Description Logics for modeling the domain of patterns and for reasoning tasks on the modeled domain  We developed a framework for supporting the architectural modeling phase and used it to verify the effectiveness of both the patterns conceptualization and the use of non standard reasoning tasks for querying the pattern ontology    2014 Springer International Publishing Switzerland   9 refs,Ontology driven pattern selection and matching in software design,"['Data description', 'Software architecture', 'Application contexts', 'Architectural modeling', 'Description logic', 'Model relationships', 'Non-functional requirements', 'Pattern selection', 'Software systems', 'Theoretical approach', 'Computer Programming', 'Database Systems']","['Di Noia, Tommaso', '', '', 'Mongiello, Marina', '', '', 'Di Sciascio, Eugenio']","Dipartimento di Ingegneria Elettrica e dell Informazione, Politecnico di Bari, Via E  Orabona, 4, 70125 Bari, Italy",2014,ECSA
300,301,Design patterns are a meaningful technology for supporting the construction and modeling of software systems  Besides their use is related to the non functional requirements fulfillment that is also an open challenge in the field of software design  In this work we propose a theoretical approach for modeling relationships and sequences of patterns and for modeling the taxonomy that relates patterns with ensured non functional requirements for given application contexts  The approach is based on the use of Description Logics for modeling the domain of patterns and for reasoning tasks on the modeled domain  We developed a framework for supporting the architectural modeling phase and used it to verify the effectiveness of both the patterns conceptualization and the use of non standard reasoning tasks for querying the pattern ontology   9 refs,Ontology Driven Pattern Selection and Matching in Software Design,"['description logic', 'inference mechanisms', 'object-oriented methods', 'ontologies (artificial intelligence)', 'pattern matching', 'query processing', 'software architecture', 'ontology-driven pattern selection', 'ontology-driven pattern matching', 'design patterns', 'software system modeling', 'software system construction', 'nonfunctional requirements', 'software design', 'pattern sequences', 'taxonomy modeling', 'description logic', 'pattern domain modeling', 'architectural modeling', 'pattern conceptualization', 'nonstandard reasoning tasks', 'pattern ontology querying', 'Software engineering techniques', 'Knowledge engineering techniques', 'Formal methods']","['Di Noia, T', '', '', ' Mongiello, M', '', '', ' Di Sciascio, E', '', '']","Dipt  di Ing  Elettr  e Dell Inf , Politec  di Bari, Bari, Italy",2014,ECSA
301,302,"Designers have long recognized the value of modularity, but important software modularity principles have remained informal  According to Baldwin and Clark s  1  design rule theory  DRT , modular architectures add value to system designs by creating options to improve the system by substituting or experimenting on individual modules  In this paper, we examine the design evolution of two software product platforms through the modeling lens of DRT and design structure matrices  DSMs   We show that DSM models and DRT precisely explain how realworld modularization activities in one case allowed for different rates of evolution in different software modules and in another case conferred distinct strategic advantages on a firm by permitting substitution of an at risk software module without substantial change to the rest of the system  Our results provide positive evidence that DSM and DRT can inform important aspects of large scale software structure and evolution, having the potential to guide software architecture design activities    2008 IEEE   20 refs",Analyzing the evolution of large scale software systems using design structure matrices and design rule theory  Two exploratory cases,"['Computer software', 'Electric load management', 'Hearing aids', 'Large scale systems', 'Matrix algebra', 'Modular construction', 'Occupational risks', 'Software architecture', 'Software design', 'Design evolution', 'Design rules', 'Design Structure Matrices', 'Large-scale software systems', 'Modular architectures', 'Modularization', 'Positive evidence', 'Software architecture design', 'Software modularity', 'Software modules', 'Software products', 'Software structures', 'Strategic advantages', 'System designs', 'Systems Science', 'Algebra', 'Personnel', 'Acoustic Devices', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Electric Power Systems', 'Construction Methods', 'Buildings and Towers']","['LaMantia, Matthew J', '', '', ' Cai, Yuanfang', '', '', 'MacCormack, Alan D', '', '', ' Rusnak, John']","VMware, Inc   2  Drexel University  3  Harvard Business School",2008,WICSA
302,303,"Designing software architectures that exhibit a good trade off between multiple quality attributes is hard  Even with a given functional design, many degrees of freedom in the software architecture  e g  component deployment or server configuration  span a large design space  In current practice, software architects try to find good solutions manually, which is time consuming, can be error prone and can lead to suboptimal designs  We propose an automated approach guided by architectural tactics to search the design space for good solutions  Our approach applies multi objective evolutionary optimization to software architectures modelled with the Palladio Component Model  Software architects can then make well informed trade off decisions and choose the best architecture for their situation  To validate our approach, we applied it to the architecture models of two systems, a business reporting system and an industrial control system from ABB  The approach was able to find meaningful trade offs leading to significant performance improvements or costs savings  The novel use of tactics decreased the time needed to find good solutions by up to 80     2011 ACM   31 refs",PerOpteryx  Automated application of tactics in multi objective software architecture optimization,"['Commerce', 'Design', 'Economic and social effects', 'Multiobjective optimization', 'Software reliability', 'architectural tactics', 'Architecture models', 'Architecture optimization', 'Automated applications', 'Automated approach', 'Component deployment', 'Component model', 'Design spaces', 'Error prones', 'Evolutionary optimizations', 'Functional design', 'Industrial control systems', 'Large designs', 'Multi objective', 'Multiple quality', 'performance', 'Performance improvements', 'Reporting systems', 'Software architects', 'Sub-optimal designs', 'Structural Design', 'Computer Programming', 'Industrial Economics', 'Quality Assurance and Control', 'Optimization Techniques', 'Social Sciences']","['Koziolek, Anne', '', '', 'Koziolek, Heiko', '', '', 'Reussner, Ralf']","Karlsruhe Institute of Technology, Karlsruhe, Germany  2  ABB Corporate Research, Ladenburg, Germany",2011,QoSA
303,304,"Despite of ongoing development of model driven development approaches in industry and academia, we believe that in particular for business logic aspects of information systems there is a lack of integrated support considering all phases of a model driven software process, from analysis until code generation  In our work we developed a framework consisting of meta models, model transformations and tools that address a consistent support of development and maintenance tasks  As contribution of this article, we present an architecture for generated business logic code as part our infrastructure blueprint  We aim at the generation of robust business logic layers and consider particularly maintenance and integration issues of complex information systems with external dependencies  For this purpose, our infrastructure supports the specification of global domain states and local conditions in visual software models and generates corresponding code artifacts which assure these conditions automatically    2010 Springer Verlag Berlin Heidelberg   19 refs",An architectural blueprint for model driven development and maintenance of business logic for information systems,"['Computer software maintenance', 'Information systems', 'Business logic', 'Code Generation', 'Complex information', 'Global domain', 'Integrated supports', 'Integration issues', 'Local conditions', 'Maintenance tasks', 'Meta model', 'Model driven development', 'Model transformation', 'Model-driven', 'Robust business', 'Software process', 'Visual software models', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Br ckmann, Tobias', '', '', 'Gruhn, Volker']","University of Leipzig, Klostergasse 3, Leipzig 04107, Germany  2  University of Duisburg Essen, Sch tzenbahn 70, Essen 45127, Germany",2010,ECSA
304,305,"Despite receiving much research attention, the extraction of runtime architecture remains hard  One approach, Scholia, relies on adding typecheckable annotations to the code, and uses static analysis to extract a global, hierarchical Ownership Object Graph  OOG   The OOG provides architectural abstraction by ownership hierarchy and by types, and can be abstracted into a run time architecture represented in an architectural description language, for documentation or conformance analysis  We report on our experience in analyzing a medium sized object oriented system undergoing maintenance to   1  extract an OOG  and  2  refine the OOG based on the maintainers  feedback  We evaluate the effectiveness of abstraction by ownership hierarchy and by types to extract an OOG that the system maintainers understand  We measure the extraction effort to be about 1 hour KLOC  An evaluation with the lead main tainer confirms that he understands abstraction by ownership hierarchy and by types  Finally, we illustrate how to incrementally refine an extracted OOG  without starting all over  to better match the maintainer s mental model  Copyright   2012 ACM   25 refs",Extraction of ownership object graphs from object oriented code  An experience report,"['Abstracting', 'Software architecture', 'Abstracting', 'Software architecture', 'Architectural description languages', 'Architecture recovery', 'Experience report', 'Mental model', 'Object graphs', 'Object-oriented code', 'Object-oriented system', 'Ownership type', 'Runtime architecture', 'Runtimes', 'Computer Programming', 'Information Sources and Analysis']","['Abi Antoun, Marwan', '', '', 'Ammar, Nariman', '', '', 'Hailat, Zeyad']","Department of Computer Science, Wayne State University, United States",2012,QoSA
305,306,"Despite the many publications around the innovation and challenges introduced by SOSE and SOA, the real  differences with traditional software engineering and software architecture are still very fuzzy  To better understand the innovative points  if any , in this work we identified seven fundamental differences by conducting a literature review, linked them to some service relevant aspects and mapped the differences   service aspects on the well known architecture related concepts of architectural concerns    architectural viewpoints   As such, we were able to identify an initial set of requirements for service oriented viewpoints  If specialized in industrial contexts, we would be able to exemplify innovative points by capturing service relevant aspects  In perspective, this work seems to scale down innovation  of SOSE and SOA, to relevance  of service aspects to engineering and architecture    2009 IEEE   11 refs",On service oriented architectural concerns and viewpoints,"['Architecture', 'Computer software', 'Innovation', 'Industrial context', 'Literature reviews', 'Scale down', 'Service Oriented', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Industrial Engineering and Management']","['Gu, Qing', '', '', 'Lago, Patricia']","Department of Computer Science, VU University, Amsterdam, Netherlands",2009,ECSA
306,307,"Despite the many publications around the innovation and challenges introduced by SOSE and SOA, the real  differences with traditional software engineering and software architecture are still very fuzzy  To better understand the innovative points  if any , in this work we identified seven fundamental differences by conducting a literature review, linked them to some service relevant aspects and mapped the differences   service aspects on the well known architecture related concepts of architectural concerns    architectural viewpoints   As such, we were able to identify an initial set of requirements for service oriented viewpoints  If specialized in industrial contexts, we would be able to exemplify innovative points by capturing service relevant aspects  In perspective, this work seems to scale down innovation  of SOSE and SOA, to relevance  of service aspects to engineering and architecture    2009 IEEE   11 refs",On service oriented architectural concerns and viewpoints,"['Architecture', 'Computer software', 'Innovation', 'Industrial context', 'Literature reviews', 'Scale down', 'Service Oriented', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Industrial Engineering and Management']","['Gu, Qing', '', '', 'Lago, Patricia']","Department of Computer Science, VU University, Amsterdam, Netherlands",2009,WICSA
307,308,"Despite the many publications around the innovation and challenges introduced by SOSE and SOA, the real  differences with traditional software engineering and software architecture are still very fuzzy  To better understand the innovative points  if any , in this work we identified seven fundamental differences by conducting a literature review, linked them to some service relevant aspects and mapped the differences   service aspects on the well known architecture related concepts of architectural concerns    architectural viewpoints   As such, we were able to identify an initial set of requirements for service oriented viewpoints  If specialized in industrial contexts, we would be able to exemplify innovative points by capturing service relevant aspects  In perspective, this work seems to scale down innovation  of SOSE and SOA, to relevance  of service aspects to engineering and architecture    2009 IEEE   11 refs",On service oriented architectural concerns and viewpoints,"['Architecture', 'Computer software', 'Innovation', 'Industrial context', 'Literature reviews', 'Scale down', 'Service Oriented', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Industrial Engineering and Management']","['Gu, Qing', '', '', 'Lago, Patricia']","Department of Computer Science, VU University, Amsterdam, Netherlands",2011,WICSA
308,309,"Despite the well known advantages of applying the MDA proposal to SOA developments, there are still some gaps that need to be filled  At PIM level, for example, there is no possibility of having an executable version of the system as it solely comprises technologically independent models  In order to solve this we propose to formalize the architectural model at this level with p ADL, an ADL supporting the description of dynamic and evolvable architectures like SOA itself is  Since p ADL allows the definition of executable versions of the architecture, the specification written embodies a prototype of the system at the PIM level  We illustrate this by describing a real case study based on the SMPP standard for sending SMS messages    2008 Springer Verlag Berlin Heidelberg   11 refs",Representing service oriented architectural models using p ADL,"['Architecture', 'Information services', 'Intermodulation', 'Intermodulation measurement', 'Architectural models', 'Independent models', 'PIM-level modelling', 'Real cases', 'Service-oriented architecture', 'Sms messages', 'Buildings and Towers', 'Information Theory and Signal Processing', 'Computer Programming', 'Computer Applications', 'Information Services', 'Electric Variables Measurements']","['L pez Sanz, Marcos', '', '', 'Qayyum, Zawar', '', '', 'Cuesta, Carlos E', '', '', ' Marcos, Esperanza', '', '', 'Oquendo, Flavio']","Kybele Research Group, Rey Juan Carlos University, Mostoles   Madrid 28933, Spain  2  VALORIA Laboratory, University of South Brittany, Tohannic Campus, Vannes 56017, France",2008,ECSA
309,310,"Developing architectural support for self adaptive systems, i e  systems that are able to autonomously adapt to changes in their operating conditions, is a key challenge for software engineers  Multi agent systems are a class of decentralized systems that are known for realizing qualities such as adaptability and scalability  In this paper, we present a pattern language for multi agent systems  The pattern language distills domain specific architectural knowledge derived from extensive experiences with developing various multi agent systems  The pattern language, consisting of the five interrelated patterns, supports architects with designing software architectures for a family of self adaptive systems  We illustrate the patters for a case study in the domain of automated transportation systems    2009 IEEE   21 refs",A pattern language for multi agent systems,"['Adaptive systems', 'Architecture', 'Computer software', 'Linguistics', 'Multi agent systems', 'Software design', 'Architectural knowledge', 'Architectural support', 'Automated transportation systems', 'Decentralized system', 'Designing softwares', 'Domain specific', 'Interrelated patterns', 'Operating condition', 'Pattern languages', 'Self-adaptive system', 'Software engineers', 'Information Dissemination', 'Control Systems', 'Computer Applications', 'Artificial Intelligence', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Buildings and Towers']","['Weyns, Danny']","DistriNet Labs, Katholieke Universiteit Leuven, Belgium",2009,ECSA
310,311,"Developing architectural support for self adaptive systems, i e  systems that are able to autonomously adapt to changes in their operating conditions, is a key challenge for software engineers  Multi agent systems are a class of decentralized systems that are known for realizing qualities such as adaptability and scalability  In this paper, we present a pattern language for multi agent systems  The pattern language distills domain specific architectural knowledge derived from extensive experiences with developing various multi agent systems  The pattern language, consisting of the five interrelated patterns, supports architects with designing software architectures for a family of self adaptive systems  We illustrate the patters for a case study in the domain of automated transportation systems    2009 IEEE   21 refs",A pattern language for multi agent systems,"['Adaptive systems', 'Architecture', 'Computer software', 'Linguistics', 'Multi agent systems', 'Software design', 'Architectural knowledge', 'Architectural support', 'Automated transportation systems', 'Decentralized system', 'Designing softwares', 'Domain specific', 'Interrelated patterns', 'Operating condition', 'Pattern languages', 'Self-adaptive system', 'Software engineers', 'Information Dissemination', 'Control Systems', 'Computer Applications', 'Artificial Intelligence', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Buildings and Towers']","['Weyns, Danny']","DistriNet Labs, Katholieke Universiteit Leuven, Belgium",2009,WICSA
311,312,"Developing architectural support for self adaptive systems, i e  systems that are able to autonomously adapt to changes in their operating conditions, is a key challenge for software engineers  Multi agent systems are a class of decentralized systems that are known for realizing qualities such as adaptability and scalability  In this paper, we present a pattern language for multi agent systems  The pattern language distills domain specific architectural knowledge derived from extensive experiences with developing various multi agent systems  The pattern language, consisting of the five interrelated patterns, supports architects with designing software architectures for a family of self adaptive systems  We illustrate the patters for a case study in the domain of automated transportation systems    2009 IEEE   21 refs",A pattern language for multi agent systems,"['Adaptive systems', 'Architecture', 'Computer software', 'Linguistics', 'Multi agent systems', 'Software design', 'Architectural knowledge', 'Architectural support', 'Automated transportation systems', 'Decentralized system', 'Designing softwares', 'Domain specific', 'Interrelated patterns', 'Operating condition', 'Pattern languages', 'Self-adaptive system', 'Software engineers', 'Information Dissemination', 'Control Systems', 'Computer Applications', 'Artificial Intelligence', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Buildings and Towers']","['Weyns, Danny']","DistriNet Labs, Katholieke Universiteit Leuven, Belgium",2011,WICSA
312,313,"Developing corrosion resistant carbon nanotube  CNT  and carbon nanofiber  CNF  supported Pt catalysts with optimized particle size is important for proton exchange membrane fuel cells  We investigated the effects of deposition technique  conventional refluxing and microwave irradiation , water content, carbon support and metal loading on the average Pt particle size and electrochemically active surface area  ECSA   BET surface area measurements, Fourier transform infrared spectroscopy, X ray diffraction, thermal gravimetric analysis, transmission electron microscopy and cyclic voltammetry were used to characterize all the CNT CNF supported catalysts  Processing was accelerated via microwave irradiation without significantly affecting Pt particle size as compared to conventional refluxing especially for high surface area CNT supported low Pt loading  10 wt   catalyst  Adjusting the water content during synthesis effectively controlled the Pt particle size and size distribution regardless of the heating method, carbon support and metal loading  The ECSA of the samples was found to be dependent on Pt particle size which further depends on the water content during synthesis, support surface area and Pt loading  Optimization of deposition conditions leads to higher ECSA than seen in a commercially available carbon black supported catalyst    2008 Elsevier Ltd  All rights reserved   34 refs",The effect of experimental parameters on the synthesis of carbon nanotube nanofiber supported platinum by polyol processing techniques,"['Bioelectric phenomena', 'Carbon', 'Carbon black', 'Carbon nanofibers', 'Carbon nanotubes', 'Catalysis', 'Catalysts', 'Cyclic voltammetry', 'Electric batteries', 'Fourier transform infrared spectroscopy', 'Fourier transforms', 'Fuel cells', 'Grain size and shape', 'Gravimetric analysis', 'Infrared spectroscopy', 'Irradiation', 'Metals', 'Microwave irradiation', 'Microwaves', 'Nanotechnology', 'Optimization', 'Particle size', 'Platinum', 'Platinum metals', 'Spectroscopic analysis', 'Voltammetry', 'Water content', 'X ray diffraction analysis', 'BET surface areas', 'Carbon nanofiber', 'Carbon nanotube', 'Carbon supports', 'corrosion', 'Deposition conditions', 'Deposition techniques', 'Electrochemically active surface area', 'Experimental parameters', 'Fourier Transform Infrared', 'High surface area', 'Metal loadings', 'Processing techniques', 'Proton exchange membrane fuel cells', 'Pt loadings', 'Refluxing', 'Supported catalysts', 'Supported Pt', 'Surface area', 'Transmission electron', 'X-ray diffraction', 'Chemistry', 'Electrochemistry', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Mathematical Transformations', 'Optimization Techniques', 'Physical Properties of Gases, Liquids and Solids', 'Optical Variables Measurements', 'Nanotechnology', 'Water Resources', 'Biomedical Engineering', 'Metallurgy and Metallography', 'Metallography', 'Precious Metals', 'Radiation Effects', 'Electric Batteries', 'Fuel Cells', 'Electromagnetic Waves']","['Knupp, Seth L', '', '', ' Li, Wenzhen', '', '', 'Paschos, Odysseas', '', '', 'Murray, Thomas M', '', '', ' Snyder, Jeremy', '', '', 'Haldar, Pradeep']","Energy and Environmental Technology Applications Center  E2TAC , College of Nanoscale Science and Engineering  CNSE , University at Albany, 255 Fuller Road, Albany, NY 12203, United States",2008,ECSA
313,314,"Developing software for dynamic cyber physical systems  CPS  is a complex task  One has to deal with the dynamicity and unreliability of the physical environment where the software resides in, while, at the same time, provide sufficient levels of dependability and scalability  Although emerging software engineering abstractions, such as dynamic ad hoc component ensembles, provide a convenient way to structure software for dynamic CPS, they need to be mapped to robust decentralized execution schemes in real life settings  A particular challenge in this context is the robust distributed data dissemination in dynamic networks  Gossip based communication stands as a promising solution to this challenge  We argue, that exploitation of application specific information, software architecture in particular, has a large potential for improving the robustness and performance of gossip based communication  This paper proposes a synergy between high level architectural models and low level communication models to effectively enable application specific gossiping in component based systems  The synergy is exemplified on the DEECo component model which is tailored to the needs and specifics of CPS, and evaluated on an emergency coordination case study with realistic network configurations    2014 Springer International Publishing Switzerland   28 refs",Gossiping components for cyber physical systems,"['Complex networks', 'Embedded systems', 'Mobile ad hoc networks', 'Software architecture', 'Component', 'Cyber physical systems (CPSs)', 'Ensemble', 'Gossip', 'MANET', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Mechanics']","['Bures, Tomas', ' ,', '', ' Gerostathopoulos, Ilias', '', '', 'Hnetynka, Petr', '', '', 'Keznikl, Jaroslav', ' ,', '', ' Kit, Michal', '', '', 'Plasil, Frantisek']","Faculty of Mathematics and Physics, Charles University in Prague, Prague, Czech Republic  2  Institute of Computer Science, Academy of Sciences of the Czech Republic, Prague, Czech Republic",2014,ECSA
314,315,"Developing software for dynamic cyber physical systems  CPS  is a complex task  One has to deal with the dynamicity and unreliability of the physical environment where the software resides in, while, at the same time, provide sufficient levels of dependability and scalability  Although emerging software engineering abstractions, such as dynamic ad hoc component ensembles, provide a convenient way to structure software for dynamic CPS, they need to be mapped to robust decentralized execution schemes in real life settings  A particular challenge in this context is the robust distributed data dissemination in dynamic networks  Gossip based communication stands as a promising solution to this challenge  We argue, that exploitation of application specific information, software architecture in particular, has a large potential for improving the robustness and performance of gossip based communication  This paper proposes a synergy between high level architectural models and low level communication models to effectively enable application specific gossiping in component based systems  The synergy is exemplified on the DEECo component model which is tailored to the needs and specifics of CPS, and evaluated on an emergency coordination case study with realistic network configurations   28 refs",Gossiping Components for Cyber Physical Systems,"['object-oriented programming', 'software architecture', 'gossiping components', 'software development', 'dynamic cyber-physical systems', 'software engineering abstractions', 'software dependability', 'software scalability', 'dynamic ad-hoc component ensembles', 'dynamic CPS', 'robust decentralized execution schemes', 'robust distributed data dissemination', 'gossip-based communication', 'application-specific information exploitation', 'software architecture', 'high-level architectural models', 'low-level communication models', 'component-based systems', 'DEECo component model', 'emergency coordination case study', 'dynamic networks', 'Object oriented programming', 'Software engineering techniques']","['Bures, T', '', '', ' Gerostathopoulos, I', '', '', ' Hnetynka, P', '', '', ' Keznikl, J', '', '', ' Kit, M', '', '', ' Plasil, F', '', '']","Fac  of Math    Phys , Charles Univ  in Prague, Prague, Czech Republic",2014,ECSA
315,316,"Different organizations or organizational units are likely to store and maintain different types of information about their software architectures  This inhibits effective management of architectural knowledge  We experimented with a model of architectural knowledge to characterize the use of architectural knowledge in four different organizations  Based on this experimentation we identified four perspectives on architectural knowledge management, and additionally adjusted the model to better align theory with practice  The refined model defines a minimal set of concepts with supposedly complete coverage of the architectural knowledge domain  Because of the minimalistic aspect of the model, we refer to it as a  core model  of architectural knowledge  Supporting evidence for the validity of our model, i e  the supposed complete coverage, has been obtained by an attempt to falsify this claim through a comparison with selected literature  Application of the core model to characterize the use of architectural knowledge indicates possible areas of improvement for architectural knowledge management in the four organizations    2008 Springer Verlag Berlin Heidelberg   21 refs",Architectural knowledge  Getting to the core,"['Administrative data processing', 'Computer software selection and evaluation', 'Data mining', 'Industrial management', 'Information management', 'Information science', 'Knowledge management', 'Management information systems', 'Management science', 'Architectural knowledge', 'Core modeling', 'Effective management', 'International conferences', 'Organizational units', 'Quality of softwares', 'Refined model', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Information Science', 'Management']","['De Boer, Remco C', '', '', ' Farenhorst, Rik', '', '', 'Lago, Patricia', '', '', 'Van Vliet, Hans', '', '', 'Clerc, Viktor', '', '', 'Jansen, Anton']","VU University Amsterdam, Netherlands  2  University of Groningen, Netherlands",2007,QoSA
316,317,"Different organizations or organizational units are likely to store and maintain different types of information about their software architectures  This inhibits effective management of architectural knowledge  We experimented with a model of architectural knowledge to characterize the use of architectural knowledge in four different organizations  Based on this experimentation we identified four perspectives on architectural knowledge management, and additionally adjusted the model to better align theory with practice  The refined model defines a minimal set of concepts with supposedly complete coverage of the architectural knowledge domain  Because of the minimalistic aspect of the model, we refer to it as a  core model  of architectural knowledge  Supporting evidence for the validity of our model, i e  the supposed complete coverage, has been obtained by an attempt to falsify this claim through a comparison with selected literature  Application of the core model to characterize the use of architectural knowledge indicates possible areas of improvement for architectural knowledge management in the four organizations   21 refs",Architectural knowledge  getting to the core,"['knowledge management', 'software architecture', 'software architectural knowledge management', 'organizational unit', 'align theory', 'minimal concept set', 'Business and administrative computing', 'Software engineering techniques']","['Boer, R C', '', '', ' Farenhorst, R', '', '', ' Lago, P', '', '', ' van Vliet, H', '', '', ' Clerc, V', '', '', ' Jansen, A', '', '']","VU Univ  Amsterdam, Amsterdam, Netherlands  2  Univ  of Groningen, Groningen, Netherlands",2008,QoSA
317,318,"Digital signal processing  DSP  tools, such as Ptolemy, Lab View and iConnect, allow application developers to assemble reactive systems by connecting predefined components in generalised dataflow graphs and by hierarchically building new components by encapsulating sub graphs  We follow the literature in calling this approach dataflow oriented development  Our previous work has shown how a new process calculus, uniting ideas from previous systems within a compositional theory, can be formally shown to capture the properties of such systems  This paper first re casts the graphical dataflow oriented style of design into an underlying textual architecture design language  ADL  and then shows how the previous modelling approach can be seen as a system of process algebraic behavioural types for such a language, so that type checking is the mechanism used to statically diagnose the reactivity of applications  We show how both the existing notion of behavioural equivalence and a new behavioural pre order are involved in this judgement   23 refs",Reactive types for dataflow oriented software architectures,"['Algebra', 'Algorithms', 'Digital filters', 'Finite automata', 'Mathematical models', 'Scheduling', 'Software engineering', 'Spectrum analyzers', 'Architecture design language (ADL)', 'Control signals', 'Data-driven mode', 'Dataflow-oriented systems', 'Filtering parameters', 'Acoustical and Optical Measuring Instruments', 'Algebra', 'Management', 'Computer Programming', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Information Theory and Signal Processing', 'Electric Filters']","['Norton, Barry', '', '', 'Fairtlough, Matt']","Department of Computer Science, University of Sheffield, 211 Portobello Street, Sheffield S1 4DP, United Kingdom",2004,WICSA
318,319,"Digital signal processing  DSP  tools, such as Ptolemy, LabView and iConnect, allow application developers to assemble reactive systems by connecting predefined components in generalised dataflow graphs and by hierarchically building new components by encapsulating subgraphs  We follow the literature in calling this approach dataflow oriented development  Our previous work has shown how a new process calculus, uniting ideas from previous systems within a compositional theory, can be formally shown to capture the properties of such systems  This paper first recasts the graphical dataflow oriented style of design into an underlying textual architecture design language  ADL  and then shows how the previous modelling approach can be seen as a system of process algebraic behavioural types for such a language, so that type checking is the mechanism used to statically diagnose the reactivity of applications  We show how both the existing notion of behavioural equivalence and a new behavioural preorder are involved in this judgement   23 refs",Reactive types for dataflow oriented software architectures,"['data flow graphs', 'process algebra', 'software architecture', 'reactive types', 'dataflow-oriented software architectures', 'digital signal processing tools', 'Ptolemy', 'LabView', 'iConnect', 'generalised dataflow graphs', 'dataflow-oriented development', 'process calculus', 'compositional theory', 'dataflow-oriented design', 'textual architecture design language', 'process algebra', 'behavioural equivalence', 'Software engineering techniques', 'Formal methods', 'Formal logic', 'Combinatorial mathematics']","['Norton, B', '', '', ' Fairtlough, M', '', '']","Dept  of Comput  Sci , Sheffield Univ , Sheffield, United Kingdom",2004,WICSA
319,320,"Direct oxidation fuel cells  DOFC  are promising electrochemical devices for various applications  In addition to methanol  MeOH , alternative fuels are being tested in a search for lower toxicity, safer handling, and higher energy density  Ethylene glycol  EG  was employed as one of such fuels  However, DOFCs face several problems, such as fuel crossover through the membrane during its operation  This not only lowers the cell potential but also poisons the catalyst for the oxygen reduction reaction  ORR   Experiments were performed on the poisoning of Pt and Pt alloy ORR catalysts  both commercial and homemade, by electroless deposition , by fuels and their oxidation by products  At 25  C, methanol poisoning was found to be reversible and the catalytic activity measured afterwards in a fuel free solution and the electrochemical surface area  ECSA  were enhanced  The effect of poisoning by methanol and ethylene glycol and their oxidation intermediates is reported here for the first time  The severity of poisoning was found to be MeOH   formaldehyde   formic acid  In solutions of EG and its oxidation by products, the poisoning order was EG  le glycolic acid   oxalic acid, the poisoning of all three being more severe than that of methanol  The catalysts most resistant both to MeOH and EG poisoning were commercial acid treated PtCo and homemade PtCoSn  The reasons for the enhanced tolerance were investigated and PtCoSn was found to be the less active both in the methanol and ethylene glycol oxidation processes    2009 Elsevier B V  All rights reserved   39 refs","Effect of methanol, ethylene glycol and their oxidation by products on the activity of Pt based oxygen reduction catalysts","['Alternative fuels', 'Catalysis', 'Catalyst activity', 'Catalyst poisoning', 'Cell membranes', 'Ethylene', 'Ethylene glycol', 'Formic acid', 'Fuel cells', 'Methanol', 'Organic acids', 'Oxidation', 'Oxygen', 'Platinum', 'Platinum alloys', 'Reduction', 'Catalytic activity', 'Cell potential', 'Electrochemical devices', 'Electrochemical surface area', 'Electroless deposition', 'Free solutions', 'Fuel crossover', 'Glycolic acids', 'Higher energy density', 'Methanol poisoning', 'ORR', 'Oxalic Acid', 'Oxidation by-products', 'Oxygen reduction reaction', 'Oxygen reductions', 'Organic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Fuel Cells', 'Precious Metals', 'Solid Fuels', 'Liquid Fuels', 'Biological Materials and Tissue Engineering']","['Travitsky, N', '', '', ' Burstein, L', '', '', ' Rosenberg, Y', '', '', ' Peled, E', '', '']","School of Chemistry, Sackler Faculty of Exact Sciences, Tel Aviv University, Ramat Aviv, Tel Aviv, 69978, Israel  2  Wolfson Applied Materials Research Center, Tel Aviv University, Tel Aviv, 69978, Israel",2009,ECSA
320,321,"Distributed applications that lack a central, trustworthy authority for control and validation are properly termed decentralized  Multiple, independent agencies, or  partners , cooperate to achieve their separate goals  Issues of trust are paramount for designers of such partners  While the research literature has produced a variety of trust technology building blocks, few have attempted to articulate how these various technologies can regularly be composed to meet trust goals  This paper presents a particular, event based, architectural style, PACE, that shows where and how to incorporate various types of trust related technologies within a partner, positions the technologies with respect to the rest of the application, allows variation in the underlying network model, and works in a dynamic setting  Initial experiments with variants of two sample decentralized applications developed in the PACE style reveal the virtues of dealing with all aspects of application structure and trust in a comprehensive fashion   32 refs",PACE  An architectural style for trust management in decentralized applications,"['Algorithms', 'Data acquisition', 'Decision making', 'Mathematical models', 'Sales', 'Security of data', 'Software engineering', 'Building blocks', 'Reputation-based systems', 'Software architectures', 'Trust management systems', 'Computer Systems and Equipment', 'Computer Programming', 'Data Processing and Image Processing', 'Marketing', 'Management', 'Mathematics']","['Suryanarayana, Girish', '', '', 'Erenkrantz, Justin R', '', '', ' Hendrickson, Scott A', '', '', ' Taylor, Richard N', '', '']","Institute for Software Research, University of California, Irvine",2004,WICSA
321,322,"Distributed applications that lack a central, trustworthy authority for control and validation are properly termed decentralized  Multiple, independent agencies, or  partners , cooperate to achieve their separate goals  Issues of trust are paramount for designers of such partners  While the research literature has produced a variety of trust technology building blocks, few have attempted to articulate how these various technologies can regularly be composed to meet trust goals  This paper presents a particular, event based, architectural style, PACE, that shows where and how to incorporate various types of trust related technologies within a partner, positions the technologies with respect to the rest of the application, allows variation in the underlying network model, and works in a dynamic setting  Initial experiments with variants of two sample decentralized applications developed in the PACE style reveal the virtues of dealing with all aspects of application structure and trust in a comprehensive fashion   32 refs",PACE  an architectural style for trust management in decentralized applications,"['distributed processing', 'software architecture', 'PACE', 'architectural style', 'trust management', 'decentralized applications', 'distributed applications', 'trustworthy authority', 'trust technology', 'decentralized architecture', 'Distributed systems software', 'Software engineering techniques']","['Suryanarayana, G', '', '', ' Erenkrantz, J R', '', '', ' Hendrickson, S A', '', '', ' Taylor, R N', '', '']","Inst  for Software Res , California Univ , Irvine, Irvine, CA, United States",2004,WICSA
322,323,"Documented design decisions simplify the evolution of software systems  However, currently design decisions are often either badly documented or are not documented at all  Relations between requirements, decisions, and architectural elements are missing, and architecture alternatives are not preserved  As a consequence it is hard to identify deprecated design solutions when requirements change In this position paper, we present an approach to document software architecture design decisions, together with related requirements and related architectural elements, through the goal driven elicitation of those requirements needed to make a design decision  Therefore, we propose a process model and supporting meta models, including a meta model for a pattern catalogue  The speciality of this pattern catalogue is the inclusion of questions to drive requirements engineering to validate pattern selections, and to guide choosing the most appropriate pattern variant  The paper concludes with a discussion on the assumptions of the approach and possible approaches to empirical validation  Copyright   2012 ACM   28 refs",Position paper  Approach for architectural design and modelling with documented design decisions  ADMD3,"['Architectural design', 'Architectural element', 'Component selection', 'Design decisions', 'Design Patterns', 'Design solutions', 'Development process', 'Empirical validation', 'Meta model', 'Pattern selection', 'Position papers', 'Process model', 'Requirements change', 'Software architecture design', 'Software systems', 'Buildings and Towers', 'Computer Programming']","['Durdik, Zoya', '', '', 'Reussner, Ralf']","Software Engineering  SE , Research Center for Information Technology, FZI 76131 Karlsruhe, Germany  2  Software Design and Quality  SDQ , Karlsruhe Institute of Technology, KIT 76131 Karlsruhe, Germany",2012,QoSA
323,324,"Documenting and maintaining the traceability between architectural models and code is one of the foremost challenges of model based software development  Yet, traceability is rarely captured immediately while models and code co evolve but usually recovered later  By then key people may have moved on or their recollection of facts may be blurred or inconsistent  In previous work, we proposed a language for capturing traceability that allows for uncertainty and incompleteness  This paper investigates this language on the unique properties that characterize model to code traceability  Our approach takes ambiguous, incomplete, and possibly incorrect assumptions about the traceability between model and code as input  It then validates the correctness of these assumptions and completes the input by inserting their logical consequences  This paper demonstrates the correctness and scalability of our approach which has been validated on several third party software systems  Our approach is automated and fully tool supported    2012 IEEE   38 refs",Exploiting traceability uncertainty between architectural models and code,"['analysis', 'Architectural models', 'Logical consequences', 'Software systems', 'traceability', 'Computer Programming']","['Ghabi, Achraf', '', '', 'Egyed, Alexander']","Johannes Kepler University  JKU , Linz, Austria",2012,ECSA
324,325,"Documenting and maintaining the traceability between architectural models and code is one of the foremost challenges of model based software development  Yet, traceability is rarely captured immediately while models and code co evolve but usually recovered later  By then key people may have moved on or their recollection of facts may be blurred or inconsistent  In previous work, we proposed a language for capturing traceability that allows for uncertainty and incompleteness  This paper investigates this language on the unique properties that characterize model to code traceability  Our approach takes ambiguous, incomplete, and possibly incorrect assumptions about the traceability between model and code as input  It then validates the correctness of these assumptions and completes the input by inserting their logical consequences  This paper demonstrates the correctness and scalability of our approach which has been validated on several third party software systems  Our approach is automated and fully tool supported    2012 IEEE   38 refs",Exploiting traceability uncertainty between architectural models and code,"['analysis', 'Architectural models', 'Logical consequences', 'Software systems', 'traceability', 'Computer Programming']","['Ghabi, Achraf', '', '', 'Egyed, Alexander']","Johannes Kepler University  JKU , Linz, Austria",2012,WICSA
325,326,"Domain specific languages  DSLs  concisely express the essential features of system designs  However, using a DSL for automated analysis and code generation requires developing specialized tools  We describe how to create model analysis and code generation tools that can be applied to a large family of DSLs, and show how we created the LIGHT platform, a suite of such tools for the family of software architecture based DSLs  These tools can be easily reused off the shelf with new DSLs, freeing engineers from having to custom develop them  The key innovation underlying our strategy is to enhance DSL metamodels with additional semantics, and then automatically synthesize configurations and plug ins for flexible analysis and code generation frameworks  Our evaluation shows that, for a DSL of typical size, using our strategy relieves software engineers of developing approximately 17,500 lines of code, which amounts to several person months of programming work    2012 IEEE   24 refs",Automated analysis and code generation for domain specific models,"['Problem oriented languages', 'Semantics', 'Software architecture', 'Automated analysis', 'Code Generation', 'Code generation tools', 'Domain specific', 'Domain specific languages', 'Lines of code', 'Meta model', 'Model analysis', 'Software engineers', 'Specialized tools', 'Electric Networks', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Edwards, George', '', '', 'Brun, Yuriy', '', '', 'Medvidovic, Nenad']","University of Southern California, United States  2  University of Massachusetts, United States",2012,ECSA
326,327,"Domain specific languages  DSLs  concisely express the essential features of system designs  However, using a DSL for automated analysis and code generation requires developing specialized tools  We describe how to create model analysis and code generation tools that can be applied to a large family of DSLs, and show how we created the LIGHT platform, a suite of such tools for the family of software architecture based DSLs  These tools can be easily reused off the shelf with new DSLs, freeing engineers from having to custom develop them  The key innovation underlying our strategy is to enhance DSL metamodels with additional semantics, and then automatically synthesize configurations and plug ins for flexible analysis and code generation frameworks  Our evaluation shows that, for a DSL of typical size, using our strategy relieves software engineers of developing approximately 17,500 lines of code, which amounts to several person months of programming work    2012 IEEE   24 refs",Automated analysis and code generation for domain specific models,"['Problem oriented languages', 'Semantics', 'Software architecture', 'Automated analysis', 'Code Generation', 'Code generation tools', 'Domain specific', 'Domain specific languages', 'Lines of code', 'Meta model', 'Model analysis', 'Software engineers', 'Specialized tools', 'Electric Networks', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Edwards, George', '', '', 'Brun, Yuriy', '', '', 'Medvidovic, Nenad']","University of Southern California, United States  2  University of Massachusetts, United States",2012,WICSA
327,328,"Drawing on a case study that adequately represents a mediumsize component based distributed architecture, the contribution of this paper shows how existing performance repositories could be mined to value the ranges in which a given software architecture can scale to support likely changes in load  The mining is based on a financial analogy, where we utilize the concept of twin asset in financial engineering to justify mining relevant repositories  The mining process in then complemented with real options analysis for predicting the values resulted from the ranges in which an architecture can scale under uncertainty, where uncertainty is attributed to the unpredicted change in load  As the exact method for analyzing scalability is subject to debate, we focus the analysis on throughput as a way for measuring scalability  Using options analysis, we report on how ranges in which an architecture can scale, can inform the selection of distributed components technology and subsequently the selection of application server products    2008 IEEE   39 refs",An economics driven approach for valuing scalability in distributed architectures,"['Architecture', 'Arsenic', 'Computer software selection and evaluation', 'Finance', 'Mining', 'Scalability', 'Technology', 'Uncertainty analysis', 'Application servers', 'Case studies', 'Component-based', 'Distributed architectures', 'Distributed components', 'Economics-driven software engineering', 'Exact methods', 'Financial engineering', 'Mining processing', 'Real options analysis', 'Real options theory', 'Relating requirements to architecture', 'Systems Science', 'Probability Theory', 'Cost Accounting', 'Engineering Profession', 'Chemical Products Generally', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Mine and Quarry Operations', 'Buildings and Towers']","['Bahsoon, Rami', '', '', 'Emmerich, Wolfgang']","School of Computer Science, University of Birmingham, Edgbaston, B15 2TT, England, United Kingdom  2  London Software Systems, Dept  of Computer Science, University College London, Gower Street, WC1E 6BT, London, United Kingdom",2008,WICSA
328,329,"Due to the increasingly complexity of industry software products, software architecture evaluation is getting important to effectively identify potential risks and ensure the quality goals of the resulting system are well addressed in the design phase  However, despite the plethora of evaluation approaches proposed in academia, few of them have proven suitable to evaluate architecture designs of wide spread industry applications  As the initial efforts of addressing this issue, this paper identifies the gaps between an ideal industry friendly software architecture evaluation approach and existing evaluation methods    2013 Springer Verlag   4 refs",Toward industry friendly software architecture evaluation,"['Industrial applications', 'Industry', 'Product design', 'Architecture analysis', 'Architecture designs', 'Architecture evaluation', 'Evaluation approach', 'Evaluation methods', 'Industry applications', 'Software architecture evaluation', 'Software products', 'Computer Programming', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing', 'Production Engineering']","['Li, Zhao', '', '', 'Zheng, Jiang']","ABB US Corporate Research Center, 940 Main Campus Drive, Raleigh, NC 27606, United States",2013,ECSA
329,330,"Due to the lack of both precise definitions and effective software engineering methodologies, security principles are often neglected by software architects, resulting in potentially high risk threats to the systems  This work lays the formal foundations for the understanding of the least privilege  LP  principle in software architectures and provides a technique to identify LP violations  The proposed approach is supported by tools and has been validated in four case studies, one of which is presented in detail in this paper    2010 Springer Verlag Berlin Heidelberg   21 refs",Automated detection of least privilege violations in software architectures,"['Architectural analysis', 'Automated detection', 'Formal foundation', 'Least privilege', 'Precise definition', 'Security', 'Security principles', 'Software architects', 'Software engineering methodologies', 'Computer Programming']","['Scandariato, Riccardo', '', '', 'Buyens, Koen', '', '', 'Joosen, Wouter']","IBBT DistriNet, Katholieke Universiteit Leuven, Leuven 3001, Belgium",2010,ECSA
330,331,"During architectural design, the architect has to come up with architectural structures and tactics that aim at the fulfillment of quality attribute requirements  Architectural structures are built from component and connector types that define how components are supposed to interact  Since connector types typically impact big portions of a system, tactics usually crosscut connector designs and demand for modularized treatment during architecture design  The synthesis of tactics within connector designs, however, turns out to be a major challenge  This is due to the fact that they are likely to affect each other in the final system where they need to be mutually integrated  This mutual affection is called tactic interaction  In this paper, we describe an approach towards detecting such tactic interactions during connector design  Our approach is integrated in a commercial architecture design tool supporting interaction sensitive synthesis of architectural tactics during connector design activities    2009 IEEE   8 refs",Interaction sensitive synthesis of architectural tactics in connector designs,"['Architectural design', 'Computer software', 'Structures (built objects)', 'Architectural structure', 'Architecture designs', 'Connector design', 'Modularized', 'Quality attributes', 'Buildings and Towers', 'Structural Design', 'Structural Design, General', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Keuler, Thorsten', '', '', 'Webel, Christian']","Fraunhofer Institute for Experimental Software Engineering, Fraunhofer Platz 1, 67663 Kaiserslautern, Germany",2009,ECSA
331,332,"During architectural design, the architect has to come up with architectural structures and tactics that aim at the fulfillment of quality attribute requirements  Architectural structures are built from component and connector types that define how components are supposed to interact  Since connector types typically impact big portions of a system, tactics usually crosscut connector designs and demand for modularized treatment during architecture design  The synthesis of tactics within connector designs, however, turns out to be a major challenge  This is due to the fact that they are likely to affect each other in the final system where they need to be mutually integrated  This mutual affection is called tactic interaction  In this paper, we describe an approach towards detecting such tactic interactions during connector design  Our approach is integrated in a commercial architecture design tool supporting interaction sensitive synthesis of architectural tactics during connector design activities    2009 IEEE   8 refs",Interaction sensitive synthesis of architectural tactics in connector designs,"['Architectural design', 'Computer software', 'Structures (built objects)', 'Architectural structure', 'Architecture designs', 'Connector design', 'Modularized', 'Quality attributes', 'Buildings and Towers', 'Structural Design', 'Structural Design, General', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Keuler, Thorsten', '', '', 'Webel, Christian']","Fraunhofer Institute for Experimental Software Engineering, Fraunhofer Platz 1, 67663 Kaiserslautern, Germany",2009,WICSA
332,333,"During architectural design, the architect has to come up with architectural structures and tactics that aim at the fulfillment of quality attribute requirements  Architectural structures are built from component and connector types that define how components are supposed to interact  Since connector types typically impact big portions of a system, tactics usually crosscut connector designs and demand for modularized treatment during architecture design  The synthesis of tactics within connector designs, however, turns out to be a major challenge  This is due to the fact that they are likely to affect each other in the final system where they need to be mutually integrated  This mutual affection is called tactic interaction  In this paper, we describe an approach towards detecting such tactic interactions during connector design  Our approach is integrated in a commercial architecture design tool supporting interaction sensitive synthesis of architectural tactics during connector design activities    2009 IEEE   8 refs",Interaction sensitive synthesis of architectural tactics in connector designs,"['Architectural design', 'Computer software', 'Structures (built objects)', 'Architectural structure', 'Architecture designs', 'Connector design', 'Modularized', 'Quality attributes', 'Buildings and Towers', 'Structural Design', 'Structural Design, General', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Keuler, Thorsten', '', '', 'Webel, Christian']","Fraunhofer Institute for Experimental Software Engineering, Fraunhofer Platz 1, 67663 Kaiserslautern, Germany",2011,WICSA
333,334,"During development of complex products, such as automotive software, models   formal and informal   are used throughout the development process by different roles and for different purposes   as requirement, as implementation or as documentation  This paper reports results from a case study of the development of embedded software at a Swedish vehicle manufacturer  We investigated use of models from high level product planning to low level requirements specifications for software components  Furthermore, we investigated the distribution of effort among the models, requirements and other artefacts  The goal was to explore the spectrum of modelling techniques, methods and languages used and to establish a baseline for comparison with the state of the art and other companies  The results show that there exist at least 8 different modelling notations  Moreover, we found that the majority of effort was spent on behaviour models, while static models   such as high level design and requirements   were considered most important    2010 ACM   22 refs",Characterizing model usage in embedded software engineering  A case study,"['Design', 'Formal methods', 'Industry', 'Software architecture', 'Technical presentations', 'analysis', 'Automotive software', 'Behaviour models', 'Complex products', 'Development process', 'High-level design', 'modelling', 'Modelling techniques', 'process', 'Product planning', 'requirements', 'Requirements specifications', 'Software component', 'Static model', 'Vehicle manufacturers', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Melleg rd, Niklas', '', '', 'Staron, Miroslaw']","Department of Applied Information Technology, Chalmers University of Technology, University of Gothenburg, Germany",2010,ECSA
334,335,"During proton exchange membrane fuel cell degradation various changes occur in the membrane electrode assembly, and consequently the performance decays  Therefore, the correlation between physical property changes and the performance decay is important  In this paper, we focus on this correlation and have developed a quantitative model to estimate the performance decay after degradation  Comparison of electrochemical surface area  ECSA  and polarization curves before and after potential cycling demonstrates that there was more performance decay than that estimated due only to ECSA decrease, especially at higher current densities  This large performance decay is estimated and quantitatively simulated to be due to the increase in oxygen transport resistance caused by the oxygen transport through the ionomer film coating the Pt C particles in the cathode catalyst layer  It is shown that the data can be fit by assuming that the effective ionomer film area is proportional to ECSA  According to our results, the transport resistance increased significantly during potential cycling and more than half of the performance decay at high current densities originated from the increased transport overpotential  The effect of proton overpotential in the cathode catalyst layer was also studied with additional performance decay witnessed under low humidity conditions    2012 Elsevier B V  All rights reserved   33 refs",Analysis and modeling of PEMFC degradation  Effect on oxygen transport,"['Catalysts', 'Cathodes', 'Degradation', 'Oxygen', 'Agglomerate model', 'Oxygen transport', 'PEM fuel cell', 'Performance decay', 'Platinum catalysts', 'Fuel Cells', 'Electric Components', 'Chemical Reactions', 'Chemical Products Generally']","['Jomori, Shinji', '', '', 'Nonoyama, Nobuaki', '', '', 'Yoshida, Toshihiko']","Fuel Cell System Development Div , Toyota Motor Corporation, 1200 Mishuku, Susono, Shizuoka 410 1193, Japan",2012,ECSA
335,336,"During the 2001 2002 hydrological cycle, 8,000 tons P year 1  44  as particulate phosphorus  originating from the Seine basin entered the Seine estuary  P content in suspended sediments  SS  is 2 9 g P kg 1  80  as inorganic form  at Poses  the upstream limit of the Seine estuary   During the transfer from Poses to Caudebec  the limit of saline water intrusion , Particulate Inorganic Phosphorus  PIP  in SS decreases by 40  whereas Particulate Organic Phosphorus  POP  remains stable  This decrease is explained as the result of  i  a dilution by SS poorer in P, originating from storage zones  mudflats  within the estuary, and  ii  a loss of P by sedimentation, especially in the Rouen harbour where 15  to 20  of SS are yearly trapped and extracted  Downstream, in the turbidity maximum of the estuary, P content in SS is twice as low as at Poses  1 5 g P kg 1, 70  as inorganic form   PIP content is fairly homogeneous both vertically and throughout an annual survey  On the other hand, POP varies by season  Higher POP content is observed during vernal period with phytoplankton accumulation  In a salinity gradient from 0 to 30  PSS78 , PIP content further decreases by 30   POP does not vary much in this gradient, leading to the assumption that PIP is submitted to desorption in response to the dilution by marine waters  poor in orthophosphates   Using 32P isotopic method, we establish a mathematical formulation of P exchangeable between the suspended solid and water phases of the Seine estuary  Particulate P in the turbidity maximum zone is shown to represent a possible source of dissolved P, available for algal growth in the Seine Bight  Instead of playing a role of nutrient retention, the turbidity maximum zone of the Seine estuary could favour coastal eutrophication    2007 Springer Science Business Media B V   62 refs",Typical features of particulate phosphorus in the Seine estuary  France,"['Estuaries', 'Hydrology', 'Inorganic compounds', 'Sediment transport', 'Sedimentation', 'Phosphorus dynamics', 'Seine estuary', 'Turbidity maximum zones', 'Waterways', 'Water Resources', 'Soils and Soil Mechanics', 'Chemical Operations', 'Chemical Products Generally', 'Inorganic Compounds']","['N mery, Julien', ' ,', '', ' Garnier, Josette']","UMR Sisyphe 7619, UMPC Paris 6, Tour 56, Boite 105, Etage 4, 4 place Jussieu, Paris 75005, France  2  LTHE  UMR CNRS 5564, UJF, INPG, IRD , BP 53, Grenoble Cedex 09 38 041, France",2007,ECSA
336,337,"During the 2001 2002 hydrological cycle, 8,000 tons P year 1  44  as particulate phosphorus  originating from the Seine basin entered the Seine estuary  P content in suspended sediments  SS  is 2 9 g P kg 1  80  as inorganic form  at Poses  the upstream limit of the Seine estuary   During the transfer from Poses to Caudebec  the limit of saline water intrusion , Particulate Inorganic Phosphorus  PIP  in SS decreases by 40  whereas Particulate Organic Phosphorus  POP  remains stable  This decrease is explained as the result of  i  a dilution by SS poorer in P, originating from storage zones  mudflats  within the estuary, and  ii  a loss of P by sedimentation, especially in the Rouen harbour where 15  to 20  of SS are yearly trapped and extracted  Downstream, in the turbidity maximum of the estuary, P content in SS is twice as low as at Poses  1 5 g P kg 1, 70  as inorganic form   PIP content is fairly homogeneous both vertically and throughout an annual survey  On the other hand, POP varies by season  Higher POP content is observed during vernal period with phytoplankton accumulation  In a salinity gradient from 0 to 30  PSS78 , PIP content further decreases by 30   POP does not vary much in this gradient, leading to the assumption that PIP is submitted to desorption in response to the dilution by marine waters  poor in orthophosphates   Using 32P isotopic method, we establish a mathematical formulation of P exchangeable between the suspended solid and water phases of the Seine estuary  Particulate P in the turbidity maximum zone is shown to represent a possible source of dissolved P, available for algal growth in the Seine Bight  Instead of playing a role of nutrient retention, the turbidity maximum zone of the Seine estuary could favour coastal eutrophication    2007 Springer Science Business Media B V   62 refs",Typical features of particulate phosphorus in the Seine estuary  France,"['Estuaries', 'Hydrology', 'Inorganic compounds', 'Sediment transport', 'Sedimentation', 'Phosphorus dynamics', 'Seine estuary', 'Turbidity maximum zones', 'Waterways', 'Water Resources', 'Soils and Soil Mechanics', 'Chemical Operations', 'Chemical Products Generally', 'Inorganic Compounds']","['N mery, Julien', ' ,', '', ' Garnier, Josette']","UMR Sisyphe 7619, UMPC Paris 6, Tour 56, Boite 105, Etage 4, 4 place Jussieu, Paris 75005, France  2  LTHE  UMR CNRS 5564, UJF, INPG, IRD , BP 53, Grenoble Cedex 09 38 041, France",2008,ECSA
337,338,"During the architecture development process, architectural design decisions play an important role in maintaining non functional properties of the system  Instead of supposing that architectural decisions are implicitly recognizable, existing works propose to give them first class status  However, little focus is paid on the automation of architectural decision checking  This paper proposes to leverage pattern formalization techniques to document architectural decisions  The approach consists of a way to describe architectural patterns that hold the architectural decision definition, show how to integrate architectural decisions  patterns  into an architectural model and finally automate the architectural decision conformance checking    2012 IEEE   18 refs",Using architectural patterns to define architectural decisions,"['Architectural design', 'Model checking', 'Architectural decision', 'Architectural design decisions', 'Architectural models', 'Architectural pattern', 'Architecture development process', 'Conformance checking', 'MDA', 'Non functional properties', 'pattern', 'Buildings and Towers', 'Computer Programming']","['That, Minh Tu Ton', '', '', 'Sadou, Salah', '', '', 'Oquendo, Flavio']","IRISA, Universit  de Bretagne Sud, Vannes, France",2012,ECSA
338,339,"During the architecture development process, architectural design decisions play an important role in maintaining non functional properties of the system  Instead of supposing that architectural decisions are implicitly recognizable, existing works propose to give them first class status  However, little focus is paid on the automation of architectural decision checking  This paper proposes to leverage pattern formalization techniques to document architectural decisions  The approach consists of a way to describe architectural patterns that hold the architectural decision definition, show how to integrate architectural decisions  patterns  into an architectural model and finally automate the architectural decision conformance checking    2012 IEEE   18 refs",Using architectural patterns to define architectural decisions,"['Architectural design', 'Model checking', 'Architectural decision', 'Architectural design decisions', 'Architectural models', 'Architectural pattern', 'Architecture development process', 'Conformance checking', 'MDA', 'Non functional properties', 'pattern', 'Buildings and Towers', 'Computer Programming']","['That, Minh Tu Ton', '', '', 'Sadou, Salah', '', '', 'Oquendo, Flavio']","IRISA, Universit  de Bretagne Sud, Vannes, France",2012,WICSA
339,340,"During the last decades software architecture has become increasingly important for companies creating competitive product structures  Recently more and more attention has also been focused on the costs, cost effectiveness, productivity and value of software development and products  This study outlines concepts, principles and process of implementing a value assessment for SW architecture  The main purpose of this study is to collect experiences whether the value assessment for product architecture is useful for companies, works in practice, and what are the strengths and weaknesses of using it  This is done by implementing value assessment in a case company step by step to see which phases possibly work and which phases possibly do not work  The practical industrial case shows that proposed value assessment for product architecture is useful and supports companies trying to find value in product architecture    2008 IEEE   5 refs",Developing value assessment for SW architecture,"['Architectural design', 'Architecture', 'Cost effectiveness', 'Product architecture', 'Product structures', 'Software development', 'Step-by-step', 'Value assessment', 'Buildings and Towers', 'Computer Programming', 'Industrial Economics']","['Ojala, Pasi']",Nokia,2008,WICSA
340,341,"During the last years, Intelligent Virtual Environments for Training have become a quite popular application of computer science to education  However, little attention is being paid to software engineering issues, and most systems are developed in an ad hoc way that does not allow the reuse of their components or an easy modification of the application, even though some authors claim that the use of agents makes systems be more modifiable  We describe an agent based software architecture that is intended to be easily extended and modified  This architecture is a redesign of a previous one using more formal principles and methods of software architecture design    2008 IEEE   12 refs",A modifiable agent based software architecture for Intelligent Virtual Environments for Training,"['Agents', 'Architectural design', 'Architecture', 'Computer applications', 'Computer science', 'Computer software reusability', 'Education computing', 'Financial data processing', 'Reusability', 'Software agents', 'Software design', 'Software engineering', 'Technology', 'Virtual reality', 'Agent-based', 'Intelligent Virtual Environments', 'Software architecture design', 'Engineering Profession', 'Chemical Agents and Basic Industrial Chemicals', 'Computer Applications', 'Data Processing and Image Processing', 'Cost Accounting', 'Computer Programming', 'Computer Circuits and Logic Elements', 'Industrial Wastes', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['M ndez, Gonzalo', '', '', 'De Antonio, Ang lica']","Computer Science School, Technical University of Madrid",2008,WICSA
341,342,"During the software lifecycle, software systems have to be continuously maintained to counteract architectural deterioration and retain their software quality  In order to maintain a software it has to be understood first which can be supported by  semi  automatic reverse engineering approaches  Reverse engineering is the analysis of software for the purpose of recovering its design documentation, e g , in form of the conceptual architecture  Today, the most prevalent reverse engineering approaches are  1  the clustering based approach which groups the elements of a given software system based on metric values in order to provide an overview of the system and  2  the pattern based approach which tries to detect pre defined patterns in the software which can give insight about the original developers  intentions  In this paper, we present an approach towards combining these techniques  we show how the detection and removal of certain bad smells in a software system can improve the results of a clustering based analysis  We propose to integrate this combination of reverse engineering approaches into a reengineering process for component based software systems    2011 ACM   35 refs",Combining clustering and pattern detection for the reengineering of component based software systems,"['Computer software selection and evaluation', 'Engineering', 'Reengineering', 'Reverse engineering', 'bad smell detection', 'clustering', 'Component-based software systems', 'Conceptual architecture', 'Design documentation', 'Metric values', 'metrics', 'Pattern detection', 'Software life cycles', 'Software Quality', 'Software systems', 'Computer Software, Data Handling and Applications', 'Engineering Profession', 'Quality Assurance and Control']","['Von Detten, Markus', '', '', 'Becker, Steffen']","Heinz Nixdorf Institute, Department of Computer Science, University of Paderborn, Paderborn, Germany",2011,QoSA
342,343,"Dust storms are normally considered to be natural hazards  During such events, dust aerosol is loaded into the atmosphere, directly reducing visibility and effectively reflecting solar radiation back to space  In the present study, an intense dust storm was monitored during the first week of June 2010 using Moderate Resolution Imaging Spectroradiometer  MODIS  Terra and Aqua data over the Indian region  A dust cloud was detected using a combination of MODIS reflective and emissive channels and moving trace spread monitored by its multi temporal data  The MODIS Terra derived aerosol optical depth at 550 nm  AOD550  and the aerosol index  AI  obtained from the Ozone Monitoring Instrument  OMI  were used in conjunction with National Centers for Environmental Prediction National Center for Atmospheric Research  NCEP NCAR  reanalysis wind fields for the monitoring of dust clouds  The study reveals that the movement of a high concentration of dust clouds coincided with the NCEP NCAR reanalysis meridional and zonal wind fields   8 m s 1  at pressure levels of 700 hPa  The Cloud Aerosol Lidar Pathfinder Satellite Observations  CALIPSOs  that derive vertical feature mask images also suggested that the vertical extent of the dust aerosol layer was at a height of about 6 km over northern India on 2 June 2010  The roles of long range transport of dust over the entire Gangetic plane are analysed using back trajectories from the National Oceanic and Atmospheric Administration  NOAA  Hybrid Single Particle Lagrangian Integrated Trajectory  HYSPLIT  model  Back trajectory analysis suggests that dust clouds moving over long distances entered from the western side of India on 1 June 2010    2013 Copyright Taylor and Francis Group, LLC   25 refs",Monitoring intense dust storms over the Indian region using satellite data   a case study,"['Atmospheric aerosols', 'Dust', 'Radiometers', 'Satellite imagery', 'Sun', 'Trajectories', 'Aerosol optical depths', 'Atmospheric research', 'Back trajectory analysis', 'Moderate resolution imaging spectroradiometer', 'National centers for environmental predictions', 'National Oceanic and Atmospheric Administration', 'Ozone monitoring instruments', 'Satellite observations', 'Military Engineering', 'Meteorology', 'Precipitation', 'Air Pollution Sources', 'Extraterrestrial Physics and Stellar Phenomena', 'Radiation Measuring Instruments']","['Gharai, Biswadip', '', '', 'Jose, Subin', '', '', 'Mahalakshmi, D V', '', '']","Department of Space, Govt  of India, Atmosphere and Ocean Sciences Group, Earth and Climate Science Area  ECSA , National Remote Sensing Center, Balanagar, Hyderabad, 500 037, India",2013,ECSA
343,344,"Dynamic adaptivity is one of the most challenging non functional issues to address during the engineering of information systems  Furthermore, it is even harder to evaluate  The definition of mechanisms through which adaptivity may be evaluated would be very useful both for the maintainability, reusability, and evolution of adaptive systems, and for the relations which may be established among adaptive systems  e g , interaction, integration   In this paper we propose examples of metrics for dynamic adaptivity which may be considered a starting point for future research on  1  the feasibility related to the definition of measurable evaluation mechanisms for adaptive systems, and  2  the usability of these metrics as design hints in the development process of new adaptive systems and as formal approaches for the evaluation of existing adaptive systems    2009 IEEE   14 refs",Evaluation of dynamic adaptivity through metrics  An achievable target,"['Adaptive systems', 'Architecture', 'Computer software selection and evaluation', 'Machine design', 'Maintainability', 'Reusability', 'Adaptivity', 'Development process', 'Dynamic adaptivity', 'Formal approach', 'Non-functional', 'Software metrics', 'Management', 'Control Systems', 'Computer Applications', 'Artificial Intelligence', 'Maintenance', 'Computer Programming', 'Mechanical Design', 'Industrial Wastes', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Raibulet, Claudia', '', '', 'Masciadri, Laura']","Dipartimento di Informatica Sistemistica e Comunicazione, Universit  degli Studi di Milano Bicocca, Milan, Italy",2009,ECSA
344,345,"Dynamic adaptivity is one of the most challenging non functional issues to address during the engineering of information systems  Furthermore, it is even harder to evaluate  The definition of mechanisms through which adaptivity may be evaluated would be very useful both for the maintainability, reusability, and evolution of adaptive systems, and for the relations which may be established among adaptive systems  e g , interaction, integration   In this paper we propose examples of metrics for dynamic adaptivity which may be considered a starting point for future research on  1  the feasibility related to the definition of measurable evaluation mechanisms for adaptive systems, and  2  the usability of these metrics as design hints in the development process of new adaptive systems and as formal approaches for the evaluation of existing adaptive systems    2009 IEEE   14 refs",Evaluation of dynamic adaptivity through metrics  An achievable target,"['Adaptive systems', 'Architecture', 'Computer software selection and evaluation', 'Machine design', 'Maintainability', 'Reusability', 'Adaptivity', 'Development process', 'Dynamic adaptivity', 'Formal approach', 'Non-functional', 'Software metrics', 'Management', 'Control Systems', 'Computer Applications', 'Artificial Intelligence', 'Maintenance', 'Computer Programming', 'Mechanical Design', 'Industrial Wastes', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Raibulet, Claudia', '', '', 'Masciadri, Laura']","Dipartimento di Informatica Sistemistica e Comunicazione, Universit  degli Studi di Milano Bicocca, Milan, Italy",2009,WICSA
345,346,"Dynamic adaptivity is one of the most challenging non functional issues to address during the engineering of information systems  Furthermore, it is even harder to evaluate  The definition of mechanisms through which adaptivity may be evaluated would be very useful both for the maintainability, reusability, and evolution of adaptive systems, and for the relations which may be established among adaptive systems  e g , interaction, integration   In this paper we propose examples of metrics for dynamic adaptivity which may be considered a starting point for future research on  1  the feasibility related to the definition of measurable evaluation mechanisms for adaptive systems, and  2  the usability of these metrics as design hints in the development process of new adaptive systems and as formal approaches for the evaluation of existing adaptive systems    2009 IEEE   14 refs",Evaluation of dynamic adaptivity through metrics  An achievable target,"['Adaptive systems', 'Architecture', 'Computer software selection and evaluation', 'Machine design', 'Maintainability', 'Reusability', 'Adaptivity', 'Development process', 'Dynamic adaptivity', 'Formal approach', 'Non-functional', 'Software metrics', 'Management', 'Control Systems', 'Computer Applications', 'Artificial Intelligence', 'Maintenance', 'Computer Programming', 'Mechanical Design', 'Industrial Wastes', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Raibulet, Claudia', '', '', 'Masciadri, Laura']","Dipartimento di Informatica Sistemistica e Comunicazione, Universit  degli Studi di Milano Bicocca, Milan, Italy",2011,WICSA
346,347,"Dynamic memory management is one part of the software system that influences the performance and the cost of a product the most  In the context of an embedded real time system, several requirements must be taken into account  The system must be optimized due to the limitation of memory  Real time deadlines must be respected  the dynamic memory management system must allocate and deallocate blocks in due time  One more challenge is represented when a dynamic memory management system is developed for a product family architecture, which is representative of a set of related products  We present a scenarios based approach to analyze and evaluate dynamic memory management systems for embedded real time systems in a software product family architecture  Architectural transformations and improvements against the tradeoffs for the software product family are analyzed    2005 IEEE   3 refs",Dynamic memory management for software product family architectures in embedded real time systems,"['Embedded systems', 'Information technology', 'Management science', 'Real time control', 'Storage allocation (computer)', 'Block allocation', 'Dynamic memory management', 'Embedded real-time systems', 'Software management', 'Data Storage, Equipment and Techniques', 'Computer Programming', 'Computer Applications', 'Automatic Control Principles and Applications', 'Information Science', 'Management']","['Del Rosso, Christian']","Nokia Research Center, P O Box 407, FIN 00045 Nokia Group, Finland",2005,WICSA
347,348,"Dynamic service discovery is one of the main concepts which define the Service Oriented Architectures  SOA   This mechanism ensures loosely coupled services  It supports the reusability of services and the flexibility of applications  This paper provides a new service discovery approach which enhances the number of services potentially discovered and thus, it multiplies the number of candidate services  This multiplication ensures a better selection of the most suitable services and more alternatives is case of failures    2010 Springer Verlag Berlin Heidelberg   11 refs",Many to many service discovery  A first approach,"['Information services', 'Quality of service', 'Reusability', 'Service oriented architecture (SOA)', 'Dynamic service discovery', 'Many to many', 'New services', 'Number of services', 'Service compositions', 'Service discovery', 'SOA', 'Information Services', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television', 'Industrial Wastes']","['Hock Koon, Anthony', '', '', 'Oussalah, Mourad']","LINA Laboratory, University of Nantes, 2 rue de la Houssiniere, NANTES 44322, France",2010,ECSA
348,349,Early performance analysis based on Queueing Network Models  QNM  has been often proposed to support software designers during the software development process  These approaches aim at addressing performance issues as early as possible in order to reduce design failures  All of them try to adapt to software systems the well known system performance analysis methodology  This implies that they assume at design time the availability of information about the hardware platform the software will run on  In recent years we have proposed a methodology that allows quantitative reasoning on software aspects without considering hardware aspects  In this work we extend our methodology to encompass a compositional approach to performance analysis of software architecture described by means of UML2 0 diagrams  The main improvements include the characterization of architectural patterns and of their corresponding QNM pattern  the use of multi chain queueing network as system target model and the identification of the information needed to parameterize the system model   9 refs,Compositional generation of software architecture performance QN models,"['Algorithms', 'Computer architecture', 'Computer graphics', 'Customer satisfaction', 'Feedback', 'Identification (control systems)', 'Information analysis', 'Parameter estimation', 'Pattern recognition', 'Software engineering', 'Architectural patterns', 'Parameterization', 'Queueing network (QN) models', 'Software development process', 'Information Sources and Analysis', 'Control Systems', 'Computer Applications', 'Industrial Engineering and Management', 'Computer Programming', 'Computer Systems and Equipment', 'Telecommunication  Radar, Radio and Television', 'Computer Software, Data Handling and Applications']","['Di Marco, Antinisca', '', '', 'Inverardi, Paola']","Dipartimento di Informatica, University of L Aquila, Via Vetoio 1, 67010 Coppito, L Aquila, Italy",2004,WICSA
349,350,"Early performance analysis based on queueing network models  QNM  has been often proposed to support software designers during the software development process  These approaches aim at addressing performance issues as early as possible in order to reduce design failures  All of them try to adapt to software systems the well known system performance analysis methodology  This implies that they assume at design time the availability of information about the hardware platform the software runs on  In recent years, we have proposed a methodology that allows quantitative reasoning on software aspects without considering hardware aspects  In this work, we extend our methodology to encompass a compositional approach to performance analysis of software architecture described by means of UML 2 0 diagrams  The main improvements include the characterization of architectural patterns and of their corresponding QNM pattern  the use of multi chain queueing network as system target model and the identification of the information needed to parameterize the system model   9 refs",Compositional generation of software architecture performance QN models,"['queueing theory', 'software architecture', 'software performance evaluation', 'specification languages', 'compositional generation', 'software architecture performance', 'QN models', 'queueing network models', 'software design', 'software development process', 'design failures', 'software systems', 'system performance analysis', 'quantitative reasoning', 'software aspects', 'hardware aspect', 'UML 2.0 diagrams', 'architectural patterns', 'QNM pattern', 'multichain queueing network', 'system target model', 'Software engineering techniques', 'Queueing theory']","['Di Marco, A', '', '', ' Inverardi, P', '', '']","Dipt  di Inform , L Aquila Univ , L Aquila, Italy",2004,WICSA
350,351,Effect of upper and lower potential limits on R stability in potential cycling experiments is studied for 20 wt    R C E TEK catalyst in acidic medium  The R electrochemical surface area  ECSA  loss is observed as a parameter to study different potential ranges  It is observed that at upper potential limits the ECSA loss is influenced by electrochemical R dissolution while at lower potential limits reduction of   oxide phase plays important role in ECSA loss   The Electrochemical Society   17 refs,Effect of scan range on Pt surface area loss in potential cycling experiments,"['Blood vessel prostheses', 'Cells', 'Charged particles', 'Direct energy conversion', 'Dissolution', 'Electric batteries', 'Electrochemistry', 'Experiments', 'Fuel cells', 'Fuels', 'Gas fuel purification', 'Industrial economics', 'Ion exchange membranes', 'Membranes', 'Nuclear fuel reprocessing', 'Photoacoustic effect', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Protons', 'Solid oxide fuel cells (SOFC)', 'Surfaces', '(001) parameter', 'Acidic mediums', 'Electrochemical Society (ECS)', 'Electrochemical surface area (ESA)', 'Oxide phase', 'potential cycling', 'Potential limits', 'Proton exchange membrane fuel cell (PEM-FC)', 'Scan range', 'Surface area (SA)', 'Electrochemistry', 'Chemical Plants and Equipment', 'Chemical Operations', 'Light Optics', 'Engineering Research', 'Atomic and Molecular Physics', 'Materials Science', 'Industrial Economics', 'Fuel Cells', 'Prosthetics', 'Gas Fuels', 'Precious Metals', 'Biological Materials and Tissue Engineering', 'Nuclear Fuels for Fission Reactors', 'Electric Batteries and Fuel Cells', 'Electric Batteries', 'Electricity  Basic Concepts and Phenomena']","['Waje, Mahesh M', '', '', ' Li, Wenzhen', '', '', 'Chen, Zhongwei', '', '', 'Larsen, Paul', '', '', 'Yan, Yushan']","Department of Chemical and Environmental Engineering, College of Engineering, University of California, Riverside, CA 92521",2007,ECSA
351,352,Effect of upper and lower potential limits on R stability in potential cycling experiments is studied for 20 wt    R C E TEK catalyst in acidic medium  The R electrochemical surface area  ECSA  loss is observed as a parameter to study different potential ranges  It is observed that at upper potential limits the ECSA loss is influenced by electrochemical R dissolution while at lower potential limits reduction of   oxide phase plays important role in ECSA loss   The Electrochemical Society   17 refs,Effect of scan range on Pt surface area loss in potential cycling experiments,"['Blood vessel prostheses', 'Cells', 'Charged particles', 'Direct energy conversion', 'Dissolution', 'Electric batteries', 'Electrochemistry', 'Experiments', 'Fuel cells', 'Fuels', 'Gas fuel purification', 'Industrial economics', 'Ion exchange membranes', 'Membranes', 'Nuclear fuel reprocessing', 'Photoacoustic effect', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Protons', 'Solid oxide fuel cells (SOFC)', 'Surfaces', '(001) parameter', 'Acidic mediums', 'Electrochemical Society (ECS)', 'Electrochemical surface area (ESA)', 'Oxide phase', 'potential cycling', 'Potential limits', 'Proton exchange membrane fuel cell (PEM-FC)', 'Scan range', 'Surface area (SA)', 'Electrochemistry', 'Chemical Plants and Equipment', 'Chemical Operations', 'Light Optics', 'Engineering Research', 'Atomic and Molecular Physics', 'Materials Science', 'Industrial Economics', 'Fuel Cells', 'Prosthetics', 'Gas Fuels', 'Precious Metals', 'Biological Materials and Tissue Engineering', 'Nuclear Fuels for Fission Reactors', 'Electric Batteries and Fuel Cells', 'Electric Batteries', 'Electricity  Basic Concepts and Phenomena']","['Waje, Mahesh M', '', '', ' Li, Wenzhen', '', '', 'Chen, Zhongwei', '', '', 'Larsen, Paul', '', '', 'Yan, Yushan']","Department of Chemical and Environmental Engineering, College of Engineering, University of California, Riverside, CA 92521",2008,ECSA
352,353,"Effective software modularity brings many benefits such as long term cost reduction, architecture stability, design flexibility, high maintainability, and high reusability  A module could be a class, a package, a component, or a subsystem  In this paper, we are concerned with the package type of modules  There has been a number of attempts to propose approaches for automatic packaging of classes in OO development  However, there is no framework that could be used to aid practitioners in selecting appropriate approaches suitable for their particular development efforts  In this paper we present an attribute based framework to classify and compare these approaches and provide such aid to practitioners  The framework is also meant to guide researchers interested in proposing new packaging approaches  The paper discusses a number of representative packaging approaches against the framework  Analysis of the discussion suggests open points for future research    2011 Springer Verlag   10 refs",Software packaging approaches   A comparison framework,"['Computer software reusability', 'Cost reduction', 'Maintainability', 'Modular construction', 'Optimization', 'Packaging', 'Reusability', 'Automatic packaging', 'Design flexibility', 'Software modularity', 'software modularization', 'Software packaging', 'Optimization Techniques', 'Maintenance', 'Industrial Economics', 'Computer Software, Data Handling and Applications', 'Packaging, General', 'Industrial Wastes', 'Construction Methods']","['Ebad, Shouki A', '', '', ' Ahmed, Moataz']","Information and Computer Sciences Department, King Fahd University of Petroleum and Minerals, P O  Box 1594, Dhahran 31261, Saudi Arabia",2011,ECSA
353,354,"Effective standard architectures promise to improve the efficiency of software projects and the quality of resulting systems  However, hardly any standard architecture has become established in practise to date  They are either too general or too specific to be effective   the architect s dilemma  Reference architectures have a less binding character than standard architectures and still are of high value  This paper presents exemplary parts of the Quasar reference architecture for business information systems, the result of more than seven years of architectural research at sd m   19 refs",The architect s dilemma   will reference architectures help,"['business data processing', 'information systems', 'project management', 'software architecture', 'software quality', 'software projects', 'software quality', 'architect dilemma', 'Quasar reference architecture', 'business information systems', 'Software engineering techniques', 'Business and administrative computing']","['Haft, M', '', '', ' Humm, B', '', '', ' Siedersleben, J', '', '']","sd m Res , Munich, Germany",2005,QoSA
354,355,"Effective variability support has become an important attribute of modern software development practices  Organizations show an increasing interest in the development of software applications using software platforms, reusable components, and mass customization  Even though many variability management tools exist, an approach that integrates support for variability management  e g  features, decisions, variation points, and variants  directly into architecture models is still missing  Making variability concepts an integral part of architecture models has many benefits  Variability management and architecture development can be integrated into one consistent information model and development environment supporting full traceability of architectural artifacts  e g  requirements, features, components  on all levels of the development lifecycle  In this paper we show how we integrated orthogonal variability modeling and feature modeling into LISA, an approach and toolkit for architecture management and analysis  Variability management is no longer a separate activity but an integral part of the architecture development lifecycle    2012 IEEE   22 refs",Integrating variability management and software architecture,"['Computer software reusability', 'Information theory', 'Life cycle', 'Software architecture', 'Architectural artifacts', 'Architectural modeling', 'Architecture management', 'Architecture models', 'Development environment', 'Domain engineering', 'Feature modeling', 'Information models', 'Integral part', 'Mass customization', 'Reusable components', 'Software applications', 'Software development practices', 'Software platforms', 'Still missing', 'Variability management', 'Variability modeling', 'Information Theory and Signal Processing', 'Computer Software, Data Handling and Applications', 'Management', 'Production Engineering']","['Groher, Iris', '', '', 'Weinreich, Rainer']","Johannes Kepler University Linz, Linz, Austria",2012,ECSA
355,356,"Effective variability support has become an important attribute of modern software development practices  Organizations show an increasing interest in the development of software applications using software platforms, reusable components, and mass customization  Even though many variability management tools exist, an approach that integrates support for variability management  e g  features, decisions, variation points, and variants  directly into architecture models is still missing  Making variability concepts an integral part of architecture models has many benefits  Variability management and architecture development can be integrated into one consistent information model and development environment supporting full traceability of architectural artifacts  e g  requirements, features, components  on all levels of the development lifecycle  In this paper we show how we integrated orthogonal variability modeling and feature modeling into LISA, an approach and toolkit for architecture management and analysis  Variability management is no longer a separate activity but an integral part of the architecture development lifecycle    2012 IEEE   22 refs",Integrating variability management and software architecture,"['Computer software reusability', 'Information theory', 'Life cycle', 'Software architecture', 'Architectural artifacts', 'Architectural modeling', 'Architecture management', 'Architecture models', 'Development environment', 'Domain engineering', 'Feature modeling', 'Information models', 'Integral part', 'Mass customization', 'Reusable components', 'Software applications', 'Software development practices', 'Software platforms', 'Still missing', 'Variability management', 'Variability modeling', 'Information Theory and Signal Processing', 'Computer Software, Data Handling and Applications', 'Management', 'Production Engineering']","['Groher, Iris', '', '', 'Weinreich, Rainer']","Johannes Kepler University Linz, Linz, Austria",2012,WICSA
356,357,"Electric vehicles embed a low amount of energy, so their devices need to be managed efficiently to optimize the vehicle autonomy  A vehicle management is achieved by the embedded systems, modeled following the Autosar standard  Autosar covers most of the automotive concerns, but it lacks energy consumption and user oriented Quality of Service models  This paper presents Orqa, a framework to model and manage the electric vehicle devices through energy consumption and user oriented Quality of Service  At design time, the architects choose and tune the actual vehicle device models through their power requirements and, if appropriate, quality levels  The generated implementation is then embedded in the existing Autosar models  Thus, at run time, the vehicle s system is able to evaluate the global consumption of a trip and to propose the user a specific driving strategy  The optional devices are managed throughout the trip, based on the driver preferences  Orqa is illustrated with a classic use case  a work to home trip  Copyright 2013 ACM   17 refs",ORQA  Modeling energy and quality of service within AUTOSAR models,"['Electric vehicles', 'Embedded systems', 'Energy utilization', 'AutoSAR', 'Driving strategy', 'Global consumption', 'Model driven architectures', 'Power requirement', 'Quality of service model', 'Vehicle autonomy', 'Vehicle management', 'Computer Software, Data Handling and Applications', 'Computer Systems and Equipment', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television', 'Energy Utilization', 'Highway Transportation']","['Tchakaloff, Borjan', ' ,', '', ' Saudrais, S bastien', '', '', 'Babau, Jean Philippe']","Embedded Systems Team, CERIE, ESTACA Laval, France  2  MOCS, CACS Team, Lab STICC, UEB, UBO, Brest, France",2013,QoSA
357,358,"Electronic Data Interchange  EDI  is based on the standardization of business document types  Usually, a standard business document type is defined in an all embracing manner covering all elements needed in any business context, such as geopolitical context, industry context, and others  Before exchanging business documents in a particular business context, business partners have to agree on an implementation guide resulting in a subset of the standard document type  Die rent subsets of a standard document type may also be considered as variants of the standard document type  Since no agreed methodology for building variants of standard documents types exists, the domain of EDI may learn from Software Engineering  In fact, we are facing the need for managing variants which is typically addressed in Software Configuration Management  In this position paper, we propose utilizing concepts from Product Line Engineering  PLE  for managing variability in business document models  Therefore, we present the challenges encountered in managing variability in business documents  Furthermore, we provide a profound discussion why concepts from PLE are promising for managing business document variants  Copyright   2011 ACM   25 refs",Towards variability management in business document types using Product Line Engineering,"['Building codes', 'Electronic data interchange', 'Information management', 'Models', 'Production engineering', 'Standards', 'Business documents', 'Business partners', 'Position papers', 'Product line engineering', 'Software configuration management', 'Standard documents', 'Variability management', 'Variants', 'Computer Software, Data Handling and Applications', 'Engineering Graphics', 'Codes and Standards', 'Information Dissemination', 'Production Engineering']","['Pichler, Christian', '', '', 'Huemer, Christian']","Research Studios Austria, Thurngasse 8 3 20, Vienna, Austria  2  Vienna University of Technology, Favoritenstrasse 9 11, Vienna, Austria",2011,ECSA
358,359,"Embedded systems typically operate in resource constrained environments and often find themselves in difficult to access locations, making system maintenance expensive and the management of quality difficult to achieve  The service oriented model of deployment offers a potential solution to these challenges as it allows for software systems to be dynamically composed and reconfigured using services discoverable at runtime  However, the resource contention between services on the orchestration platform can cause significant falls in Quality of Service  QoS   This emergent QoS is difficult to anticipate before deployment as changes in QoS are often dynamic and influenced by many factors  This paper presents EQoSystem, a resource aware architecture combining resource monitoring with dynamic workflow management and service orchestration  We demonstrate the efficacy of EQoSystem using a medium sized case study deployed on an embedded platform  The results show that continuous and effective resource management changes can be made to maintain resource consumption within preset thresholds    2012 IEEE   25 refs",A runtime resource aware architecture for service oriented embedded systems,"['Quality of service', 'Service oriented architecture (SOA)', 'Software architecture', 'Work simplification', 'Dynamic workflow', 'Embedded platforms', 'Emergent property', 'Management of qualities', 'Potential solutions', 'Resource aware', 'Resource consumption', 'Resource contention', 'Resource management', 'Resource monitoring', 'Resource-constrained', 'Runtime architecture', 'Runtimes', 'Service orchestration', 'Service orientation', 'Service Oriented', 'Software systems', 'System maintenance', 'Industrial Engineering', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Computer Systems and Equipment', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television']","['Newman, Peter', '', '', 'Kotonya, Gerald']","School of Computing and Communications, Lancaster University, Lancaster, LA1 4WA, United Kingdom",2012,ECSA
359,360,"Embedded systems typically operate in resource constrained environments and often find themselves in difficult to access locations, making system maintenance expensive and the management of quality difficult to achieve  The service oriented model of deployment offers a potential solution to these challenges as it allows for software systems to be dynamically composed and reconfigured using services discoverable at runtime  However, the resource contention between services on the orchestration platform can cause significant falls in Quality of Service  QoS   This emergent QoS is difficult to anticipate before deployment as changes in QoS are often dynamic and influenced by many factors  This paper presents EQoSystem, a resource aware architecture combining resource monitoring with dynamic workflow management and service orchestration  We demonstrate the efficacy of EQoSystem using a medium sized case study deployed on an embedded platform  The results show that continuous and effective resource management changes can be made to maintain resource consumption within preset thresholds    2012 IEEE   25 refs",A runtime resource aware architecture for service oriented embedded systems,"['Quality of service', 'Service oriented architecture (SOA)', 'Software architecture', 'Work simplification', 'Dynamic workflow', 'Embedded platforms', 'Emergent property', 'Management of qualities', 'Potential solutions', 'Resource aware', 'Resource consumption', 'Resource contention', 'Resource management', 'Resource monitoring', 'Resource-constrained', 'Runtime architecture', 'Runtimes', 'Service orchestration', 'Service orientation', 'Service Oriented', 'Software systems', 'System maintenance', 'Industrial Engineering', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Computer Systems and Equipment', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television']","['Newman, Peter', '', '', 'Kotonya, Gerald']","School of Computing and Communications, Lancaster University, Lancaster, LA1 4WA, United Kingdom",2012,WICSA
360,361,"Empirical software engineering focuses on the evaluation of software engineering technologies, such as processes and tools, by comparing related sets of data  It has contributed a valuable body of knowledge in several areas such as Software Economics and Software Quality, which in turn drove important advances in related tools and techniques  Unfortunately this is not  yet  the case for software architecture, where empirical studies are still few  Such a condition demands for further empirical research efforts on the topic of software architecture and suggests specific areas of improvement  In this paper we discuss several essential, innovative, and maybe provocative, questions such as  Why do we have so few applications of empirical software engineering on software architecture  Which are the main difficulties  What can we do    Springer Verlag Berlin Heidelberg 2007   21 refs",Issues in applying empirical software engineering to software architecture,"['Data structures', 'Quality control', 'Technology transfer', 'Empirical software engineering', 'Software Economics', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Impact of Technology on Society', 'Quality Assurance and Control']","['Falessi, Davide', '', '', 'Kruchten, Philippe', '', '', 'Cantone, Giovanni']","University of Rome Tor Vergata, DISP, Rome, Italy  2  University of British Columbia, ECE, Vancouver, Canada",2007,ECSA
361,362,"Empirical software engineering focuses on the evaluation of software engineering technologies, such as processes and tools, by comparing related sets of data  It has contributed a valuable body of knowledge in several areas such as Software Economics and Software Quality, which in turn drove important advances in related tools and techniques  Unfortunately this is not  yet  the case for software architecture, where empirical studies are still few  Such a condition demands for further empirical research efforts on the topic of software architecture and suggests specific areas of improvement  In this paper we discuss several essential, innovative, and maybe provocative, questions such as  Why do we have so few applications of empirical software engineering on software architecture  Which are the main difficulties  What can we do    Springer Verlag Berlin Heidelberg 2007   21 refs",Issues in applying empirical software engineering to software architecture,"['Data structures', 'Quality control', 'Technology transfer', 'Empirical software engineering', 'Software Economics', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Impact of Technology on Society', 'Quality Assurance and Control']","['Falessi, Davide', '', '', 'Kruchten, Philippe', '', '', 'Cantone, Giovanni']","University of Rome Tor Vergata, DISP, Rome, Italy  2  University of British Columbia, ECE, Vancouver, Canada",2008,ECSA
362,363,"Empirical software engineering focuses on the evaluation of software engineering technologies, such as processes and tools, by comparing related sets of data  It has contributed a valuable body of knowledge in several areas such as software economics and software quality, which in turn drove important advances in related tools and techniques  Unfortunately this is not  yet  the case for software architecture, where empirical studies are still few  Such a condition demands for further empirical research efforts on the topic of software architecture and suggests specific areas of improvement  In this paper we discuss several essential, innovative, and maybe provocative, questions such as  Why do we have so few applications of empirical software engineering on software architecture  Which are the main difficulties  What can we do   21 refs",Issues in applying empirical software engineering to software architecture,"['software architecture', 'software quality', 'empirical software engineering', 'software architecture', 'software economics', 'software quality', 'Software engineering techniques', 'Software management']","['Falessi, D', '', '', ' Kruchten, P', ' Cantone, G']","DISP, Univ  of Rome, Rome, Italy",2007,ECSA
363,364,"Empirical software engineering focuses on the evaluation of software engineering technologies, such as processes and tools, by comparing related sets of data  It has contributed a valuable body of knowledge in several areas such as software economics and software quality, which in turn drove important advances in related tools and techniques  Unfortunately this is not  yet  the case for software architecture, where empirical studies are still few  Such a condition demands for further empirical research efforts on the topic of software architecture and suggests specific areas of improvement  In this paper we discuss several essential, innovative, and maybe provocative, questions such as  Why do we have so few applications of empirical software engineering on software architecture  Which are the main difficulties  What can we do   21 refs",Issues in applying empirical software engineering to software architecture,"['software architecture', 'software quality', 'empirical software engineering', 'software architecture', 'software economics', 'software quality', 'Software engineering techniques', 'Software management']","['Falessi, D', '', '', ' Kruchten, P', ' Cantone, G']","DISP, Univ  of Rome, Rome, Italy",2008,ECSA
364,365,"Energy efficiency is a primary concern for the ICT sector  In particular, the widespread adoption of cloud computing technologies has drawn attention to the massive energy consumption of data centers  Although hardware constantly improves with respect to energy efficiency, this should also be a main concern for software  In previous work we analyzed the literature and elicited a set of techniques for addressing energy efficiency in cloud based software architectures  In this work we codified these techniques in the form of Green Architectural Tactics  These tactics will help architects extend their design reasoning towards energy efficiency and to apply reusable solutions for greener software    2014 IEEE   13 refs",Green architectural tactics for the cloud,"['Cloud computing', 'Computer software reusability', 'Energy efficiency', 'Energy utilization', 'Architectural Tactics', 'Cloud computing technologies', 'Cloud-based', 'Data centers', 'Design reasonings', 'Ict sectors', 'Energy Conservation', 'Energy Utilization', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications']","['Procaccianti, Giuseppe', ' ,', '', ' Lago, Patricia', '', '', 'Lewis, Grace A', '', ',', '']","VU University Amsterdam, Netherlands  2  Politecnico di Torino, Italy  3  CMU Software Engineering Institute, United States",2014,WICSA
365,366,"Engineering large software based systems in safety critical domains is a challenging task despite extensive research on the topic  The software technologies and development processes are established, and basic safety principles are well known  However, demonstrating the safety of a software based automation system remains a key challenge, particularly in the nuclear domain  In this paper, we describe our experiences from current nuclear projects featuring software based automation  We observed a number of assumptions in regulation and standards related to safety principles, such as separation and diversity, which do not apply to software systems  The assumptions result in unrealistic expectations for software based systems, making both design and safety demonstration challenging    2014 IEEE   11 refs",Lessons learned from safety critical software based automation architectures of nuclear power plants,"['Automation', 'Nuclear power plants', 'Software architecture', 'Digital automation', 'Hardware architecture', 'Instrumentation and control', 'Nuclear', 'Safety principle', 'Safety requirements', 'Nuclear Power Plants', 'Computer Programming', 'Automatic Control Principles and Applications', 'Control Devices', 'Safety Engineering']","['Uusitalo, Eero', '', '', 'Raatikainen, Mikko', '', '', 'Koskela, Mika', '', '', 'Myllarniemi, Varvana', '', '', 'Mannisto, Tomi']","Aalto University, Finland  2  Radiation and Nuclear Safety Authority, Helsinki, Finland  3  University of Helsinki, Helsinki, Finland",2014,WICSA
366,367,"Engineering the upcoming generation of software systems and guaranteeing the required qualities is complex due to the inherent uncertainties at design time, such as new user needs and changing availability of resources  Architecture based self adaptation is a promising approach to tackle these challenges  In this approach, a system maintains a model of itself and adapts itself to realize particular quality objectives using a feedback loop  Despite a vast body of work, no systematic study has been performed on the claims associated with architecture based self adaptation and the evidence that exists for these claims  As such insight is important for researchers and engineers, we performed a systematic literature review covering 20 leading software engineering conferences and journals in the field, resulting in 121 studies used for data collection  The review shows that self adaptation is primarily used to improve performance, reliability, and flexibility  The tradeoffs implied by self adaptation have not received much attention, and evidence is mainly obtained from simple examples  From the study, we derive a number of recommendations for future research in architecture based self adaptive systems    2013 Springer Verlag   18 refs",Claims and evidence for architecture based self adaptation  A systematic literature review,"['Software architecture', 'Architecture-based', 'Data collection', 'Improve performance', 'Self adaptation', 'Self-adaptive system', 'Software systems', 'Systematic literature review', 'Systematic study', 'Buildings and Towers', 'Computer Programming']","['Weyns, Danny', '', '', 'Ahmad, Tanvir']","Department of Computer Science, Linnaeus University, Vaxjo, Sweden",2013,ECSA
367,368,"Engineers developing large scale industrial software systems need to instantiate, configure, and deploy many different types of reusable components  The number of component instances required is typically unknown when defining the systems  architecture and variability but depends on customer requirements only known during configuration  The hierarchy of dynamically created component instances further results in complex dependencies between configuration decisions  To deal with the multiplicity and hierarchy of components product line engineers thus need a modeling approach capable of expressing the dependencies among dynamically instantiated components and related configuration decisions  Decision oriented variability modeling approaches are highly useful in product line engineering to support product derivation and to guide users through the configuration process  However, current approaches do not sufficiently support multiplicity and hierarchy In this paper we report on extending an existing decision oriented approach to support modeling component variability, multiplicity, and hierarchy in product line architectures  Copyright   2014 ACM 978 1 4503 2523 3 14 04 15 00   24 refs",Modeling multiplicity and hierarchy in product line architectures  Extending a decision oriented approach,"['Computer software', 'Production engineering', 'Software architecture', 'Configuration process', 'Customer requirements', 'Decision models', 'Multiplicity and hierarchy', 'Number of components', 'Product line architecture', 'Product line engineering', 'Software Product Line', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Production Engineering']","['Dhungana, Deepak', '', '', 'Schreiner, Herwig', '', '', 'Lehofer, Martin', '', '', 'Vierhauser, Michael', '', '', 'Rabiser, Rick', '', '', 'Gr nbacher, Paul']","Siemens AG Osterreich, Corporate Technology Vienna, Austria  2  Siemens VAI Metals Technologies, Linz, Austria  3  CDL MEVSS, Johannes Kepler University Linz, Linz, Austria",2014,WICSA
368,369,"Enterprise Architecture  EA  has undergone many changes since the IT has found its way into enterprises  At the moment the Service Oriented Architecture  SOA  is being hyped but has also gained some importance  Implementing SOA can have many implications for an enterprise, depending on how visionary the implemented architecture is  This paper provides the description of an enterprise architecture that is fully fledged concerning service orientation and points out the architectural challenges that have to be mastered with future research results    2008 Springer Verlag Berlin Heidelberg   5 refs",Transition to service oriented enterprise architecture,"['Architecture', 'Information services', 'Web services', 'Enterprise architecture', 'Enterprise architectures', 'Future researches', 'Service orientations', 'Service-oriented architecture', 'Service-oriented architectures', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Information Services']","['Assmann, Martin', ' ,', '', ' Engels, Gregor', ' ,', '']","International Graduate School of Dynamic Intelligent Systems, Warburger Strae 100, 33098 Paderborn, Germany  2  Dept  of Computer Science, Warburger Strae 100, 33098 Paderborn, Germany  3  University of Paderborn, Warburger Strae 100, 33098 Paderborn, Germany",2008,ECSA
369,370,"Enterprise Architecture  EA  is becoming an increasingly mature field of work, but many large organizations still struggle with implementing an integral and truly effective EA function  The literature provides a fragmented picture of the EA function, describing the various separate elements that make up the total package of activities, resources, skills, and competences of the EA delivery function  In our view, the EA function reaches beyond EA delivery and also includes the stakeholders, structures and processes involved with EA decision making and EA conformance  A holistic and integral view on the EA function is essential in order to properly assess an EA function on its performance, and to allow identifying the key points of improvement  In this article, we give such a description of the EA function, which provides the reference model in EA function performance assessments as part of our Normalized Architecture Organization Maturity Index  NAOMI  approach    2008 Springer Berlin Heidelberg   29 refs",Designing the enterprise architecture function,"['Computer software selection and evaluation', 'Models', 'Conformance', 'Enterprise Architecture', 'Governance', 'Organizational', 'Reference Model', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Engineering Graphics', 'Management']","['Van Der Raadt, Bas', '', '', 'Van Vliet, Hans']","Capgemini, Global Financial Services, Architecture and Governance Improvement, Papendorpseweg 100, 3528 BJ Utrecht, Netherlands  2  Department of Computer Science, VU University, De Boelelaan 1081a, 1081 HV Amsterdam, Netherlands",2008,QoSA
370,371,"Enterprise Architecture  EA  is increasingly being used by large organizations to get a grip on the complexity and inflexibility of their business processes, information systems and technical infrastructure  Although seen as an important instrument to help solve major organizational problems, effectively applying EA seems no easy task  Efficient collaboration between architects and EA stakeholders is one of the main critical success factors for EA  The basis for efficient collaboration between architects and EA stakeholders is mutual understanding  In EA research, there has been much focus on the role of the architect  there is little research on the EA stakeholder  In this article we present the cognitive structure of four EA stakeholder groups, revealing how they expect the EA function to help them achieve their goals  With this we gain understanding of the EA stakeholder and provide the basis for better collaboration between architects and EA stakeholders    2008 Springer Verlag Berlin Heidelberg   21 refs",Stakeholder perception of enterprise architecture,"['Architecture', 'Probability density function', 'Business processes', 'Cognitive structures', 'Critical Success factors', 'Effectiveness', 'Enterprise architecture', 'Enterprise architectures', 'Large organizations', 'Little researches', 'Mutual understandings', 'Organizational function', 'Organizational problems', 'Stakeholder groups', 'Stakeholder perception', 'Technical infrastructures', 'Buildings and Towers', 'Computer Programming', 'Computer Applications', 'Mathematics', 'Probability Theory']","['Van Der Raadt, Bas', '', '', 'Schouten, Sander', '', '', 'Van Vliet, Hans']","Capgemini, Global Financial Services   Architecture and Governance Improvement, Papendorpseweg 100, 3528 BJ Utrecht, Netherlands  2  VU University, Department of Computer Science, De Boelelaan 1081a, 1081 HV Amsterdam, Netherlands",2008,ECSA
371,372,"Enterprise Architecture Management  EAM  plays an important supporting role in IT management of organizations to align their IT infrastructure to actual business needs  This emerging research paper presents an approach to enable real time monitoring and controlling of enterprise architectures  Therefore, we adapted the  control center  concept as applied in power plants or railway control plants  The contribution of this paper presents an architecture for real time monitoring and controlling facilities for complex business application landscapes  The business software control center is designed to give a real time view of instances of IT supported business processes together with the currently involved software systems and services  Moreover, IT operators are supported by controlling centers to actively control the load of software services at the business function level and to control the flow of business process instances through the organization s IT infrastructure    2011 Springer Verlag   11 refs",Towards real time monitoring and controlling of enterprise architectures using business software control centers,"['Industry', 'Information technology', 'Plants (botany)', 'Real time systems', 'Software architecture', 'Business applications', 'Business functions', 'Business needs', 'Business Process', 'Business software', 'Control center', 'Enterprise Architecture', 'Enterprise architecture managements', 'IT infrastructures', 'IT management', 'Railway control', 'Real time', 'Real-time monitoring and controlling', 'Research papers', 'Software Control Center', 'Software services', 'Software systems', 'Supporting role', 'Industrial Engineering and Management', 'Cost and Value Engineering  Industrial Economics', 'Information Science', 'Production Planning and Control  Manufacturing', 'Robotics', 'Digital Computers and Systems', 'Biology', 'Computer Programming']","['Br ckmann, Tobias', '', '', 'Gruhn, Volker', '', '', 'Pfeiffer, Max']","Paluno   The Ruhr Institute for Software Technology, University of Duisburg Essen, 45127 Essen, Germany",2011,ECSA
372,373,"Enterprise architecture  EA  is becoming an increasingly mature field of work, but many large organizations still struggle with implementing an integral and truly effective EA function  The literature provides a fragmented picture of the EA function, describing the various separate elements that make up the total package of activities, resources, skills, and competences of the EA delivery function  In our view, the EA function reaches beyond EA delivery and also includes the stakeholders, structures and processes involved with EA decision making and EA conformance  A holistic and integral view on the EA function is essential in order to properly assess an EA function on its performance, and to allow identifying the key points of improvement  In this article, we give such a description of the EA function, which provides the reference model in EA function performance assessments as part of our normalized architecture organization maturity index  NAOMI  approach   29 refs",Designing the enterprise architecture function,"['business data processing', 'decision making', 'software architecture', 'enterprise architecture function design', 'decision making', 'enterprise architecture conformance', 'enterprise architecture function performance assessments', 'normalized architecture organization maturity index', 'C7100 Business and administrative computing   C6110B Software engineering techniques   D2010 Business and professional IT applications   D5000 Office automation   computing']","['van der Raadt, B', '', '', ' van Vlie, H']","Capgemini  Global Financial Services, Archit    Governance Improvement, Utrecht, Netherlands",2008,QoSA
373,374,"Enterprise mashups deal with corporate data and various sources of information to compose new value added applications  The architecture design of enterprise mashups encompasses integration issues it needs to integrate heterogeneous data and or compose new situational applications from existing infrastructure  We envisage that architecture integration patterns can be applied not only as architecture solutions to mashup development, but also to help develop practical mashup techniques  In this paper, we combine several common architecture integration patterns, namely Pipes and Filters, Data Federation, and Model View Control to compose enterprise mashups  A number of techniques are also developed to customize these patterns for specific mashup needs  We illustrate our approach with a property valuation service derived from a real world setting    2009 IEEE   13 refs",Using architecture integration patterns to compose enterprise mashups,"['Architecture', 'Computer software', 'Architecture designs', 'Common architecture', 'Corporate data', 'Data federation', 'Heterogeneous data', 'Integration issues', 'Integration patterns', 'Mashups', 'Property valuation', 'Real-world', 'Value added applications', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Liu, Yan', ' ,', '', ' Liang, Xin', '', '', 'Xu, Lingzhi', '', '', 'Staples, Mark', ' ,', '', ' Zhu, Liming', ' ,', '']","NICTA, Australian Technology Park, NSW 2015, Australia  2  School of Computer Science and Engineering, University of New South Wales, Australia",2009,ECSA
374,375,"Enterprise mashups deal with corporate data and various sources of information to compose new value added applications  The architecture design of enterprise mashups encompasses integration issues it needs to integrate heterogeneous data and or compose new situational applications from existing infrastructure  We envisage that architecture integration patterns can be applied not only as architecture solutions to mashup development, but also to help develop practical mashup techniques  In this paper, we combine several common architecture integration patterns, namely Pipes and Filters, Data Federation, and Model View Control to compose enterprise mashups  A number of techniques are also developed to customize these patterns for specific mashup needs  We illustrate our approach with a property valuation service derived from a real world setting    2009 IEEE   13 refs",Using architecture integration patterns to compose enterprise mashups,"['Architecture', 'Computer software', 'Architecture designs', 'Common architecture', 'Corporate data', 'Data federation', 'Heterogeneous data', 'Integration issues', 'Integration patterns', 'Mashups', 'Property valuation', 'Real-world', 'Value added applications', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Liu, Yan', ' ,', '', ' Liang, Xin', '', '', 'Xu, Lingzhi', '', '', 'Staples, Mark', ' ,', '', ' Zhu, Liming', ' ,', '']","NICTA, Australian Technology Park, NSW 2015, Australia  2  School of Computer Science and Engineering, University of New South Wales, Australia",2009,WICSA
375,376,"Enterprise mashups deal with corporate data and various sources of information to compose new value added applications  The architecture design of enterprise mashups encompasses integration issues it needs to integrate heterogeneous data and or compose new situational applications from existing infrastructure  We envisage that architecture integration patterns can be applied not only as architecture solutions to mashup development, but also to help develop practical mashup techniques  In this paper, we combine several common architecture integration patterns, namely Pipes and Filters, Data Federation, and Model View Control to compose enterprise mashups  A number of techniques are also developed to customize these patterns for specific mashup needs  We illustrate our approach with a property valuation service derived from a real world setting    2009 IEEE   13 refs",Using architecture integration patterns to compose enterprise mashups,"['Architecture', 'Computer software', 'Architecture designs', 'Common architecture', 'Corporate data', 'Data federation', 'Heterogeneous data', 'Integration issues', 'Integration patterns', 'Mashups', 'Property valuation', 'Real-world', 'Value added applications', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Liu, Yan', ' ,', '', ' Liang, Xin', '', '', 'Xu, Lingzhi', '', '', 'Staples, Mark', ' ,', '', ' Zhu, Liming', ' ,', '']","NICTA, Australian Technology Park, NSW 2015, Australia  2  School of Computer Science and Engineering, University of New South Wales, Australia",2011,WICSA
376,377,"Estuarine areas are sites of human pressures and degradation  In order to maintain and or restore the quality of estuarine ecosystems, it is necessary to describe their structure and functioning  For that reason, many recent scientific works focus on food webs, which are depicted as being good indicators of the functioning of aquatic ecosystems  Hence it is necessary to question how estuarine food webs can be described  This paper proposes a pragmatic and practical review of the most widely used techniques  stomach gut content analysis, stable isotope ratios and biochemical markers  with emphasis on their main advantages, drawbacks and bias according to possible ecological goals  ecological quality objectives   These approaches, although quite different, provide complementary information about the trophic relationships in the system, that is to say the sources of organic matter and the description of energy flows between the different compartments of the food web  In trophic models, all these results can be integrated to a global picture of the estuarine trophic structure  This is considered to be an essential step towards the understanding of the functioning of these ecosystems    2007 Springer Science Business Media B V   109 refs",Facing the necessity of describing estuarine ecosystems  A review of food web ecology study techniques,"['Biological materials', 'Degradation', 'Ecosystems', 'Food products', 'Isotopes', 'Biochemical markers', 'Estuarine food web', 'Gut content analysis', 'Trophic models', 'Waterways', 'Ecology and Ecosystems', 'Biological Materials and Tissue Engineering', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Food Products']","['Pasquaud, St phanie', '', '', 'Lobry, J r my', '', '', 'Elie, Pierre']","CEMAGREF   Groupement de Bordeaux, Unit  Ecosyst mes Estuariens et Poissons Migrateurs Amphihalins, 50 Avenue de Verdun, Cestas 33612, France  2  IFREMER   Centre de Nantes, D partement EMH  Ecologie et Mod les Pour l Halieutique , Rue de l Ile d Yeu, Nantes Cedex 3 44311, France",2007,ECSA
377,378,"Estuarine areas are sites of human pressures and degradation  In order to maintain and or restore the quality of estuarine ecosystems, it is necessary to describe their structure and functioning  For that reason, many recent scientific works focus on food webs, which are depicted as being good indicators of the functioning of aquatic ecosystems  Hence it is necessary to question how estuarine food webs can be described  This paper proposes a pragmatic and practical review of the most widely used techniques  stomach gut content analysis, stable isotope ratios and biochemical markers  with emphasis on their main advantages, drawbacks and bias according to possible ecological goals  ecological quality objectives   These approaches, although quite different, provide complementary information about the trophic relationships in the system, that is to say the sources of organic matter and the description of energy flows between the different compartments of the food web  In trophic models, all these results can be integrated to a global picture of the estuarine trophic structure  This is considered to be an essential step towards the understanding of the functioning of these ecosystems    2007 Springer Science Business Media B V   109 refs",Facing the necessity of describing estuarine ecosystems  A review of food web ecology study techniques,"['Biological materials', 'Degradation', 'Ecosystems', 'Food products', 'Isotopes', 'Biochemical markers', 'Estuarine food web', 'Gut content analysis', 'Trophic models', 'Waterways', 'Ecology and Ecosystems', 'Biological Materials and Tissue Engineering', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Food Products']","['Pasquaud, St phanie', '', '', 'Lobry, J r my', '', '', 'Elie, Pierre']","CEMAGREF   Groupement de Bordeaux, Unit  Ecosyst mes Estuariens et Poissons Migrateurs Amphihalins, 50 Avenue de Verdun, Cestas 33612, France  2  IFREMER   Centre de Nantes, D partement EMH  Ecologie et Mod les Pour l Halieutique , Rue de l Ile d Yeu, Nantes Cedex 3 44311, France",2008,ECSA
378,379,"Even though there has been some research on system evolution, there is no well defined vocabulary to indicate deviation of a system from desired goals  Further, there are no objective measures to indicate whether changes incorporated into a system as part of its evolution violates the integrity of the architectural design  Also, little research has been done to categorize the aspects of a software system that is subject to deviation as the system evolves  In this paper we develop a model for tracking software evolution and propose measures that will objectively indicate the extent of deviation or divergence in a software system  We also categorize the different aspects of software, changes to which can significantly impact usability as well as conceptual coherence    2007 IEEE   15 refs",Architecture assessment model for system evolution,"['Computer aided design', 'Convergence of numerical methods', 'Information technology', 'Knowledge based systems', 'Mathematical models', 'Architecture assessment models', 'Divergence', 'Software systems', 'System evolution', 'Computer Systems and Equipment', 'Expert Systems', 'Computer Applications', 'Information Science', 'Mathematics', 'Numerical Methods']","['Bhattacharya, Sutirtha', '', '', 'Perry, Dewayne E', '', '']","Empirical Software Engineering Lab   ESEL , ECE, University of Texas at Austin, Austin, TX 78712",2007,WICSA
379,380,"Even though there has been some research on system evolution, there is no well defined vocabulary to indicate deviation of a system from desired goals  Further, there are no objective measures to indicate whether changes incorporated into a system as part of its evolution violates the integrity of the architectural design  Also, little research has been done to categorize the aspects of a software system that is subject to deviation as the system evolves  In this paper we develop a model for tracking software evolution and propose measures that will objectively indicate the extent of deviation or divergence in a software system  We also categorize the different aspects of software, changes to which can significantly impact usability as well as conceptual coherence   15 refs",Architecture assessment model for system evolution,"['software architecture', 'architecture assessment model', 'system evolution', 'architectural design', 'software system', 'Software engineering techniques']","['Bhattacharya, S', '', '', ' Perry, D E', '', '']","Empirical Software Eng  Lab , Univ  of Texas at Austin, Austin, TX, United States",2007,WICSA
380,381,"Every software program that interacts with a user requires a user interface  Model View Controller  MVC  is a common design pattern to integrate a user interface with the application domain logic  MVC separates the representation of the application domain  Model  from the display of the application s state  View  and user interaction control  Controller   However, studying the literature reveals that a variety of other related patterns exists, which we denote with Model View   MV  design patterns  This paper discusses existing MV patterns classified in three main families  Model View Controller  MVC , Model View View Model  MVVM , and Model View Presenter  MVP   We take a practitioners  point of view and emphasize the essentials of each family as well as the differences  The study shows that the selection of patterns should take into account the use cases and quality requirements at hand, and chosen technology  We illustrate the selection of a pattern with an example of our practice  The study results aim to bring more clarity in the variety of MV design patterns and help practitioners to make better grounded decisions when selecting patterns    2014 IEEE   21 refs",A journey through the land of model view design patterns,"['Controllers', 'Models', 'Software architecture', 'Design Patterns', 'MVC', 'MVP', 'MVVM', 'view', 'Computer Peripheral Equipment', 'Computer Programming', 'Control Equipment', 'Engineering Graphics']","['Syromiatnikov, Artem', '', '', 'Weyns, Danny']","Department of Computer Science, Linnaeus University, V xj , Sweden",2014,WICSA
381,382,"Evolution is a permanent challenge in product line engineering  Reusable assets such as software components or documents evolve continuously due to new customer requirements or technology changes  This leads to modifications or extensions of the product line s variability models describing the reference architecture  Due to the large size of product lines, single stakeholders or teams can only maintain a small part of a system which poses additional challenges for evolution  This paper presents a tool supported approach for building and maintaining variability models of large scale product lines  We structure variability models into multiple model fragments of manageable size that can be created and maintained by individual teams  Model fragments can be merged semiautomatically into a variability model  We illustrate the approach with examples from ongoing industry collaboration    2008 IEEE   14 refs",Supporting the evolution of product line architectures with variability model fragments,"['Computer software reusability', 'Production engineering', 'Technology', 'Customer requirements', 'Industry collaborations', 'Large sizes', 'Multiple modeling', 'Product line engineering', 'Product lines', 'Product-line architectures', 'Reference architecture', 'Reusable assets', 'Software components', 'Technology changes', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Engineering Profession', 'Production Engineering']","['Dhungana, Deepak', '', '', 'Neumayer, Thomas', '', '', 'Gr nbacher, Paul', '', '', 'Rabiser, Rick']","Christian Doppler Laboratory for Automated Software Engineering, Johannes Kepler University, 4040 Linz, Austria",2008,WICSA
382,383,"Exchange Carriers Standards Association  ECSA  developed synchronous optical network  SONET  for ANSI  Synchronous digital hierarchy  SDH  is the international equivalent of SONET  These standards define the optical telecommunication transport for the U S  and European Telecommunications  The SONET and SDH are technologies for network transport  They use synchronous operations in facilitating real time data, voice, and video transmission through fiber optic cabling  The rates range from 51 84 Mbps  OC 1 or optical carrier level 1  to 13 271 Gbps  OC 255   High speed communications from different vendors are interconnected by applying the SONET standard  The ability of SONET to transport many different digital signals using a standard synchronous transport signal  STS  format is its major attribute  We will discuss the SONET and SDH in this chapter  The SONET signal, frame, components, topologies, and standards will also be discussed   0 refs",Synchronous Optical Network  SONET,"['SONET', 'video communication', 'synchronous optical network', 'SONET', 'standard synchronous transport signal', 'STS', 'SDH', 'exchange carriers standards association', 'ECSA', 'ANSI', 'synchronous digital hierarchy', 'European telecommunications', 'telecommunication transport', 'U.S', 'video transmission', 'fiber optic cabling', 'Optical fibre networks']","['Editors', 'Akujuobi, C M', '', '', ' Sadiku, M N O', '', '']",None,2008,ECSA
383,384,"Experience with system level concerns demonstrates that fitness for context is a consideration that is equally significant in making architectural decisions as is fitness for purpose  This requires architects to consider contextual factors in making decisions  These decisions are probabilistic in nature and they represent the subjective belief of the architect or the prior probability which is likely to change as new evidence becomes available during the course of the system design  They serve as recommendations and directional inputs to other decisions in the design process  In this paper, we introduce a macro architectural decision framework we developed to enable the architect for a software reliant system to model and reason about contextual factors  At the core of our framework is an adaptation of a Bayesian belief network that is augmented with decision and utility nodes  The framework captures contextual factors and their influence on decisions and utilities  We applied our approach in the study of a software system implementation at a healthcare company  The results show promise that such decision support tools help explore the space of factors involved in decision making and provide sensible suggestions for making architectural decisions    2014 ACM   12 refs",Probabilistic macro architectural decision framework,"['Bayesian networks', 'Computer systems', 'Curricula', 'Decision making', 'Decision support systems', 'Industry', 'Network architecture', 'Software architecture', 'Architecture decisions', 'Bayesian nets', 'Contextual factors', 'Decision network', 'Influence diagram', 'macro-architecture', 'Probabilistic graphical models', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Education', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Management', 'Production Planning and Control  Manufacturing', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory']","['Petrov, Plamen', '', '', 'Nord, Robert L', '', '', ' Buy, Ugo']","Department of Computer Science, University of Illinois at Chicago, Chicago, IL, United States  2  Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, United States",2014,ECSA
384,385,"Explaining and motivating architectural choices are crucial points both in real system development and in computer scientists education  Stakeholders and students should fully understand from a high level perspective the rationale behind basic architectural choices  The paper proposes a communication approach that is complementary to established design processes and can be exploited in workshops that involve the  non architects  at the end of each phase of an iterative development process  Starting from a problem analysis focused on the significant aspects of data, activities and information flows, a logical architecture is defined by grouping activities into logical components  Different logical architectures are rated according to several conceptual dimensions, in order to highlight their specific rationale and benefits  Finally, deployment solutions are considered to weight the ratings according to costs and constraints of different deployment architectures and of the underlying technologies    2010 Springer Verlag Berlin Heidelberg   14 refs",Explaining architectural choices to non architects,"['Architectural design', 'Requirements engineering', 'Technical presentations', 'Components', 'Computer scientists', 'Deployment architecture', 'Design process', 'Information flows', 'Iterative development', 'Logical architecture', 'Problem analysis', 'Real systems', 'Requirements analysis', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Bernini, Diego', '', '', 'Tisato, Francesco']","D I S Co , University of Milano Bicocca, Viale Sarca, 336, Milano 20126, Italy",2010,ECSA
385,386,"Failure in long running grid applications is arguably inevitable and costly  Therefore, fault tolerance  FT  support for grid applications is needed  This paper evaluates an extension of our prior work on Recovery Aware Components  RAC , a component based FT approach  Our extension utilizes the grid application architecture according to a small number of architectural classes  In this paper, we evaluate the MapReduce architecture only and analyze the reliability improvement MapReduce applications would gain by adopting the RAC approach  Our analysis shows that significant increases in reliability are possible at moderate extra cost  Obviously the cost of FT depends on the failure rate of the managed system, i e , the system to be protected from faults, and the FT strategy chosen  Our work aims to give High Performance Computing  HPC  software architects the tools to control these factors for dierent grid application architectures    2011 ACM   25 refs",Architecture based fault tolerance support for grid applications,"['Computer software selection and evaluation', 'Cost benefit analysis', 'Fault tolerance', 'Reliability analysis', 'Component based', 'Failure rate', 'grid', 'Grid applications', 'High-performance computing', 'Map-reduce', 'Reliability improvement', 'Software architects', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Cost and Value Engineering  Industrial Economics', 'Production Planning and Control  Manufacturing']","['Yusuf, Iman I', '', '', ' Schmidt, Heinz W', '', '', ' Peake, Ian D', '', '']","School of Computer Science and IT, RMIT University, Melbourne, VIC, Australia",2011,QoSA
386,387,"Feature oriented programming extends object oriented programming to support feature modularity  Feature modules typically cut across class boundaries to implement end uservisible features  Customized program variants can be composed automatically given a selection of desired feature modules  We propose behavioral feature interfaces based on design by contract for precise localization of faulty feature modules  There are three different approaches for feature module composition, which are considered to be equivalent in the literature  We discuss advantages and disadvantages for each approach with regard to behavioral feature interfaces  Based on our insights, we present Subclack as a new approach for feature module composition combining the advantages of all existing approaches  In our examples, we use contracts defined in an feature oriented extension of the Java Modeling Language, and discuss how they can be checked by means of runtime assertions   33 refs",Subclack  Feature oriented programming with behavioral feature interfaces,"['Object oriented programming', 'Behavioral features', 'Design by contracts', 'Explicit contract refinement', 'Feature-oriented programming', 'Java Modeling Language', 'Runtime assertion', 'Computer Programming', 'Social Sciences']","['Th m, Thomas', '', '', 'Apel, Sven', '', '', 'Zelend, Andreas', '', '', 'Schr ter, Reimar', '', '', 'M ller, Bernhard']","University of Magdeburg, Germany  2  University of Passau, Germany  3  University of Augsburg, Germany",2013,ECSA
387,388,"Federated embedded systems  FES  is an approach for systems of systems engineering in the domain of cyber physical systems  It is based on the idea to allow dynamic addition of plug in software in the embedded system of a product, and through communication between the plug ins in different products, it becomes possible to build services on the level of a federation of products  In this paper, architectural concerns for FES are elicited, and are used as rationale for a number of decisions in the architecture of products that are enabled for FES, as well as in the application architecture of a federation  A concrete implementation of a FES from the automotive domain is also described, as a validation of the architectural concepts presented    2014 ACM   21 refs",Architectural concepts for federated embedded systems,"['Software architecture', 'Application architecture', 'Architectural concepts', 'Automotive domains', 'Cyber physical systems (CPSs)', 'Plug-in softwares', 'System architectures', 'Systems-of-systems', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Axelsson, Jakob', '', '', 'Kobetski, Avenir']","Swedish Institute of Computer Science  SICS , SE 164 29 Kista, Sweden",2014,ECSA
388,389,"For developing software systems it is crucial to consider nonfunctional properties already in an early development stage to guarantee that the system will satisfy its non functional requirements  Following the model based engineering paradigm facilitates an early analysis of non functional properties of the system being developed based on the elaborated design models  Although UML is widely used in modelbased engineering, it is not suitable for model based analysis directly due to its lack of formal semantics  Thus, current model based analysis approaches transform UML models into formal languages dedicated for analyses purpose, which may introduce accidental complexity of implementing the required model transformations  The recently introduced fUML standard provides a formal semantics of a subset of UML enabling the execution of UML models  In this paper, we show how fUML can be utilized for analyzing UML models directly without having to transform them  We present a reusable framework for performing model based analyses leveraging execution traces of UML models and integrating UML profiles heretofore unsupported by fUML  A case study in the performance analysis domain is used to illustrate the benefits of our framework  Copyright 2013 ACM   19 refs",Combining fUML and profiles for non functional analysis based on model execution traces,"['Formal languages', 'Semantics', 'FUML', 'Model-based analysis', 'Model-based engineering', 'Non functional properties', 'Non-functional analysis', 'Non-functional requirements', 'Performance analysis', 'Uml profiles', 'Computer Programming Languages', 'Information Dissemination']","['Berardinelli, Luca', '', '', 'Langer, Philip', '', '', 'Mayerhofer, Tanja']","Department of Information Engineering, Computer Science and Mathematics, University of L Aquila, L Aquila, Italy  2  Business Informatics Group, Vienna University of Technology, Vienna, Austria",2013,QoSA
389,390,"For polymer electrolyte fuel cells  PEFCs , carbon corrosion, leading to lower activities of catalysts under cathode conditions, is one of the important technological issues to be solved  We have been developing SnO2 and Nb SnO2 as alternative support materials  In this study, the oxygen reduction reaction  ORR  activity and the durability of Pt SnO2 and Pt Sn0 98Nb0 02O2 against voltage cycling between 1 0 and 1 5 VRHE are quantitatively investigated  Longer ORR durability was verified, compared to the standard catalyst, Pt Vulcan  Furthermore, we have found that the degradation mechanism of ORR is probably different between carbon black and SnO2 based supports  In the case of SnO2 based catalysts, degradation arose mainly from the loss of electrochemical surface area  ECSA , while other factors were also involved for Pt Vulcan  Consequently, SnO2 is a promising candidate electrocatalyst support material to solve carbon corrosion problems of PEFCs    The Electrochemical Society   9 refs",Electrochemical properties and durability of electrocatalysts supported on SnO2,"['Carbon', 'Catalyst activity', 'Corrosion', 'Degradation', 'Durability', 'Electrolytic reduction', 'Polyelectrolytes', 'Proton exchange membrane fuel cells (PEMFC)', 'Carbon corrosion', 'Degradation mechanism', 'Electrocatalyst support', 'Electrochemical surface area', 'Oxygen reduction reaction', 'Polymer electrolyte fuel cells', 'Support materials', 'Strength of Building Materials  Mechanical Properties', 'Fuel Cells', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Organic Polymers']","['Tsukatsunea, T', '', '', ' Takabatakea, Y', '', '', ' Nodab, Z', '', '', ' Hayashi, A', '', ',', ',', '', ' Sasakia, K', '', ',', ',', ',', '']","Faculty of Engineering, Department of Hydrogen Energy Systems, Kyushu University, Japan  2  International Research Center for Hydrogen Energy, Kyushu University, Japan  3  Next Generation Fuel Cell Research Center  NEXT FC , Kyushu University, Japan  4  International Inst  for Carbon Neutral Energy Research  WPI I2CNER , Kyushu University, Japan",2013,ECSA
390,391,"For two years, we have been involved in a challenging project to develop a new architecture for an industrial transportation system  The motivating quality attributes to develop this innovative architecture were flexibility and openness  Taking these quality attributes into account, we proposed a decentralized architecture using multiagent systems  MASs   A MAS consists of multiple autonomous entities that coordinate with each other to achieve decentralized control  The typical advantages attributed to such decentralized architecture are flexibility and openness, the motivating quality attributes to apply MAS in this case  The Architecture Tradeoff Analysis Method  ATAM  was used to provide insights wether our architecture meets the expected flexibility and openness, and to identify tradeoffs with other quality attributes  Applying the ATAM proved to be a valuable experience  One of the main outcome of applying the ATAM was the identification of a tradeoff between flexibility and communication load that results from the use of a decentralized architecture  This paper describes our experiences in applying the ATAM to a MAS architecture, containing both the main outcomes of the evaluation and a critical reflection on the ATAM itself    2006 Springer Verlag   36 refs",Applying the ATAM to an architecture for decentralized control of a transportation system,"['Communication channels (information theory)', 'Computer software selection and evaluation', 'Decentralized control', 'Motivation', 'Architecture tradeoff analysis methods', 'Autonomous entities', 'Communication load', 'Critical reflections', 'Decentralized architecture', 'MAS architecture', 'Quality attributes', 'Transportation system', 'Personnel', 'Management', 'Control Systems', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Information Theory and Signal Processing']","['Bouck , Nelis', '', '', 'Weyns, Danny', '', '', 'Schelfthout, Kurt', '', '', 'Holvoet, Tom']","Distrinet, KULeuven, Celestijnenlaan 200A, Leuven, Belgium",2006,QoSA
391,392,"For two years, we have been involved in a challenging project to develop a new architecture for an industrial transportation system  The motivating quality attributes to develop this innovative architecture were flexibility and openness  Taking these quality attributes into account, we proposed a decentralized architecture using multiagent systems  MASs   A MAS consists of multiple autonomous entities that coordinate with each other to achieve decentralized control  The typical advantages attributed to such decentralized architecture are flexibility and openness, the motivating quality attributes to apply MAS in this case  The architecture tradeoff analysis method  ATAM  was used to provide insights whether our architecture meets the expected flexibility and openness, and to identify tradeoffs with other quality attributes  Applying the ATAM proved to be a valuable experience  One of the main outcome of applying the ATAM was the identification of a tradeoff between flexibility and communication load that results from the use of a decentralized architecture  This paper describes our experiences in applying the ATAM to a MAS architecture, containing both the main outcomes of the evaluation and a critical reflection on the ATAM itself   36 refs",Applying the ATAM to an architecture for decentralized control of a transportation system,"['control engineering computing', 'decentralised control', 'multi-agent systems', 'software architecture', 'software quality', 'traffic engineering computing', 'transportation', 'software architecture', 'decentralized control', 'industrial transportation system', 'quality attributes', 'multiagent systems', 'architecture tradeoff analysis method', 'Traffic engineering computing', 'Control engineering computing', 'Multivariable control systems', 'Transportation system control', 'Software engineering techniques', 'Expert systems and other AI software and techniques']","['Boucke, N', '', '', ' Weyns, D', '', '', ' Schelfthout, K', '', '', ' Holvoet, T', '', '']","Distrinet, KU Leuven, Belgium",2006,QoSA
392,393,"Formal modelling techniques are often disregarded as their semantics are too distant from the mainstream practice of software architecture design, which is dominated by the use of component based modelling and patterns  This paper advocates the need for formal modelling techniques for humans, i e , software architects who need to precisely ascertain the security properties of their design models  We contribute a technique that enables architects to more easily construct verified, secure architecture designs by assembling already verified security pattern models  Our approach is illustrated with a pattern language for accountability  It is validated by an observational study that shows that the approach produces reusable results, and is able to uncover relevant architectural security flaws    2012 IEEE   15 refs",Reusable formal models for secure software architectures,"['Models', 'Semantics', 'Architectural security', 'Component based', 'Design models', 'Formal model', 'Formal modelling', 'Observational study', 'Pattern languages', 'Secure architectures', 'Security patterns', 'Security properties', 'Software architects', 'Software architecture design', 'Computer Programming', 'Engineering Graphics', 'Information Dissemination']","['Heyman, Thomas', '', '', 'Scandariato, Riccardo', '', '', 'Joosen, Wouter']","IBBT DistriNet, KU Leuven, Belgium",2012,ECSA
393,394,"Formal modelling techniques are often disregarded as their semantics are too distant from the mainstream practice of software architecture design, which is dominated by the use of component based modelling and patterns  This paper advocates the need for formal modelling techniques for humans, i e , software architects who need to precisely ascertain the security properties of their design models  We contribute a technique that enables architects to more easily construct verified, secure architecture designs by assembling already verified security pattern models  Our approach is illustrated with a pattern language for accountability  It is validated by an observational study that shows that the approach produces reusable results, and is able to uncover relevant architectural security flaws    2012 IEEE   15 refs",Reusable formal models for secure software architectures,"['Models', 'Semantics', 'Architectural security', 'Component based', 'Design models', 'Formal model', 'Formal modelling', 'Observational study', 'Pattern languages', 'Secure architectures', 'Security patterns', 'Security properties', 'Software architects', 'Software architecture design', 'Computer Programming', 'Engineering Graphics', 'Information Dissemination']","['Heyman, Thomas', '', '', 'Scandariato, Riccardo', '', '', 'Joosen, Wouter']","IBBT DistriNet, KU Leuven, Belgium",2012,WICSA
394,395,"Frameworks are an important form of reuse  However, they are often complex and hard to understand, what limits their success as a reuse option  To answer this problem, it has been widely recognized the need to effectively communicate frameworks and provide appropriate tool support, but difficulties still endure  We argue that the properties of frameworks are another aspect that is decisive for reuse problems and has not been sufficiently explored  We discuss these issues and we propose a framework architectural model that can be used to design frameworks that are easier to reuse    Springer Verlag Berlin Heidelberg 2007   8 refs",An architectural model for small scale component oriented frameworks,"['Computer software reusability', 'Mathematical models', 'Object oriented programming', 'Problem solving', 'Requirements engineering', 'Component oriented design', 'Frameworks', 'Role modeling', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Mathematics']","['Lopes, S', '', '', ' Tavares, A', '', '', ' Monteiro, J', '', '', ' Silva, C', '', '']","Department of Industrial Electronics, University of Minho, Campus de Azur m, 4800 058 Guimar es, Portugal",2007,ECSA
395,396,"Frameworks are an important form of reuse  However, they are often complex and hard to understand, what limits their success as a reuse option  To answer this problem, it has been widely recognized the need to effectively communicate frameworks and provide appropriate tool support, but difficulties still endure  We argue that the properties of frameworks are another aspect that is decisive for reuse problems and has not been sufficiently explored  We discuss these issues and we propose a framework architectural model that can be used to design frameworks that are easier to reuse    Springer Verlag Berlin Heidelberg 2007   8 refs",An architectural model for small scale component oriented frameworks,"['Computer software reusability', 'Mathematical models', 'Object oriented programming', 'Problem solving', 'Requirements engineering', 'Component oriented design', 'Frameworks', 'Role modeling', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Mathematics']","['Lopes, S', '', '', ' Tavares, A', '', '', ' Monteiro, J', '', '', ' Silva, C', '', '']","Department of Industrial Electronics, University of Minho, Campus de Azur m, 4800 058 Guimar es, Portugal",2008,ECSA
396,397,"Frameworks are an important form of reuse  However, they are often complex and hard to understand, what limits their success as a reuse option  To answer this problem, it has been widely recognized the need to effectively communicate frameworks and provide appropriate tool support, but difficulties still endure  We argue that the properties of frameworks are another aspect that is decisive for reuse problems and has not been sufficiently explored  We discuss these issues and we propose a framework architectural model that can be used to design frameworks that are easier to reuse   8 refs",An architectural model for small scale component oriented frameworks,"['object-oriented methods', 'software architecture', 'architectural model', 'small scale component-oriented frameworks', 'object-oriented design', 'object-oriented programming', 'Software engineering techniques', 'Formal methods', 'Object oriented programming']","['Lopes, S', '', '', ' Tavares, A', '', '', ' Monteiro, J', '', '', ' Silva, C', '', '']","Dept  of Ind  Electron , Univ  of Minho, Guimaraes, Portugal",2007,ECSA
397,398,"Frameworks are an important form of reuse  However, they are often complex and hard to understand, what limits their success as a reuse option  To answer this problem, it has been widely recognized the need to effectively communicate frameworks and provide appropriate tool support, but difficulties still endure  We argue that the properties of frameworks are another aspect that is decisive for reuse problems and has not been sufficiently explored  We discuss these issues and we propose a framework architectural model that can be used to design frameworks that are easier to reuse   8 refs",An architectural model for small scale component oriented frameworks,"['object-oriented methods', 'software architecture', 'architectural model', 'small scale component-oriented frameworks', 'object-oriented design', 'object-oriented programming', 'Software engineering techniques', 'Formal methods', 'Object oriented programming']","['Lopes, S', '', '', ' Tavares, A', '', '', ' Monteiro, J', '', '', ' Silva, C', '', '']","Dept  of Ind  Electron , Univ  of Minho, Guimaraes, Portugal",2008,ECSA
398,399,"Frequent itemset mining finds frequently occurring itemsets in transactional data  This is applied to diverse problems such as decision support, selective marketing, financial forecast and medical diagnosis  The cloud, computation as an utility service, allows us to crunch large mining problems  There are a number of algorithms for doing frequent itemset mining, but none are out of the box suited for the cloud, requiring large data structures to be synchronized across the network  One of the best algorithms for doing frequent itemset mining is the known FP growth  Frequent Patterns growth   We develop a cloud enabled algorithmic variant for frequent itemset mining that scales with very little communication and computational overhead and even, with only one worker node, is faster than FP growth  We develop the concept of a postfix path and show how this allows us to lower the communicational cost and leads to adjustable work sizes  This concept provides a very exible algorithmic solution that can be applied to a wide variety of different problem sizes and setups  Copyright 2012 ACM   14 refs",Message driven FP growth,"['Algorithms', 'Clouds', 'Commerce', 'Communication', 'Data mining', 'Data structures', 'Decision support systems', 'Diagnosis', 'Digital storage', 'Distributed computer systems', 'Algorithmic solutions', 'Algorithmic variants', 'Apriori', 'Computational overheads', 'Decision supports', 'FP growths', 'Frequent itemset mining', 'Frequent patterns growth', 'Item sets', 'Market basket analysis', 'Message-driven', 'Mining problems', 'Problem size', 'Scaling', 'Transactional data', 'Worker nodes', 'Industrial Economics', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Mathematics', 'Data Storage, Equipment and Techniques', 'Medicine and Pharmacology', 'Meteorology', 'Telecommunication  Radar, Radio and Television']","['Neerbek, Jan']","Alexandra Institute, Aarhus, Denmark",2012,ECSA
399,400,"Frequent itemset mining finds frequently occurring itemsets in transactional data  This is applied to diverse problems such as decision support, selective marketing, financial forecast and medical diagnosis  The cloud, computation as an utility service, allows us to crunch large mining problems  There are a number of algorithms for doing frequent itemset mining, but none are out of the box suited for the cloud, requiring large data structures to be synchronized across the network  One of the best algorithms for doing frequent itemset mining is the known FP growth  Frequent Patterns growth   We develop a cloud enabled algorithmic variant for frequent itemset mining that scales with very little communication and computational overhead and even, with only one worker node, is faster than FP growth  We develop the concept of a postfix path and show how this allows us to lower the communicational cost and leads to adjustable work sizes  This concept provides a very exible algorithmic solution that can be applied to a wide variety of different problem sizes and setups  Copyright 2012 ACM   14 refs",Message driven FP growth,"['Algorithms', 'Clouds', 'Commerce', 'Communication', 'Data mining', 'Data structures', 'Decision support systems', 'Diagnosis', 'Digital storage', 'Distributed computer systems', 'Algorithmic solutions', 'Algorithmic variants', 'Apriori', 'Computational overheads', 'Decision supports', 'FP growths', 'Frequent itemset mining', 'Frequent patterns growth', 'Item sets', 'Market basket analysis', 'Message-driven', 'Mining problems', 'Problem size', 'Scaling', 'Transactional data', 'Worker nodes', 'Industrial Economics', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Mathematics', 'Data Storage, Equipment and Techniques', 'Medicine and Pharmacology', 'Meteorology', 'Telecommunication  Radar, Radio and Television']","['Neerbek, Jan']","Alexandra Institute, Aarhus, Denmark",2012,WICSA
400,401,"Functionalized  N, O  carbon nanotubes supported Pt electrocatalysts with high surface area and small average particle diameter  2 nm  are synthesized by the polyol method using microwave irradiation  Physical and electrochemical methods are used to characterize the surface and the structure of the catalysts and supports  The stability of the catalysts is evaluated through an accelerated stress test by fast potential cycling monitoring changes in electrochemical behavior with cyclic voltammetry and polarization curves  Characterization indicates that the Pt particle size is comparable for all samples and is about 2 nm with a Pt loading depending on the carbon nanotubes employed in synthesis  The accelerated stress test demonstrates that the electrochemical surface areas  ECSAs  are relatively stable and only a small and non linear decay is observed, which is much lower than with carbon black supported samples  Strikingly, the ECSA loss is virtually independent of the composition functionalisation of the CNTs  Initial stronger changes in ECSA are tentatively attributed to initial structural changes in the catalyst, which are more pronounced for CNT and oxygen functionalized CNT  OCNT  supported samples  Concurrently, the surface specific activity initially changes strongly in the latter samples, while it does not for the nitrogen functionalized CNT  NCNT  supported catalysts    2012 Elsevier Ltd  All rights reserved   45 refs",High stability of low Pt loading high surface area electrocatalysts supported on functionalized carbon nanotubes,"['Carbon black', 'Carbon nanotubes', 'Cyclic voltammetry', 'Electrocatalysts', 'Electrolysis', 'Electrolytic reduction', 'Platinum', 'Synthesis (chemical)', 'Catalyst stability', 'Functionalized carbon nanotubes', 'High surface area', 'Oxygen reduction reaction', 'Pt nanoparticles', 'Precious Metals', 'Nanotechnology', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Electric Variables Measurements']","['Mezalira, Daniela Z', '', '', ' Bron, Michael']","Technische Chemie i, Institut f r Chemie, Martin Luther Universit t Halle Wittenberg, von Danckelmann Platz 4, 06120 Halle, Germany",2013,ECSA
401,402,"Global Software Development  GSD  teams encounter challenges that are associated with distribution of software development activities across multiple geographic regions  The limited support for performing collaborative development and engineering activities and lack of sufficient support for maintaining and resolving dependencies and traceability across heterogeneous tools are major challenges for GSD teams  The lack of insufficient support for cross platform tools integration also makes it hard to address the stated challenges using existing paradigms that are based upon desktop and web based solutions  The restricted ability of the organizations to have desired alignment of tools with software engineering and development processes results in administrative and managerial overhead that incur increased development cost and poor product quality  Moreover, stakeholders involved in the projects have specific constraints regarding availability and deployments of the tools  The artifacts and data produced or consumed by the tools need to be governed according to the constraints and corresponding quality of service  QoS  parameters  In this paper, we present the research agenda to leverage cloud computing paradigm for addressing abovementioned issues by providing a framework to select appropriate tools as well as associated services and reference architecture of the cloud enabled middleware platform that allows on demand provisioning of software engineering Tools as a Service  TaaS  with focus on integration of tools  Copyright   2014 ACM 000 0 0000 0000 0 00 00 00 00   32 refs",A reference architecture for providing tools as a service to support Global Software Development,"['Cloud computing', 'Distributed computer systems', 'Infrastructure as a service (IaaS)', 'Quality of service', 'Software architecture', 'Software as a service (SaaS)', 'Collaborative development', 'Development activity', 'Engineering activities', 'Global software development', 'Middleware platforms', 'Quality of Service parameters', 'Reference architecture', 'Software engineering tools', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications']","['Chauhan, Muhammad Aufeef']","Software and Systems Group, IT University of Copenhagen, Copenhagen, Denmark",2014,WICSA
402,403,"Good research ideas often arise from critical observation of inconsistencies between researchers  assumptions about software development and practical reality  This dissonance creates a kind of friction that can spark research ideas  This is the text for the Stevens Award Lecture on November 8, 2005  The Stevens Award was created to recognize outstanding contributions to the literature or practice of methods for software and systems development    2005 IEEE   11 refs",Sparking research ideas from the friction between doctrine and reality,"['Professional aspects', 'Software architecture', 'Doctrines', 'Software research', 'Computer Applications', 'Engineering Professional Aspects', 'Engineering Research']","['Shaw, Mary']",Carnegie Mellon University,2005,WICSA
403,404,"Graph Presented  Staying power  A new class of cathode catalysts based on supportless Pt  see picture, left  and PtPd nanotubes  NTs  is introduced  These materials have remarkable durability  right  CV   cyclic voltammetry, ECSA   electrochemical surface area  and high catalytic activity  They have the potential to circumvent most of the degradation pathways of current Pt C and Pt black catalysts    2007 Wiley VCH Verlag GmbH   Co  KGaA   24 refs",Supportless Pt and PtPd nanotubes as electrocatalysts for oxygen reduction reactions,"['Catalyst activity', 'Degradation', 'Electrocatalysts', 'Oxygen', 'Platinum', 'Reduction', 'Degradation pathways', 'Oxygen reduction reaction', 'Sustainable chemistry', 'Precious Metals', 'Nanotechnology', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Crystalline Solids']","['Chen, Zhongwei', '', '', 'Waje, Mahesh', '', '', 'Li, Wenzhen', '', '', 'Yan, Yushan']","Department of Chemical and Environmental Engineering, Bourns College of Engineering, University of California, Riverside, Riverside, CA 92521, United States",2007,ECSA
404,405,"Graph Presented  Staying power  A new class of cathode catalysts based on supportless Pt  see picture, left  and PtPd nanotubes  NTs  is introduced  These materials have remarkable durability  right  CV   cyclic voltammetry, ECSA   electrochemical surface area  and high catalytic activity  They have the potential to circumvent most of the degradation pathways of current Pt C and Pt black catalysts    2007 Wiley VCH Verlag GmbH   Co  KGaA   24 refs",Supportless Pt and PtPd nanotubes as electrocatalysts for oxygen reduction reactions,"['Catalyst activity', 'Degradation', 'Electrocatalysts', 'Oxygen', 'Platinum', 'Reduction', 'Degradation pathways', 'Oxygen reduction reaction', 'Sustainable chemistry', 'Precious Metals', 'Nanotechnology', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Crystalline Solids']","['Chen, Zhongwei', '', '', 'Waje, Mahesh', '', '', 'Li, Wenzhen', '', '', 'Yan, Yushan']","Department of Chemical and Environmental Engineering, Bourns College of Engineering, University of California, Riverside, Riverside, CA 92521, United States",2008,ECSA
405,406,"Graphene nanosheet, the hottest material in physics and materials science, has been studied extensively because of its unique electronic, thermal, mechanical, and chemical properties arising from its strictly 2D structure and because of its potential technical applications  Particularly, these remarkable characteristics enable it to be a promising candidate as a new 2D support to load metal nanoparticles  NPs  for application in fuel cells  However, constructing high quality graphene bimetallic NP hybrids with high electrochemical surface area  ECSA  remains a great challenge to date  In this paper, we demonstrate for the first time a wet chemical approach for the synthesis of high quality three dimensional  3D  Pt on Pd bimetallic nanodendrites supported on graphene nanosheets  TP BNGN , which represents a new type of graphene metal heterostructure  The resulting hybrids were characterized by atomic force microscopy  AFM , transmission electron microscopy  TEM , high resolution TEM  HRTEM , energy dispersive X ray  EDX  spectroscopy, X ray photoelectron spectroscopy  XPS , thermogravimetric analysis  TGA , Raman spectroscopy, and electrochemical technique  It is found that small single crystal Pt nanobranches supported on Pd NCs with porous structure and good dispersion were directly grown onto the surface of graphene nanosheets, which exhibits high electrochemical active area  Furthermore, the number of nanobranches for Pt on Pd bimetallic nanodendrites on the surface of graphene nanosheets could be easily controlled via simply changing the synthetic parameters, thus resulting in the tunable catalytic properties  Most importantly, the electrochemical data indicate that the as prepared graphene bimetallic nanodendrite hybrids exhibited much higher electrocatalytic activity toward methanol oxidation reaction than the platinum black  PB  and commercial E TEK Pt C catalysts    2010 American Chemical Society   43 refs",Three dimensional Pt on Pd bimetallic nanodendrites supported on graphene nanosheet  Facile synthesis and used as an advanced nanoelectrocatalyst for methanol oxidation,"['Atomic force microscopy', 'Atomic spectroscopy', 'Chemical properties', 'Communication channels (information theory)', 'Crystal structure', 'Fuel cells', 'Graphene', 'Graphite', 'High resolution transmission electron microscopy', 'Mechanical properties', 'Metal fuels', 'Methanol', 'Molecular orbitals', 'Nanosheets', 'Oxidation', 'Palladium', 'Platinum', 'Raman spectroscopy', 'Surfaces', 'Synthesis (chemical)', 'Thermogravimetric analysis', 'Three dimensional', 'Two dimensional', '2D structures', 'Active area', 'Bimetallic nanostructure', 'Bimetallic nanostructures', 'Catalytic properties', 'Electrocatalytic activity', 'Electrochemical data', 'Electrochemical surface area', 'Electrochemical techniques', 'Energy dispersive x-ray', 'Facile synthesis', 'Graphene nanosheet', 'Graphenes', 'Heterostructures', 'High quality', 'High-resolution TEM', 'Metal nanoparticles', 'Methanol Oxidation', 'Methanol oxidation reactions', 'Nanodendrites', 'Platinum black', 'Porous structures', 'Potential technical applications', 'Synthetic parameters', 'TEM', 'Three-dimensional (3D)', 'Wet-chemical approach', 'Materials Science', 'Physical Chemistry', 'Chemical Reactions', 'Chemical Products Generally', 'Organic Compounds', 'Refractories', 'Coating Materials', 'Engineering Graphics', 'Classical Physics  Quantum Theory  Relativity', 'Mechanics', 'Atomic and Molecular Physics', 'Solid State Physics', 'Crystal Lattice', 'Chemistry', 'Non Mechanical Properties and Tests of Building Materials', 'Minerals', 'Solid Fuels', 'Metallography', 'Precious Metals', 'Nanotechnology', 'Machining Operations', 'Information Theory and Signal Processing', 'Computer Applications', 'Light Optics', 'Optical Devices and Systems', 'Fuel Cells']","['Guo, Shaojun', ' ,', '', ' Dong, Shaojun', ' ,', '', ' Wang, Erkang', ' ,', '']","State Key Laboratory of Electroanalytical Chemistry, Changchun Institute of Applied Chemistry, Chinese Academy of Sciences, Changchun 130022, Jilin, China  2  Graduate School, Chinese Academy of Sciences, Beijing 100039, China",2010,ECSA
406,407,"Graphene single nanosheet  GNS  is synthesized from graphite by chemical oxidation and thermal exfoliation at 1000  C and confirmed by X ray diffraction analysis  Scanning electron and transmission electron microscope images clearly show the lateral expansion of graphite sheet and uniform dispersion of Pt nanoparticles on GNS  Fourier transform infrared and X ray photoelectron spectroscopy analyses are conducted for surface properties of GNS such as oxygenated functional groups  Cyclic voltammetric analysis shows that electrochemical active surface areas  ECSAs  for Pt GNS, commercial Pt Vulcan XC 72 carbon black and Pt incorporated onto commercial carbon black  Pt CB  prepared in the laboratory are 33 1 m2 g 1, 23 5 m 2 g 1 and 22 5 m2 g 1, respectively  Because of significant restacking of Pt GNS sheets, carbon black  CB  with different content is intercalated between Pt GNS as a spacer  The ECSAs of Pt GNS, Pt GNS CB20, Pt GNS CB30 and Pt GNS CB40 are evaluated to be 31 5 m 2 g 1, 28 6 m2 g 1, 38 8 m 2 g 1 and 30 4 m2 g 1, respectively  The cell performance highly depends on CB content and Pt GNS CB with 30 wt   of CB content shows the best cell performance of 400 mA cm 2    2012 Elsevier B V  All rights reserved   28 refs",Electrochemical properties of Pt graphene intercalated by carbon black and its application in polymer electrolyte membrane fuel cell,"['Electrolytes', 'Functional groups', 'Graphene', 'Graphite', 'Intercalation', 'Methanol', 'Nanosheets', 'Photoelectrons', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Surface properties', 'Transmission electron microscopy', 'X ray diffraction analysis', 'X ray photoelectron spectroscopy', 'Cell performance', 'Chemical oxidation', 'Electrochemical active surface areas', 'Fourier transform infrared', 'Graphite sheets', 'Lateral expansion', 'Methanol Oxidation', 'Pt nanoparticles', 'Restacking', 'Scanning electrons', 'Thermal exfoliation', 'Transmission electron microscope', 'Uniform dispersions', 'Voltammetric analysis', 'Materials Science', 'Solid State Physics', 'Organic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Physical Chemistry', 'Chemistry', 'Nanotechnology', 'Optical Devices and Systems', 'Electromagnetic Waves', 'Fuel Cells', 'Electric Batteries and Fuel Cells', 'Precious Metals']","['Cho, S H', '', '', ' Yang, H N', '', '', ' Lee, D C', '', '', ' Park, S H', '', '', ' Kim, W J', '', '']","Department of Materials Chemistry and Engineering, Konkuk University, Neungdong ro 126, Seoul 143 701, Korea, Republic of",2013,ECSA
407,408,"Graphene supported PtPd alloy nanocubes  PtPd RGO  were synthesized via a facile and versatile one pot hydrothermal synthetic strategy, which proved to be a universal technique for preparing other graphene supported alloy nanocrystals  In acidic electrolyte, the PtPd RGO composites exhibited much enhanced electrocatalytic activity toward methanol oxidation compared to the unsupported PtPd alloy nanocubes with a similar size and shape, and the commercial Pt C catalyst  More interestingly, we found that CO stripping is an efficient method to remove the surfactants wrapped on the particle surface and thus enhance the electrocatalytic performance of the Pt based nanocrystals  After CO stripping treatment, the PtPd RGO composites exhibited a much more negative onset potential of methanol oxidation than those of the unsupported PtPd alloy nanocubes and the commercial Pt C catalyst  Moreover, the treated PtPd RGO displayed a mass specific methanol oxidation activity of 198 mA mg Metal at 0 62 V  vs Ag AgCl , nearly 3 14 times higher than those of the unsupported PtPd alloy nanocubes  63 mA mgMetal  and the commercial Pt C catalyst  64 mA mgMetal   On the other hand, the PtPd RGO exhibited much higher stability during the methanol electrooxidation with almost no loss of the electrochemical active surface area  ECSA  and activity after 1000 electrochemical cycles  On the contrary, the unsupported PtPd nanocubes and the commercial Pt C catalyst lost 8 5  and 25 7  of their initial ECSA, and 6 2  and 20 6  of the initial peak current after 1000 cycles of methanol oxidation reaction  The excellent stability of the PtPd RGO can also be reflected from the fact that the morphology, size, and dispersity of the PtPd nanocubes exhibited no significant change after 1000 potential cycles    2013 American Chemical Society   73 refs",Nano PtPd cubes on graphene exhibit enhanced activity and durability in methanol electrooxidation after CO stripping cleaning,"['Catalysts', 'Electrooxidation', 'Graphene', 'Methanol', 'Nanocrystals', 'Oxidation', 'Platinum alloys', 'Acidic electrolytes', 'Ag/AgCl', 'Alloy nanocrystals', 'CO stripping', 'Dispersity', 'Electrocatalytic activity', 'Electrocatalytic performance', 'Electrochemical active surface areas', 'Electrochemical cycle', 'Methanol electrooxidation', 'Methanol Oxidation', 'Methanol oxidation reactions', 'Nanocubes', 'One pot', 'Onset potential', 'Particle surface', 'Peak currents', 'Potential cycles', 'Pt-Pd alloys', 'Pt/C catalysts', 'Size and shape', 'Synthetic strategies', 'Precious Metals', 'Nanotechnology', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Organic Compounds']","['Lu, Yizhong', ' ,', '', ' Jiang, Yuanyuan', ' ,', '', ' Wu, Haibin', '', '', 'Chen, Wei']","State Key Laboratory of Electroanalytical Chemistry, Changchun Institute of Applied Chemistry, Chinese Academy of Sciences, Changchun 130022, Jilin, China  2  Graduate School, Chinese Academy of Sciences, Beijing 100039, China",2013,ECSA
408,409,"Graphitic carbon nitride materials  gCNM  are investigated for developing highly durable catalyst supports for polymer electrolyte fuel cells  PEFCs   The gCNMs are more electrochemically stable compared to conventional carbon black  Vulcan XC 72  following accelerated corrosion testing  After 2000 scans, the gCNM shows a 133  increase in double layer capacitance compared to 166  for Vulcan  Despite the low initial electrochemical surface area  ECSA , Pt gCNM electrocatalyst exhibits improved durability over Pt Vulcan, with 20 9  ECSA loss versus 41 0  for Pt Vulcan after 1000 scans  Superior methanol oxidation activity is observed for Pt gCNM on the basis of the catalyst ECSA    The Electrochemical Society   73 refs",Development of graphitic carbon nitride materials as catalyst supports for polymer electrolyte fuel cells,"['Carbon', 'Carbon nitride', 'Catalyst supports', 'Electrocatalysts', 'Electrochemical electrodes', 'Proton exchange membrane fuel cells (PEMFC)', 'Accelerated corrosion testing', 'Double-layer capacitance', 'Electrochemical surface area', 'Methanol Oxidation', 'Nitride materials', 'Polymer electrolyte fuel cells', 'Vulcan XC72', 'Fuel Cells', 'Chemical Plants and Equipment', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Inorganic Compounds', 'Organic Polymers']","['Mansor, N', '', '', ' Jorge, A B', '', '', ' Cor , F', '', '', ' Gibbs, C', '', '', ' Jervis, R', '', '', ' McMillan, P F', '', '', ' Wang, X', '', '', ' Brett, D J L', '', '']","Electrochemical Innovation Lab , University College London, London WC1E 7JE, United Kingdom  2  Department of Chemistry, University College London, London WC1H 0AJ, United Kingdom",2013,ECSA
409,410,Greenplum is using Hadoop and several other open source tools in interesting ways as part of a big data architecture with their Greenplum Database  a scale out MPP SQL database   Copyright is held by author owner s,Unified analytics platform for big data,"['Computer applications', 'Database systems', 'Electromagnetic compatibility', 'Data science', 'Geo-spatial', 'Greenplum', 'Hadoop', 'MADlib', 'Mahout', 'MPP', 'PostGIS', 'R', 'Solr', 'Electric Transmission and Distribution', 'Database Systems', 'Computer Applications']","['Miner, Donald']","Greenplum, United States",2012,ECSA
410,411,Greenplum is using Hadoop and several other open source tools in interesting ways as part of a big data architecture with their Greenplum Database  a scale out MPP SQL database   Copyright is held by author owner s,Unified analytics platform for big data,"['Computer applications', 'Database systems', 'Electromagnetic compatibility', 'Data science', 'Geo-spatial', 'Greenplum', 'Hadoop', 'MADlib', 'Mahout', 'MPP', 'PostGIS', 'R', 'Solr', 'Electric Transmission and Distribution', 'Database Systems', 'Computer Applications']","['Miner, Donald']","Greenplum, United States",2012,WICSA
411,412,"Growing advances in hardware technologies are enabling significant improvements in application performance by the deployment of components to dedicated executable units  This is particularly valid for Cyber Physical Systems in which the applications are partitioned in HW and SW execution units  The growing complexity of such systems, and increasing requirements, both project  and product related, makes the partitioning decision process complex  Although different approaches to this decision process have been proposed during recent decades, they lack the ability to provide relevant decisions based on a larger number of requirements and project business constraints  A sound approach to this problem is taking into account all relevant requirements and constraints and their relations to the properties of the components deployed either as HW or SW units  A typical approach for managing a large number of criteria is a multicriteria decision analysis  This, in its turn, requires uniform definitions of component properties and their realization in respect to their HW SW deployment  The aim of this paper is twofold  a  to provide an architectural metamodel of component based applications with specifications of their properties with respect to their partitioning, and b  to categorize component properties in relation to HW SW deployment  The metamodel enables the transition of system requirements to system and component properties  The categorization provides support for architectural decisions  It is demonstrated through a property guideline for the partitioning of the System Automation and Control domain  The guideline is based on interviews with practitioners and researchers, the experts in this domain    2014 IEEE   54 refs",Architectural decisions for HW SW partitioning based on multiple extra functional properties,"['Decision theory', 'Embedded systems', 'Component based applications', 'Component based systems', 'Cyber physical systems (CPSs)', 'Extra-functional properties', 'HW/SW Codesign', 'HW/SW deployment', 'Multi-criteria decision analysis', 'mutlicriteria descision analysis', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Mathematics', 'Systems Science']","['Sapienza, Gaetana', '', '', 'Crnkovic, Ivica', '', '', 'Potena, Pasqualina']","ABB Corporate Research, M lardalen University, V steras, Sweden  2  M lardalen University, V steras, Sweden  3  Universita  Degli Studi di Bergamo, Dalmine, Italy",2014,WICSA
412,413,"Handheld mobile technology can help disaster relief workers and soldiers in the field with tasks such as speech and image recognition, natural language processing, decision making, and mission planning  However, these applications are computation intensive, take a heavy toll on battery power, and often rely on good connectivity to networks, limiting their practical usefulness in a crisis  This paper presents a reference architecture for mobile devices that overcomes these limitations by exploiting cloudlets   VM based code offload elements that are in single hop proximity to mobile devices    2012 IEEE   40 refs",A reference architecture for mobile code offload in hostile environments,"['Cloud computing', 'Disaster prevention', 'Image recognition', 'Mobile devices', 'Natural language processing systems', 'Software architecture', 'code offload', 'Mobile architecture', 'Mobile systems', 'Reference architecture', 'Virtual machines', 'Telecommunication  Radar, Radio and Television', 'Computer Systems and Equipment', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Accidents and Accident Prevention']","['Simanta, Soumya', '', '', 'Lewis, Grace A', '', '', ' Morris, Ed', '', '', 'Ha, Kiryong', '', '', 'Satyanarayanan, Mahadev']","Carnegie Mellon University, Software Engineering Institute, Pittsburgh, PA, United States  2  Carnegie Mellon University, School of Computer Science, Pittsburgh, PA, United States",2012,ECSA
413,414,"Handheld mobile technology can help disaster relief workers and soldiers in the field with tasks such as speech and image recognition, natural language processing, decision making, and mission planning  However, these applications are computation intensive, take a heavy toll on battery power, and often rely on good connectivity to networks, limiting their practical usefulness in a crisis  This paper presents a reference architecture for mobile devices that overcomes these limitations by exploiting cloudlets   VM based code offload elements that are in single hop proximity to mobile devices    2012 IEEE   40 refs",A reference architecture for mobile code offload in hostile environments,"['Cloud computing', 'Disaster prevention', 'Image recognition', 'Mobile devices', 'Natural language processing systems', 'Software architecture', 'code offload', 'Mobile architecture', 'Mobile systems', 'Reference architecture', 'Virtual machines', 'Telecommunication  Radar, Radio and Television', 'Computer Systems and Equipment', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Accidents and Accident Prevention']","['Simanta, Soumya', '', '', 'Lewis, Grace A', '', '', ' Morris, Ed', '', '', 'Ha, Kiryong', '', '', 'Satyanarayanan, Mahadev']","Carnegie Mellon University, Software Engineering Institute, Pittsburgh, PA, United States  2  Carnegie Mellon University, School of Computer Science, Pittsburgh, PA, United States",2012,WICSA
414,415,"Handling context aware dynamically adaptable architectures contributes to the design of self configuring software systems  Dealing with such a problem for communicating systems is even more challenging since adaptation should address simultaneously the different communication levels  In this paper, we address this problem by providing a modelbased, rule oriented approach that supports the adaptation process based on a run time transformation of the system architecture  Such an architecture may represent the different possible service compositions and the associated architectural configurations  Adaptation policies are defined by means of SWRL rules  Such rules allow associating the suitable adaptation transformations to the context change    2009 IEEE   6 refs",A model based multi level architectural reconfiguration applied to adaptability management in context aware cooperative communication support systems,"['Architecture', 'Computer software', 'Adaptable architecture', 'Adaptation process', 'Communication levels', 'Context-Aware', 'Cooperative communication', 'Model-based', 'Multi-level', 'Runtimes', 'Self-configuring', 'Service compositions', 'System architectures', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Rodriguez, Ismael Bouassida', ' ,', '', ' Drira, Khalil', ' ,', '', ' Chassot, Christophe', ' ,', '', ' Jmaiel, Mohamed']","CNRS, LAAS, 7 avenue du colonel Roche, F 31077 Toulouse, France  2  UPS, INSA, INP, ISAE, LAAS, Universit  de Toulouse, F 31077 Toulouse, France  3  Enis, Redcad, Route de la Soukra, Sfax, Tunisia",2009,ECSA
415,416,"Handling context aware dynamically adaptable architectures contributes to the design of self configuring software systems  Dealing with such a problem for communicating systems is even more challenging since adaptation should address simultaneously the different communication levels  In this paper, we address this problem by providing a modelbased, rule oriented approach that supports the adaptation process based on a run time transformation of the system architecture  Such an architecture may represent the different possible service compositions and the associated architectural configurations  Adaptation policies are defined by means of SWRL rules  Such rules allow associating the suitable adaptation transformations to the context change    2009 IEEE   6 refs",A model based multi level architectural reconfiguration applied to adaptability management in context aware cooperative communication support systems,"['Architecture', 'Computer software', 'Adaptable architecture', 'Adaptation process', 'Communication levels', 'Context-Aware', 'Cooperative communication', 'Model-based', 'Multi-level', 'Runtimes', 'Self-configuring', 'Service compositions', 'System architectures', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Rodriguez, Ismael Bouassida', ' ,', '', ' Drira, Khalil', ' ,', '', ' Chassot, Christophe', ' ,', '', ' Jmaiel, Mohamed']","CNRS, LAAS, 7 avenue du colonel Roche, F 31077 Toulouse, France  2  UPS, INSA, INP, ISAE, LAAS, Universit  de Toulouse, F 31077 Toulouse, France  3  Enis, Redcad, Route de la Soukra, Sfax, Tunisia",2009,WICSA
416,417,"Handling context aware dynamically adaptable architectures contributes to the design of self configuring software systems  Dealing with such a problem for communicating systems is even more challenging since adaptation should address simultaneously the different communication levels  In this paper, we address this problem by providing a modelbased, rule oriented approach that supports the adaptation process based on a run time transformation of the system architecture  Such an architecture may represent the different possible service compositions and the associated architectural configurations  Adaptation policies are defined by means of SWRL rules  Such rules allow associating the suitable adaptation transformations to the context change    2009 IEEE   6 refs",A model based multi level architectural reconfiguration applied to adaptability management in context aware cooperative communication support systems,"['Architecture', 'Computer software', 'Adaptable architecture', 'Adaptation process', 'Communication levels', 'Context-Aware', 'Cooperative communication', 'Model-based', 'Multi-level', 'Runtimes', 'Self-configuring', 'Service compositions', 'System architectures', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Rodriguez, Ismael Bouassida', ' ,', '', ' Drira, Khalil', ' ,', '', ' Chassot, Christophe', ' ,', '', ' Jmaiel, Mohamed']","CNRS, LAAS, 7 avenue du colonel Roche, F 31077 Toulouse, France  2  UPS, INSA, INP, ISAE, LAAS, Universit  de Toulouse, F 31077 Toulouse, France  3  Enis, Redcad, Route de la Soukra, Sfax, Tunisia",2011,WICSA
417,418,"Has Software Architecture based testing any characteristic which makes it unique with respect to other testing techniques  This recurrent question will be analyzed in this short paper, providing some initial solution, while leaving ample space for discussion    2007 IEEE",What makes software architecture based testing distinguishable,"['Computer science', 'Information technology', 'Information use', 'Problem solving', 'Software testing', 'Software Architecture-based testing', 'Testing techniques', 'Computer Circuits and Logic Elements', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Information Science', 'Information Retrieval and Use']","['Muccini, Henry']","Dipartimento di Informatica, University of L Aquila, Via Vetoio, 1, L Aquila, Italy",2007,WICSA
418,419,"Has software architecture based testing any characteristic which makes it unique with respect to other testing techniques  This recurrent question will be analyzed in this short paper, providing some initial solution, while leaving ample space for discussion   0 refs",What makes software architecture based testing distinguishable,"['program testing', 'software architecture', 'software architecture-based testing', 'specification-based testing', 'Software engineering techniques', 'Diagnostic, testing, debugging and evaluating systems']","['Muccini, H', '', '']","Dipt  di Inf , Univ  of L Aquila, L Aquila, Italy",2007,WICSA
419,420,"Here we have derived a simple expression to relate faradaic pseudo capacitance, CF, determined by electrochemical impedance spectroscopy to the electrochemically active surface area  ECSA  of Pt electrocatalysts  To test this expression, two commercially available Pt C catalysts were subjected to accelerated degradation testing protocol  ADTP  during which catalyst layer health was assessed using cyclic voltammetry  CV  and EIS to monitor the degradation process  CF was determined by acquiring the EIS response at two different DC bias potentials  the first at a bias potential where the faradaic process was present, and the second at a bias potential where only double layer capacitance was present which enables accurate tracking of changes in CF throughout the ADTP  A near identical decay profile for both ECSA  determined by CV  and CF  determined by EIS  was observed, providing an excellent fit to the derived expression  Using the EIS model, similar potential dependant proportionality constants were determined for hydrogen adsorption desorption on each catalyst indicating that they are universally applicable across Pt catalysts  These constants can therefore be used to effectively determine ECSA values without performing CV measurements    2013 Elsevier Ltd   36 refs",Determining electrochemically active surface area in PEM fuel cell electrodes with electrochemical impedance spectroscopy and its application to catalyst durability,"['Capacitance', 'Cyclic voltammetry', 'Degradation', 'Electrocatalysts', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Spectroscopy', 'Accelerated degradation testing', 'Degradation mechanism', 'Electrochemically active surface areas', 'PEM fuel cell', 'Pseudo-capacitance', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Electrochemistry', 'Chemistry', 'Fuel Cells', 'Electricity  Basic Concepts and Phenomena', 'Precious Metals']","['Reid, O Rian', '', '', 'Saleh, Farhana S', '', '', ' Easton, E', 'Bradley']","Faculty of Science, University of Ontario Institute of Technology, 2000 Simcoe Street North, Oshawa, ON L1H 7K4, Canada",2013,ECSA
420,421,"Herein, we describe the mechanism of stabilization of new core shell electrocatalysts illustrated by development of Pd and Pd9Au1 alloy core Pt monolayer shell electrocatalysts with high activity and the very high stability that can facilitate their use in automotive fuel cells  We present an understanding of their properties that firmly establishes the concept of Pt monolayer catalysts that can address the future challenges of limited Pt resources  The concept is applicable for similar applications of other noble metals, and is demonstrated by our findings from accelerated fuel cell tests of the electrocatalyst stability during 100000 and 200000 potential cycles with PtML Pd C and PtML Pd9Au1 C, respectively  The data illustrate that the Pd core protects the Pt shell from dissolution  After 100000 or 200000 potential cycles, the electrocatalysts showed a small loss of ECSA and of catalytic activity, and a negligible loss of Pt  Under the same conditions, Pt C catalysts suffer very large losses   26 refs",Core protected platinum monolayer shell high stability electrocatalysts for fuel cell cathodes,"['catalysis', 'electrochemical electrodes', 'fuel cells', 'gold alloys', 'monolayers', 'palladium', 'palladium alloys', 'platinum', 'fuel-cell cathodes', 'core-protected platinum monolayer shell', 'high-stability electrocatalysts', 'core-shell electrocatalysts', 'automotive fuel cells', 'monolayer catalysts', 'dissolution', 'Pd-Pd9Au-Pt', 'Heterogeneous catalysis at surfaces and other surface reactions', 'Monolayers and Langmuir Blodgett films', 'Fuel cells', 'Electrochemistry and electrophoresis', 'Fuel cells']","['Sasaki, K', '', '', ' Naohara, H', '', '', ' Yun Cai', '', '', 'Yong Man Choi', '', '', 'Ping Liu', '', '', 'Vukmirovic, M B', '', '', ' Wang, J X', '', '', ' Adzic, R R', '', '']","Chem  Dept , Brookhaven Nat  Lab , Upton, NY, United States  2  Fuel Cell Syst  Dev  Div , Toyota Motor Corp , Susono, Japan",2010,ECSA
421,422,"High performance and electrochemically stable Pt graphene catalysts assisted with polydiallyldimethylammonium  PDDA  have been synthesized for PEM fuel cells  The preparation procedure and properties of the catalysts are investigated in detail  With the introduction of PDDA molecules, Pt nanoparticles can be well dispersed on graphene support, resulting in improved electrochemical surface area and enhanced electrocatalytic activity  The corresponding electrochemical surface areas  ECSA  of catalyst layers calculated from the hydrogen desorption peak on cyclic voltammogram curves are 78 3, 72 5 and 73 6 cm2 g 1 for catalyst layers with Pt graphene, Pt PDDA graphene, and Pt graphene PDDA catalysts, respectively  Both PDDA modified Pt nanoparticles and PDDA modified graphene supports also exhibit high durability toward electrochemical oxidation cycles compared with the conventional produced Pt graphene catalyst at the same conditions  After 3000 cycles, only 23 52  of the initial ECSA remains for Pt graphene electrocatalyst whereas 43 04  and 37 7  of the initial ECSA for the Pt graphene PDDA and Pt PDDA graphene catalysts remain, respectively    2013 Elsevier Ltd   35 refs",Durable platinum graphene catalysts assisted with polydiallyldimethylammonium for proton exchange membrane fuel cells,"['Durability', 'Electrocatalysts', 'Electrochemical oxidation', 'Electrolytic reduction', 'Graphene', 'Nanoparticles', 'Proton exchange membrane fuel cells (PEMFC)', 'Cyclic voltammograms', 'Electrocatalytic activity', 'Electrochemical surface area', 'Hydrogen desorption', 'Oxygen reduction catalysts', 'Polydiallyldimethylammonium', 'Preparation procedures', 'Pt nanoparticles', 'Solid State Physics', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Electric and Magnetic Materials', 'Fuel Cells', 'Precious Metals', 'Strength of Building Materials  Mechanical Properties']","['Lei, M', '', ',', '', ' Liang, C', '', '', ' Wang, Y J', '', '', ' Huang, K', '', '', ' Ye, C X', '', '', ' Liu, G', '', '', ' Wang, W J', '', '', ' Jin, S F', '', '', ' Zhang, R', '', ',', '', ' Fan, D Y', '', '', ' Yang, H J', '', '', ' Wang, Y G', '', '']","State Key Laboratory of Information Photonics and Optical Communications, Beijing University of Posts and Telecommunications, Beijing 100876, China  2  School of Science, Beijing University of Posts and Telecommunications, Beijing 100876, China  3  Beijing National Laboratory for Condensed Matter Physics, Institute of Physics, Chinese Academy of Sciences, Beijing 100190, China  4  School of Electronic Engineering, Beijing University of Posts and Telecommunications, Beijing 100876, China",2013,ECSA
422,423,"Hybrid typed Pt electrocatalyst using Pt carbon molecular sieve  Pt CMS  synthesized by zeolite template method and commercial Pt carbon black  Pt CB  is prepared with different ratios of Pt CB to Pt CMS  Their physical and electrochemical properties are characterized using X ray diffraction  XRD , transmission electron micrograph  TEM  and Brunauer Emmet Teller method  BET   Pt nanoparticles of 2 4 nm are synthesized and successfully dispersed onto CMS by polyol method and comparable with that of commercial Pt CB  Cyclic voltammetric analysis is conducted to estimate electrochemical active surface area  ECSA   The cell test is conducted for the various membrane electrolyte assemblies  MEAs  fabricated with different catalysts such as Pt CB, Pt CMS, various hybrid typed Pt CBx Pt CMS100 x named as Pt CBx CMS100 x  The cell performance is fairly consistent with ECSA and the MEA fabricated with equal mass fraction of Pt CB and Pt CMS  Pt CB50 CMS50  shows the best cell performance, indicating a significant dependence on pore structure of carbon support    2013 Elsevier B V  All rights reserved   37 refs",Electrochemical properties of hybrid typed electrocatalyst using Pt carbon molecular sieve synthesized by zeolite template and Pt carbon black,"['Carbon black', 'Cells', 'Cytology', 'Electrocatalysts', 'Electrochemical properties', 'Molecular sieves', 'Synthesis (chemical)', 'X ray diffraction', 'Brunauer-emmet-teller methods', 'Carbon molecular sieve', 'Carbon support', 'Cell performance', 'Cell test', 'Cyclic voltammetric', 'Electrochemical active surface areas', 'Mass fraction', 'Membrane electrolyte assemblies', 'Polyol methods', 'Pt electrocatalysts', 'Pt nanoparticles', 'Transmission electron micrograph', 'Zeolite template', 'Zeolite templating', 'Biological Materials and Tissue Engineering', 'Precious Metals', 'Electrochemistry', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Atomic and Molecular Physics']","['Yang, H N', '', '', ' Park, S H', '', '', ' Lee, D C', '', '', ' Yi, S C', '', '', ' Kim, W J', '', '']","Department of Materials Chemistry and Engineering, College of Engineering, Konkuk University, 120 Neungdong ro, Gwang Jin Gu, Seoul 143 701, Korea, Republic of  2  Department of Chemical Engineering, Hanyang University, Seoul 133 791, Korea, Republic of",2013,ECSA
423,424,"I report on the activities and research challenges, their rationales, and the work in progress related to the ongoing EPSRC UoB Bridging the Gap Fellowship project on Green Cloud Architectures  The initiative is aimed at a framework for dynamic self optimization of cloud architectures taking into account the tradeoffs involved in maintaining acceptable dependability requirements  Quality of Service  QoS  with minimal power at runtime  I argue that linkage between dependability requirements and power should be explicit  I motivate the need for new meters for Power per QoS value  and sacrifices  for cloud architectures  I motivate the need for an economics inspired approach for dynamic self optimization of cloud architectures  I discuss the role of Data Driven Simulation Systems in implementing such framework    2010 Springer Verlag Berlin Heidelberg   4 refs",A framework for dynamic self optimization of power and dependability requirements in green cloud architectures,"['Optimization', 'Quality of service', 'Data-driven simulation', 'Minimal power', 'Research challenges', 'Runtimes', 'Self-optimization', 'Work in progress', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Software, Data Handling and Applications', 'Optimization Techniques']","['Bahsoon, Rami']","School of Computer Science, University of Birmingham Edgbaston, Birmingham B15 2TT, United Kingdom",2010,ECSA
424,425,"Identifying and removing the causes of poor performance in software systems are complex problems due to a variety of factors to take into account  Nowadays these problems are usually tackled after the software deployment only with human based means, which frequently boil down to developer skills and previous experiences  Performance antipatterns can be used to cope with these problems since they capture typical design patterns that are known leading to performance problems, as well as refactoring actions that can be taken to remove them  The goal of this paper is to introduce an approach that allows the refactoring of architectural models, based on antipatterns, that aims at providing performance improvement  To this end, we use a Role Based Modeling Language to represent   i  antipattern problems as Source Role Models  SRMs , and  ii  antipattern solutions as Target Role Models  TRMs   Hence, SRM TRM pairs represent new instruments in the hands of developers to achieve architectural model refactorings aimed at removing sources of performance problems  Model refactoring for antipattern removal can be in fact obtained by replacing an SRM with the corresponding TRM  This approach has been applied to a case study in the e commerce domain, whose experimental results demonstrate its effectiveness  Copyright   2012 ACM   30 refs",Antipattern based model refactoring for software performance improvement,"['Anti-patterns', 'Architectural models', 'Complex problems', 'E-commerce domains', 'New instrument', 'Performance improvements', 'Performance problems', 'Poor performance', 'Refactorings', 'Role model', 'Role-based modeling', 'Roles', 'Software deployment', 'Software performance', 'Software systems', 'Typical design', nan]","['Arcelli, Davide', '', '', 'Cortellessa, Vittorio', '', '', 'Trubiani, Catia']","Universit  degli Studi dell Aquila, 67100 L Aquila, Italy",2012,QoSA
425,426,"In Software Product Lines variability refers to the definition and utilization of differences between several products  Feature Diagrams  FD  are a well known approach to express variability, and can be used to automate the derivation process  Nevertheless, this may be highly complex due to possible interactions between selected features and the artifacts realizing them  Deriving concrete products typically involves the composition of such inter dependent software artifacts  This paper presents a feature based composition approach to automatically derive a product architecture from a given feature configuration  The proposed approach relies on the combination of Model Driven Engineering  MDE  and Aspect Oriented Modeling  AOM  techniques  We introduce a metamodel to reify each feature as a high level aspect model  Product derivation is achieved by weaving the set of aspect models corresponding to a particular feature configuration  The weaving strategy is derived from an in depth cross analysis of both the feature interactions and the aspect model dependencies    2010 Springer Verlag Berlin Heidelberg   22 refs",Feature based composition of software architectures,"['Concrete products', 'Software design', 'Weaving', 'Aspect model', 'Aspect-Oriented Modeling', 'Feature configuration', 'Feature diagrams', 'Feature interactions', 'Feature-based', 'Given features', 'Meta model', 'Model-driven engineering', 'Product architecture', 'Product derivation', 'Software artifacts', 'Software Product Line', 'Concrete', 'Computer Programming', 'Textile Products and Processing']","['Parra, Carlos', '', '', 'Cleve, Anthony', '', '', 'Blanc, Xavier', '', '', 'Duchien, Laurence']","INRIA Lille Nord Europe, LIFL CNRS UMR 8022, Universit  des Sciences et Technologies de Lille, France",2010,ECSA
426,427,"In almost any other field than software development, the World Wide Web, or simply the Web has revolutionized collaboration by providing a platform for cooperative applications and services  In contrast, so far revision control, also referred to as version management, has been the key technology for enabling collaborative software development  However, even today it is feasible to build a cooperative development environment that runs in a cloud, following the spirit of Google Docs, where developers can cooperate in real time  In this paper, we take a step beyond from the design of the technical artifact that allows collaborative coding, and consider the consequences of such an approach to software development in a more general sense, in particular from the perspective of version management  The goal is to integrate collaborative development with traditional facilities commonly associated with software engineering  This in turn will lead to a development approach where new opportunities complement tools that are known to work and provide a lot of added value in software development Copyright 2012 ACM   15 refs","Elements for a cloud based development environment  Online collaboration, revision control, and continuous integration","['Groupware', 'Software design', 'World Wide Web', 'Added values', 'Collaboration', 'Collaborative coding', 'Collaborative development', 'Collaborative software development', 'Cooperative applications', 'Cooperative development environment', 'Development approach', 'Development environment', 'Key technologies', 'Online collaboration', 'Real time', 'Revision control', 'Technical artifacts', 'Version management', 'Computer Software, Data Handling and Applications']","['Mikkonen, Tommi', '', '', 'Nieminen, Antti']","Tampere University of Technology, Korkeakoulunkatu 1, FI 33720 Tampere, Finland",2012,ECSA
427,428,"In almost any other field than software development, the World Wide Web, or simply the Web has revolutionized collaboration by providing a platform for cooperative applications and services  In contrast, so far revision control, also referred to as version management, has been the key technology for enabling collaborative software development  However, even today it is feasible to build a cooperative development environment that runs in a cloud, following the spirit of Google Docs, where developers can cooperate in real time  In this paper, we take a step beyond from the design of the technical artifact that allows collaborative coding, and consider the consequences of such an approach to software development in a more general sense, in particular from the perspective of version management  The goal is to integrate collaborative development with traditional facilities commonly associated with software engineering  This in turn will lead to a development approach where new opportunities complement tools that are known to work and provide a lot of added value in software development Copyright 2012 ACM   15 refs","Elements for a cloud based development environment  Online collaboration, revision control, and continuous integration","['Groupware', 'Software design', 'World Wide Web', 'Added values', 'Collaboration', 'Collaborative coding', 'Collaborative development', 'Collaborative software development', 'Cooperative applications', 'Cooperative development environment', 'Development approach', 'Development environment', 'Key technologies', 'Online collaboration', 'Real time', 'Revision control', 'Technical artifacts', 'Version management', 'Computer Software, Data Handling and Applications']","['Mikkonen, Tommi', '', '', 'Nieminen, Antti']","Tampere University of Technology, Korkeakoulunkatu 1, FI 33720 Tampere, Finland",2012,WICSA
428,429,"In automotive industry, more and more complex electronics and software systems are being developed to enable the innovation and to decrease costs  Besides the complex multimedia, comfort, and safety systems of conventional vehicles, automotive companies are required to develop more and more complex engine, aftertreatment, and energy management systems for their  hybrid  electric vehicles to reduce fuel consumption and harmful emissions  MATLAB Simulink is one of the most popular graphical modeling languages and a simulation tool for validating and testing control software systems  Due to the increasing complexity and size of Simulink models of automotive software systems, it has become a necessity to maintain the Simulink models  In this paper, we defined metrics for assessing the modularity of Simulink models  A Java tool developed to measure the defined metrics on Simulink models interfaces with a visualization tool to facilitate the maintenance tasks of the Simulink models  The modularity metrics is furthermore validated in two phases  In the first phase, the modularity measurement is validated against the experts evaluation of a system  In the second phase, we studied the relationship between metric values and number of faults  We have observed that high coupling metric values frequently correspond to number of faults  Modularity metrics will be extended to architectural quality metrics for automotive systems  Copyright 2013 ACM   54 refs",Simulink models are also software  Modularity assessment,"['Automotive industry', 'Energy management systems', 'Architectural quality', 'Automotive companies', 'Automotive software systems', 'Control software system', 'Graphical modeling language', 'Modularity', 'Quality metrics', 'Simulink models', 'Automotive Engines and Related Equipment', 'Automobiles and Smaller Vehicles', 'Buses, Tractors and Trucks', 'Automotive Engineering, General', 'Electric Transmission and Distribution', 'Computer Software, Data Handling and Applications']","['Dajsuren, Yanja', '', '', 'Van Den Brand, Mark G J', '', '', ' Serebrenik, Alexander', '', '', 'Roubtsov, Serguei']","Eindhoven University of Technology, 5612 AZ Eindhoven, Netherlands",2013,QoSA
429,430,"In component based software engineering, software architectures govern not only software development but also software evolution  Indeed, to efficiently and accurately manage software evolution and guarantee its quality, architecture models should be at the core of the evolution process, be accurately synchronized with the runtime systems and have their changes and version information be completely tracked  As architecture models are often captured by ADLs  Architecture Description Languages , an ADL supporting architecture centric evolution is required  In this paper, we study how architecture centric evolution can be supported by the Dedal ADL  We thus propose a dedicated CDL  Change Description Language  which models architectural changes as first class entities and describes them from a semantic viewpoint    2012 IEEE   25 refs",Dedal CDL  Modeling first class architectural changes in Dedal,"['Semantics', 'Software architecture', 'Architectural changes', 'Architecture description languages', 'Architecture models', 'Change description', 'Component-based software engineering', 'Description languages', 'Evolution process', 'Runtime systems', 'Software Evolution', 'Version information', 'Computer Programming', 'Information Dissemination']","['Zhang, Huaxi', '', '', 'Urtado, Christelle', '', '', 'Vauttier, Sylvain', '', '', 'Zhang, Lei', '', '', 'Huchard, Marianne', '', '', 'Coulette, Bernard']","Dept  Math  Info , Universit  Toulouse 2, Toulouse, France  2  LGI2P Ecole des Mines d Al s, N mes, France  3  Research Center of Automation, Northeastern University, Shenyang, China  4  LIRMM, UMR 5506, Univ  Montpellier 2, Montpellier, France",2012,ECSA
430,431,"In component based software engineering, software architectures govern not only software development but also software evolution  Indeed, to efficiently and accurately manage software evolution and guarantee its quality, architecture models should be at the core of the evolution process, be accurately synchronized with the runtime systems and have their changes and version information be completely tracked  As architecture models are often captured by ADLs  Architecture Description Languages , an ADL supporting architecture centric evolution is required  In this paper, we study how architecture centric evolution can be supported by the Dedal ADL  We thus propose a dedicated CDL  Change Description Language  which models architectural changes as first class entities and describes them from a semantic viewpoint    2012 IEEE   25 refs",Dedal CDL  Modeling first class architectural changes in Dedal,"['Semantics', 'Software architecture', 'Architectural changes', 'Architecture description languages', 'Architecture models', 'Change description', 'Component-based software engineering', 'Description languages', 'Evolution process', 'Runtime systems', 'Software Evolution', 'Version information', 'Computer Programming', 'Information Dissemination']","['Zhang, Huaxi', '', '', 'Urtado, Christelle', '', '', 'Vauttier, Sylvain', '', '', 'Zhang, Lei', '', '', 'Huchard, Marianne', '', '', 'Coulette, Bernard']","Dept  Math  Info , Universit  Toulouse 2, Toulouse, France  2  LGI2P Ecole des Mines d Al s, N mes, France  3  Research Center of Automation, Northeastern University, Shenyang, China  4  LIRMM, UMR 5506, Univ  Montpellier 2, Montpellier, France",2012,WICSA
431,432,"In contrast to software architecture models, architectural decisions are often not explicitly documented, and therefore eventually lost  This contributes to major problems such as high cost system evolution, stakeholders mis communication, and limited reusability of core system assets  An approach is outlined that systematically and semi automatically documents architectural decisions and allows them to be effectively shared by the stakeholders  A first attempt is presented that partially implements the approach by binding architectural decisions, models and the system implementation  The approach is demonstrated with an example demonstrating its usefulness with regards to some industrial use cases   33 refs",Tool support for architectural decisions,"['software architecture', 'software tools', 'tool support', 'software reusability', 'semiautomatic document software architectural decision', 'Software engineering techniques', 'Programming support']","['Jansen, A', '', '', ' van der Ven, J', '', '', ' Avgeriou, P', '', '', ' Hammer, D K', '', '']","Dept  of Math    Comput  Sci , Univ  of Groningen, Groningen, Netherlands",2007,WICSA
432,433,"In contrast to software architecture models, architectural decisions are often not explicitly documented, and therefore eventually lost  This contributes to major problems such as high cost system evolution, stakeholders miscommunication, and limited reusability of core system assets  An approach is outlined that systematically and semiautomatically documents architectural decisions and allows them to be effectively shared by the stakeholders  A first attempt is presented that partially implements the approach by binding architectural decisions, models and the system implementation  The approach is demonstrated with an example demonstrating its usefulness with regards to some industrial use cases    2007 IEEE   33 refs",Tool support for architectural decisions,"['Automation', 'Decision theory', 'Information use', 'Mathematical models', 'Problem solving', 'Architectural decisions', 'Software architecture models', 'Stakeholders miscommunication', 'Systems Science', 'Mathematics', 'Information Retrieval and Use', 'Automatic Control Principles and Applications', 'Computer Applications', 'Artificial Intelligence', 'Computer Programming']","['Jansen, Anton', '', '', 'Van Der Ven, Jan', '', '', 'Avgeriou, Paris', '', '', 'Hammer, Dieter K', '', '']","University of Groningen, Department of Mathematics and Computing Science, PO Box 800, 9700AV Groningen, Netherlands",2007,WICSA
433,434,"In distributed environments, client server, publish subscribe, and peer to peer architecture styles are largely employed  However, style selection often remains implicit, relying on the designer s know how regarding requirements  In this paper, we propose a framework to explicitly specify distributed architectural styles, as independent models of the application functionalities  To justify feasibility and further benefits of our approach, we formally define three classical distributed architectural styles in a process calculus  Our proposal then opens up the way to a systematic composition of functional models with architectural style models as an endogenous transformation  Comparative analysis of extra functional properties could then be proposed at the early design stages to guide the architect in stylistic choices   23 refs",Style based model transformation for early extra functional analysis of distributed systems,"['distributed processing', 'process algebra', 'software architecture', 'style-based model transformation', 'functional analysis', 'distributed system', 'client-server', 'publish-subscribe', 'peer-to-peer architecture', 'style selection', 'distributed architectural style', 'process calculus', 'software architecture', 'Distributed systems software', 'Software engineering techniques', 'Formal logic']","['Mallet, J', '', '', ' Rouvrais, S', '', '']","Inst  TELECOM, TELECOM Bretagne, Brest, France",2008,QoSA
434,435,"In distributed environments, client server, publish subscribe, and peer to peer architecture styles are largely employed  However, style selection often remains implicit, relying on the designer s know how regarding requirements  In this paper, we propose a framework to explicitly specify distributed architectural styles, as independent models of the application functionalities  To justify feasibility and further benefits of our approach, we formally define three classical distributed architectural styles in a process calculus  Our proposal then opens up the way to a systematic composition of functional models with architectural style models as an endogenous transformation  Comparative analysis of extrafunctional properties could then be proposed at the early design stages to guide the architect in stylistic choices    2008 Springer Berlin Heidelberg   23 refs",Style based model transformation for early extrafunctional analysis of distributed systems,"['Computer software selection and evaluation', 'Distributed computer systems', 'Technology transfer', 'Architectural style', 'Client server', 'Comparative analysis', 'Distributed environments', 'Distributed systems', 'Early design stages', 'Functional model', 'Independent model', 'Know-how', 'Model transformation', 'Peer-to-peer architectures', 'Process calculi', 'Publish-subscribe', 'Management', 'Industrial Economics', 'Impact of Technology on Society', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems']","['Mallet, Julien', '', '', 'Rouvrais, Siegfried']","Institut TELECOM, TELECOM Bretagne, Technopole Brest Iroise, CS 83818, 29238 Brest Cedex 3, France",2008,QoSA
435,436,"In domains, where great variability of requirements and products exists such as embedded system design domain, a product line  PL  approach is emerging as the most promising design paradigm  The key for the PL implementation is the use of domain analysis and domain modelling methods  We propose to represent domain variability using feature models enriched with lightweight domain ontology  We transform such models into generative component specifications using meta programming techniques  We suggest  1  to use domain analysis methods from two perspectives, software engineering and cognitive science  2  to enrich domain variability models explicitly by contextualization and repurposing  i e , by lightweight domain ontology   3  to represent the model using the enriched feature diagrams  EFDs   4  to encode EFDs using heterogeneous meta programming    2008 Springer Verlag Berlin Heidelberg   5 refs",Domain ontology based generative component design using feature diagrams and meta programming techniques,"['Digital signal processing', 'Integrated circuits', 'Light emission', 'Luminescence', 'Models', 'Ontology', 'Software engineering', 'User interfaces', 'Cognitive sciences', 'Component designs', 'Component specifications', 'Contextualization', 'Design paradigms', 'Do-mains', 'Domain analyses', 'Domain ontologies', 'Domain variabilities', 'Embedded system designs', 'Feature diagrams', 'Feature models', 'Meta programmings', 'Modelling methods', 'Product lines', 'Repurposing', 'Information Science', 'Engineering Graphics', 'Light Optics', 'Computer Applications', 'Data Processing and Image Processing', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Computer Peripheral Equipment', 'Information Theory and Signal Processing', 'Semiconductor Devices and Integrated Circuits']","['Damaevicius, Robertas', '', '', ' tuikys, Vytautas', '', '', 'Toldinas, Jevgenijus']","Kaunas University of Technology, Studentu 50, LT 51368, Kaunas, Lithuania",2008,ECSA
436,437,"In enterprise application development and other software construction projects, a critical success factor is to make sound architectural decisions  Text templates and tool support for capturing architectural decisions exist, but have failed to reach broad adoption so far  One of the inhibitors we perceived on large scale industry projects is that architectural decision capturing is regarded as a retrospective and therefore unwelcome documentation task which does not provide any benefit during the original design work  A major problem of such a retrospective approach is that the decision rationale is not available to decision makers when they identify, make, and enforce decisions  Often a large, possibly distributed, community of decision makers is involved in these three steps  In this paper, we propose a new conceptual framework for proactive decision identification, decision maker collaboration, and decision enforcement  Based on a meta model capturing reuse and collaboration aspects explicitly, our framework instantiates decision models from requirements models and re usable decision templates  These templates capture know ledge gained on other projects em ploy ing the same architectural style  As an exemplary application of these concepts to service oriented architecture shows, reusable architectural decision models can speed up the decision identification and improve the quality of the decision making  Reusable architectural decision models can also simplify the exchange of architecture design rationale within and between project teams, and expose decision out come as model transformation parameters in model driven software development    2008 Springer Verlag Berlin Heidelberg   35 refs",Reusable architectural decision models for enterprise application development,"['Architecture', 'Computer software reusability', 'Computer software selection and evaluation', 'Construction industry', 'Decision making', 'Information services', 'Problem solving', 'Quality of service', 'Software architecture', 'Software design', 'Architectural decision', 'Architectural decisions', 'Architectural knowledge', 'Architectural styles', 'Architecture designs', 'Conceptual frameworks', 'Critical success factor', 'Decision maker', 'Decision makers', 'Decision modeling', 'Enterprise application development', 'Industry projects', 'International conferences', 'MDA', 'Meta modelling', 'Model transformations', 'Model-driven software development', 'Original design', 'Project teaming', 'Quality of softwares', 'Requirements modeling', 'Service-Oriented Architecture', 'SOA', 'Software Construction', 'Speed ups', 'Tool supports', 'Information Services', 'Artificial Intelligence', 'Computer Programming', 'Management', 'Computer Software, Data Handling and Applications', 'Construction Equipment and Methods  Surveying', 'Buildings and Towers', 'Telecommunication  Radar, Radio and Television']","['Zimmermann, Olaf', '', '', 'Gschwind, Thomas', '', '', 'K ster, Jochen', '', '', 'Leymann, Frank', '', '', 'Schuster, Nelly']","IBM Research GmbH, Zurich Research Laboratory, S umerstrasse 4, R schlikon 8803, Switzerland  2  Institute of Architecture of Application Systems, Universit t Stuttgart, Universit tsstrae 38, Stuttgart 70569, Germany",2007,QoSA
437,438,"In enterprise application development and other software construction projects, a critical success factor is to make sound architectural decisions  Text templates and tool support for capturing architectural decisions exist, but have failed to reach broad adoption so far  One of the inhibitors we perceived on large scale industry projects is that architectural decision capturing is regarded as a retrospective and therefore unwelcome documentation task which does not provide any benefit during the original design work  A major problem of such a retrospective approach is that the decision rationale is not available to decision makers when they identify, make, and enforce decisions  Often a large, possibly distributed, community of decision makers is involved in these three steps  In this paper, we propose a new conceptual framework for proactive decision identification, decision maker collaboration, and decision enforcement  Based on a meta model capturing reuse and collaboration aspects explicitly, our framework instantiates decision models from requirements models and reusable decision templates  These templates capture knowledge gained on other projects employing the same architectural style  As an exemplary application of these concepts to service oriented architecture shows, reusable architectural decision models can speed up the decision identification and improve the quality of the decision making  Reusable architectural decision models can also simplify the exchange of architecture design rationale within and between project teams, and expose decision outcome as model transformation parameters in model driven software development   34 refs",Reusable architectural decision models for enterprise application development,"['corporate modelling', 'decision making', 'software architecture', 'reusable architectural decision models', 'enterprise application development', 'architectural decision capturing', 'decision maker collaboration', 'proactive decision identification', 'decision enforcement', 'meta model', 'service-oriented architecture', 'software development', 'Business and administrative computing', 'Software engineering techniques']","['Zimmermann, O', '', '', ' Gschwind, T', '', '', ' Kuster, J', '', '', ' Leymann, F', '', '', ' Schuster, N', '', '']","Zurich Res  Lab , IBM Res  GmbH, Ruschlikon, Switzerland  2  Inst  of Archit  of Applic  Syst , Univ  Stuttgart, Stuttgart, Germany",2008,QoSA
438,439,"In enterprises using service oriented architecture  SOA  architectural information is used for various activities including analysis, design, governance, and quality assurance  Architectural information is created, stored and maintained in various locations like enterprise architecture management tools, design tools, text documents, and service registries repositories  Capturing and maintaining this information manually is time intensive, expensive and error prone  To address this problem we present an approach for automatically extracting architectural information from an actual SOA implementation  The extracted information represents the currently implemented architecture and can be used as the basis for quality assurance tasks and, through synchronization, for keeping architectural information consistent in various other tools and locations  The presented approach has been developed for a SOA in the banking domain  Aside from presenting the main drivers for the approach and the approach itself, we report on experiences in applying the approach to different applications in this domain    2012 IEEE   16 refs",Extracting and facilitating architecture in service oriented software systems,"['Information services', 'Quality assurance', 'Service oriented architecture (SOA)', 'Architectural views', 'Architecture visualization', 'Design tool', 'Enterprise architecture managements', 'Error prones', 'Service Oriented', 'Service registry', 'Software systems', 'Text document', 'Digital Computers and Systems', 'Computer Programming', 'Information Services', 'Quality Assurance and Control']","['Weinreich, Rainer', '', '', 'Miesbauer, Cornelia', '', '', 'Buchgeher, Georg', '', '', 'Kriechbaum, Thomas']","Johannes Kepler University Linz, Linz, Austria  2  Software Competence Center Hagenberg, Hagenberg, Austria  3  GRZ IT Center Linz GmbH, Linz, Austria",2012,ECSA
439,440,"In general, software architecture is documented using software architecture views to address the different stakeholder concerns  The current trend recognizes that the set of viewpoints should not be fixed but multiple viewpoints might be introduced instead to design and document the software architecture  To ensure the quality of the software architecture various software architecture evaluation approaches have been introduced  In addition several documentation guidelines have been provided to ensure the quality of the software architecture document  Unfortunately, the evaluation of the adopted viewpoints that are used to design and document the software architecture has not been considered explicitly  If the architectural viewpoints are not well defined then implicitly this will have an impact on the quality of the design and the documentation of the software architecture  We present an evaluation framework for assessing existing or newly defined software architecture viewpoint languages  The approach is based on software language engineering techniques, and considers each viewpoint as a metamodel  The approach does not assume a particular architecture framework and can be applied to existing or newly defined viewpoint languages  We illustrate our approach for modeling and reviewing the first and second editions of the viewpoint languages of the Views and Beyond approach  Copyright   ACM   38 refs",Evaluation framework for software architecture viewpoint languages,"['Computer programming languages', 'Design', 'Architectural viewpoints', 'Metamodeling', 'Software architecture evaluation', 'Software languages', 'Tool support', 'Structural Design', 'Computer Software, Data Handling and Applications']","['Tekinerdogan, Bedir', '', '', 'Demirli, Elif']","Bilkent University, Department of Computer Engineering, 06800 Bilkent Ankara, Turkey",2013,QoSA
440,441,"In large situated information system instances, a great variety of stakeholders interact with each other via technology, constantly shaping and refining the information system  In the course of such a system s history, a range of domain specific languages may have been incorporated  These language means are often not sufficiently integrated on an ontological level leading to syntactical and conceptual redundancies and impeding a shared understanding of the systems  functionalities  In this paper, we present our ambitions towards a language integration approach that aims at mitigating this problem  We exemplify it in the context of an existing educational information system instance    2014 ACM   39 refs",Exploring collective DSL integration in a large situated IS  Towards comprehensive language integration in information systems,"['DSL', 'Information systems', 'Problem oriented languages', 'Semantics', 'Software architecture', 'Domain specific languages', 'Enterprise wiki', 'Language integration', 'Shared understanding', 'Via technologies', 'Telecommunication  Radar, Radio and Television', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Calculus']","['Aram, Michael', '', '', 'Neumann, Gustaf']","Institute for Information Systems and New Media, Vienna University of Economics and Business  WU Vienna , Welthandelsplatz 1, 1020 Vienna, Austria",2014,ECSA
441,442,"In many domains, models are created based on predefined metamodels which abstract the structure of the domain in question  However, there are specific domains, like Enterprise Architecture  EA  projects, where a metamodel cannot be defined in advance to the creation of the model  Unfortunately, in this situation using standard frameworks, like EMF, generates some inconveniences in the construction of the model and the metamodel because these frameworks do not support the manipulation of metamodels at runtime  In this paper, we propose a strategy to co create metamodels and models in an incremental and simultaneous way  This proposal is supported by a dynamic approach that separates the linguistic and the ontological conformity concerns of metamodeling  This strategy has been implemented in a graphical editor called GraCoT, which also provides interactive assistance to guide the users during the co creation process    2013 ACM   17 refs","GraCoT, a tool for co creation of models and metamodels in specific domains","['Co-creation', 'conformity problems', 'Dynamic approaches', 'Enterprise Architecture', 'Meta model', 'Models and metamodels', 'Standard frameworks', 'User assistance', 'Engineering Graphics']","['G mez, Paola', '', '', 'S nchez, Mario', '', '', 'Villalobos, Jorge']","Universidad de Los Andes, Department of Systems and Computing Engineering, Bogot , Colombia",2013,ECSA
442,443,"In order to achieve reliable data regarding high temperature polymer electrolyte fuel cell degradation  HT PEFC  a novel diagnostic technique for electrochemically active surface area  ECSA  determination was developed  In situ cyclovoltammetric monolayer CO oxidation charge measurements were combined with real time CO2 exhaust gas analysis  Different evaluating methods were developed to overcome the problem of side reactions during CO stripping  Furthermore, a calibration curve for absolute ECSA determination via CO stripping was established  These methods were additionally successfully extended and implemented to locally resolved ECSA measurements  In summary, this paper introduces novel fundamental HT PEFC diagnostics for improved understanding of degradation phenomena    The Electrochemical Society   10 refs",CV or not CV  Development of electrode diagnostics for high temperature polymer electrolyte fuel cells,"['Carbon dioxide', 'Proton exchange membrane fuel cells (PEMFC)', 'Calibration curves', 'Co oxidation', 'CO stripping', 'Electrochemically active surface areas', 'Evaluating method', 'High-temperature polymer electrolyte fuel cells', 'Novel diagnostics', 'Side reactions', 'Fuel Cells', 'Inorganic Compounds', 'Organic Polymers']","['Engl, T', '', '', ' Waltar, K', '', '', ' Gubler, L', '', '', ' Schmidt, T J', '', '']","Electrochemistry Laboratory, Paul Scherrer Institut, 5232 Villigen PSI, Switzerland",2013,ECSA
443,444,"In order to deal with evolving needs and stakeholder concerns, next generation ADLs should support incremental extension and customization  In this direction we proposed byADL  Build Your ADL , a framework which allows software architects to  i  extend existent ADLs with domain specificities, new architectural views, or analysis aspects,  ii  integrate an ADL with development processes and methodologies, and  iii  customize an ADL  This paper presents the byADL tool and its features    2010 Springer Verlag Berlin Heidelberg   6 refs",ByADL  An MDE framework for building extensible architecture description languages,"['Architectural views', 'Architecture description languages', 'Development process', 'Domain specificity', 'Software architects', 'Computer Programming']","['Di Ruscio, Davide', '', '', 'Malavolta, Ivano', '', '', 'Muccini, Henry', '', '', 'Pelliccione, Patrizio', '', '', 'Pierantonio, Alfonso']","Dipartimento di Informatica, University of l Aquila, Italy",2010,ECSA
444,445,"In order to ensure the quality of their software development process, companies incorporate best practices from recognized repositories or from their own experiences  These best practices are often described in software quality manuals that do not guarantee their implementation  In this paper, we propose a framework for the implementation of best practices concerning the design of the software architecture  We treat the case of architecture design activity because it s the basis of the software development process  Our framework enables on the one hand to describe best practices and on the other hand to check their application by designers  We present an implementation of our framework in the Eclipse platform and for an ADL dedicated to Web applications  Finally, we give an example of use from the context of our industrial partner    2010 Springer Verlag   22 refs",Good architecture   Good  ADL   practices,"['Computer software selection and evaluation', 'Design', 'Software design', 'Architecture designs', 'Best practice', 'Design softwares', 'Industrial partners', 'Software development process', 'Software Quality', 'WEB application', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Engineering Graphics', 'Management']","['Le Gloahec, Vincent', ' ,', '', ' Fleurquin, R gis', '', '', 'Sadou, Salah']","Alkante SAS, Rennes, France  2  IRISA Triskell, Campus Universitaire de Beaulieu, Rennes, France  3  Valoria, Universit  de Bretagne Sud, Vannes, France",2010,QoSA
445,446,"In order to recover software architecture, various clustering techniques have been created to automatically partition a software system into meaningful subsystems  While these techniques have demonstrated their effectiveness, we observe that a key feature within most software systems has not been fully exploited  most well designed systems follow strong architectural design rules that split the overall system into modules  These design rules are often manifested as special program constructs, such as shared data structures or abstract interfaces, which should not belong to any of the subordinate modules  We contribute a new perspective of architecture recovery based on this rationale, which enables the combination of design rule based clustering with other clustering techniques, as well as enabling the splitting of a large system into subsystems  We evaluated our approach both quantitatively and qualitatively, using both open source and real industrial software projects  Copyright 2013 ACM   33 refs",Leveraging design rules to improve software architecture recovery,"['Computer software', 'Product design', 'Recovery', 'Software architecture', 'Abstract interfaces', 'Architecture recovery', 'Clustering techniques', 'Design Structure Matrices', 'Industrial software', 'Shared data structure', 'Software architecture recovery', 'Software systems', 'Abstract interfaces', 'Architecture recovery', 'Clustering techniques', 'Design Structure Matrices', 'Industrial software', 'Shared data structure', 'Software architecture recovery', 'Software systems', 'Metallurgy and Metallography', 'Computer Software, Data Handling and Applications', 'Production Engineering']","['Cai, Yuanfang', '', '', 'Wang, Hanfei', '', '', 'Wong, Sunny', '', '', 'Wang, Linzhang']","Dept  of Computer Science, Drexel University, Philadelphia, PA, United States  2  State Key Laboratory for Novel Software Technology, Dept  of Computer Science and Technology, Nanjing University, Nanjing, 210046, China  3  Clinical Solutions R and D, Siemens Healthcare, Malvern, PA, United States",2013,QoSA
446,447,"In order to respond to changing requirements and advances in technology, system and software architectures must evolve during their lifetimes  Usually, in this evolution, several key components of the architecture are replaced  Achieving successful architecture evolution at a reasonable cost and effort is difficult  It requires many architectural and technological decisions  This paper describes an approach, called 3RDBA that facilitates replacing a key component in a long living architecture  It is based on systematically gathering all information needed to make well founded decisions regarding evolution of the architecture  The approach consists of an exploration, consolidation and migration cycle  Each cycle contains four steps  requirements, design, build and analyze  3RDBA enables construction and evaluation of several alternative architecture realizations together with a migration path from the existing architecture towards the selected, new architecture  We describe how we have successfully applied this approach to support the evolution of a medical imaging system architecture   20 refs",Component replacement in a long living architecture  the 3RDBA approach,"['formal specification', 'medical image processing', 'object-oriented programming', 'software architecture', 'software maintenance', 'systems analysis', 'component replacement', 'long-living architecture', '3RDBA approach', 'system architectures', 'software architectures', 'software evolution', 'architecture components', 'architecture evolution', 'requirements', 'medical imaging system architecture', 'Software engineering techniques', 'Biology and medical computing', 'Object oriented programming', 'Formal methods']","['Postma, A', '', '', ' America, P', '', '', ' Wijnstra, J G', '', '']","Philips Res  Lab , Eindhoven, Netherlands",2004,WICSA
447,448,"In order to respond to changing requirements and advances in technology, system and software architectures must evolve during their lifetimes  Usually, in this evolution, several key components of the architecture are replaced  Achieving successful architecture evolution at a reasonable cost and effort is difficult  It requires many architectural and technological decisions  This paper describes an approach, called 3RDBA, that facilitates replacing a key component in a long living architecture  It is based on systematically gathering all information needed to make well founded decisions regarding evolution of the architecture  The approach consists of an exploration, consolidation and migration cycle  Each cycle contains four steps  Requirements, Design, Build and Analyze  3RDBA enables construction and evaluation of several alternative architecture realizations together with a migration path from the existing architecture towards the selected, new architecture  We describe how we have successfully applied this approach to support the evolution of a medical imaging system architecture   20 refs",Component replacement in a long living architecture  The 3RDBA approach,"['Computer operating procedures', 'Computer simulation', 'Data acquisition', 'Imaging techniques', 'Laptop computers', 'Medical imaging', 'Network protocols', 'Principal component analysis', 'Ultrasonics', 'Component replacement', 'Data streams', 'Positron emission', 'Tomographic imaging', 'Mathematical Statistics', 'Ultrasonic Waves', 'Computer Applications', 'Data Processing and Image Processing', 'Computer Programming', 'Digital Computers and Systems', 'Biomedical Engineering']","['Postma, Andr', '', '', ' America, Pierre', '', '', 'Wijnstra, Jan Gerben']","Philips Research Laboratories, Prof  Holstlaan 4, NL 5656 AA Eindhoven, Netherlands",2004,WICSA
448,449,"In our work, we promote a new discipline for secure and dependable system engineering using a pattern as its first class citizen  Pattern Based System Engineering  PBSE   Therefore, PBSE addresses two kind of processes  the one of pattern development and the one of system development with patterns  To interconnect these two processes we promote a structured model based repository of patterns and their related property models  This paper presents the SEMCO MDE Tool Suite development status conducted in the context of the FP7 TERESA project aiming to support the automation of building, storing and processing reusable artifacts  S D patterns and property models   This tool promotes the PBSE methodology in the domain of assistance to the trusted embedded system engineering  A video tutorial presenting the SEMCO MDE Tool Suite is provided under  http   www semcomdt org semco demo video semco toolsuite ToolSuiteIRIT  mp4    2013 ACM   12 refs",Towards tool support for pattern based secure and dependable systems development,"['Embedded systems', 'Systems engineering', 'dependability', 'Meta model', 'Model-driven Engineering', 'pattern', 'repository', 'security', 'Machine Tools', 'Small Tools and Hardware', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Industrial Engineering and Management', 'Systems Science']","['Hamid, Brahim', '', '', 'Ziani, Adel', '', '', 'Geisel, Jacob']","IRIT, University of Toulouse, 118 Route de Narbonne, 31062 Toulouse Cedex 9, France",2013,ECSA
449,450,"In pervasive computing systems, a higher number of interactions will be mediated by computers, amplifying the menace to privacy  Privacy protection in pervasive environments is still a big issue, despite the growing number of works on this subject as evidenced by this survey  In this paper, we propose a taxonomy for privacy invasion attacks, classify existing privacy enhancing technologies according to the protection provided for those attacks, and introduce a service oriented privacy enhanced architecture for pervasive computing    2007 IEEE   29 refs",Architecting pervasive computing systems for privacy  A survey,"['Computer crime', 'Knowledge management', 'Software architecture', 'Taxonomies', 'Ubiquitous computing', 'Computing systems', 'Invasion attacks', 'Pervasive environments', 'Privacy protection', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Information Science']","['Cardoso, Roberto Speicys', '', '', 'Issarny, Val rie']","INRIA Rocquencourt, 78153 Le Chesnay, France",2007,WICSA
450,451,"In pervasive computing systems, a higher number of interactions will be mediated by computers, amplifying the menace to privacy  Privacy protection in pervasive environments is still a big issue, despite the growing number of works on this subject as evidenced by this survey  In this paper, we propose a taxonomy for privacy invasion attacks, classify existing privacy enhancing technologies according to the protection provided for those attacks, and introduce a service oriented privacy enhanced architecture for pervasive computing   29 refs",Architecting pervasive computing systems for privacy  a survey,"['data privacy', 'software architecture', 'ubiquitous computing', 'pervasive computing system', 'privacy protection', 'taxonomy', 'privacy invasion attack', 'service-oriented privacy-enhanced architecture', 'Data security', 'Software engineering techniques', 'Distributed systems software']","['Cardoso, R S', '', '', ' Issarny, V', '', '']","INRIA Rocquencourt, Le Chesnay, France",2007,WICSA
451,452,"In practice, there are many differences between an implementation level architecture  such as one derived using architectural recovery techniques  and a more conceptual architecture used at design time  We present a lightweight, scalable, semi automated, incremental approach for synchronizing a Component and Connector  C C  view retrieved from an implementation with a conceptual C C view described in an Architectural Description Language  Our approach can automatically detect corresponding elements in the presence of insertions, deletions, renames, and moves, and incrementally synchronize the two views    2005 IEEE   4 refs",Semi automated incremental synchronization between conceptual and implementation level architectures,"['Automation', 'Computer aided design', 'Computer programming languages', 'Computer software selection and evaluation', 'Software engineering', 'Synchronization', 'Architectural Description Languages', 'Component and Connector (C and C)', 'Conceptual architecture', 'Implementation level architecture', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Automatic Control Principles and Applications']","['Abi Antoun, Marwan', '', '', 'Aldrich, Jonathan', '', '', 'Garlan, David', '', '', 'Schmerl, Bradley', '', '', 'Nahas, Nagi']","Institute for Software Research International, Carnegie Mellon University, Pittsburgh, PA 15213",2005,WICSA
452,453,"In precision agriculture, the efficient use of fertilizer in order to minimize consumption is important  The amount of fertilizer supplied needs to match the amount consumed by the plant  However, it is difficult to estimate the amount absorbed by the roots  The absorption of the fertilizer has to be determined by continually measuring its distribution on a millimeter scale, which is the scale of the around root  In this study, we developed an electrical conductivity sensor array system that can be used to continuously measure the distribution of fertilizer with clarity using several millimeter sized electrical conductivity sensors inserted in the soil  The electrical conductivity sensor array system measuring unit is comprised an array of five electrical conductivity sensor chips which size is 5 mm   5 mm  The distribution in two different model soil mixtures was measured continuously using the ECSAS to confirm its capability for measuring the diffusion of the fertilizer  The progress of fertilizer diffusion was confirmed with the change in ECw decreasing over time  The ECSAS was used to measure the distribution of ECw in model soil with the dissolution of solid fertilizer for six days to examine the validity and characteristics of the ECw measurements and the benefits of the ECSAS  As a result, it was confirmed that ECSAS can be used to measure the change in the distribution of ECw due to the dissolution and subsequent diffusion of solid fertilizer in real time on a scale of less than a centimeter  Thus, we consider that the ECSAS will become a very valuable system for continuously measuring the dissolution and diffusion of fertilizer in small areas of soil such as on the scale of rhizospheres   All rights reserved Elsevier    25 refs",Millimeter scale sensor array system for measuring the electrical conductivity distribution in soil,"['agriculture', 'dissolving', 'electrical conductivity', 'fertilisers', 'sensor arrays', 'soil', 'millimeter scale sensor array system', 'electrical conductivity distribution measurement', 'precision agriculture', 'fertilizer absorption', 'millimeter sized electrical conductivity sensors', 'electrical conductivity sensor array system measuring unit', 'electrical conductivity sensor chips', 'model soil mixture', 'ECSAS', 'fertilizer diffusion', 'solid fertilizer dissolution', 'rhizospheres', 'Sensing devices and transducers', 'Agriculture', 'Products and commodities']","['Murata, H', '', '', ' Futagawa, M', '', '', ' Kumazaki, T', '', '', ' Saigusa, M', '', '', ' Ishida, M', '', '', ' Sawada, K', '', '']","Dept  of Electr    Inf  Eng , Toyohashi Univ  of Technol , Toyohashi, Japan  2  Head Office for  Tailor Made   Baton Zone  Grad  Course, Toyohashi Univ  of Technol , Toyohashi, Japan  3  Res  Center for Agrotechnol    Biotechnol , Univ  of Technol , Toyohashi, Japan",2014,ECSA
453,454,"In recent years, management of architectural knowledge has become a more prominent theme in software architecture research  Although various specialized tools have been proposed for use in the architecting process, observations show that architects in industry have yet to meet a tool environment that matches their knowledge needs  In order to discover what architectural knowledge needs architects have, we conducted a study in a large organization  In this study we discovered that architects are especially in need for  Just In Time architectural knowledge   To fulfill this need we designed and implemented an architectural knowledge sharing portal  Our portal s integrated functionality supports architects in their decision making process, by providing easy access to the right architectural knowledge at any given point in time    2008 IEEE   21 refs",A Just In Time architectural knowledge sharing portal,"['Architecture', 'Decision making', 'Problem solving', 'Architectural knowledge', 'Architectural knowledge sharing', 'Architecture research', 'Decision-making process', 'Integrated functionality', 'Just-In-Time', 'Specialized tools', 'Buildings and Towers', 'Computer Programming', 'Artificial Intelligence', 'Management']","['Farenhorst, Rik', '', '', 'Izaks, Ronald', '', '', 'Lago, Patricia', '', '', 'Van Vliet, Hans']","Department of Computer Science, VU University Amsterdam, Netherlands",2008,WICSA
454,455,"In recent years, progress has been made in the analysis of global convergence of clonal selection algorithms  CSA , but most analyses are based on the theory of Markov chain, which depend on the description of the transition matrix and eigenvalues  However, such analyses are very complicated, especially when the population size is large, and are presented for particular implementations of CSA  In this paper, instead of the traditional Markov chain theory, we introduce martingale theory to prove the convergence of a class of CSA, called elitist clonal selection algorithm  ECSA   Using the submartingale convergence theorem, the best individual affinity evolutionary sequence is described as a submartingale, and the almost everywhere convergence of ECSA is derived  Particularly, the algorithm is proved convergent with probability 1 in finite steps when the state space of population is finite  This new proof of global convergence analysis of ECSA is more simplified and effective, and not implementation specific   18 refs",Convergence of elitist clonal selection algorithm based on martingale theory,"['Eigenvalues and eigenfunctions', 'Image classification', 'Markov processes', 'Population statistics', 'Almost everywhere convergence', 'Clonal selection algorithms', 'Convergence theorem', 'Elitist strategies', 'Global conver-gence', 'Markov Chain theory', 'Martingale theory', 'Transition matrices', 'Telecommunication  Radar, Radio and Television', 'Computer Software, Data Handling and Applications', 'Mathematics', 'Algebra', 'Probability Theory', 'Mathematical Statistics']","['Hong, Lu', '', '', 'Kamruzzaman, Joarder']","School of Electronic Engineering, Huaihai Institute of Technology, Jiangsu Province, 222005, China  2  Gippsland School of Information Technology, Monash University, Northways Road, Churchill, VIC 3842, Australia",2013,ECSA
455,456,"In recent years, the focus of software development has progressively shifted upward, in the direction of the abstract level of architecture specification  However, while the functional properties of the systems have been extensively dealt with in the literature, relatively less attention has been given until recently to the specification and analysis at the architectural level of quality attributes such as performance and reliability  The contribution of this paper is twofold  first we discuss the type of information that should be provided at the architectural level in order to successfully address the problem of performance and reliability modeling and analysis of software systems  based on this discussion, we define an extension of the xADL architectural language that enables the support for stochastic modeling and analysis of performance and reliability in software architectures   22 refs",An XML based language to support performance and reliability modeling and analysis in software architectures,"['formal specification', 'software architecture', 'software performance evaluation', 'software quality', 'software reliability', 'specification languages', 'XML', 'XML-based language', 'software architectures', 'software development', 'software specification', 'software quality attributes', 'software performance', 'software reliability', 'software system analysis', 'xADL architectural language', 'stochastic modeling', 'Software engineering techniques', 'Software performance evaluation', 'Formal methods']","['Grassi, V', '', '', ' Mirandola, R', '', '', ' Sabetta, A', '', '']","Dipt  di Inf , Tor Vergata Univ , Rome, Italy",2005,QoSA
456,457,"In recent years, the software architecture community has proposed to use architectural design decisions  ADDs  for capturing the design rationale and the architectural knowledge  AK   As software systems evolve both ADDs and architectural designs need to be documented and maintained  This is a tedious and time consuming task because of the lack of systematic and automated support for bridging between ADDs and designs  As a result, decisions and designs become inconsistent over time  We propose to alleviate this problem by introducing an AK transformation language supporting reusable AK transformations from pattern based ADDs to component and connector models  In addition, we devise reusable consistency checking rules for verifying the consistency between decisions and designs  Through the use of model driven transformations, as well as reusable, pattern based decision models, we ensure the reusability of our approach  We apply our approach in an industrial case study and show that it offers high reusability, is largely automated and scalable, and can deal with the complexity of large numbers of recurring decisions    2013 Springer Verlag   25 refs",Supporting consistency between architectural design decisions and component models through reusable architectural knowledge transformations,"['Architectural design', 'Industrial applications', 'Reusability', 'Architectural design decisions', 'Architectural knowledge', 'Architecture community', 'Automated support', 'Consistency checking', 'Industrial case study', 'Time-consuming tasks', 'Transformation languages', 'Buildings and Towers', 'Industrial Wastes', 'Computer Programming', 'Production Planning and Control  Manufacturing']","['Lytra, Ioanna', '', '', 'Tran, Huy', '', '', 'Zdun, Uwe']","Faculty of Computer Science, Software Architecture Group, University of Vienna, Austria",2013,ECSA
457,458,"In scenario based requirement elicitation techniques such as quality attribute scenario elicitation and use case engineering, the requirements engineer is typically forced to make some implicit early architectural assumptions  These architectural assumptions represent initial architectural elements such as supposed building blocks of the envisaged system  Such implicitly specified assumptions are prone to ambiguity, vagueness, duplication, and contradiction  Furthermore, they are typically scattered across and tangled within the different scenario based requirements  This lack of modularity hinders navigability of the requirement body as a whole  This paper discusses the need to explicitly document otherwise implicit architectural assumptions  Such an explicit intermediary between quality attribute scenarios and use cases enables the derivation and exploration of interrelations between these different requirements  This is essential to lower the mental effort required to navigate these models and facilitates a number of essential activities in the early development phases such as the selection of candidate drivers in attribute driven design, architectural trade off analysis and architectural change impact analysis    2012 IEEE   22 refs",Documenting early architectural assumptions in scenario based requirements,"['Requirements engineering', 'Architectural changes', 'Architectural element', 'Architectural trade-off analysis', 'Building blockes', 'Development phasis', 'Mental effort', 'Quality attributes', 'Requirement elicitation', 'Requirements engineers', 'Computer Software, Data Handling and Applications']","['Van Landuyt, Dimitri', '', '', 'Truyen, Eddy', '', '', 'Joosen, Wouter']","IBBT DistriNet  KULeuven , Celestijnenlaan 200A, B 3001, Belgium",2012,ECSA
458,459,"In scenario based requirement elicitation techniques such as quality attribute scenario elicitation and use case engineering, the requirements engineer is typically forced to make some implicit early architectural assumptions  These architectural assumptions represent initial architectural elements such as supposed building blocks of the envisaged system  Such implicitly specified assumptions are prone to ambiguity, vagueness, duplication, and contradiction  Furthermore, they are typically scattered across and tangled within the different scenario based requirements  This lack of modularity hinders navigability of the requirement body as a whole  This paper discusses the need to explicitly document otherwise implicit architectural assumptions  Such an explicit intermediary between quality attribute scenarios and use cases enables the derivation and exploration of interrelations between these different requirements  This is essential to lower the mental effort required to navigate these models and facilitates a number of essential activities in the early development phases such as the selection of candidate drivers in attribute driven design, architectural trade off analysis and architectural change impact analysis    2012 IEEE   22 refs",Documenting early architectural assumptions in scenario based requirements,"['Requirements engineering', 'Architectural changes', 'Architectural element', 'Architectural trade-off analysis', 'Building blockes', 'Development phasis', 'Mental effort', 'Quality attributes', 'Requirement elicitation', 'Requirements engineers', 'Computer Software, Data Handling and Applications']","['Van Landuyt, Dimitri', '', '', 'Truyen, Eddy', '', '', 'Joosen, Wouter']","IBBT DistriNet  KULeuven , Celestijnenlaan 200A, B 3001, Belgium",2012,WICSA
459,460,"In software performance engineering, the infrastructure on which an application is running plays a crucial role when predicting the performance of the application  Thus, to yield accurate prediction results, performance relevant properties and behaviour of the infrastructure have to be integrated into performance models  However, capturing these properties is a cumbersome and error prone task, as it requires carefully engineered measurements and experiments  Existing approaches for creating infrastructure performance models require manual coding of these experiments, or ignore the detailed properties in the models  The contribution of this paper is the Ginpex approach, which introduces goal oriented and model based specification and generation of executable performance experiments for detecting and quantifying performance relevant infrastructure properties  Ginpex provides a metamodel for experiment specification and comes with pre defined experiment templates that provide automated experiment execution on the target platform and also automate the evaluation of the experiment results  We evaluate Ginpex using two case studies, where experiments are executed to detect the operating system scheduler timeslice length, and to quantify the CPU virtualization overhead for an application executed in a virtualized environment    2011 ACM   26 refs",Ginpex  Deriving performance relevant infrastructure properties through goal oriented experiments,"['Forecasting', 'Software architecture', 'Specifications', 'Virtual reality', 'Accurate prediction', 'Error prones', 'Goal-oriented', 'infrastructure', 'Manual coding', 'Meta model', 'Model-based specifications', 'Performance experiment', 'Performance Model', 'Performance prediction', 'Software performance engineerings', 'Timeslice', 'Virtualizations', 'Virtualized environment', 'Computer Software, Data Handling and Applications', 'Engineering Research', 'Codes and Standards', 'Mathematics']","['Hauck, Michael', '', '', 'Kuperberg, Michael', '', '', 'Huber, Nikolaus', '', '', 'Reussner, Ralf']","FZI Research Center for Information Technology, Karlsruhe, Germany  2  Karlsruhe Institute of Technology, Karlsruhe, Germany",2011,QoSA
460,461,"In the architectural design decisions session, we discussed tools, techniques, and processes with respect to architectural design decision making  The importance of making good decisions was highlighted through an examination of several software architecture case studies    2005 IEEE",Architectural design decisions session report,"['Computer aided design', 'Decision making', 'Engineering education', 'Engineering research', 'Information technology', 'Architectural design decisions', 'Computer Programming', 'Computer Applications', 'Education', 'Engineering Research', 'Information Science', 'Management']","['Tyree, Jeff']","Capital One, Financial, Richmond, United States",2005,WICSA
461,462,"In the automotive industry, embedded systems and software play an increasingly important role in defining the characteristics of the vehicles  Both the vehicles and the embedded systems are designed as product lines, and two distinct architecture processes can be identified  The revolutionary process develops the architecture of a new product line, and focuses on abstract quality attributes and flexibility  The evolutionary process continuously modifies the architecture due to changes, such as additions of new functionality  In this paper, the evolutionary process is investigated through a case study  The study reviews a number of changes to an existing architecture, observing the cause of the change, what quality attributes were considered, and what technical aspects were included  It is also analyzed how the interplay between the two processes can be improved through systematic feedback about what evolution actually takes place    2009 IEEE   18 refs",Evolutionary architecting of embedded automotive product lines  An industrial case study,"['Architecture', 'Automotive industry', 'Computer software selection and evaluation', 'Embedded software', 'Embedded systems', 'Vehicles', 'Automotive products', 'Evolutionary process', 'Industrial case study', 'New product', 'Product-lines', 'Quality attributes', 'Technical aspects', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Systems and Equipment', 'Automotive Engineering, General', 'Buses, Tractors and Trucks', 'Automobiles and Smaller Vehicles', 'Automotive Engines and Related Equipment', 'Highway Transportation', 'Buildings and Towers']","['Axelsson, Jakob', ' ,', '']","School of Innovation, Design and Engineering, M lardalen University, SE 721 23 V ster s, Sweden  2  Dept  94100 HC1S, Volvo Car Corporation, SE 405 31 G teborg, Sweden",2009,ECSA
462,463,"In the automotive industry, embedded systems and software play an increasingly important role in defining the characteristics of the vehicles  Both the vehicles and the embedded systems are designed as product lines, and two distinct architecture processes can be identified  The revolutionary process develops the architecture of a new product line, and focuses on abstract quality attributes and flexibility  The evolutionary process continuously modifies the architecture due to changes, such as additions of new functionality  In this paper, the evolutionary process is investigated through a case study  The study reviews a number of changes to an existing architecture, observing the cause of the change, what quality attributes were considered, and what technical aspects were included  It is also analyzed how the interplay between the two processes can be improved through systematic feedback about what evolution actually takes place    2009 IEEE   18 refs",Evolutionary architecting of embedded automotive product lines  An industrial case study,"['Architecture', 'Automotive industry', 'Computer software selection and evaluation', 'Embedded software', 'Embedded systems', 'Vehicles', 'Automotive products', 'Evolutionary process', 'Industrial case study', 'New product', 'Product-lines', 'Quality attributes', 'Technical aspects', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Systems and Equipment', 'Automotive Engineering, General', 'Buses, Tractors and Trucks', 'Automobiles and Smaller Vehicles', 'Automotive Engines and Related Equipment', 'Highway Transportation', 'Buildings and Towers']","['Axelsson, Jakob', ' ,', '']","School of Innovation, Design and Engineering, M lardalen University, SE 721 23 V ster s, Sweden  2  Dept  94100 HC1S, Volvo Car Corporation, SE 405 31 G teborg, Sweden",2009,WICSA
463,464,"In the automotive industry, embedded systems and software play an increasingly important role in defining the characteristics of the vehicles  Both the vehicles and the embedded systems are designed as product lines, and two distinct architecture processes can be identified  The revolutionary process develops the architecture of a new product line, and focuses on abstract quality attributes and flexibility  The evolutionary process continuously modifies the architecture due to changes, such as additions of new functionality  In this paper, the evolutionary process is investigated through a case study  The study reviews a number of changes to an existing architecture, observing the cause of the change, what quality attributes were considered, and what technical aspects were included  It is also analyzed how the interplay between the two processes can be improved through systematic feedback about what evolution actually takes place    2009 IEEE   18 refs",Evolutionary architecting of embedded automotive product lines  An industrial case study,"['Architecture', 'Automotive industry', 'Computer software selection and evaluation', 'Embedded software', 'Embedded systems', 'Vehicles', 'Automotive products', 'Evolutionary process', 'Industrial case study', 'New product', 'Product-lines', 'Quality attributes', 'Technical aspects', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Systems and Equipment', 'Automotive Engineering, General', 'Buses, Tractors and Trucks', 'Automobiles and Smaller Vehicles', 'Automotive Engines and Related Equipment', 'Highway Transportation', 'Buildings and Towers']","['Axelsson, Jakob', ' ,', '']","School of Innovation, Design and Engineering, M lardalen University, SE 721 23 V ster s, Sweden  2  Dept  94100 HC1S, Volvo Car Corporation, SE 405 31 G teborg, Sweden",2011,WICSA
464,465,"In the domain of dynamically evolving distributed systems composed of autonomous and  self   adaptive components, the task of systematically managing the design complexity of their communication and composition is a pressing issue  This stems from the dynamic nature of such systems, where components and their bindings may appear and disappear without anticipation  To address this challenge, we propose employing separation of concerns via a mechanism of dynamic implicit bindings with implicit communication  This way, we strive for dynamically formed, implicitly interacting groups   ensembles   of autonomous components  In this context, we introduce the DEECo component model, where such bindings, as well as the associated communication, are managed in an automated way, enabling transparent handling of the dynamic changes in the system    2012 IEEE   14 refs",Towards dependable emergent ensembles of components  The DEECo component model,"['Software architecture', 'adaptation', 'Dynamic architecture', 'ensemble', 'implicit bindings', 'Implicit communications', 'Telecommunication  Radar, Radio and Television', 'Computer Programming']","['Keznikl, Jaroslav', ' ,', '', ' Bure, Tom', '', ',', '', ' Pl il, Frantiek', ' ,', '', ' Kit, Michal']","Department of Distributed and Dependable Systems, Faculty of Mathematics and Physics, Charles University, Prague, Czech Republic  2  Institute of Computer Science, Academy of Sciences of the Czech Republic, Prague, Czech Republic",2012,ECSA
465,466,"In the domain of dynamically evolving distributed systems composed of autonomous and  self   adaptive components, the task of systematically managing the design complexity of their communication and composition is a pressing issue  This stems from the dynamic nature of such systems, where components and their bindings may appear and disappear without anticipation  To address this challenge, we propose employing separation of concerns via a mechanism of dynamic implicit bindings with implicit communication  This way, we strive for dynamically formed, implicitly interacting groups   ensembles   of autonomous components  In this context, we introduce the DEECo component model, where such bindings, as well as the associated communication, are managed in an automated way, enabling transparent handling of the dynamic changes in the system    2012 IEEE   14 refs",Towards dependable emergent ensembles of components  The DEECo component model,"['Software architecture', 'adaptation', 'Dynamic architecture', 'ensemble', 'implicit bindings', 'Implicit communications', 'Telecommunication  Radar, Radio and Television', 'Computer Programming']","['Keznikl, Jaroslav', ' ,', '', ' Bure, Tom', '', ',', '', ' Pl il, Frantiek', ' ,', '', ' Kit, Michal']","Department of Distributed and Dependable Systems, Faculty of Mathematics and Physics, Charles University, Prague, Czech Republic  2  Institute of Computer Science, Academy of Sciences of the Czech Republic, Prague, Czech Republic",2012,WICSA
466,467,"In the field of software architecture, there has been a paradigm shift from describing the outcome of architecting process mostly described by component and connector  know what  to documenting architectural design decisions and their rationale  know how  which leads to the production of an architecture  This paradigm shift results in emergence of various models and related tools for capturing, managing and sharing architectural design decisions and their rationale explicitly  This paper analyzes existing architectural design decisions models and provides a criteria based comparison on tools that support these models  The major contribution of this paper is twofold  to show that all of these models have a consensus on capturing the essence of an architectural design decision  and to clarify the major difference among the tools and show what desired features are missing in these tools    2009 IEEE   12 refs",Architectural design decision  Existing models and tools,"['Architectural design', 'Computer software', 'Structural design', 'Technology transfer', 'Know-how', 'Paradigm shifts', 'Industrial Economics', 'Impact of Technology on Society', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Structural Design, General', 'Buildings and Towers']","['Shahin, Mojtaba', '', '', 'Liang, Peng', '', '', 'Khayyambashi, Mohammad Reza']","Department of Computer Engineering and IT, Sheikh Bahaei University, Iran  2  Department of Mathematics and Computing Science, University of Groningen, Netherlands  3  Department of Computer Engineering, Faculty of Engineering, University of Isfahan, Iran",2009,ECSA
467,468,"In the field of software architecture, there has been a paradigm shift from describing the outcome of architecting process mostly described by component and connector  know what  to documenting architectural design decisions and their rationale  know how  which leads to the production of an architecture  This paradigm shift results in emergence of various models and related tools for capturing, managing and sharing architectural design decisions and their rationale explicitly  This paper analyzes existing architectural design decisions models and provides a criteria based comparison on tools that support these models  The major contribution of this paper is twofold  to show that all of these models have a consensus on capturing the essence of an architectural design decision  and to clarify the major difference among the tools and show what desired features are missing in these tools    2009 IEEE   12 refs",Architectural design decision  Existing models and tools,"['Architectural design', 'Computer software', 'Structural design', 'Technology transfer', 'Know-how', 'Paradigm shifts', 'Industrial Economics', 'Impact of Technology on Society', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Structural Design, General', 'Buildings and Towers']","['Shahin, Mojtaba', '', '', 'Liang, Peng', '', '', 'Khayyambashi, Mohammad Reza']","Department of Computer Engineering and IT, Sheikh Bahaei University, Iran  2  Department of Mathematics and Computing Science, University of Groningen, Netherlands  3  Department of Computer Engineering, Faculty of Engineering, University of Isfahan, Iran",2009,WICSA
468,469,"In the field of software architecture, there has been a paradigm shift from describing the outcome of architecting process mostly described by component and connector  know what  to documenting architectural design decisions and their rationale  know how  which leads to the production of an architecture  This paradigm shift results in emergence of various models and related tools for capturing, managing and sharing architectural design decisions and their rationale explicitly  This paper analyzes existing architectural design decisions models and provides a criteria based comparison on tools that support these models  The major contribution of this paper is twofold  to show that all of these models have a consensus on capturing the essence of an architectural design decision  and to clarify the major difference among the tools and show what desired features are missing in these tools    2009 IEEE   12 refs",Architectural design decision  Existing models and tools,"['Architectural design', 'Computer software', 'Structural design', 'Technology transfer', 'Know-how', 'Paradigm shifts', 'Industrial Economics', 'Impact of Technology on Society', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Structural Design, General', 'Buildings and Towers']","['Shahin, Mojtaba', '', '', 'Liang, Peng', '', '', 'Khayyambashi, Mohammad Reza']","Department of Computer Engineering and IT, Sheikh Bahaei University, Iran  2  Department of Mathematics and Computing Science, University of Groningen, Netherlands  3  Department of Computer Engineering, Faculty of Engineering, University of Isfahan, Iran",2011,WICSA
469,470,"In the last decade, context aware computing has become the central focus of the ubiquitous computing where computers disappear in the background of people s everyday life activities  Context aware adaptive systems are able to adapt themselves according to the gathered context information  In this context, many approaches have been proposed in order to model the former systems but only few of them tackle at the same time all the features of these systems  This paper presents a formal modeling approach based on Bigraphical Reactive Systems to deal with both the structural and behavioral aspects of context aware adaptive systems  It provides a clear separation between the context aware information that affect the system and the system itself  Indeed, we specify the context and the system using two distinct bigraphs, then we combine them using the bigraphs composition operation to represent the whole system    2013 Springer Verlag   7 refs",Towards a bigraph based model for context aware adaptive systems,"['Software architecture', 'Ubiquitous computing', 'Bigraphical reactive systems', 'Bigraphs', 'Context information', 'Context-Aware', 'Context-aware computing', 'Context-aware informations', 'Formal modeling', 'Computer Programming', 'Computer Applications', 'Control Systems']","['Cherfia, Taha Abdelmoutaleb', '', '', 'Belala, Fa za']","Department of Software Technologies and Information Systems, University of Constantine II, Constantine, Algeria",2013,ECSA
470,471,"In the last several years, the concept of a design decision has become important in the software architecture design community  A design decision begins with an issue and then focuses on the alternative solutions and the rationale for these solutions  The question of where the issues come from is not usually addressed within this approach  In this paper, we present a  generate and test  approach to design  If the design process is viewed as a generate and test process, then the set of questions that must be answered include where does the initial hypothesis come from, what are our test cases for any hypothesis, and how is the next hypothesis generated    2009 IEEE   11 refs",Generate and test as a software architecture design approach,"['Architecture', 'Computer software', 'Design', 'Software design', 'Design decisions', 'Design process', 'Initial hypothesis', 'Software architecture design', 'Test case', 'Test process', 'Buildings and Towers', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Engineering Graphics']","['Bass, Len']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA 15213, United States",2009,ECSA
471,472,"In the last several years, the concept of a design decision has become important in the software architecture design community  A design decision begins with an issue and then focuses on the alternative solutions and the rationale for these solutions  The question of where the issues come from is not usually addressed within this approach  In this paper, we present a  generate and test  approach to design  If the design process is viewed as a generate and test process, then the set of questions that must be answered include where does the initial hypothesis come from, what are our test cases for any hypothesis, and how is the next hypothesis generated    2009 IEEE   11 refs",Generate and test as a software architecture design approach,"['Architecture', 'Computer software', 'Design', 'Software design', 'Design decisions', 'Design process', 'Initial hypothesis', 'Software architecture design', 'Test case', 'Test process', 'Buildings and Towers', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Engineering Graphics']","['Bass, Len']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA 15213, United States",2009,WICSA
472,473,"In the last several years, the concept of a design decision has become important in the software architecture design community  A design decision begins with an issue and then focuses on the alternative solutions and the rationale for these solutions  The question of where the issues come from is not usually addressed within this approach  In this paper, we present a  generate and test  approach to design  If the design process is viewed as a generate and test process, then the set of questions that must be answered include where does the initial hypothesis come from, what are our test cases for any hypothesis, and how is the next hypothesis generated    2009 IEEE   11 refs",Generate and test as a software architecture design approach,"['Architecture', 'Computer software', 'Design', 'Software design', 'Design decisions', 'Design process', 'Initial hypothesis', 'Software architecture design', 'Test case', 'Test process', 'Buildings and Towers', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Engineering Graphics']","['Bass, Len']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA 15213, United States",2011,WICSA
473,474,"In the past 70 years, science research methods have expanded from test tubes and beakers to include simulations in software  Scientific software is produced in a larger environment of collaboration that includes not only software developers, but also scientists who both use and extend the software for their research endeavors  The objective of this research is to understand the factors that promote and inhibit ecosystem formation and sustainment specific to scientific research software development  We have identified a set of relevant problems inhibiting sustainability in the scientific software context, including development, evolution and maintenance, as well as funding and leadership  We have collected data and used existing business, software, and innovation analysis techniques to examine the artifacts from several scientific research projects  We interviewed significant actors in select scientific ecosystems  We describe the differences between scientific software ecosystems and commercial software ecosystems, our initial results from interviews and data analysis, and we provide a set of recommendations and approaches towards handling software sustainability  Data suggests an ecosystem strategy can contribute to the survivability and sustainability of research software  however, such a strategy, which may distract from sustainability, requires thought and effort be given to establishing and nurturing the ecosystem, which in turn distract from the research mission  At this stage these initial results point us to future potentially fruitful investigations    2014 ACM   26 refs",Scientific research software ecosystems,"['Ecosystems', 'Software architecture', 'Software testing', 'Sustainable development', 'Commercial software', 'Innovation analysis', 'Science policies', 'Science research', 'Scientific researches', 'Scientific softwares', 'Software developer', 'Software ecosystems', 'Ecology and Ecosystems', 'Computer Applications', 'Industrial Economics']","['Monteith, J', 'Yates', '', '', 'McGregor, John D', '', '', ' Ingram, John E', '', '']","Strategic Software Engineering Research Group, Clemson University, Clemson, SC 29634, United States",2014,ECSA
474,475,"In the present study we investigated the corrosion of high surface area carbons, which are used as supports for electrocatalysts in polymer electrolyte membrane fuel cells  PEMFCs   Our main focus thereby was to scrutinize if Pt catalyses carbon corrosion  For this aim we employed Raman spectroscopy for studying two different carbon blacks  CBs , i e , Vulcan XC72R  Cabot Corporation  and Ketjenblack EC 300J  AkzoNobel , both covered with Pt NPs as well as uncovered  In order to significantly degrade the CBs, we used a start stop protocol recommended by the FCCJ  Fuel Cell Commercialization Conference of Japan  as an accelerated stress test  AST   The relative high potentials involved, i e , 1 1 5 VRHE, inflicted a significant different electrochemical surface area loss  ECSA  of the two Pt NP covered CBs, revealing the less stable character of Vulcan XC72R as compared to Ketjenblack EC 300J  Raman spectroscopy revealed clear changes in the carbon due to potential cycling  The most significant changes were found for the Vulcan support, with two pronounced peaks above 1730 cm 1 appearing in the spectra  The peaks can be assigned to the partial oxidation of the carbon support  Interestingly, the same changes due to the AST have been found both for the Pt loaded and the bare Vulcan support  Unlike on Vulcan, on Ketjenblack no unambiguous peaks at these Raman shifts were detected after the AST, but only a small shoulder  Again no significant difference was found between the spectra of the treated bare Ketjenblack and the Pt NP covered support    2013 Elsevier Ltd   42 refs",Investigating the corrosion of high surface area carbons during start stop fuel cell conditions  A Raman study,"['Carbon', 'Corrosion', 'Degradation', 'Electric circuit breakers', 'Electrocatalysts', 'Platinum', 'Raman spectroscopy', 'Accelerated stress', 'Cabot corporations', 'Electrochemical surface area', 'Fuel cell catalysts', 'Fuel cell commercialization', 'Partial oxidations', 'Polymer electrolyte membrane fuel cell (PEMFCs)', 'Potential cycling', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Light Optics', 'Electric Power Lines and Equipment', 'Fuel Cells', 'Precious Metals']","['Zana, Alessandro', '', '', 'Speder, Jozsef', '', '', 'Reeler, Nini E A', '', ',', '', ' Vosch, Tom', '', '', 'Arenz, Matthias']","Department of Chemistry and Nano Science Center, University of Copenhagen, Universitetsparken 5, Copenhagen DK 2100, Denmark  2  Sino Danish Centre for Education and Research  SDC , Niels Jensens Vej 2, Aarhus DK 8000, Denmark",2013,ECSA
475,476,"In the presented work we investigate the influence of the Pt to carbon ratio on the degradation behavior of Pt based proton exchange membrane fuel cell  PEMFC  catalysts  In order to enable a systematic investigation, we utilized a recently developed colloidal synthesis approach for preparing catalysts with identical Pt nanoparticles  NPs , but varying Pt loadings  Two different commercially available, standard carbon supports were used, Vulcan XC72 and Ketjenblack EC 300  We evaluated the influence of the platinum loading on the electrochemical surface area  ECSA  loss by applying accelerated stress tests simulating a load cycle in a PEMFC and start up shutdown conditions  Simulating load cycles, no clear influence of the Pt loading on the ECSA loss is observed, whereas the ECSA loss significantly increases with increasing Pt loading when simulating start up shutdown conditions    2013 Elsevier B V  All rights reserved   19 refs",On the influence of the Pt to carbon ratio on the degradation of high surface area carbon supported PEM fuel cell electrocatalysts,"['Carbon', 'Electrocatalysts', 'Platinum', 'Stress analysis', 'Synthesis (chemical)', 'Accelerated stress', 'Carbon corrosion', 'Colloidal synthesis', 'Degradation behavior', 'Electrochemical surface area', 'High surface area', 'Platinum loadings', 'Polymer electrolyte fuel cells', 'Materials Science', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Fuel Cells', 'Precious Metals', 'Strength of Building Materials  Mechanical Properties']","['Speder, Jozsef', '', '', 'Zana, Alessandro', '', '', 'Spanos, Ioannis', '', '', 'Kirkensgaard, Jacob J K', '', '', ' Mortensen, Kell', '', '', 'Arenz, Matthias']","Nano Science Center, Department of Chemistry, University of Copenhagen, Universitetsparken 5, DK 2100 Copenhagen  , Denmark  2  Niels Bohr Institute, University of Copenhagen, Universitetsparken 5, DK 2100 Copenhagen  , Denmark",2013,ECSA
476,477,"In the software architecture education session, we discussed four main issues  how to make a software architecture course sufficiently realistic, how to teach non technical competencies of software architects, the place of such a course in a university curriculum, and how to grow software architects beyond the university  The session resulted in a first sketch of software architecture knowledge areas, and the extent to which these are deemed required for certain classes of software professionals    2005 IEEE   4 refs",Software architecture education session report,"['Curricula', 'Engineering education', 'Knowledge engineering', 'Professional aspects', 'Technical presentations', 'Education sessions', 'Non technical competencies', 'Software professionals', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Engineering Professional Aspects', 'Education']","['Shaw, Mary', '', '', 'Van Vliet, Hans']","Carnegie Mellon University, Pittsburgh, United States  2  Vrije Universiteit, Amsterdam, Netherlands",2005,WICSA
477,478,"In the software domain, self adaptive systems are able to modify their behavior at run time to respond to changes in the environment they run, to changes of the users  requirements or to changes occurring in the system it self  In life science, biological cells are power entities able to adapt to the  unpredictable  situations they incur in, in a complete decentralized fashion  Learning adaptation mechanism from the cell life cycle, we propose in this paper a new architectural paradigm for self adaptive software systems    2010 Springer Verlag Berlin Heidelberg   6 refs",Learning from the cell life cycle  A self adaptive paradigm,"['Adaptive systems', 'Computer software', 'Embedded systems', 'Adaptation mechanism', 'Biological cells', 'Cell life', 'Life-sciences', 'Runtimes', 'Self-adaptive', 'Self-adaptive software', 'Self-adaptive system', 'Software domains', 'Computer Software, Data Handling and Applications']","['Di Marco, Antinisca', '', '', 'Gallo, Francesco', '', '', 'Inverardi, Paola', '', '', 'Ippoliti, Rodolfo']","Dipartimento di Informatica, University of l Aquila, Italy  2  Dipartimento di Biologia di Base Ed Applicata, University of l Aquila, Italy",2010,ECSA
478,479,"In the whole system composed by traditional OS and the applications above, the states are distributed into each layer of the system because of the hierarchy  This increases the difficulties of fault diagnosis and recovery in autonomous computing  In addition, the monitor process that examines the application still belongs to the application  This is awkward because it is the application itself that monitors itself  We propose a new autonomous OS software architecture  By imitating the octopus, the architecture adopts two layers of feedback closed loops and manages the important states of the whole system centrally  The feedback closed loops running on the higher privilege level monitor the ones running on the lower privilege level  Its main innovative features are  i  Treat OS and the applications above as one whole system  ii  The application cannot monitor itself  Processes with higher privilege level monitor processes with lower privilege level    2005 IEEE   2 refs",Octopus architecture  A new attempt to achieve reliable OS,"['Autonomous agents', 'Closed loop control systems', 'Computer operating systems', 'Distributed computer systems', 'Feedback', 'Autonomous computing', 'Autonomous software architecture', 'Feedback closed loops', 'Octopus architecture', 'Computer Systems and Equipment', 'Digital Computers and Systems', 'Computer Programming', 'Computer Applications', 'Control Systems', 'Systems Science']","['Li, Hang', '', '', 'Liu, Xi Yang', '', '', 'Chen, Ping']","Software Engineering Institute, Xidian University, No 2 South TaiBai Road, Xi an, Shaanxi, 710071, China",2005,WICSA
479,480,"In this paper we contribute to the issue of integrating architectural description notations into OMG based modeling techniques using a meta ADL   The outcome of this work is a meta ADL that helps in approaching issues such as mapping, comparing, and unifying ADLs    2005 IEEE   6 refs",Mapping ADLs into UML 2 0 using a meta ADL,"['Conformal mapping', 'Information technology', 'Mathematical models', 'Metadata', 'Unified Modeling Language', 'Meta ADL', 'Modeling techniques', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Information Science', 'Mathematics']","['Smeda, Adel', '', '', 'Oussalah, Mourad', '', '', 'Khammaci, Tahar']","LINA, University of Nantes, 2, Rue de la Houssini re, 44322 Nantes Cedex 03, France",2005,WICSA
480,481,"In this paper we describe our preliminary experiences of a performance modeling  Blending  approach for early life cycle architecture assessment and risk mitigation in a large enterprise integration project  The goal was to use performance modeling to assist with defining the requirements for the system and to identify areas of architecture and technology risk which could be addressed in future phases of the project  We modified our Service Oriented Performance Modeling approach to enable useful models to be constructed from a variety of imprecise and incomplete information sources prior to the existence of concrete requirements or implementations  Activities iterated over two phases and included scenario and workload modeling in phase 1, and integration infrastructure, workload and blended modeling in phase 2  The resulting models enabled early discovery and exploration of critical assumptions and architectural alternatives  One critical assumption is explored in more detail as an example  This is the impact of the specific location of services, which was predicted to require a large variation in resource requirements across the integration infrastructure  We demonstrate this with example models and explore possible solutions based on dynamic service load balancing  Copyright   2012 ACM   12 refs",Experiences with early life cycle performance modeling for architecture assessment,"['Blending', 'Integration', 'Architecture assessment', 'Enterprise Integration', 'In-phase', 'Incomplete information', 'ON dynamics', 'Performance Modeling', 'Resource requirements', 'Risk mitigation', 'Service Oriented', 'Specific location', 'Technology risks', 'Workload modeling', 'Chemical Operations', 'Production Engineering', 'Calculus']","['Brebner, Paul']","NICTA ANU, Canberra Research Laboratory, 7A London Circuit, Canberra, Australia",2012,QoSA
481,482,"In this paper we determine analytically the effectiveness of dynamic artificial diversity, i e , artificial diversity in which the subject of the diversity is re randomized periodically and mechanically  We refer to a mechanism that implements dynamic diversity as a Metamorphic Shield since this mechanism applies metamorphosis to the system s attack surface to try to shield the system from certain attacks  Contrary to intuition, our analysis reveals that dynamic diversity appears to provide limited benefit except in special cases  In particular, it offers benefit for attacks that seek to leak information  We present a case study of the use of dynamic diversity applied to Instruction Set Randomization that is subject to an incremental attack on the key    2010 ACM   12 refs",On the effectiveness of the metamorphic shield,"['Computer simulation', 'Software architecture', 'Technical presentations', 'Artificial diversity', 'attack surface', 'Instruction-set randomization', 'security', 'Temporal diversity', 'Virtual machines', 'Computer Applications', 'Information Dissemination', 'Mechanics']","['Nguyen Tuong, Anh', '', '', 'Wang, Andrew', '', '', 'Hiser, Jason D', '', '', ' Knight, John C', '', '', ' Davidson, Jack W', '', '']","University of Virginia, Department of Computer Science, 151 Engineer s Way, Charlottesville, VA 22904, United States",2010,ECSA
482,483,"In this paper we introduce a method for runtime verification of the behavior of a system against state machines models in order to identify inconsistencies between the two  This is achieved by tracking states and transitions at runtime and comparing with the expected behavior of the system captured in the form of state machine models  The goal is to increase our confidence that the order of states at runtime matches what is specified by the models  The method also provides for defect localization by identifying that in the transition between which states a deviation from the expected behavior has occurred  The necessity and importance of the method lies in the fact that in model based development, models are also used to perform analysis  Therefore, if there is any discrepancy between the behavior of the system at runtime and the models, then the result of model based analyses which are performed may also be invalid and not applicable for the system anymore  For this purpose, in our method we create executable test cases from state machine models to test the runtime behavior of the system  Copyright   2014 ACM 978 1 4503 2523 3 14  04 15 00   28 refs",Runtime verification of state machines and defect localization applying model based testing,"['Software architecture', 'Static analysis', 'Behavioral consis tency', 'Defect localizations', 'Model based development', 'Model-based test', 'State machine', 'Non Mechanical Properties and Tests of Building Materials', 'Computer Programming', 'Materials Science']","['Saadatmand, Mehrdad', ' ,', '', ' Scholle, Detlef', '', '', 'Leung, Cheuk Wing', '', '', 'Ullstr m, Sebastian', '', '', 'Larsson, Joanna Fredriksson']","Alten AB, Stockholm, Sweden  2  M lardalen University, V ster s, Sweden",2014,WICSA
483,484,"In this paper we present a novel formalism for defining properties over linear execution traces, namely elective temporal logic  ETL   Differently from several other temporal logics, ETL is not dedicated to a specific time model, e g  discrete time or real time  Hence, properties can be applied to each temporal context with no changes to the specified formulas  Moreover, the ETL denotational semantics is given through elective functions  In this way we map formulas into the characteristic functions of a set of accepted traces, i e  the valid executions  A further contribution of this work is an application of ETL to runtime monitoring  As a matter of fact, using a security monitor driven by an ETL formula, we can ignore irrelevant security actions performed by the guarded program reducing the monitor workload    2011 ACM   15 refs",Elective temporal logic,"['Semantics', 'Software architecture', 'Characteristic functions', 'Denotational semantics', 'Discrete time', 'elective temporal logic', 'Execution trace', 'history-based verification', 'program monitoring', 'Real time', 'Runtime Monitoring', 'Specific time', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming', 'Information Dissemination']","['Costa, Gabriele', '', '', 'Matteucci, Ilaria']","University of Pisa, IIT CNR, Pisa, Italy  2  IIT CNR, Pisa, Italy",2011,QoSA
484,485,"In this paper we present an approach for supporting the semi automated abstraction of architectural models throughout the software lifecycle  It addresses the problem that the design and the implementation of a software system often drift apart as software systems evolve, leading to architectural knowledge evaporation  Our approach provides concepts and tool support for the semi automatic abstraction of architectural knowledge from implemented systems and keeping the abstracted architectural knowledge up to date  In particular, we propose architecture abstraction concepts that are supported through a domainspecific language  DSL   Our main focus is on providing architectural abstraction specifications in the DSL that only need to be changed, if the architecture changes, but can tolerate non architectural changes in the underlying source code  The DSL and its tools support abstracting the source code into UML component models for describing the architecture  Once the software architect has defined an architectural abstraction in the DSL, we can automatically generate UML component models from the source code and check whether the architectural design constraints are fulfilled by the models  Our approach supports full traceability between source code elements and architectural abstractions, and allows software architects to compare different versions of the generated UML component model with each other  We evaluate our research results by studying the evolution of architectural abstractions in different consecutive versions and the execution times for five existing open source systems  Copyright   2012 ACM   41 refs",DSL based support for semi automated architectural component model abstraction throughout the software lifecycle,"['Abstracting', 'Architectural design', 'Automation', 'Computer programming languages', 'Computer software', 'DSL', 'Life cycle', 'Software architecture', 'Abstracting', 'Architectural design', 'Automation', 'Computer programming languages', 'Computer software', 'DSL', 'Life cycle', 'Software architecture', 'Architectural abstraction', 'Architectural components', 'Model transformation', 'Software Evolution', 'UML', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Automatic Control Principles and Applications', 'Control Devices', 'Information Sources and Analysis', 'Production Engineering']","['Haitzer, Thomas', '', '', 'Zdun, Uwe']","Software Architecture Group, Faculty of Computer Science, University of Vienna, Austria",2012,QoSA
485,486,"In this paper we propose SysADL, a SysML profile for expressing architecture descriptions using the well known and consolidated abstractions from the ADL community  We present the SysADL constructs for describing architectures and demonstrate its use in the context of a case study    2013 Springer Verlag   8 refs",SysADL  A SysML profile for software architecture description,"['Artificial intelligence', 'Computer science', 'Connectors (structural)', 'Architecture description languages', 'Components', 'Configuration', 'Profile', 'SysML', 'Structural Members and Shapes', 'Computer Circuits and Logic Elements', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Leite, Jair', '', '', 'Oquendo, Fl vio', '', '', 'Batista, Thais']","UFRN   Federal University of Rio Grande Do Norte, Natal, Brazil  2  IRISA, University of South Brittany, Vannes, France",2013,ECSA
486,487,"In this paper, and following other proposals, we present a model for classifying the research works done on the software architecture field  We also present some examples of classification  The final objective is not only to have a global vision about the research in this area but also to know where works is lacking    2005 IEEE   9 refs",Classifying software architecture quality research,"['Classification (of information)', 'Engineering education', 'Mathematical models', 'Quality management', 'Software architecture', 'Classification (of information)', 'Engineering education', 'Mathematical models', 'Quality management', 'Software architecture', 'Classication models', 'Research vision', 'Software architecture quality research', 'Management', 'Information Sources and Analysis', 'Engineering Research', 'Mathematics', 'Education', 'Computer Programming', 'Information Theory and Signal Processing', 'Computer Applications']","['Piattini, Mario', '', '', 'Calero, Coral', '', '', 'Astudillo, Hern n']","Department of Computer Science, Universidad de Castilla La Mancha, Paseo de la Universidad, 4, 13071, Ciudad Real, Spain  2  Departmento de Inform tica, Universidad T cnica Federico Santa Maria, Avda  Espa a 1680, Valpara so, Chile",2005,WICSA
487,488,"In this paper, the notion of forces as influences upon architecture decisions is introduced  To facilitate the documentation of forces as a part of architecture descriptions, we specify a decision forces viewpoint, which extends our existing framework for architecture decisions, following the conventions of the international architecture description standard ISO IEC IEEE 42010  The applicability of the viewpoint was validated in three case studies, in which senior software engineering students used it to document decisions in software projects, two of which conducted for industrial customers  The results show that the forces viewpoint is a well received documentation approach, satisfying stakeholder concerns related to traceability between decision forces and architecture decisions    2012 IEEE   26 refs",Forces on architecture decisions   A viewpoint,"['Architecture decisions', 'Architecture description', 'forces', 'Industrial customer', 'ISO/IEC/IEEE 42010', 'Software engineering students', 'Software project', 'Computer Programming']","['Van Heesch, Uwe', '', '', 'Avgeriou, Paris', '', '', 'Hilliard, Rich']","University of Groningen, Fontys University of Applied Sciences, Venlo, Netherlands  2  University of Groningen, Groningen, Netherlands",2012,ECSA
488,489,"In this paper, the notion of forces as influences upon architecture decisions is introduced  To facilitate the documentation of forces as a part of architecture descriptions, we specify a decision forces viewpoint, which extends our existing framework for architecture decisions, following the conventions of the international architecture description standard ISO IEC IEEE 42010  The applicability of the viewpoint was validated in three case studies, in which senior software engineering students used it to document decisions in software projects, two of which conducted for industrial customers  The results show that the forces viewpoint is a well received documentation approach, satisfying stakeholder concerns related to traceability between decision forces and architecture decisions    2012 IEEE   26 refs",Forces on architecture decisions   A viewpoint,"['Architecture decisions', 'Architecture description', 'forces', 'Industrial customer', 'ISO/IEC/IEEE 42010', 'Software engineering students', 'Software project', 'Computer Programming']","['Van Heesch, Uwe', '', '', 'Avgeriou, Paris', '', '', 'Hilliard, Rich']","University of Groningen, Fontys University of Applied Sciences, Venlo, Netherlands  2  University of Groningen, Groningen, Netherlands",2012,WICSA
489,490,"In this paper, we address the correct refinement of abstract architectural models into more platform specific representations  We consider the challenging case of dynamic architectures which can perform run time reconfigurations  For this purpose, the underlying platform has to provide the necessary reconfiguration mechanisms  To conceptually model such platforms including provided reconfiguration mechanisms, we use architectural styles formalized by graph transformation rules  Based on formal refinement relations between abstract and platform specific styles, we can then investigate how to realize business specific scenarios on a certain platform by automatically deriving refined, platform specific reconfiguration scenarios   28 refs",Style based refinement of dynamic software architectures,"['formal specification', 'formal verification', 'software architecture', 'style-based refinement', 'dynamic software architectures', 'abstract architectural models', 'platform-specific representations', 'run-time reconfigurations', 'architectural styles', 'graph transformation rules', 'formal refinement relations', 'platform-specific reconfiguration', 'Software engineering techniques', 'Formal methods']","['Baresi, L', '', '', ' Heckel, R', ' Thone, S', ' Varro, D']","Dipt  di Elettron  e Inf , Politecnico di Milano, Milan, Italy",2004,WICSA
490,491,"In this paper, we address the correct refinement of abstract architectural models into more platform specific representations  We consider the challenging case of dynamic architectures which can perform runtime reconfigurations  For this purpose, the underlying platform has to provide the necessary reconfiguration mechanisms  To conceptually model such platforms including provided reconfiguration mechanisms, we use architectural styles formalized by graph transformation rules  Based on formal refinement relations between abstract and platform specific styles, we can then investigate how to realize business specific scenarios on a certain platform by automatically deriving refined, platform specific reconfiguration scenarios   28 refs",Style based refinement of dynamic software architectures,"['Constraint theory', 'Graph theory', 'Mathematical transformations', 'Mobile telecommunication systems', 'Problem solving', 'Resource allocation', 'Architectural models', 'Dynamic architectures', 'Run-time configuration', 'Software architectures', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory', 'Mathematical Transformations', 'Management', 'Artificial Intelligence', 'Computer Programming', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Telecommunication  Radar, Radio and Television']","['Baresi, Luciano', '', '', 'Heckel, Reiko', '', '', 'Th ne, Sebastian', '', '', 'Varr , D niel']","Politecnico di Milano, Dipartimento di Elettronica, Italy  2  University of Paderborn, Department of Computer Science, Germany  3  University of Paderborn, International Graduate School, Germany  4  Budapest Univ  of Technol  and Econ , Department of Measurement, Hungary",2004,WICSA
491,492,"In this paper, we describe the importance of new Software Enterprise architects in the discipline of Software Architecture and Enterprise Architecture  Both are often idealized as super heroes with a lot of qualities that are very infrequent in contemporary people  The Enterprise Software Architect role could be assumed by a group of people able to manage the qualities for the role  In any case, even a group or a single person must be educated in the discipline by training courses, new methodologies of learning, or traditional university studies  In order to improve the process of becoming a new architect we propose a methodology based on ontological structures and reinforcement learning    2007 IEEE   22 refs",Training initiative for new Software Enterprise architects  An ontological approach,"['Data structures', 'Engineering education', 'Information management', 'Learning systems', 'Ontology', 'Enterprise Architecture', 'Enterprise/Software Architect', 'Ontological structures', 'Training courses', 'Computer Programming', 'Data Processing and Image Processing', 'Artificial Intelligence', 'Computer Applications', 'Education', 'Management']","['Fraga, Anabel', '', '', 'Llorens, Juan']","Universidad Carlos III de Madrid, Av  Universidad, 30, Legon s, Madrid, Spain",2007,WICSA
492,493,"In this paper, we describe the importance of new software enterprise architects in the discipline of software architecture and enterprise architecture  Both are often idealized as super heroes with a lot of qualities that are very infrequent in contemporary people  The enterprise software architect role could be assumed by a group of people able to manage the qualities for the role  In any case, even a group or a single person must be educated in the discipline by training courses, new methodologies of learning, or traditional university studies  In order to improve the process of becoming a new architect we propose a methodology based on ontological structures and reinforcement learning   22 refs",Training initiative for new software enterprise architects  an ontological approach,"['computer science education', 'learning (artificial intelligence)', 'ontologies (artificial intelligence)', 'software architecture', 'training', 'software-enterprise architects', 'ontological approach', 'training courses', 'university studies', 'reinforcement learning', 'Computing education and training', 'Software engineering techniques', 'Knowledge engineering techniques']","['Fraga, A', '', '', ' Llorens, J', '', '']","Univ  Carlos III de Madrid, Madrid, Spain",2007,WICSA
493,494,"In this paper, we describe the short summary of the tool demonstrations session at WICSA ECSA 2012  The session aimed to attract both tools in practice and research tools  We describe the targeted topics for the tool support, and report on the program  Copyright is held by author owner s    6 refs",Software architecture tool demonstrations,"['Computer applications', 'Tools', 'Demo', 'Research tools', 'Tool demonstration', 'Tool support', 'Machine Tools', 'Small Tools and Hardware', 'Computer Applications']","['Muccini, Henry', '', '', 'Tekinerdogan, Bedir']","Dipartimento di Informatica, University of l Aquila, Italy  2  Department of Computer Engineering, Bilkent University, Ankara, Turkey",2012,ECSA
494,495,"In this paper, we describe the short summary of the tool demonstrations session at WICSA ECSA 2012  The session aimed to attract both tools in practice and research tools  We describe the targeted topics for the tool support, and report on the program  Copyright is held by author owner s    6 refs",Software architecture tool demonstrations,"['Computer applications', 'Tools', 'Demo', 'Research tools', 'Tool demonstration', 'Tool support', 'Machine Tools', 'Small Tools and Hardware', 'Computer Applications']","['Muccini, Henry', '', '', 'Tekinerdogan, Bedir']","Dipartimento di Informatica, University of l Aquila, Italy  2  Department of Computer Engineering, Bilkent University, Ankara, Turkey",2012,WICSA
495,496,"In this paper, we develop a Risk Identification Method based on Value Chain Dynamics Toolkit  VCDT  and apply it to a Risk Analysis of Host Identity Protocol  HIP  in a simple host server scenario  The HIP Risk Analysis revealed no new risks inherent to the protocol itself  A number of potential risks in a typical deployment were identified  These risks should be analyzed and mitigated in the actual HIP deployment  The new Risk Identification method provided benefits, particularly in the knowledge transfer, structuring of the interviews and visualization of the value chain  Further study is needed on how to cover trust  and privacy aspects, how to improve ease of documentation and how to proceed from risk identification to security testing    2010 ACM   20 refs",Risk analysis of host identity protocol  Using risk identification method based on value chain dynamics toolkit,"['Knowledge management', 'Mobile telecommunication systems', 'Risk assessment', 'Risk perception', 'Software architecture', 'Technical presentations', 'Visualization', 'HIP', 'Host identity protocol', 'Knowledge transfer', 'Potential risks', 'Privacy aspects', 'risk identification', 'Security testing', 'Value chains', 'Probability Theory', 'Statistical Methods', 'Accidents and Accident Prevention', 'Safety Engineering', 'Industrial Engineering and Management', 'Cost and Value Engineering  Industrial Economics', 'Information Dissemination', 'Engineering Graphics', 'Computer Applications', 'Computer Programming', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television']","['S', 'skilahti, Juha', '', '', 'S rel , Mikko']","Ericsson, Oy L M Ericsson Ab, Hirsalantie 11, 02420 Jorvas, Finland",2010,ECSA
496,497,"In this paper, we present a formalization of the definition of metrics to assess quality attributes of CORBA components and assemblies  The focus is on the formalization technique, rather than on the evaluation of the metrics themselves  We represent a component assembly as an instantiation of the CORBA component model metamodel  The resulting meta object diagram can then be traversed using Object Constraint Language clauses  With these clauses, we construct a formal and executable definition of the metrics  We demonstrate the expressiveness of our technique by formally defining metrics proposed informally by several authors on different aspects of components and assemblies  quality attributes  We provide a formal and executable definition of metrics for CORBA components and assemblies is an enabling precondition to allow for independent scrutiny of such metrics, which is, in turn, essential to increase practitioners  confidence on predictable quality attributes   35 refs",Formal definition of metrics upon the CORBA component model,"['distributed object management', 'formal specification', 'formal verification', 'object-oriented programming', 'software metrics', 'software quality', 'CORBA component model', 'quality attributes', 'meta-object diagram', 'Object Constraint Language clauses', 'Object oriented programming', 'Distributed systems software', 'Software metrics', 'Formal methods', 'Software engineering techniques']","['Goulao, M', '', '', ' Abreu, F B', '', '']","Dept  de Inf , FCT UNL, Lisbon, Portugal",2005,QoSA
497,498,"In this paper, we present a novel technique for assessing and prioritizing architectural quality in large scale software development projects  The technique can be applied with relatively little effort by software architects and thus suited for agile development in which quality attributes can be assessed and prioritized, e g , within each development sprint  We outline the processes and metrics embodied in the technique, and report initial experiences on the benefits and liabilities  In conclusion, the technique is considered valuable and a viable tool, and has benefits in an architectural, technical, context, as well as in a business and people context    2010 Springer Verlag Berlin Heidelberg   22 refs",Lightweight and continuous architectural software quality assurance using the aSQA technique,"['Computer software selection and evaluation', 'Quality assurance', 'Software design', 'Agile development', 'Architectural quality', 'Large-scale softwares', 'Novel techniques', 'Quality attributes', 'Software architects', 'Software quality assurance', 'Computer Software, Data Handling and Applications', 'Quality Assurance and Control']","['Christensen, Henrik Brbak', '', '', 'Hansen, Klaus Marius', '', '', 'Lindstrm, Bo']","Department of Computer Science, Aarhus University, Aarhus, Denmark  2  Department of Computer Science, University of Iceland, Reykjav k, Iceland  3  Systematic A S, Aarhus, Denmark",2010,ECSA
498,499,"In this paper, we present an approach that supports efficient quality impact analyses in the context of iteratively constructed architectures  Since the number of established architectural strategies and the number of inter related models heavily increase during iterative architecture construction, the impact analysis of newly introduced quality strategies during later stages becomes highly effort intensive and error prone  With our approach we mitigate the effort needed for such quality impact analyses by enabling efficient separation of concerns  For achieving efficiency, we developed an aspect oriented approach that enables the automatic weaving of quality strategies into architectural artifacts  By doing so, we are able to conduct selective quality impact evaluations with significantly reduced effort    2008 IEEE   14 refs",Efficient quality impact analyses for iterative architecture construction,"['Architecture', 'Error analysis', 'Separation', 'Software architecture', 'Architectural artifacts', 'Aspect orientation', 'Aspect-oriented', 'Error-prone', 'Impact analysis', 'Model weaving', 'Quality impacts', 'Quality-centric views', 'Separation of concerns', 'Buildings and Towers', 'Computer Programming', 'Chemical Operations', 'Quality Assurance and Control', 'Numerical Methods']","['Keuler, Thorsten', '', '', 'Muthig, Dirk', '', '', 'Uchida, Takayuki']","Fraunhofer Institute for Experimental Software Engineering  IESE , Fraunhofer Platz 1, 67663 Kaiserslautern, Germany  2  Ricoh Company, Ltd , 8 13 1 Ginza, 104 8222 Chuo ku, Tokyo, Japan",2008,WICSA
499,500,"In this paper, we present an approach to improve the software architecture evaluation process by systematically extracting and appropriately documenting architecturally significant information from software architecture and design patterns  we are interested in only two pieces of information found in software patterns  general scenarios and architectural tactics  General scenarios distilled from patterns not only assist stakeholders in developing concrete scenarios during a scenario based architecture evaluation, but can also help an architect select and calibrate a quality attribute reasoning framework  Architectural tactics in patterns are used as a means of manipulating independent parameters in the reasoning framework to achieve the desired quality  Moreover, we believe if we use general scenarios and tactics extracted from patterns in an architectural evaluation, the results of that evaluation can be used as an evidence to validate the pattern s claim with respect to the quality attributes  We demonstrate our approach by using EJB architecture usage patterns  We contend that this approach can be used to analyze and validate any architecture pattern   27 refs",Mining patterns to support software architecture evaluation,"['Algorithms', 'Buffer storage', 'Data structures', 'Information analysis', 'Pattern matching', 'Program documentation', 'Quality control', 'Software engineering', 'Architectural evolution', 'Mining patterns', 'Quality assurance techniques', 'Quality attribute reasoning framework', 'Quality Assurance and Control', 'Information Sources and Analysis', 'Computer Applications', 'Data Processing and Image Processing', 'Computer Programming', 'Data Storage, Equipment and Techniques', 'Computer Systems and Equipment']","['Zhu, Liming', '', '', 'Babar, Muhammad Ali', '', '', 'Jeffery, Ross']","National ICT Australia Ltd , University of New South Wales, Australia",2004,WICSA
500,501,"In this paper, we present an approach to improve the software architecture evaluation process by systematically extracting and appropriately documenting architecturally significant information from software architecture and design patterns  we are interested in only two pieces of information found in software patterns  general scenarios and architectural tactics  General scenarios distilled from patterns not only assist stakeholders in developing concrete scenarios during a scenario based architecture evaluation, but can also help an architect select and calibrate a quality attribute reasoning framework  Architectural tactics in patterns are used as a means of manipulating independent parameters in the reasoning framework to achieve the desired quality  Moreover, we believe if we use general scenarios and tactics extracted from patterns in an architectural evaluation, the results of that evaluation can be used as an evidence to validate the pattern s claim with respect to the quality attributes  We demonstrate our approach by using EJB architecture usage patterns  We contend that this approach can be used to analyze and validate any architecture pattern   27 refs",Mining patterns to support software architecture evaluation,"['object-oriented programming', 'software architecture', 'software performance evaluation', 'software quality', 'software architecture evaluation', 'software design patterns', 'scenario-based architecture evaluation', 'quality attribute reasoning', 'architectural tactics', 'EJB architecture usage patterns', 'Software engineering techniques', 'Object oriented programming']","['Liming Zhu', '', '', 'Babar, M A', '', '', ' Jeffery, R', '', '']","New South Wales Univ , Sydney, NSW, Australia",2004,WICSA
501,502,"In this paper, we present industrial experiences made by combining two polarizing disciplines in software engineering  software architecture and agile software development  In particular, we show how architectural design decisions could be made, communicated, and sustained in an agile development environment by using a light weight component framework  The concepts of the component framework have proven to be effective in addressing challenges such as connecting architectural design decisions to a system s implementation and making the architecture tangible for the developers  This is of utmost importance when the software is delivered in accordance with agile principles, such as  working software over comprehensive documentation  or  responding to change over following a plan     2012 IEEE   12 refs",Architecture aware programming in agile environments,"['Architectural design', 'Software design', 'Agile development environments', 'Agile environment', 'Agile software development', 'Architectural design decisions', 'Component framework', 'Component-Based Development', 'Comprehensive documentation', 'Industrial experience', 'Lightweight components', 'Buildings and Towers', 'Computer Programming']","['Keuler, Thorsten', '', '', 'Wagner, Stefan', '', '', 'Winkler, Bernhard']","Fraunhofer Institute for Experimental Software Engineering, 67663 Kaiserslautern, Germany  2  John Deere European Technology Innovation Center, Division of Deere and Company, Kaiserslautern, Germany",2012,ECSA
502,503,"In this paper, we present industrial experiences made by combining two polarizing disciplines in software engineering  software architecture and agile software development  In particular, we show how architectural design decisions could be made, communicated, and sustained in an agile development environment by using a light weight component framework  The concepts of the component framework have proven to be effective in addressing challenges such as connecting architectural design decisions to a system s implementation and making the architecture tangible for the developers  This is of utmost importance when the software is delivered in accordance with agile principles, such as  working software over comprehensive documentation  or  responding to change over following a plan     2012 IEEE   12 refs",Architecture aware programming in agile environments,"['Architectural design', 'Software design', 'Agile development environments', 'Agile environment', 'Agile software development', 'Architectural design decisions', 'Component framework', 'Component-Based Development', 'Comprehensive documentation', 'Industrial experience', 'Lightweight components', 'Buildings and Towers', 'Computer Programming']","['Keuler, Thorsten', '', '', 'Wagner, Stefan', '', '', 'Winkler, Bernhard']","Fraunhofer Institute for Experimental Software Engineering, 67663 Kaiserslautern, Germany  2  John Deere European Technology Innovation Center, Division of Deere and Company, Kaiserslautern, Germany",2012,WICSA
503,504,"In this paper, we propose a negative scenario framework along with a mitigation action model as the linkage between safety quality attribute and architecture definition  The scenario framework provides an effective means of formulating safety concerns  The mitigation action model facilitates exploitation and codification of existing safety critical system design knowledge  Finally, we present a series of steps that enable the justification of architectural design decisions that refine both requirements and architectures  We demonstrate and discuss the application of our framework by means of a case study    2006 Springer Verlag   19 refs",Managing architectural design decisions for safety critical software systems,"['Architectural design', 'Computer software selection and evaluation', 'Action models', 'Safety concerns', 'Safety critical systems', 'Safety qualities', 'Safety-critical software systems', 'Buildings and Towers', 'Structural Design, General', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Wu, Weihang', '', '', 'Kelly, Tim']","Department of Computer Science, University of York, York YO10 5DD, United Kingdom",2006,QoSA
504,505,"In this paper, we propose a negative scenario framework along with a mitigation action model as the linkage between safety quality attribute and architecture definition  The scenario framework provides an effective means of formulating safety concerns  The mitigation action model facilitates exploitation and codification of existing safety critical system design knowledge  Finally, we present a series of steps that enable the justification of architectural design decisions that refine both requirements and architectures  We demonstrate and discuss the application of our framework by means of a case study   19 refs",Managing architectural design decisions for safety critical software systems,"['formal specification', 'safety-critical software', 'security of data', 'software architecture', 'architectural design decision management', 'safety-critical software systems', 'mitigation action model', 'safety quality attribute', 'architecture definition', 'system requirements', 'Software engineering techniques', 'Formal methods', 'Data security', 'Software management']","['Weihang Wu', '', '', 'Kelly, T', '', '']","Dept  of Comput  Sci , York Univ , York, United Kingdom",2006,QoSA
505,506,"In this paper, we propose the application of concepts from aspect oriented software development to facilitate modular treatment of dynamic reconfiguration descriptions in specification to deployment environments  Our strategy differs from earlier work in the area by blending aspects and architecture abstractions simply and seamlessly through a special kind of connector  called an aspectual connector   that encapsulates reconfiguration interactions  More specifically, we propose an aspect oriented specification to deployment environment, called AO Plastik, that uses our AspectualAcme ADL to specify dynamic reconfiguration by means of aspectual connectors, and maps these specifications onto a reflective component runtime platform    2008 Springer Verlag Berlin Heidelberg   8 refs",On the interplay of aspects and dynamic reconfiguration in a specification to deployment environment,"['Blending', 'Dynamic models', 'Software design', 'Specifications', 'Architecture abstractions', 'Architecture description language', 'Aspect-oriented software development', 'Component-based software', 'Dynamic reconfiguration', 'Dynamic reconfigurations', 'Re-configurations', 'Runtime platforms', 'Software developments', 'Computer Programming', 'Computer Applications', 'Chemical Operations', 'Codes and Standards', 'Mathematics']","['Batista, Thais', '', '', 'Gomes, Ant nio T', 'A', '', '', ' Coulson, Geoff', '', '', 'Chavez, Christina', '', '', 'Garcia, Alessandro']","Federal University of Rio Grande do Norte  UFRN , Natal, RN, Brazil  2  National Laboratory for Scientific Computing  LNCC , Petr polis, RJ, Brazil  3  Lancaster University, Lancaster, United Kingdom  4  Federal University of Bahia  UFBA , Salvador, BA, Brazil",2008,ECSA
506,507,"In this paper, we report on our experience assessing the relationship between the dependency structure of a software architecture and the coordination needs among distributed development teams  We use as a case study for global software development the Global Studio Project Version 3 0, where matrix models were used to represent both architectural dependencies and the coordination structure among the team members  Analysis of data gathered during the Global Studio Project Version 3 0 revealed that design structure matrix  DSM  models representing the modular structure of the software architecture are highly consistent with the social network matrix models that represent the actual coordination structure  We conclude that DSM modeling can help guide the task assignments in global software development projects    2008 IEEE   11 refs",Coordination implications of software architecture in a global software development project,"['Architecture', 'Digital signal processing', 'Electric load management', 'Matrix algebra', 'Modular construction', 'Product development', 'Software design', 'Studios', 'Analysis of data', 'Case studies', 'Co-ordination structures', 'Design Structure Matrix', 'Distributed development', 'Global Software Development', 'Matrix models', 'Modular structures', 'Social networks', 'Task assignments', 'Team members', 'Product Development  Concurrent Engineering', 'Computer Programming', 'Radio Systems and Equipment', 'Algebra', 'Information Theory and Signal Processing', 'Construction Methods', 'Buildings and Towers', 'Electric Power Systems']","['Avritzer, Alberto', '', '', 'Paulish, Daniel', '', '', 'Cai, Yuanfang']","Siemens Corporate Research, 755 College Road East, Princeton, NJ 08540  2  Dept  of Computer Science, Drexel University, Philadelphia, PA 19104, United States",2008,WICSA
507,508,"In this paper, we report on the development of a methodology for the evolution of software towards new architectures  In our approach, we represent source code as graphs  This enables the use of graph transformation rules, allowing the automation of the transformation process  Prior to its model representation, the source code is subject to a preparatory step of semi automatic code annotation according to the contribution of each of its parts in the target architecture  This paper first describes the overall methodology and then focuses on the code annotation and model transformation parts  We also discuss issues of the implementation of the approach based on existing tools    Springer Verlag Berlin Heidelberg 2007   14 refs",Architecture migration driven by code categorization,"['Codes (symbols)', 'Graphic methods', 'Mathematical models', 'Mathematical transformations', 'Architecture migration', 'Model representation', 'Source codes', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Mathematical Transformations']","['Correia, Rui', ' ,', '', ' Matos, Carlos M', 'P', '', ',', '', ' Heckel, Reiko', '', '', 'El Ramly, Mohammad']","Department of Computer Science, University of Leicester, University Road, Leicester, LEI 7RH, United Kingdom  2  ATX Software, Rua Saraiva de Carvalho 207C, 1350 300 Lisboa, Portugal  3  Computer Science Department, Cairo University, Egypt",2007,ECSA
508,509,"In this paper, we report on the development of a methodology for the evolution of software towards new architectures  In our approach, we represent source code as graphs  This enables the use of graph transformation rules, allowing the automation of the transformation process  Prior to its model representation, the source code is subject to a preparatory step of semi automatic code annotation according to the contribution of each of its parts in the target architecture  This paper first describes the overall methodology and then focuses on the code annotation and model transformation parts  We also discuss issues of the implementation of the approach based on existing tools    Springer Verlag Berlin Heidelberg 2007   14 refs",Architecture migration driven by code categorization,"['Codes (symbols)', 'Graphic methods', 'Mathematical models', 'Mathematical transformations', 'Architecture migration', 'Model representation', 'Source codes', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Mathematical Transformations']","['Correia, Rui', ' ,', '', ' Matos, Carlos M', 'P', '', ',', '', ' Heckel, Reiko', '', '', 'El Ramly, Mohammad']","Department of Computer Science, University of Leicester, University Road, Leicester, LEI 7RH, United Kingdom  2  ATX Software, Rua Saraiva de Carvalho 207C, 1350 300 Lisboa, Portugal  3  Computer Science Department, Cairo University, Egypt",2008,ECSA
509,510,"In this paper, we report on the development of a methodology for the evolution of software towards new architectures  In our approach, we represent source code as graphs  This enables the use of graph transformation rules, allowing the automation of the transformation process  Prior to its model representation, the source code is subject to a preparatory step of semi automatic code annotation according to the contribution of each of its parts in the target architecture  This paper first describes the overall methodology and then focuses on the code annotation and model transformation parts  We also discuss issues of the implementation of the approach based on existing tools   14 refs",Architecture migration driven by code categorization,"['graph grammars', 'program compilers', 'software architecture', 'software prototyping', 'software evolution', 'graph transformation rule', 'source code categorization', 'software architecture', 'code annotation', 'Software engineering techniques', 'Formal languages and computational linguistics', 'Compilers, interpreters and other processors']","['Correia, R', '', '', ' Matos, C M P', '', '', ' Heckel, R', '', '', ' El Ramly, M', '', '']","Dept  of Comput  Sci , Univ  of Leicester, Leicester, United Kingdom",2007,ECSA
510,511,"In this paper, we report on the development of a methodology for the evolution of software towards new architectures  In our approach, we represent source code as graphs  This enables the use of graph transformation rules, allowing the automation of the transformation process  Prior to its model representation, the source code is subject to a preparatory step of semi automatic code annotation according to the contribution of each of its parts in the target architecture  This paper first describes the overall methodology and then focuses on the code annotation and model transformation parts  We also discuss issues of the implementation of the approach based on existing tools   14 refs",Architecture migration driven by code categorization,"['graph grammars', 'program compilers', 'software architecture', 'software prototyping', 'software evolution', 'graph transformation rule', 'source code categorization', 'software architecture', 'code annotation', 'Software engineering techniques', 'Formal languages and computational linguistics', 'Compilers, interpreters and other processors']","['Correia, R', '', '', ' Matos, C M P', '', '', ' Heckel, R', '', '', ' El Ramly, M', '', '']","Dept  of Comput  Sci , Univ  of Leicester, Leicester, United Kingdom",2008,ECSA
511,512,"In this paper, we revisit the widely cited domainspecific software architecture  DSSA  for the domain of grid computing We have comprehensively studied 18 grid systems over the past five years, observing that, while individual grid systems are widely used and deemed successful, the grid DSSA is underspecified and makes it difficult to pinpoint what makes a software system a grid  Inspired by this conclusion, we describe our work in progress towards answering this important question    2009 IEEE   17 refs",The anatomy and physiology of the grid revisited,"['Architecture', 'Computer software', 'Grid computing', 'Physiology', 'Domain specific', 'Grid systems', 'Software systems', 'Work-in-progress', 'Buildings and Towers', 'Biology', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Mattmann, Chris A', '', ',', '', ' Garcia, Joshua', '', '', 'Krka, Ivo', '', '', 'Popescu, Daniel', '', '', 'Medvidovic, Nenad']","Computer Science Department, University of Southern California, Los Angeles, CA 90089, United States  2  Jet Propulsion Laboratory, California Institute of Technology, Pasadena, CA 91109, United States",2009,ECSA
512,513,"In this paper, we revisit the widely cited domainspecific software architecture  DSSA  for the domain of grid computing We have comprehensively studied 18 grid systems over the past five years, observing that, while individual grid systems are widely used and deemed successful, the grid DSSA is underspecified and makes it difficult to pinpoint what makes a software system a grid  Inspired by this conclusion, we describe our work in progress towards answering this important question    2009 IEEE   17 refs",The anatomy and physiology of the grid revisited,"['Architecture', 'Computer software', 'Grid computing', 'Physiology', 'Domain specific', 'Grid systems', 'Software systems', 'Work-in-progress', 'Buildings and Towers', 'Biology', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Mattmann, Chris A', '', ',', '', ' Garcia, Joshua', '', '', 'Krka, Ivo', '', '', 'Popescu, Daniel', '', '', 'Medvidovic, Nenad']","Computer Science Department, University of Southern California, Los Angeles, CA 90089, United States  2  Jet Propulsion Laboratory, California Institute of Technology, Pasadena, CA 91109, United States",2009,WICSA
513,514,"In this paper, we revisit the widely cited domainspecific software architecture  DSSA  for the domain of grid computing We have comprehensively studied 18 grid systems over the past five years, observing that, while individual grid systems are widely used and deemed successful, the grid DSSA is underspecified and makes it difficult to pinpoint what makes a software system a grid  Inspired by this conclusion, we describe our work in progress towards answering this important question    2009 IEEE   17 refs",The anatomy and physiology of the grid revisited,"['Architecture', 'Computer software', 'Grid computing', 'Physiology', 'Domain specific', 'Grid systems', 'Software systems', 'Work-in-progress', 'Buildings and Towers', 'Biology', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Mattmann, Chris A', '', ',', '', ' Garcia, Joshua', '', '', 'Krka, Ivo', '', '', 'Popescu, Daniel', '', '', 'Medvidovic, Nenad']","Computer Science Department, University of Southern California, Los Angeles, CA 90089, United States  2  Jet Propulsion Laboratory, California Institute of Technology, Pasadena, CA 91109, United States",2011,WICSA
514,515,"In this position paper, we present a vision towards supporting developers to better make use of architectural abstractions by providing  just in time  access to architectural knowledge  The concept presented in this paper is based on two main pillars  1  Onthe fly access to  living  artifacts  such as code, user stories, project plans, etc   with intelligent filtering and selection 2  Interactive presentation of architectural knowledge beyond static documentation of facts  Interactive searching, browsing and selecting relevant information in combination with intelligent decision support functions need to be installed into modern development environments which results in technical as well as social challenges  In this position paper, we sketch a vision pursuing the goal to make architectural knowledge easily accessible for every developer, especially when drowning in systemic implementation challenges  Copyright 2012 ACM   13 refs",Just in time  architectural knowledge for developers,"['Decision support systems', 'Knowledge management', 'Semantics', 'Architectural knowledge', 'Intelligent decision support', 'Interactive presentation', 'Just in time', 'Modern development', 'On-the-fly', 'Position papers', 'Project plans', 'Semantic search', 'Social challenges', 'User stories', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Information Retrieval and Use']","['Keuler, Thorsten']","Fraunhofer Institute for Experimental Software Engineering, 67663 Kaiserslautern, Germany",2012,ECSA
515,516,"In this position paper, we present a vision towards supporting developers to better make use of architectural abstractions by providing  just in time  access to architectural knowledge  The concept presented in this paper is based on two main pillars  1  Onthe fly access to  living  artifacts  such as code, user stories, project plans, etc   with intelligent filtering and selection 2  Interactive presentation of architectural knowledge beyond static documentation of facts  Interactive searching, browsing and selecting relevant information in combination with intelligent decision support functions need to be installed into modern development environments which results in technical as well as social challenges  In this position paper, we sketch a vision pursuing the goal to make architectural knowledge easily accessible for every developer, especially when drowning in systemic implementation challenges  Copyright 2012 ACM   13 refs",Just in time  architectural knowledge for developers,"['Decision support systems', 'Knowledge management', 'Semantics', 'Architectural knowledge', 'Intelligent decision support', 'Interactive presentation', 'Just in time', 'Modern development', 'On-the-fly', 'Position papers', 'Project plans', 'Semantic search', 'Social challenges', 'User stories', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Information Retrieval and Use']","['Keuler, Thorsten']","Fraunhofer Institute for Experimental Software Engineering, 67663 Kaiserslautern, Germany",2012,WICSA
516,517,"In this report, calcium ions in the porous hydroxyapatite  HAp  microspheres are partially exchanged with ferrous ions to form iron contained hydroxyapatite  FeHAp  on which Pt ions in H2PtCl6 solution are reduced to form Pt FeHAp catalyst and finally mixed with carbon blacks to derive Pt FeHAp C catalysts  They exhibit the characteristics of Pt  1 1 0  facet with a sharp desorption peak at  0 109 V  vs  Ag AgCl , the electrochemical surface area  ECSA  ranging from 73 to 224 m2 g 1 with little CO poisoning effect on Pt, and the mass activity ranging from 6 88 to 28 99 A gPt 1 in methanol oxidation reaction  MOR  at 0 4 V  vs  Ag AgCl   Besides, Pt FeHAp reveals the lower onset potential in CO stripping than Pt C  These better performances of Pt FeHAp C catalysts, compared with Pt C, are also related to the Pt  1 1 0  facet, the content of Fe, and the coexistence of Pt0 and Pt2  in Pt FeHAp    2013, Hydrogen Energy Publications, LLC  Published by Elsevier Ltd  All rights reserved   41 refs",Preparation and characterization of platinum iron contained hydroxyapatite carbon black composites,"['Carbon', 'Catalysts', 'Hydroxyapatite', 'Ions', 'Methanol', 'Platinum alloys', 'Better performance', 'Content of Fe', 'Desorption peaks', 'Electrochemical surface area', 'Mass activity', 'Methanol oxidation reactions', 'Onset potential', 'Porous hydroxyapatite', 'Precious Metals', 'Chemistry', 'Chemical Products Generally']","['Pai, Nai Su', '', '', 'Yen, Shiow Kang']","Department of Materials Science and Engineering, National Chung Hsing University, 250 Kuo Kuang Road, Taichung 40227, Taiwan",2013,ECSA
517,518,"In this study, platinum nanoparticles have been prepared using PtCl 4 as a starting material and 1 hexylamine, N methylhexylamine, N,N dimethylhexylamine, 1 heptylamine, N methylheptylamine, and N,N dimethylheptylamine as surfactants  All these surfactants were used in this synthesis, for the first time, to explore the effect of primary, secondary, and tertiary amine and chain length on the size and catalytic activity toward C1 C3 alcohol electro oxidation  The electrochemical performance of all catalysts was determined using cyclic voltammetry and chronoamperometry  These techniques indicate that the highest electrocatalytic performance was generally observed when electrochemical surface area  ECSA , percent platinum utility, roughness factor, and the number of CH3 groups attached to the nitrogen atom is higher and the chain length shorter  C6H13   In addition, other important properties such as the crystal structure of platinum, size, and distribution of the platinum nanoparticles on the carbon support, and Pt 0  to Pt IV  ratio, were determined using X ray photoelectron spectroscopy, X ray diffraction, atomic force microscopy, and transmission electron microscopy  It was found that increasing ECSA, Pt 0  Pt IV  ratio,   Pt utility, and roughness factor improves the C1 C3 alcohol oxidation catalytic performance    2013 Springer Science Business Media Dordrecht   30 refs",High performance Pt nanoparticles prepared by new surfactants for C 1 to C3 alcohol oxidation reactions,"['Atomic force microscopy', 'Carbon', 'Catalyst activity', 'Chain length', 'Chronoamperometry', 'Cyclic voltammetry', 'Electrooxidation', 'Fuel cells', 'Nanoparticles', 'Oxidation', 'Photoelectrons', 'Surface active agents', 'Transmission electron microscopy', 'X ray diffraction', 'X ray photoelectron spectroscopy', 'Alcohol oxidation', 'Carbon support', 'Catalytic performance', 'Electrocatalytic performance', 'Electrochemical performance', 'Electrochemical surface area', 'Platinum nano-particles', 'Pt nanoparticles', 'Crystal Lattice', 'Electrochemistry', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Polymers and Polymer Science', 'Solid State Physics', 'Chemistry', 'Optical Devices and Systems', 'Electromagnetic Waves', 'Electric and Magnetic Materials', 'Fuel Cells', 'Precious Metals', 'Nanotechnology']","['Sen, Fatih', '', '', 'G kaga , G ls n', '', '', 'Sen, Selda']","Chemistry Department, Middle East Technical University, 06531 Ankara, Turkey  2  Biochemistry Department, Dumlupinar University, 43020 Kutahya, Turkey",2013,ECSA
518,519,"In this study, the dissolution mechanism of Pt and loss of Electrochemical Surface Area  ECSA  at cathode condition of PEMFC have been clarified by using ICP Mass and amount of charge of hydrogen under potential deposition  H upd  respectively  ICP results showed that Pt dissolution was accelerated at potential above 1 0V vs SHE when potential was cycled at 10 and 100 mVs 1  Amount of dissolved Pt increased as the sweep rate decreased  P1 dissolved at 10 mVs 1 was about 2   3 times more than that at 100 mVs 1 in the upper potential limit of 1 2 and 1 4V  This increase of the dissolution can be explained by increase of oxidation time and decrease of the amount of redeposition  On the other hand, Hupd analysis revealed ECSA of Pt didn t change in all potential range at 100 and 1000 mV s 1, but drastically decreased at 10 mVs 1  Particularly, ECSA decreased at rate of approximately 40  as compared to that before 100cycles of CV in the potential range 0 0  1 0 or 1 2V at 10 mVs 1  AFM observation showed that particle grain growth was one of important factor of this surface area loss   The Electrochemical Society   19 refs",Effects of potential range and sweep rate on dissolution of platinum under potential cycling in 0 5 M H2SO4 solution,"['Grain growth', 'Inductively coupled plasma', 'Platinum', 'AFM observation', 'Dissolution mechanism', 'Electrochemical surface area', 'Hydrogen under-potential deposition', 'Oxidation time', 'Potential cycling', 'Potential limits', 'Potential range', 'Redeposition', 'Surface area', 'Sweep rates', 'Metallography', 'Precious Metals', 'Chemical Operations', 'Plasma Physics', 'Crystal Growth']","['Sugawara, Y', '', '', ' Yadav, A P', '', '', ' Nishikata, A', '', '', ' Tsuru, T', '', '']","Department of Metallurgy and Ceramics Science, Tokyo Institute of Technology, 2 12 1 Ookayama, Tokyo 152 8552, Japan",2009,ECSA
519,520,"In this work we describe the problems found during the integration process of web products built under a lightweight product line  They are particularly important in development and maintenance processes because time to market of web products is often short and frequently driven by the market pressure  Due to changes in the team, we compare the results obtained by junior and senior teams in order to evaluate the delay in the project    2005 IEEE   8 refs",Integration problems of core components in a web product line,"['Marketing', 'Product development', 'Project management', 'Sustainable development', 'Web services', 'Integration process', 'Lightweight products', 'Web products', 'Computer Software, Data Handling and Applications', 'Impact of Technology on Society', 'Marketing', 'Management', 'Product Development  Concurrent Engineering']","['Capilla, Rafael', '', '', 'Due as, Juan C', '', '']","Dept  of Informatics and Telematics, ES de Ciencias Experimentales y Tecnolog a, Universidad Rey Juan Carlos, C  Tulip n s n, 28933, Madrid, Spain  2  Dept  of Telematics Engineering, ETSI Telecomunicaci n, Ciudad Universitaria s n, 28040, Madrid, Spain",2005,WICSA
520,521,"In this work, we investigate the cold start operation of polymer electrolyte fuel cells  PEFCs  through high resolution neutron radiography, experimental testing, theoretical evaluation, and comparison with model prediction  Ice formation location, voltage evolution, and loss of the electro catalyst surface area  ECSA  are examined  A dimensionless parameter , characterizing the spatial variation of the reaction rate across the cathode catalyst layer, is discussed at subfreezing temperature using newly determined membrane ionic conductivity  The evaluation identifies the operating range that the reaction rate can be treated uniform across the catalyst layer, in which the model is valid    2012 Elsevier Ltd  All rights reserved   32 refs",Subfreezing operation of polymer electrolyte fuel cells  Ice formation and cell performance loss,"['Catalysts', 'Experiments', 'Models', 'Neutron radiography', 'Polyelectrolytes', 'Polymers', 'Reaction rates', 'Analysis', 'Catalyst layers', 'Cathode catalyst layers', 'Cell performance', 'Cold-start', 'Dimensionless parameters', 'Experimental testing', 'High resolution', 'Ice formations', 'Model prediction', 'Neutron imaging', 'Operating ranges', 'Polymer electrolyte fuel cells', 'Spatial variations', 'Subfreezing operation', 'Subfreezing temperatures', 'Surface area', 'Theoretical evaluation', 'Engineering Graphics', 'Engineering Research', 'Organic Polymers', 'Polymeric Materials', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Physical Chemistry', 'Fuel Cells', 'Bioengineering and Biology']","['Mishler, Jeffrey', '', '', 'Wang, Yun', '', '', 'Mukherjee, Partha P', '', '', ' Mukundan, Rangachary', '', '', 'Borup, Rodney L', '', '']","Renewable Energy Resources Lab  RERL , University of California, Irvine, Irvine, CA 92697 3975, United States  2  Texas AandM University, College Station, TX 77843, United States  3  Los Alamos National Laboratory  LANL , Los Alamos, NM 87545, United States",2012,ECSA
521,522,"In this work, we synthesised the bimodal porous carbon supported electro catalyst as a novel catalyst for fuel cells  For this purpose, the bimodal porous carbons with different pore sizes were prepared by imprinting method  Three kinds of bimodal porous carbons were fabricated by using the silica spheres with diameters of ca  50, 100 and 300 nm and SBA 15 particle having 200 250 nm diameter and 700 900 nm length as templates  The BET surface areas of the bimoal porous carbons were determined to be 235 294 m2 g 1, which are similar to that of Vulcan XC72  To evaluate the electro catalytic activity, the PtRu nanoparticles of ca  1 9 2 6 nm were loaded on the bimodal porous carbon supports  The PtRu C100, synthesised by using SBA 15 and 100 nm silica sphere, had the higher electrochemical surface area  ECSA  and the lower on set potential and showed comparable performance with the commercial catalyst    2010 WILEY VCH Verlag GmbH   Co  KGaA, Weinheim   26 refs",Preparation of bimodal porous carbon supported PtRu catalysts for fuel cells,"['Fuel cells', 'Platinum alloys', 'Silica', 'BET surface area', 'Commercial catalyst', 'Different pore sizes', 'Electrocatalytic activity', 'Electrochemical surface area', 'Novel catalysts', 'Porous carbons', 'Pt-Ru catalysts', 'Pt-Ru nanoparticles', 'Silica Sphere', 'Support materials', 'Vulcan XC72', 'Ceramics, Refractories and Glass', 'Inorganic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Fuel Cells', 'Precious Metals', 'Minerals']","['Hwang, S', '', ',', '', ' Park, G', 'G', '', '', ' Yim, S', 'D', '', '', ' Park, S', 'H', '', '', ' Yang, T', 'H', '', '', ' Kim, H', '', '', ' Kim, C', 'S', '', '']","Fuel Cell Research Center, Korea Institute of Energy Research, 102, Gajeong ro, Yuseong gu, Daejeon 305 343, Korea, Republic of  2  Department of Chemical Engineering, Yonsei University, 134 Shinchon Dong, Seodaemun gu, 120 749, Seoul, Korea, Republic of",2010,ECSA
522,523,"In today s advanced communication, electronic and electrical technology, the used of Electromagnetic Interference  EMI  filter has almost become mandatory  Therefore it requires careful and high attention on the impact of this EMI filter installation  This paper discussed and explained the application of Earthing Current Signature Analysis  ECSA  as new developing technique in determining the earth leakage current contributed by the EMI filter installed in the Alternating Current  AC  Uninterruptible Power Supply  UPS  system in Oil and Gas industry    2014 IEEE   11 refs",Impact of EMI filter installed in AC UPS system to earth leakage current,"['Electromagnetic pulse', 'Gas industry', 'Grounding electrodes', 'Power supply circuits', 'Alternating current', 'Current signature analysis', 'Earth leakage current', 'Electrical technology', 'Electromagnetic interference filters', 'EMI filters', 'Oil and Gas Industry', 'UPS systems', 'Gas Fuels', 'Electricity and Magnetism', 'Electric Networks', 'Electric Transmission and Distribution', 'Electric Power Systems', 'Electronic Components and Tubes']","['Shariff, M Riduan B', 'M', ' Abdullah, M F L', '', 'Latiff, M Yusop B', 'A', ' Tion, Ghazali B', 'M', ' Haron, Z A', '', 'Johari, A']",None,2014,ECSA
523,524,"In today s advanced communication, electronic and electrical technology, the used of Motor Protection Relay  MPR  has become preferred  MPR will help maintenance engineers in controlling, protection and monitoring of the electric motors  Therefore, the history event recorded by the MPR enables the implementation of the predictive maintenance  In addition to this advance technology, there appeared a new challenge especially in communication matters  This paper discussed and explained the application of Earthing Current Signature Analysis  ECSA  as a new developed technique in detecting the presence of radiated electromagnetic interference  EMI  and consequently resolving the mysterious of repetitive communication fault issue experiencing by MPR   18 refs",Earthing Current Signature Analysis in resolving Motor Protection Relay communication fault,"['earthing', 'electromagnetic interference', 'logic testing', 'maintenance engineering', 'motor protection', 'power system faults', 'relay protection', 'signal processing', 'earthing current signature analysis', 'motor protection relay communication fault', 'electronic technology', 'repetitive communication fault', 'EMI', 'electromagnetic interference radiation', 'ECSA', 'advanced communication technology', 'predictive maintenance engineers', 'electric motor monitoring', 'electric motor control', 'MPR', 'electrical technology', 'Power system protection', 'a c  machines', 'd c  machines']","['Shariff, M R M', '', '', ' Abdullah, M F L', '', '', ' Haron, Z A', '', '', ' Johari, A', '', '', ' Latiff, M Y A', '', '', ' Isnain, N E M', '', '']","Fac  of Electr    Electron  Eng , Univ  Tun Hussein Onn Malaysia  UTHM , Parit Raja, Malaysia  2  PETRONAS Penapisan  Melaka  Sdn  Bhd , Sungai Udang, Malaysia",2014,ECSA
524,525,"Inadequate version control has been identified as a major obstacle to the application of model driven software engineering  In particular, sophisticated support for merging model versions is urgently needed  We present a tool for merging of EMF models which may be applied to instances of arbitrary Ecore models  The tool advances the state of the art by guaranteeing a consistent merge result  Furthermore, it detects and resolves not only context free, but also context sensitive conflicts  Our merge tool is model based  it relies on EMF for its implementation  Initial experiences gained from its application confirm that the merge tool operates both accurately and efficiently    2013 ACM   28 refs",Model based tool support for consistent three way merging of EMF models,"['Mergers and acquisitions', 'Merging', 'Software engineering', 'Context-free', 'Context-sensitive', 'ITS applications', 'Model-based tools', 'Model-driven software engineerings', 'State of the art', 'Version control', 'Machine Tools', 'Small Tools and Hardware', 'Computer Programming', 'Industrial Engineering and Management']","['Schw gerl, Felix', '', '', 'Uhrig, Sabrina', '', '', 'Westfechtel, Bernhard']","University of Bayreuth, Universit tsstr  30, 95440 Bayreuth, Germany",2013,ECSA
525,526,"Inaugural APKDD workshop presents state of the art research and industry practices in the areas of analytic platforms and architectures for large scale data collection and organization, comprehensive data analysis, improvement of collection and organization methods and analysis of large data sets  Workshop participants will share presentations, empirical and theoretical studies, best practices and algorithms related to data management platforms for heterogeneous data storage including mobile,large scale data analysis plat  forms, requirements methodology and  big data  analytic software  Copyright is held by the author owner s",Architectures and platforms for knowledge discovery from data   Workshop at WICSA ECSA 2012,"['Industrial research', 'Information management', 'Big datum', 'Heterogeneous data', 'Industry practices', 'Large datasets', 'Large scale data', 'Management platforms', 'Mobile', 'Requirements', 'Theoretical study', 'Workshop participants', 'Computer Programming', 'Engineering Research', 'Information Dissemination']","['Begoli, Edmon']","Oak Ridge National Laboratory, 1 Bethel Valley Rd , Oak Ridge, TN, United States",2012,ECSA
526,527,"Inaugural APKDD workshop presents state of the art research and industry practices in the areas of analytic platforms and architectures for large scale data collection and organization, comprehensive data analysis, improvement of collection and organization methods and analysis of large data sets  Workshop participants will share presentations, empirical and theoretical studies, best practices and algorithms related to data management platforms for heterogeneous data storage including mobile,large scale data analysis plat  forms, requirements methodology and  big data  analytic software  Copyright is held by the author owner s",Architectures and platforms for knowledge discovery from data   Workshop at WICSA ECSA 2012,"['Industrial research', 'Information management', 'Big datum', 'Heterogeneous data', 'Industry practices', 'Large datasets', 'Large scale data', 'Management platforms', 'Mobile', 'Requirements', 'Theoretical study', 'Workshop participants', 'Computer Programming', 'Engineering Research', 'Information Dissemination']","['Begoli, Edmon']","Oak Ridge National Laboratory, 1 Bethel Valley Rd , Oak Ridge, TN, United States",2012,WICSA
527,528,"Incremental change is intrinsic to both the initial development and subsequent evolution of large complex software systems  The talk discusses both, the requirements for and the design of, an approach that captures this incremental change in the definition of software architecture  The predominate advantage in making the definition of evolution intrinsic to architecture description is in permitting a principled and manageable way of dealing with unplanned change and extension  Intrinsic definition also facilitates decentralized evolution in which software is extended and evolved by multiple independent developers  The objective is an approach which permits unplanned extensions to be deployed to end users with the same facility that plugin extensions are currently added to systems with planned extension points  The talk advocates a model driven approach in which architecture definition is used to directly construct both initial implementations and extensions   modification to these implementations  An implementation of intrinsic evolution definition in Backbone is presented   an architectural description language  ADL , which has both a textual and a UML2, based graphical representation  The talk uses Backbone to illustrate basic concepts through simple examples and reports experience in applying it and its associated tool support to larger examples   0 refs",Intrinsic Definition in Software Architecture Evolution,"['large-scale systems', 'software architecture', 'software architecture', 'complex software systems', 'model-driven approach', 'architectural description language', 'ADL', 'graphical representation', 'Software engineering techniques']","['Magee, J N', '', '']","Imperial Coll  London, London, United Kingdom",2010,QoSA
528,529,"Industrial Control Systems are used in most of the industrial sectors to achieve production improvement, process optimization and time and cost reduction  Integration, reuse, flexibility and optimization are demanded to adapt to a rapidly changing and competitive market  There is also a growing requirement that all software tools that support the different phases of the development process  design, configuration, management  can be integrated as well  Thus, a consolidation of modeling methodologies for achieving this goal is needed  This paper proposes a Model driven approach based on different views of the application for designing industrial control systems  XML schema and schematron technologies are selected for defining the domain languages and for checking their coherency and consistency    Springer Verlag Berlin Heidelberg 2007   7 refs",Model driven approach for designing industrial control systems,"['Competitive intelligence', 'Computer aided software engineering', 'Cost reduction', 'Industrial management', 'Process control', 'Production engineering', 'XML', 'Component based modeling', 'Consistency analysis', 'Industrial control systems', 'XML schema', 'XPath', 'Production Engineering', 'Management', 'Industrial Economics', 'Control Systems', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications']","['Estevez, Elisabet', '', '', 'Marcos, Marga']","Automatic Control and Systems Engineering Department, University of the Basque Country, Alda Urquijo s n, 48013, Bilbao, Spain",2007,ECSA
529,530,"Industrial Control Systems are used in most of the industrial sectors to achieve production improvement, process optimization and time and cost reduction  Integration, reuse, flexibility and optimization are demanded to adapt to a rapidly changing and competitive market  There is also a growing requirement that all software tools that support the different phases of the development process  design, configuration, management  can be integrated as well  Thus, a consolidation of modeling methodologies for achieving this goal is needed  This paper proposes a Model driven approach based on different views of the application for designing industrial control systems  XML schema and schematron technologies are selected for defining the domain languages and for checking their coherency and consistency    Springer Verlag Berlin Heidelberg 2007   7 refs",Model driven approach for designing industrial control systems,"['Competitive intelligence', 'Computer aided software engineering', 'Cost reduction', 'Industrial management', 'Process control', 'Production engineering', 'XML', 'Component based modeling', 'Consistency analysis', 'Industrial control systems', 'XML schema', 'XPath', 'Production Engineering', 'Management', 'Industrial Economics', 'Control Systems', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications']","['Estevez, Elisabet', '', '', 'Marcos, Marga']","Automatic Control and Systems Engineering Department, University of the Basque Country, Alda Urquijo s n, 48013, Bilbao, Spain",2008,ECSA
530,531,"Industrial Control Systems are used in most of the industrial sectors to achieve production improvement, process optimization and time and cost reduction  Integration, reuse, flexibility and optimization are demanded to adapt to a rapidly changing and competitive market  There is also a growing requirement that all software tools that support the different phases of the development process  design, configuration, management  can be integrated as well  Thus, a consolidation of modeling methodologies for achieving this goal is needed  This paper proposes a Model driven approach based on different views of the application for designing industrial control systems  XML schema and schematron technologies are selected for defining the domain languages and for checking their coherency and consistency   7 refs",Model driven approach for designing industrial control systems,"['formal specification', 'industrial control', 'XML', 'model-driven approach', 'industrial control system design', 'production improvement', 'process optimization', 'time reduction', 'cost reduction', 'software tools', 'industrial control systems', 'XML schema', 'schematron technologies', 'domain languages', 'Control engineering computing', 'Formal methods', 'Software engineering techniques', 'Production engineering computing']","['Estevez, E', '', '', ' Marcos, M', '', '']","Dept  of Autom  Control   Syst  Eng , Univ  of the Basque Country, Bilbao, Spain",2007,ECSA
531,532,"Industrial Control Systems are used in most of the industrial sectors to achieve production improvement, process optimization and time and cost reduction  Integration, reuse, flexibility and optimization are demanded to adapt to a rapidly changing and competitive market  There is also a growing requirement that all software tools that support the different phases of the development process  design, configuration, management  can be integrated as well  Thus, a consolidation of modeling methodologies for achieving this goal is needed  This paper proposes a Model driven approach based on different views of the application for designing industrial control systems  XML schema and schematron technologies are selected for defining the domain languages and for checking their coherency and consistency   7 refs",Model driven approach for designing industrial control systems,"['formal specification', 'industrial control', 'XML', 'model-driven approach', 'industrial control system design', 'production improvement', 'process optimization', 'time reduction', 'cost reduction', 'software tools', 'industrial control systems', 'XML schema', 'schematron technologies', 'domain languages', 'Control engineering computing', 'Formal methods', 'Software engineering techniques', 'Production engineering computing']","['Estevez, E', '', '', ' Marcos, M', '', '']","Dept  of Autom  Control   Syst  Eng , Univ  of the Basque Country, Bilbao, Spain",2008,ECSA
532,533,"Industrial software applications have high requirements on performance, availability, and maintainability  Additionally, diverse application landscapes of large corporate companies require systematic planning for reuse, which can be fostered by a software product line approach  Analyses at the software architecture level can help improving the structure of the systems to account for extra functional requirements and reuse  This paper reports a case study of product line development for ABB s robotics PC software  We analysed the software architectures of three existing robotics applications and identified their core assets  As a result, we designed a new product line architecture, which targets at fulfilling various extra functional requirements  This paper describes experiences and lessons learned during the project    2009 Springer Berlin Heidelberg   19 refs",Evolving industrial software architectures into a software product line  A case study,"['Computer software reusability', 'Computer software selection and evaluation', 'Large scale systems', 'Maintainability', 'Research', 'Robotics', 'Core asset', 'Diverse applications', 'Functional requirement', 'Industrial software', 'Lessons learned', 'New product', 'Robotics applications', 'Software Product Line', 'Software products', 'Systematic planning', 'Systems Science', 'Maintenance', 'Operations Research', 'Management', 'Engineering Research', 'Robotics', 'Control Systems', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Biomedical Engineering']","['Koziolek, Heiko', '', '', 'Weiss, Roland', '', '', 'Doppelhamer, Jens']","ABB Corporate Research, Industrial Software Systems, Wallstadter Str  59, Ladenburg 68526, Germany",2009,QoSA
533,534,"Industrial systems are examples of complex and often long lived systems in which software is playing an increasingly important role  Their architectures play a crucial role in maintaining the properties of such systems during their entire life cycle  In this paper, we present the results of a case study based on a series of interviews and a workshop with key personnel from research and development groups of successful international companies in their Swedish locations  The main goal of the investigation was to find the significant factors which influence system and software architectures and to find similarities and differences between the architecture determining decisions and the architectures of these systems  The role of the architect was an important subject of the investigation  Our findings result in recommendations relating to the design and evolution of system architectures and suggestions regarding areas in which future research would be beneficial   12 refs",Real world influences on software architecture   Interviews with industrial system experts,"['Data reduction', 'Decision theory', 'Expert systems', 'Large scale systems', 'Life cycle', 'Reliability', 'Risk assessment', 'Industrial systems', 'Software architecture', 'Software-intensive systems', 'System expert', 'Computer Programming', 'Data Processing and Image Processing', 'Expert Systems', 'Control Systems', 'Accidents and Accident Prevention', 'Mathematics']","['Mustapic, Goran', '', '', 'Wall, Anders', '', '', 'Norstr m, Christer', '', '', 'Crnkovic, Ivica', '', '', 'Sandstr m, Kristian', '', '', 'Fr berg, Joakim', '', '', 'Andersson, Johan']","Dept  of Comp  Sci  and Engineering, M lardalen University, PO Box 883, SE 721 23 V ster s, Sweden",2004,WICSA
534,535,"Industrial systems are examples of complex and often long lived systems in which software is playing an increasingly important role  Their architectures play a crucial role in maintaining the properties of such systems during their entire life cycle  In this paper, we present the results of a case study based on a series of interviews and a workshop with key personnel from research and development groups of successful international companies in their Swedish locations  The main goal of the investigation was to find the significant factors which influence system and software architectures and to find similarities and differences between the architecture determining decisions and the architectures of these systems  The role of the architect was an important subject of the investigation  Our findings result in recommendations relating to the design and evolution of system architectures and suggestions regarding areas in which future research would be beneficial   12 refs",Real world influences on software architecture   interviews with industrial system experts,"['research and development', 'software architecture', 'software development management', 'software architecture', 'industrial system experts', 'architecture-determining decisions', 'system architecture evolution', 'industrial systems', 'Software engineering techniques', 'Software management']","['Mustapic, G', '', '', ' Wall, A', '', '', ' Norstrom, C', '', '', ' Crnkovic, I', '', '', ' Sandstrom, K', '', '', ' Froberg, J', '', '', ' Andersson, J', '', '']","Dept  of Comput  Sci    Eng , Malardalen Univ , Vasteras, Sweden",2004,WICSA
535,536,"Industry represents about 31  of the upper Normandy region total value added against 19 5  at national level  The same holds for the employment, since industry accounts for 21  of total local jobs, against 18  at national level  This article attempts to answer the following question  can we explain this specific concentration of economic activity by the natural advantages  water availability, easy access by water  provided by the Seine Estuary  We first characterize  strongly Seine Estuary dependent  industrial sectors, using simple indicators such as water withdrawals and pollution emissions  Then, we evaluate the influence of these sectors on the forces  labor market pooling, input sharing and knowledge spillovers  that lead to concentration of the economic activity in the Seine estuary  We find strong evidence that this economic activity is still natural resource based    2007 Springer Science Business Media B V   15 refs",In search of natural resource based economies  The case of the Seine estuary  France,"['Economic and social effects', 'Estuaries', 'Industrial economics', 'Marketing', 'Pollution control', 'Water resources', 'Agglomeration economies', 'Industrial water use', 'Pollution emissions', 'Regional economics', 'Seine Estuary', 'Waterways', 'Water Resources', 'Environmental Impact and Protection', 'Industrial Economics', 'Marketing', 'Social Sciences']","['Beaumais, Olivier', '', '', 'Laroutis, Dimitri']","Facult  de Droit, de Sciences  conomiques et de Gestion, CARE, University of Rouen, 3, avenue Pasteur, Rouen Cedex 1 76186, France",2007,ECSA
536,537,"Industry represents about 31  of the upper Normandy region total value added against 19 5  at national level  The same holds for the employment, since industry accounts for 21  of total local jobs, against 18  at national level  This article attempts to answer the following question  can we explain this specific concentration of economic activity by the natural advantages  water availability, easy access by water  provided by the Seine Estuary  We first characterize  strongly Seine Estuary dependent  industrial sectors, using simple indicators such as water withdrawals and pollution emissions  Then, we evaluate the influence of these sectors on the forces  labor market pooling, input sharing and knowledge spillovers  that lead to concentration of the economic activity in the Seine estuary  We find strong evidence that this economic activity is still natural resource based    2007 Springer Science Business Media B V   15 refs",In search of natural resource based economies  The case of the Seine estuary  France,"['Economic and social effects', 'Estuaries', 'Industrial economics', 'Marketing', 'Pollution control', 'Water resources', 'Agglomeration economies', 'Industrial water use', 'Pollution emissions', 'Regional economics', 'Seine Estuary', 'Waterways', 'Water Resources', 'Environmental Impact and Protection', 'Industrial Economics', 'Marketing', 'Social Sciences']","['Beaumais, Olivier', '', '', 'Laroutis, Dimitri']","Facult  de Droit, de Sciences  conomiques et de Gestion, CARE, University of Rouen, 3, avenue Pasteur, Rouen Cedex 1 76186, France",2008,ECSA
537,538,"Integrating Commercial Off The Shelf products in a company s software product portfolio offers business value, but introduces challenges from a software architecture perspective  In this paper, the research challenges in relation to identity management in the Danish municipality administration system called Opus, are outlined  Opus BRS is the identity management part of Opus  Opus integrates SAP, legacy mainframe systems, and other third party systems of the individual municipality  Each of these systems define their own software architecture and access control model, leading to architectural mismatch with an impact on security, usability, and maintainability  The research project is discussed and access control and identity provisioning are recognized as the major areas of interest in relation to the mismatch challenges  The project is carried out in close cooperation with KMD, one of the largest Danish IT companies, which is the producer of the Opus BRS system  Lastly, a status of the project is given and the next steps of the research are outlined    2010 ACM   15 refs",Architectural mismatch issues in identity management deployment,"['Access control', 'Industry', 'Legacy systems', 'Maintainability', 'Research', 'Security systems', 'Technical presentations', 'Architectural mismatches', 'COTS', 'Identity management', 'Prototyping', 'provisioning', 'Maintenance', 'Production Planning and Control  Manufacturing', 'Industrial Engineering and Management', 'Accidents and Accident Prevention', 'Cost and Value Engineering  Industrial Economics', 'Education', 'Computer Software, Data Handling and Applications', 'Engineering Research']","['Andersen, Mads Schaarup']","Department of Computer Science, Aarhus University, Aarhus, Denmark",2010,ECSA
538,539,"Integrating a COTS product in a company s product portfolio is appealing from a business perspective but highly challenging from the perspective of the software architecture  In this paper we outline research challenges regarding authorization in the identity management part of the Danish municipality administration system, called Opus BRS, a system that integrates SAP, legacy mainframe systems, and other systems present in the individual municipalities  Each of these systems defines their own access control model and architecture, which leads to architectural mismatch that impacts security, usability, as well as maintainability  We outline a three year research project and discuss our research method that will include elements of action research as well as experiments using architectural prototyping  The project is carried out in cooperation with KMD, one of the largest Danish IT companies, who is the producer of the Opus system    2010 Springer Verlag Berlin Heidelberg   12 refs",Identity management mismatch challenges in the danish municipality administration system,"['Access control', 'Legacy systems', 'Maintainability', 'Research', 'Action research', 'Architectural mismatches', 'COTS', 'Identity management', 'Prototyping', 'Computer Software, Data Handling and Applications', 'Engineering Research', 'Maintenance']","['Andersen, Mads Schaarup', '', '', 'Christensen, Henrik Brbak']","Department of Computer Science, Aarhus University, Aarhus, Denmark",2010,ECSA
539,540,"Integrating a COTS product in a company s product portfolio is appealing from a business perspective but highly challenging from the perspective of the software architecture  In this paper we outline research challenges regarding authorization in the identity management part of the Danish municipality administration system, called Opus BRS, a system that integrates SAP, legacy mainframe systems, and other systems present in the individual municipalities  Each of these systems defines their own access control model and architecture, which leads to architectural mismatch that impacts security, usability, as well as maintainability  We outline a three year research project and discuss our research method that will include elements of action research as well as experiments using architectural prototyping  The project is carried out in cooperation with KMD, one of the largest Danish IT companies, who is the producer of the Opus system   12 refs",Identity management mismatch challenges in the Danish municipality administration system,"['administrative data processing', 'software architecture', 'software prototyping', 'identity management mismatch', 'Danish municipality administration system', 'COTS product', 'product portfolio', 'software architecture', 'SAP', 'legacy mainframe systems', 'access control model', 'KMD', 'Opus system', 'Business and administrative computing', 'Software engineering techniques', 'Software management']","['Schaarup, M', '', '', ' Christensen, H B', '', '']","Dept  of Comput  Sci , Aarhus Univ , Aarhus, Denmark",2010,ECSA
540,541,"Intended as a survey for practicing architects and researchers seeking an overview of the state of the art architectures for data analysis, this paper provides an overview of the emerging data management and analytic platforms including parallel databases, Hadoop based systems, High Performance Computing  HPC  platforms and platforms popularly referred to as NoSQL platforms  Platforms are presented based on their relevance, analysis they support and the data organization model they support  Copyright 2012 ACM   38 refs",A short survey on the state of the art in architectures and platforms for large scale data analysis and knowledge discovery from data,"['Architecture', 'Information management', 'Surveys', 'Big datum', 'Data organization', 'High performance computing (HPC)', 'Large scale data', 'Massively parallel processing', 'NoSQL', 'Parallel Database', 'State of the art', 'Buildings and Towers', 'Surveying', 'Computer Programming', 'Information Dissemination']","['Begoli, Edmon']","Oak Ridge National Laboratory, 1 Bethel Valley Rd , Oak Ridge, TN, United States",2012,ECSA
541,542,"Intended as a survey for practicing architects and researchers seeking an overview of the state of the art architectures for data analysis, this paper provides an overview of the emerging data management and analytic platforms including parallel databases, Hadoop based systems, High Performance Computing  HPC  platforms and platforms popularly referred to as NoSQL platforms  Platforms are presented based on their relevance, analysis they support and the data organization model they support  Copyright 2012 ACM   38 refs",A short survey on the state of the art in architectures and platforms for large scale data analysis and knowledge discovery from data,"['Architecture', 'Information management', 'Surveys', 'Big datum', 'Data organization', 'High performance computing (HPC)', 'Large scale data', 'Massively parallel processing', 'NoSQL', 'Parallel Database', 'State of the art', 'Buildings and Towers', 'Surveying', 'Computer Programming', 'Information Dissemination']","['Begoli, Edmon']","Oak Ridge National Laboratory, 1 Bethel Valley Rd , Oak Ridge, TN, United States",2012,WICSA
542,543,"Inter component communication has always been of great importance in the design of software architectures and connectors have been considered as first class entities in many approaches  We present a novel architectural style that is derived from the well established domain of computer networks  The style adopts the inter component communication protocol in a novel way that allows large scale software reuse  It mainly targets real time, distributed, concurrent, and heterogeneous systems   13 refs",A network architectural style for real time systems  NaSr,"['Broadcasting', 'Computer software', 'Graphical user interfaces', 'Network protocols', 'Packet networks', 'Real time systems', 'Synchronization', 'Telecommunication services', 'Translation (languages)', 'Domain name systems (DNS)', 'Heterogeneous systems', 'Inter-component communications', 'Open distributed processing (ODP)', 'Control Systems', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Information Sources and Analysis', 'Computer Peripheral Equipment', 'Radio Systems and Equipment', 'Telecommunication  Radar, Radio and Television', 'Computer Systems and Equipment']","['Bashroush, R', '', '', ' Spence, I', '', '', ' Kilpatrick, P', '', '', ' Brown, T J', '', '']","Queens University Belfast, School of Computer Science, 18 Malone Road, Belfast BT7 1NN, United Kingdom",2004,WICSA
543,544,"Inter component communication has always been of great importance in the design of software architectures and connectors have been considered as first class entities in many approaches by R  Allen and D  Garlan  1994 , M  Shaw et al ,  1995 , and D  Batory and S  O Malley  1992   We present a novel architectural style that is derived from the well established domain of computer networks  The style adopts the inter component communication protocol in a novel way that allows large scale software reuse  It mainly targets real time, distributed, concurrent, and heterogeneous systems   13 refs",A network architectural style for real time systems  NaSr,"['distributed processing', 'object-oriented programming', 'protocols', 'real-time systems', 'software architecture', 'network architectural style', 'real-time systems', 'NaSr', 'software architectures', 'connector entities', 'first-class entities', 'computer networks', 'intercomponent communication protocol', 'large scale software reuse', 'distributed systems', 'concurrent systems', 'heterogeneous systems', 'Protocols', 'Software engineering techniques', 'Protocols', 'Object oriented programming', 'Distributed systems software']","['Bashroush, R', '', '', ' Spence, I', '', '', ' Kilpatrick, P', '', '', ' Brown, T J', '', '']","Sch  of Comput  Sci , Queens Univ  Belfast, United Kingdom",2004,WICSA
544,545,"Ir decorated PdCu alloy catalyst on carbon support  Ir PdCu C  is prepared via two step procedure, which consists of polyol process for PdCu alloy nanoparticle supported on carbon support followed by surface replacement reaction step by Ir ions  The structure of nanoparticles is characterized by ICP AES, XRD, and TEM EDX  The electrochemical surface area  ECSA  and activity for oxygen reduction reaction  ORR  of Ir PdCu C catalyst are larger and higher than those of PdCu C catalyst, respectively  Furthermore, Ir PdCu C catalysts showed a higher single cell performance as a cathode catalyst for high temperature polymer electrolyte membrane fuel cell  High electrocatalytic activities of Ir PdCu C catalyst could be attributed to electronic and structural modification of PdCu alloy by decoration of Ir atom selectively on the surface of PdCu alloy nanoparticle supported on carbon support, which results in PdIr alloy outer region and PdCu alloy inner region    2011 Elsevier B V  All rights reserved   37 refs",Improvement of activity for oxygen reduction reaction by decoration of Ir on PdCu C catalyst,"['Alloys', 'Atomic emission spectroscopy', 'Carbon', 'Copper', 'Electrocatalysts', 'Electrolytic reduction', 'Iridium', 'Nanoparticles', 'Palladium alloys', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Substitution reactions', 'Carbon support', 'Cathode catalyst', 'Electrocatalytic activity', 'Electrochemical surface area', 'High temperature polymer electrolyte membranes', 'ICP-AES', 'Inner region', 'Oxygen reduction reaction', 'Pd-Cu alloys', 'Polyol process', 'Replacement reactions', 'Single cell performance', 'Structural modifications', 'TEM-EDX', 'Two-step procedure', 'XRD', 'Solid State Physics', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Chemistry', 'Nanotechnology', 'Electric and Magnetic Materials', 'Fuel Cells', 'Precious Metals', 'Copper', 'Metallurgy']","['You, Dae Jong', '', '', 'Jin, Seon Ah', '', '', 'Lee, Kang Hee', '', '', 'Pak, Chanho', '', '', 'Choi, Kyoung Hwan', '', '', 'Chang, Hyuk']","Energy Lab , Emerging Tech  Research Center, Samsung Advanced Institute of Technology, San  14 1, Nongseo dong, Giheung gu, Yongin, Gyeonggi do, 446 712, Korea, Republic of",2012,ECSA
545,546,"Issues in architecture evolution  1  Using design intent in maintenance   2  Controlling dynamic evolution In this keynote talk I will address two issues in software architecture evolution  In Alex Wolfs and my original architecture model, we proposed rationale as one of the major components  Over the years very little has been explored about this issue  The primary purpose of rationale was to record architecture design intent  why are things the way they are  It is only recently that architecture researchers have become interested in capturing design intent  Unfortunately the focus has been  as it was in the 80 s on capturing design decisions  on what can we capture and how  I will focus instead on the problem of what design intent do we need when we evolve the architecture design and discuss the work I am doing with my student Paul Grisham  There are a number of interesting contexts where the dynamic evolution of software architectures are of critical importance   for example, self managing, self adapting systems, etc  Another interesting context is that of simulating very large, very complex systems  In all these cases, the control of dynamic architecture evolution is a critical issue  In the case of complex simulations we have foreknowledge  indeed, control  of the desired architecture evolution  I will focus on our approach in handling this issue in this context  While this is a fairly narrow context, I believe our approach has applicability in a wider context   0 refs",Issues in architecture evolution  using design intent in maintenance and controlling dynamic evolution,"['software architecture', 'dynamic evolution', 'software architecture evolution', 'self-adapting systems', 'Software engineering techniques']","['Perry, D E', '', '']","Univ  of Texas at Austin, Austin, TX, United States",2008,ECSA
546,547,"It has been proposed to make architectural design decisions first class entities in software architecture representation  The actual means of capturing, representing, and managing architectural design decisions is still an open issue of research  We present an approach for capturing requirements and design decisions during design and development  We integrate design decisions, requirements, scenarios, and their relationships along with other architectural elements directly in a single, consistent, and formally defined architecture model  Capturing, visualizing, and tracing of architectural knowledge are supported by an integrated set of tools working on this model  The approach supports comprehensive tracing between requirements, design decisions, other architectural elements, and implementation artifacts, impact analysis, and architecture analysis and evaluation    2010 Springer Verlag Berlin Heidelberg   27 refs",Integrating requirements and design decisions in architecture representation,"['Architectural design', 'Decision making', 'Knowledge management', 'Architectural design decisions', 'Architectural element', 'Architectural knowledge', 'Architecture analysis', 'Architecture models', 'Design and Development', 'Design decisions', 'Impact analysis', 'Software Architecture Models', 'Buildings and Towers', 'Computer Programming', 'Computer Applications', 'Management']","['Weinreich, Rainer', '', '', 'Buchgeher, Georg']","Johannes Kepler University Linz, Austria  2  Software Competence Center, Hagenberg, Austria",2010,ECSA
547,548,"It has been well documented that there is a correlation between the structure of an architecture and the organization that produces it  More concretely there is a correlation between task interdependencies and coordination among the people or teams realizing these tasks  The amount of coordination needed among teams is related to the nature of these task interdependencies  As the scale and complexity of organization and systems grow it is not uncommon to have factors such as geographic boundaries, organization boundaries, cultural differences, and so forth impede the ability of certain individuals or teams to coordinate effectively  While there is some understanding of the factors that impede the ability of teams to coordinate, the factors that cause task interdependence in software systems is less well understood  The current view is that it is the interactions across module boundaries  assuming a module is assigned as a task or work item to a single team  that cause task interdependence  we have found that this view is not sufficient  In this paper we present three cases where additional architectural mechanisms created task interdependencies that the organizations were unable to accommodate  We go on to discuss the implications of these findings and suggest future research activities    2007 IEEE   13 refs",Architectural misalignment  An experience report,"['Computational complexity', 'Correlation methods', 'Graph theory', 'Information use', 'Interactive computer systems', 'Architectural misalignment', 'Module boundaries', 'Organization boundaries', 'Task interdependence', 'Mathematical Statistics', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory', 'Information Retrieval and Use', 'Computer Applications', 'Computer Programming', 'Digital Computers and Systems', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory']","['Bass, Matthew', '', '', 'Mikulovic, Vesna', '', '', 'Bass, Len', '', '', 'Herbsleb, James', '', '', 'Cataldo, Marcelo']","Siemens Corporate Research, Inc   2  Faculty of Informatics, Vienna University of Technology  3  Software Engineering Institute, Carnegie Mellon University  4  Carnegie Mellon University",2007,WICSA
548,549,"It has been well documented that there is a correlation between the structure of an architecture and the organization that produces it  More concretely there is a correlation between task interdependencies and coordination among the people or teams realizing these tasks  The amount of coordination needed among teams is related to the nature of these task interdependencies  As the scale and complexity of organization and systems grow it is not uncommon to have factors such as geographic boundaries, organization boundaries, cultural differences, and so forth impede the ability of certain individuals or teams to coordinate effectively  While there is some understanding of the factors that impede the ability of teams to coordinate, the factors that cause task interdependence in software systems is less well understood  The current view is that it is the interactions across module boundaries  assuming a module is assigned as a task or work item to a single team  that cause task interdependence  we have found that this view is not sufficient  In this paper we present three cases where additional architectural mechanisms created task interdependencies that the organizations were unable to accommodate  We go on to discuss the implications of these findings and suggest future research activities   13 refs",Architectural misalignment  an experience report,"['interactive systems', 'project management', 'software architecture', 'architectural misalignment', 'task interdependency', 'geographic boundary', 'organization boundary', 'cultural difference', 'software system', 'project management', 'interactive system', 'Software management', 'User interfaces', 'Software engineering techniques']","['Bass, M', '', '', ' Mikulovic, V', ' Bass, L', ' James, H', ' Marcelo, C']","Siemens Corp  Res Inc , Princeton, NJ, United States",2007,WICSA
549,550,"It is argued that architecture comprehension and regression testing of a software system are the most expensive maintenance activities  This is mainly due to the fact that architectural choices are either not explicit, at every stage of the software development process, or not preserved from one stage to another  In this paper, we present an Architectural Constraint Language  ACL  as a means to formally describe architectural choices at all the stages  This language is based on the UML s Object Constraint Language and on a set of MOF compliant metamodels  We also present a prototype which validates the proposed approach  It allows the evaluation of ACL expressions at two stages and ensures, by using a transformation mechanism, that the constraints stated at one stage are subsequently preserved    2005 IEEE   19 refs",Preserving architectural choices throughout the component based software development process,"['Computer software maintenance', 'Constraint theory', 'Mathematical models', 'Metadata', 'Object oriented programming', 'Software architecture', 'Architectural Constraint Languages (ACL)', 'Metamodels', 'Object Constraint Languages', 'Software systems', 'Computer Programming', 'Mathematics', 'Systems Science']","['Tibermacine, Chouki', '', '', 'Fleurquin, R gis', '', '', 'Sadou, Salah']","VALORIA Lab , University of South Brittany, F 56000 Vannes, France",2005,WICSA
550,551,"It is critical to analyze characteristics of real time embedded systems, such as timing behavior, early in the development  In the automotive domain, EAST ADL is a concrete example of the model based approach for the architectural modeling of real time systems  The Timing Augmented Description Language v2  TADL2  allows for the specification of timing constraints on top of EAST ADL models  In this paper we propose a formal validation   verification methodology for timing behaviors given with TADL2  The formal semantics of the timing constraints is given as a mapping to the Clock Constraint Specification Language  CCSL , a formal language that implements the MARTE Time Model  Based on such a mapping, the validation is carried out by the simulation of TADL2 specifications  The simulation allows for a rapid prototyping of TADL2 specifications  The verification is performed based on a TADL2 mapping to timed automata modeling using the Uppaal model checker  The whole process is illustrated on a Brake By Wire application    2013 Springer Verlag   20 refs",Analysis support for TADL2 timing constraints on EAST ADL models,"['Automata theory', 'Formal languages', 'Model checking', 'Rapid prototyping', 'Real time systems', 'Software architecture', 'Specification languages', 'Specifications', 'Architectural modeling', 'Automotive domains', 'Clock constraints', 'Description languages', 'Model based approach', 'Real-time embedded systems', 'Timing constraints', 'Verification methodology', 'Computer Systems and Equipment', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Engineering Graphics', 'Codes and Standards']","['Goknil, Arda', '', '', 'Suryadevara, Jagadish', '', '', 'Peraldi Frati, Marie Agn s', '', '', 'Mallet, Fr d ric']","AOSTE Team, UNS I3S INRIA, Sophia Antipolis, France  2  Formal Modeling and Analysis Group, M lardalen University, V ster s, Sweden",2013,ECSA
551,552,"It is widely recognized that a good and appropriate architecture is critical to the success of a software product or system  5   However, neither the system nor its architecture is static, and a good architecture anticipates and guides the evolution of the system over time  As the system evolves over time, the role of the software architect evolves as well, and skills that enabled an architect to be successful during one phase of a system s lifetime may not enable success in later phases  This paper proposes a three phase model to describe the evolution of software systems, and describes the contributions of the software architect which are necessary for success in each phase  This topic is of interest to practicing architects, and to software development managers responsible for selecting and hiring architects to contribute to a software system    2005 IEEE   24 refs",How does the architect s role change as the software ages,"['Engineers', 'Managers', 'Software architecture', 'Software engineering', 'Software architects', 'Software development managers', 'Software systems', 'Computer Programming', 'Engineering Professional Aspects', 'Personnel']","['Klein, John']","Avaya, Inc",2005,WICSA
552,553,"Joint architecture development plays a key role in service oriented computing as it facilitates the coordination of business processes with the software architectures of applications  To better support business users in the communication of business process semantics, the Object Management Group advises to adopt the newly standardized Business Process Modeling Notation  BPMN  instead of the UML Activity Diagram  A main reason for this advice is that BPMN is presumed to be more usable for business users than the technically oriented Activity Diagram  Adopting a new process modeling language, however, is a significant expense factor for businesses and consolidated findings on whether such presumptions hold true in practice are missing  In this paper, we present results from an empirical study, in which we examined the application of BPMN and the UML Activity Diagram by business users during a model creation task  Results indicate that the UML Activity Diagram is at least as usable as BPMN since neither user effectiveness, efficiency, nor satisfaction differ significantly    2010 Springer Verlag   31 refs",Is BPMN really first choice in joint architecture development  An empirical study on the usability of BPMN and UML activity diagrams for business users,"['Computer software selection and evaluation', 'Systems analysis', 'Activity diagram', 'Business Process', 'Business process modeling', 'Business-users', 'Empirical studies', 'Joint architectures', 'Model creation', 'New process', 'Object management groups', 'Service oriented computing', 'UML activity diagrams', 'Systems Science', 'Operations Research', 'Management', 'Control Systems', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications']","['Birkmeier, Dominik', '', '', 'Overhage, Sven']","Component and Service Engineering Group, Business Informatics and Systems Engineering Department, University of Augsburg, Universitaetsstrasse 16, 86159 Augsburg, Germany",2010,QoSA
553,554,"Keeping the software architecture of a system and its implementation consistent can be tough  The larger and more complex a software system is, the more likely software architecture erosion occurs  This effect can lead to a decrease of quality with respect to adaptability, maintainability, or reusability Refactorings can help to reverse software architecture erosion through systematically applying them to resolve architecture violations  However, it can be difficult in complex systems to manually resolve all violations in an efficient way due to the complex interdependencies between them In this paper, we propose a new approach to the automatic recommendation of refactorings to resolve architecture violations based on a meta heuristic search for an efficient set of refactorings  The approach is applied to resolve architectural dependency violations using the  move class  refactoring   15 refs",Recommending Refactorings to Re establish Architectural Consistency,"['software architecture', 'software maintenance', 'software quality', 'architectural consistency', 'software system', 'software refactorings', 'software architecture erosion', 'complex systems', 'complex interdependencies', 'automatic recommendation', 'meta-heuristic search', 'architectural dependency violations', 'move class refactoring', 'Software engineering techniques']","['Herold, S', '', '', ' Mair, M', '', '']","Lero The Irish Software Eng  Res  Centre, Univ  of Limerick, Limerick, Ireland  2  Dept  of Inf , Clausthal Univ  of Technol , Clausthal Zellerfeld, Germany",2014,ECSA
554,555,"Knowledge management plays an important role in the software architecting process  Recently, this role has become more apparent by a paradigm shift that views a software architecture as the set of architectural design decisions it embodies  This shift has sparked the discussion in both research and practice on how to best facilitate sharing of so called architectural knowledge, and how tools can best be employed  In order to design successful tool support for architectural knowledge sharing it is important to take into account what software architecting really entails  To this end, in this paper we define the main characteristics of architecting, based on observations in a large software development organization, and state of the art literature in software architecture  Based on the defined characteristics, we determine how best practices known from knowledge management could be used to improve architectural knowledge sharing  This results in the definition of a set of desired properties of architectural knowledge sharing tools  To improve the status quo of architectural knowledge sharing tools, we present the design of an architectural knowledge sharing platform    Springer Verlag Berlin Heidelberg 2007   39 refs",Effective tool support for architectural knowledge sharing,"['Knowledge acquisition', 'Knowledge management', 'Architectural design decisions', 'Architectural knowledge sharing', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Information Retrieval and Use']","['Farenhorst, Rik', '', '', 'Lago, Patricia', '', '', 'Van Vliet, Hans']","Department of Computer Science, VU University Amsterdam, Netherlands",2007,ECSA
555,556,"Knowledge management plays an important role in the software architecting process  Recently, this role has become more apparent by a paradigm shift that views a software architecture as the set of architectural design decisions it embodies  This shift has sparked the discussion in both research and practice on how to best facilitate sharing of so called architectural knowledge, and how tools can best be employed  In order to design successful tool support for architectural knowledge sharing it is important to take into account what software architecting really entails  To this end, in this paper we define the main characteristics of architecting, based on observations in a large software development organization, and state of the art literature in software architecture  Based on the defined characteristics, we determine how best practices known from knowledge management could be used to improve architectural knowledge sharing  This results in the definition of a set of desired properties of architectural knowledge sharing tools  To improve the status quo of architectural knowledge sharing tools, we present the design of an architectural knowledge sharing platform    Springer Verlag Berlin Heidelberg 2007   39 refs",Effective tool support for architectural knowledge sharing,"['Knowledge acquisition', 'Knowledge management', 'Architectural design decisions', 'Architectural knowledge sharing', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Information Retrieval and Use']","['Farenhorst, Rik', '', '', 'Lago, Patricia', '', '', 'Van Vliet, Hans']","Department of Computer Science, VU University Amsterdam, Netherlands",2008,ECSA
556,557,"Knowledge management plays an important role in the software architecting process  Recently, this role has become more apparent by a paradigm shift that views a software architecture as the set of architectural design decisions it embodies  This shift has sparked the discussion in both research and practice on how to best facilitate sharing of so called architectural knowledge, and how tools can best be employed  In order to design successful tool support for architectural knowledge sharing it is important to take into account what software architecting really entails  To this end, in this paper we define the main characteristics of architecting, based on observations in a large software development organization, and state of the art literature in software architecture  Based on the defined characteristics, we determine how best practices known from knowledge management could be used to improve architectural knowledge sharing  This results in the definition of a set of desired properties of architectural knowledge sharing tools  To improve the status quo of architectural knowledge sharing tools, we present the design of an architectural knowledge sharing platform   39 refs",Effective tool support for architectural knowledge sharing,"['design', 'knowledge management', 'software architecture', 'software development management', 'software tools', 'knowledge management', 'software architecture', 'architectural design decisions', 'software development organization', 'architectural knowledge sharing tools', 'Software engineering techniques', 'Software management', 'Programming support']","['Farenhorst, R', '', '', ' Lago, P', '', '', ' van Vliet, H', '', '']","Dept  of Comput  Sci , VU Univ  Amsterdam, Amsterdam, Netherlands",2007,ECSA
557,558,"Knowledge management plays an important role in the software architecting process  Recently, this role has become more apparent by a paradigm shift that views a software architecture as the set of architectural design decisions it embodies  This shift has sparked the discussion in both research and practice on how to best facilitate sharing of so called architectural knowledge, and how tools can best be employed  In order to design successful tool support for architectural knowledge sharing it is important to take into account what software architecting really entails  To this end, in this paper we define the main characteristics of architecting, based on observations in a large software development organization, and state of the art literature in software architecture  Based on the defined characteristics, we determine how best practices known from knowledge management could be used to improve architectural knowledge sharing  This results in the definition of a set of desired properties of architectural knowledge sharing tools  To improve the status quo of architectural knowledge sharing tools, we present the design of an architectural knowledge sharing platform   39 refs",Effective tool support for architectural knowledge sharing,"['design', 'knowledge management', 'software architecture', 'software development management', 'software tools', 'knowledge management', 'software architecture', 'architectural design decisions', 'software development organization', 'architectural knowledge sharing tools', 'Software engineering techniques', 'Software management', 'Programming support']","['Farenhorst, R', '', '', ' Lago, P', '', '', ' van Vliet, H', '', '']","Dept  of Comput  Sci , VU Univ  Amsterdam, Amsterdam, Netherlands",2008,ECSA
558,559,"L L Bean is a large retail organization whose development processes must be agile in order to allow rapid enhancement and maintenance of its technology infrastructure  Over the past decade L L Bean s software code base had become brittle and difficult to evolve  An effort was launched to identify and develop new approaches to software development that would enable ongoing agility to support the ever increasing demands of a successful business  This paper recounts L L Bean s effort in restructuring its code base and adoption of process improvements that support an architecture based agile approach to development, governance, and maintenance  Unlike traditional refactoring, this effort was guided by an architectural blueprint that was created in a Dependency Structure Matrix where the refactoring was first prototyped before being applied to the actual code base    2009 Springer Berlin Heidelberg   20 refs",Achieving agility through architecture visibility,"['Computer software maintenance', 'Computer software selection and evaluation', 'Agile approaches', 'Agility', 'Dependency', 'Dependency structure matrixes', 'Development process', 'New approaches', 'Process Improvement', 'Refactorings', 'Retail organizations', 'Software codes', 'Software development', 'Technology infrastructure', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Hinsman, Carl', '', '', 'Sangal, Neeraj', '', '', 'Stafford, Judith']","L L Bean, Inc , Freeport, ME, United States  2  Lattix, Inc , Andover, MA, United States  3  Tufts University, Medford, MA, United States",2009,QoSA
559,560,"Large scale software developments require substantial investment and are exposed to high level of risk  Architectural decisions taken at early stages of the development can substantially influence the entire level of technical risk  In this paper architectural decisions are divided into two basic groups  early   top level system organization decision establishing system organization patterns  the notion introduced in this paper  and detailed ones  However as it was shown on notable examples of large scale developments carried out in recent ten years in Poland, wrong decisions concerning system organization pattern can trigger severe risks that can lead to the development crisis  These risks are frequently connected with the complexity explosion syndrome   sudden, undetected growth of design complexity that exceeds the capabiblity of the development team and time budget  To manage these risks properly appropriate architecture analysis method has been introduced  On the contrary to the traditional scenario based architecture analysis methods, like ATAM, it was based on GQM approach  A complete assessement framework have been defined comprising three goals  complexity control, organizational adequacy and satisfactory perforormance and reliability  a set of questions related to these goals, as well as metrics for the qualities expressed by these questions  The conclusion contains ex post analysis of exemplary large scale systems showing that the proposed framework provides adequate assessement of design risk  It has also been indicated that the critical risks identified during the evalution of the system organization pattern should be carefully managed    Springer Verlag Berlin Heidelberg 2007   23 refs",Beyond ATAM  Architecture analysis in the development of large scale software systems,"['Computational complexity', 'Computer software', 'Pattern recognition', 'Reliability', 'Architectural decisions', 'Complexity control', 'Substantially influence', 'System organization', 'Strength of Building Materials  Mechanical Properties', 'Telecommunication  Radar, Radio and Television', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Zalewski, Andrzej']","Warsaw University of Technology, Institute of Automatic Control and Computational Engineering, Warsaw, Poland",2007,ECSA
560,561,"Large scale software developments require substantial investment and are exposed to high level of risk  Architectural decisions taken at early stages of the development can substantially influence the entire level of technical risk  In this paper architectural decisions are divided into two basic groups  early   top level system organization decision establishing system organization patterns  the notion introduced in this paper  and detailed ones  However as it was shown on notable examples of large scale developments carried out in recent ten years in Poland, wrong decisions concerning system organization pattern can trigger severe risks that can lead to the development crisis  These risks are frequently connected with the complexity explosion syndrome   sudden, undetected growth of design complexity that exceeds the capabiblity of the development team and time budget  To manage these risks properly appropriate architecture analysis method has been introduced  On the contrary to the traditional scenario based architecture analysis methods, like ATAM, it was based on GQM approach  A complete assessement framework have been defined comprising three goals  complexity control, organizational adequacy and satisfactory perforormance and reliability  a set of questions related to these goals, as well as metrics for the qualities expressed by these questions  The conclusion contains ex post analysis of exemplary large scale systems showing that the proposed framework provides adequate assessement of design risk  It has also been indicated that the critical risks identified during the evalution of the system organization pattern should be carefully managed    Springer Verlag Berlin Heidelberg 2007   23 refs",Beyond ATAM  Architecture analysis in the development of large scale software systems,"['Computational complexity', 'Computer software', 'Pattern recognition', 'Reliability', 'Architectural decisions', 'Complexity control', 'Substantially influence', 'System organization', 'Strength of Building Materials  Mechanical Properties', 'Telecommunication  Radar, Radio and Television', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Zalewski, Andrzej']","Warsaw University of Technology, Institute of Automatic Control and Computational Engineering, Warsaw, Poland",2008,ECSA
561,562,"Large scale software developments require substantial investment and are exposed to high level of risk  Architectural decisions taken at early stages of the development can substantially influence the entire level of technical risk  In this paper architectural decisions are divided into two basic groups  early   top level system organization decision establishing system organization patterns  the notion introduced in this paper  and detailed ones  However as it was shown on notable examples of large scale developments carried out in recent ten years in Poland, wrong decisions concerning system organization pattern can trigger severe risks that can lead to the development crisis  These risks are frequently connected with the complexity explosion syndrome   sudden, undetected growth of design complexity that exceeds the capabiblity of the development team and time budget  To manage these risks properly appropriate architecture analysis method has been introduced  On the contrary to the traditional scenario based architecture analysis methods, like ATAM, it was based on GQM approach  A complete assessement framework have been defined comprising three goals  complexity control, organizational adequacy and satisfactory perforormance and reliability  a set of questions related to these goals, as well as metrics for the qualities expressed by these questions  The conclusion contains ex post analysis of exemplary large scale systems showing that the proposed framework provides adequate assessement of design risk  It has also been indicated that the critical risks identified during the evalution of the system organization pattern should be carefully managed   23 refs",Beyond ATAM  architecture analysis in the development of large scale software systems,"['software architecture', 'software reliability', 'large scale software developments', 'beyond ATAM', 'top level system organization decision', 'organization patterns', 'Poland', 'GQM approach', 'complexity control', 'organizational adequacy', 'architecture trade-off analysis methods', 'Software engineering techniques']","['Zalewski, A', '', '']","Inst  of Autom  Control   Comput  Eng , Warsaw Univ  of Technol , Warsaw, Poland",2007,ECSA
562,563,"Large scale software developments require substantial investment and are exposed to high level of risk  Architectural decisions taken at early stages of the development can substantially influence the entire level of technical risk  In this paper architectural decisions are divided into two basic groups  early   top level system organization decision establishing system organization patterns  the notion introduced in this paper  and detailed ones  However as it was shown on notable examples of large scale developments carried out in recent ten years in Poland, wrong decisions concerning system organization pattern can trigger severe risks that can lead to the development crisis  These risks are frequently connected with the complexity explosion syndrome   sudden, undetected growth of design complexity that exceeds the capabiblity of the development team and time budget  To manage these risks properly appropriate architecture analysis method has been introduced  On the contrary to the traditional scenario based architecture analysis methods, like ATAM, it was based on GQM approach  A complete assessement framework have been defined comprising three goals  complexity control, organizational adequacy and satisfactory perforormance and reliability  a set of questions related to these goals, as well as metrics for the qualities expressed by these questions  The conclusion contains ex post analysis of exemplary large scale systems showing that the proposed framework provides adequate assessement of design risk  It has also been indicated that the critical risks identified during the evalution of the system organization pattern should be carefully managed   23 refs",Beyond ATAM  architecture analysis in the development of large scale software systems,"['software architecture', 'software reliability', 'large scale software developments', 'beyond ATAM', 'top level system organization decision', 'organization patterns', 'Poland', 'GQM approach', 'complexity control', 'organizational adequacy', 'architecture trade-off analysis methods', 'Software engineering techniques']","['Zalewski, A', '', '']","Inst  of Autom  Control   Comput  Eng , Warsaw Univ  of Technol , Warsaw, Poland",2008,ECSA
563,564,"Large software landscapes are complex Systems of Systems  Systems are added to, modified in, or removed from the landscape at runtime  Architectural erosion typically occurs in such landscapes, resulting in increased maintenance and operation costs  Continuous monitoring can help to ensure the architecture conformance in such large landscapes  However, the emerging huge amounts of monitoring data have to be processed and presented in a scalable visualization  In this paper, we present ExplorViz which aims for providing such a scalable live visualization of large software landscapes  We demonstrate how our visualization can be used for ensuring architecture conformance  Furthermore, we describe an applicability evaluation of ExplorViz concerning the prerequisite of scalability in our monitoring solution    2014 ACM   17 refs",Live visualization of large software landscapes for ensuring architecture conformance,"['Monitoring', 'Software architecture', 'Visualization', 'Applicability evaluation', 'Continuous monitoring', 'Large Software Landscapes', 'Maintenance and operation', 'Runtimes', 'Scalable visualization', 'Software visualization', 'Systems-of-systems', 'Computer Programming', 'Computer Applications', 'Engineering Graphics', 'Acoustical and Optical Measuring Instruments', 'Electric and Electronic Measuring Instruments', 'Mechanical and Miscellaneous Measuring Instruments', 'Moisture, Pressure and Temperature, and Radiation Measuring Instruments']","['Fittkau, Florian', '', '', 'Stelzer, Phil', '', '', 'Hasselbring, Wilhelm']","Software Engineering Group, Kiel University, 24098 Kiel, Germany",2014,ECSA
564,565,"Load on off cycles at 80  C, with near saturated H2 and air at ambient pressure were applied to investigate the durability of several types of membrane electrode assemblies  MEAs  for proton exchange membrane fuel cells  PEMFC   The ohmic resistance, H2 cross over, electrochemically active surface area  ECSA , protonic resistance of the cathode as well as the performances with H2 air and H2 O2 were measured at regular intervals  These data enabled a breakdown of the increase in cell voltage losses upon cycling  Increase of kinetic losses was found in all MEAs but significant differences were obtained for the transport losses in the cathode catalyst layer, which either had a small or a substantial contribution to the overall voltage decay, depending on the carbon type and ionomer loading  Membrane degradation did not contribute significantly in these tests    2009 Elsevier B V  All rights reserved   32 refs",Proton exchange membrane fuel cells durability evaluated by load on off cycling,"['Cell membranes', 'Durability', 'Electrochemistry', 'Ohmic contacts', 'Polymers', 'Proton exchange membrane fuel cells (PEMFC)', 'Protons', 'Transport properties', 'Accelerated stress test', 'Ambient pressures', 'Cathode catalyst layers', 'Cross overs', 'Electrochemically active surface areas', 'In cells', 'Ionomer loadings', 'Membrane degradations', 'Membrane-electrode- assemblies', 'Ohmic resistances', 'Proton-exchange-membrane fuel cell', 'Protonic resistances', 'Transport loss', 'Materials Science', 'High Energy Physics', 'Atomic and Molecular Physics', 'Physical Properties of Gases, Liquids and Solids', 'Polymeric Materials', 'Electrochemistry', 'Semiconductor Devices and Integrated Circuits', 'Electric Components', 'Fuel Cells', 'Biological Materials and Tissue Engineering', 'Strength of Building Materials  Mechanical Properties']","['Janssen, G J M', '', '', ' Sitters, E F', '', '', ' Pfrang, A', '', '']","Department of Hydrogen and Clean Fossil Fuels, Energy research Centre of the Netherlands ECN, P O  Box 1, 1755 ZG Petten, Netherlands  2  European Commission, Joint Research Centre, Institute for Energy, P O  Box 2, 1755 ZG Petten, Netherlands",2009,ECSA
565,566,"Long living software systems are sustainable if they can be cost efficiently maintained and evolved over their entire life cycle  The quality of software architectures determines sustainability to a large extent  Scenario based software architecture evaluation methods can support sustainability analysis, but they are still reluctantly used in practice  They are also not integrated with architecture level metrics when evaluating implemented systems, which limits their capabilities  Existing literature reviews for architecture evaluation focus on scenario based methods, but do not provide a critical reflection of the applicability of such methods for sustainability evaluation  Our goal is to measure the sustainability of a software architecture both during early design using scenarios and during evolution using scenarios and metrics, which is highly relevant in practice  We thus provide a systematic literature review assessing scenario based methods for sustainability support and categorize more than 40 architecture level metrics according to several design principles  Our review identifies a need for further empirical research, for the integration of existing methods, and for the more efficient use of formal architectural models    2011 ACM   70 refs",Sustainability evaluation of software architectures  A systematic review,"['Sustainable development', 'architectural metric', 'Architectural models', 'Architecture evaluation', 'Critical reflections', 'Design Principles', 'Empirical research', 'evolution scenario', 'Literature reviews', 'Scenario-based methods', 'Software architecture evaluation', 'Software systems', 'Sustainability analysis', 'Systematic literature review', 'Systematic Review', 'Computer Programming', 'Industrial Economics']","['Koziolek, Heiko']","Industrial Software Systems, ABB Corporate Research, Ladenburg, Germany",2011,QoSA
566,567,"MVC is considered an important architectural patterns when it comes to interactive applications since its invention in the days of Smalltalk  However, interaction with computers has changed  Touch screens are as natural to users nowadays as mouse and keyboard have been for the past decades of computing and HCI researchers keep on developing more interaction modalities  Multimodal applications pose major challenges to software engineers who have to deal with different ways for users to express the same intention  MVC does not incorporate the flexibility needed to cope with multimodal applications as it makes the controller component responsible for interaction interpretation and managing the application flow  We propose MVIC, an extension to MVC dedicated to provide a solid software architecture for multimodal, interactive applications by introducing a dedicated interaction component    2013 Springer Verlag   5 refs","MVIC   An MVC extension for interactive, multimodal applications","['Interactive devices', 'Software architecture', 'Touch screens', 'Architectural pattern', 'Interactive applications', 'Multi-modal', 'Multimodal application', 'Smalltalk', 'Computer Peripheral Equipment', 'Computer Software, Data Handling and Applications']","['Hesenius, Marc', '', '', 'Gruhn, Volker']","Paluno   The Ruhr Institute for Software Technology, University of Duisburg Essen, Gerlingstr  16, 45127 Essen, Germany",2013,ECSA
567,568,"Making justifiable decisions is a critical aspect of software architec ture design  However, there has been limited empirical research on the effects of design reasoning on the quality of software design  The goal of this work is to investigate if there is any quality improvement to software design when design reasoning is applied  We conducted an empirical study involving twenty designers, the designers were asked to design a user interface and their designs were scored and compared  The results showed that the test group that was equipped with design reasoning produced a higher quality design than the control group, especially for inexperienced designers    2008 Springer Berlin Heidelberg   28 refs",Design reasoning improves software design quality,"['Architecture', 'Computer software selection and evaluation', 'Design', 'Software architecture', 'User interfaces', 'Control groups', 'Empirical research', 'Empirical studies', 'Quality design', 'Quality improvement', 'Quality of softwares', 'Software Architecture Design', 'Software design quality', 'Usability', 'Engineering Graphics', 'Computer Applications', 'Computer Programming', 'Management', 'Computer Software, Data Handling and Applications', 'Structural Design', 'Buildings and Towers', 'Computer Peripheral Equipment']","['Tang, Antony', '', '', 'Tran, Minh H', '', '', ' Han, Jun', '', '', 'Van Vliet, Hans']","Swinburne University of Technology, Melbourne, Australia  2  VU University, Amsterdam, Netherlands",2008,QoSA
568,569,"Making justifiable decisions is a critical aspect of software architecture design  However, there has been limited empirical research on the effects of design reasoning on the quality of software design  The goal of this work is to investigate if there is any quality improvement to software design when design reasoning is applied  We conducted an empirical study involving twenty designers, the designers were asked to design a user interface and their designs were scored and compared  The results showed that the test group that was equipped with design reasoning produced a higher quality design than the control group, especially for inexperienced designers   28 refs",Design reasoning improves software design quality,"['reasoning about programs', 'software architecture', 'software quality', 'design reasoning', 'software design quality', 'software architecture design', 'Software engineering techniques', 'Formal methods']","['Tang, A', '', '', ' Tran, M H', '', '', ' Jun Han', '', '', 'van Vliet, H']","Swinburne Univ  of Technol , Melbourne, VIC, Australia",2008,QoSA
569,570,"Making software developers work towards a common goal may be likened to herding cats  If we further spread developers around the globe, we run increased risks of being unable to design and impose coherent software architectures on projects, potentially leading to lower quality of the resulting systems  Based on our experiences in a large, distributed research and development project, PalCom, we propose that employing techniques from active user involvement in general  and from participatory design in particular  may help in designing and sharing quality software architectures  In particular, we present the Traveling Architects technique in which a group of architects visit development locations in order to engage developers and end users in software architecture work  We argue that using techniques such as these may potentially lead to higher quality of software architectures in particular for systems developed in a distributed setting    2006 Springer Verlag   22 refs",Traveling architects   A new way of herding cats,"['Computer software selection and evaluation', 'End users', 'Participatory design', 'Quality of softwares', 'Quality software', 'Research and development projects', 'Software developer', 'User involvement', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Corry, Aino Vonge', '', '', 'Hansen, Klaus Marius', '', '', 'Svensson, David', ' ,', '']","Department of Computer Science, University of Aarhus, Aabogade 34, 8200 Aarhus M, Sweden  2  Department of Computer Science, Lund University, Ole R mers v g 3, 223 63 Lund, Sweden  3  PalCom Project",2006,QoSA
570,571,"Making software developers work towards a common goal may be likened to herding cats  Tf we further spread developers around the globe, we run increased risks of being unable to design and impose coherent software architectures on projects, potentially leading to lower quality of the resulting systems  Based on our experiences in a large, distributed research and development project, PalCom, we propose that employing techniques from active user involvement in general  and from participatory design in particular  may help in designing and sharing quality software architectures  In particular, we present the Traveling Architects technique in which a group of architects visit development locations in order to engage developers and end users in software architecture work  We argue that using techniques such as these may potentially lead to higher quality of software architectures in particular for systems developed in a distributed setting   22 refs",Traveling architects   a new way of herding cats,"['groupware', 'software architecture', 'software quality', 'software development', 'software design', 'software architecture', 'software quality', 'PalCom', 'active user involvement', 'participatory design', 'Traveling Architects technique', 'Software engineering techniques', 'Distributed systems software']","['Corry, A V', '', '', ' Hansen, K M', '', '', ' Svensson, D']","Dept  of Comput  Sci , Aarhus Univ , Aarhus, Denmark",2006,QoSA
571,572,"Managing Quality of Service  QoS  of Service based systems is a key challenge to produce systems that fulfill their requirements  Verifying the respect of a QoS contract in a system becomes more and more difficult as systems are more and more complex  Moreover, systems have to evolve in order to fulfil constantly changing requirements  As QoS properties are influenced by hidden factors such as connection rate or the system execution itself, determining the cause of a performance degradation is not mainstream  We propose in this paper to identify the causal relations to make explicit the hidden factors of influence  We more specifically focus on the consequences of system evolution with respect to QoS properties  using causal relations, we aim at predicting the possible overhead caused by an evolution  This paper shows through an example of Business Process how our evolution analysis helps to understand the effect of evolution on QoS property such as the Response Time  We show its efficiency by comparing the prediction with measured values  Copyright 2013 ACM   23 refs",A causal model to predict the effect of business process evolution on quality of service,"['Forecasting', 'Business Process', 'Causal model', 'Evolution', 'Evolution analysis', 'Managing quality', 'Performance degradation', 'Service-based systems', 'System evolution', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Software, Data Handling and Applications', 'Mathematics']","['Feugas, Alexandre', '', '', 'Mosser, S bastien', '', '', 'Duchien, Laurence']","INRIA Lille   Nord Europe, LIFL   UMR CNRS 8022, Univ  Lille 1, France  2  I3S   UMR CNRS 7271, Univ  Nice Sophia Antipolis, Nice, France",2013,QoSA
572,573,"Managing dependencies between software development artifacts helps achieve traceability and consistency in software intensive systems  Traceability supports the alignment between different stakeholder concerns, development artifacts, and various products of the software development process  Consistency ensures that different software development artifacts are used in different parts of a software intensive system  or in the description of this system , without causing contradictions between the different parts of the system  or its description   In this position paper we explore how software architecture viewpoints and views can help represent dependencies and facilitate traceability and consistency in software architecture  Here, correspondences, which are parts of viewpoint definitions, express consistency, traceability, dependencies, obligations, etc  in the architecture  We provide examples of viewpoints and their mechanisms to support the description of dependencies  Furthermore, based on our experience we discuss challenges that occur when ensuring traceability, consistency, and managing dependencies between software development artifacts, with an emphasis on software architecture elements  Copyright   2011 ACM   13 refs","Dependencies, traceability and consistency in software architecture  Towards a view based perspective","['Software design', 'Consistency', 'Dependencies', 'Position papers', 'Software development process', 'Software intensive systems', 'Traceability', 'View-based', 'Computer Programming']","['Galster, Matthias']","Software Engineering and Architecture Group, University of Groningen, Netherlands",2011,ECSA
573,574,"Managing embedded systems complexity and scalability is one of the most important problems in software development  To better address this problem, it is very recommended to have an abstraction level high enough to model complex systems  Architectural description languages  ADLs  intend to model these systems and manage their structure at a high abstraction level  Traditional ADLs do not provide appropriate formalisms to separate any kind of crosscutting concerns  This frequently results in poor descriptions of the software architectures and a tedious adaptation to constantly changing user requirements and specifications  AOSD  Aspect Oriented Software Development  deals with these problems by considering crosscutting concerns in software development  The effectiveness of AOSD appears when aspect concepts are considered throughout the software s life cycle  In this paper, we propose a new aspect language called AO4AADL that adequately manipulates aspect oriented concepts at the software architecture level to master complexity and ensure scalability    2010 Springer Verlag Berlin Heidelberg   6 refs",Toward an aspect oriented ADL for embedded systems,"['Abstracting', 'Computer systems programming', 'Embedded software', 'Embedded systems', 'High level languages', 'Scalability', 'Software design', 'Abstracting', 'Computer systems programming', 'Embedded software', 'Embedded systems', 'High level languages', 'Scalability', 'Software design', 'Abstraction level', 'Architectural description languages', 'Aspect oriented software development', 'Aspect-oriented ADL', 'Aspect-oriented concept', 'Cross-cutting concerns in software', 'Crosscutting concern', 'Model complexes', 'Software development', 'Systems complexity', 'User requirements', 'Abstraction level', 'Architectural description languages', 'Aspect oriented software development', 'Aspect-oriented ADL', 'Aspect-oriented concept', 'Cross-cutting concerns in software', 'Crosscutting concern', 'Model complexes', 'Software development', 'Systems complexity', 'User requirements', 'Computer Software, Data Handling and Applications', 'Information Sources and Analysis']","['Loukil, Sihem', '', '', 'Kallel, Slim', '', '', 'Zalila, Bechir', '', '', 'Jmaiel, Mohamed']","ReDCAD Laboratory, University of Sfax, B P  1173, Sfax 3038, Tunisia",2010,ECSA
574,575,"Managing the cost effective evolution of industrial software systems is a challenging task because of their complexity and long lifetimes  Limited pro active evolution planning and software architecture erosion often lead to huge maintenance costs in such systems  However, formerly researched approaches for evolution scenario analysis and architecture enforcement are only reluctantly applied by practitioners due to their perceived overhead and high costs  We have applied several recent sustainability evaluation and improvement approaches in a case study to the software architecture of a large industrial software system currently under development at ABB  We combined our selection of approaches in a lightweight method called MORPHOSIS, for which this paper presents experiences and lessons learned  We found that reasonable sustainability evaluation and improvement is possible already with limited efforts    2012 IEEE   10 refs",MORPHOSIS  A lightweight method facilitating sustainable software architectures,"['Computer software', 'Cost benefit analysis', 'Maintainability', 'Sustainable development', 'Evaluation and improvement', 'High costs', 'Industrial software', 'Long lifetime', 'Maintenance cost', 'Modifiability', 'Scenario analysis', 'Computer Software, Data Handling and Applications', 'Cost and Value Engineering  Industrial Economics', 'Industrial Economics', 'Maintenance']","['Koziolek, Heiko', '', '', 'Domis, Dominik', '', '', 'Goldschmidt, Thomas', '', '', 'Vorst, Philipp', '', '', 'Weiss, Roland J', '', '']","Industrial Software Systems Program, ABB Corporate Research, Ladenburg, Germany  2  ABB Power Generation, Genova, Italy",2012,ECSA
575,576,"Managing the cost effective evolution of industrial software systems is a challenging task because of their complexity and long lifetimes  Limited pro active evolution planning and software architecture erosion often lead to huge maintenance costs in such systems  However, formerly researched approaches for evolution scenario analysis and architecture enforcement are only reluctantly applied by practitioners due to their perceived overhead and high costs  We have applied several recent sustainability evaluation and improvement approaches in a case study to the software architecture of a large industrial software system currently under development at ABB  We combined our selection of approaches in a lightweight method called MORPHOSIS, for which this paper presents experiences and lessons learned  We found that reasonable sustainability evaluation and improvement is possible already with limited efforts    2012 IEEE   10 refs",MORPHOSIS  A lightweight method facilitating sustainable software architectures,"['Computer software', 'Cost benefit analysis', 'Maintainability', 'Sustainable development', 'Evaluation and improvement', 'High costs', 'Industrial software', 'Long lifetime', 'Maintenance cost', 'Modifiability', 'Scenario analysis', 'Computer Software, Data Handling and Applications', 'Cost and Value Engineering  Industrial Economics', 'Industrial Economics', 'Maintenance']","['Koziolek, Heiko', '', '', 'Domis, Dominik', '', '', 'Goldschmidt, Thomas', '', '', 'Vorst, Philipp', '', '', 'Weiss, Roland J', '', '']","Industrial Software Systems Program, ABB Corporate Research, Ladenburg, Germany  2  ABB Power Generation, Genova, Italy",2012,WICSA
576,577,"Many approaches to interface development apply only to isolated aspects of the development of user interfaces  UIs , e g , exploration during the early phases, design of visual appearance, or implementation in some technology  In this paper we explore an integrated approach to incorporate the whole UI development life cycle, connect all stakeholders involved, and support a wide range of levels of granularity and abstraction  This is achieved by using Window Event Diagrams  WEDs , a UI specification notation based on UML 2 state machines  It affords closer collaboration between different user groups like graphic designers and software developers by integrating traditional pen and paper based methods with contemporary MDA based CASE tools  We have implemented our approach in the Advanced Interaction Design Environemnt  AIDE , an application to support WEDs    2010 ACM   27 refs",Model driven development of user interface prototypes  An integrated approach,"['Contour followers', 'Graphical user interfaces', 'Integrated control', 'Machine design', 'Phase interfaces', 'Stress intensity factors', 'Technical presentations', 'Visualization', 'CASE tools', 'Graphic designers', 'GUI design', 'Integrated approach', 'Interaction design', 'Interface development', 'Model driven development', 'Paper based methods', 'Software developer', 'State machine', 'UI specification', 'UML', 'User groups', 'User interface prototypes', 'Visual appearance', 'WED', 'Engineering Graphics', 'Physical Chemistry', 'Control Systems', 'Computer Programming', 'Information Dissemination', 'Computer Peripheral Equipment', 'Mechanical Design', 'Strength of Building Materials  Test Equipment and Methods', 'Strength of Building Materials  Mechanical Properties', 'Machine Tools, General']","['St rrle, Harald']","Technical University of Denmark, Richard Petersens Plads, 2800 Lyngby, Denmark",2010,ECSA
577,578,"Many claims have been made about the problems caused by not documenting design rationale  The general perception is that designers and architects usually do not fully understand the critical role of systematic use and capture of design rationale  However, there is to date little empirical evidence available on what design rationale mean to practitioners, how valuable they consider them, and how they use and document design rationale during the design process  This paper reports an empirical study that surveyed practitioners to probe their perception of the value of design rationale and how they use and document background knowledge related to their design decisions  Based on eighty one valid responses, this study has discovered that practitioners recognize the importance of documenting design rationale and frequently use them to reason about their design choices  However, they have indicated barriers to the use and documentation of design rationale  Based on the findings, we conclude that much research is needed to develop methodology and tool support for design rationale capture and usage  Furthermore, we put forward some research questions that would benefit from further investigation into design rationale in order to support practice in industry    2005 IEEE   32 refs",A survey of the use and documentation of architecture design rationale,"['Information use', 'Problem solving', 'Program documentation', 'Software design', 'Design rationale', 'Systematic use', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Information Retrieval and Use']","['Tang, Antony', '', '', 'Babar, Muhammad Ali', '', '', 'Gorton, Ian', '', '', 'Han, Jun']","Faculty of ICT, Swinburne University of Technology, Australia  2  National ICT Australia Ltd , University of NSW, Australia",2005,WICSA
578,579,"Many companies developing embedded systems and software as part of a product line struggle with how to improve their architecting practices to deal with increasing complexity  As the amount of legacy systems from previous products increases, the architecting becomes more and more evolutionary  This paper develops a process maturity model for evolutionary architecting, that can be used by an organization to improve its practices  The model is based on the Capability Maturity Model Integration  CMMI  which is instantiated to suit the architecting needs  Through this instantiation and simplification, it becomes feasible also for a small architecting team to systematically improve its maturity without dealing with the full CMMI  It is shown how the resulting maturity model addresses a number of issues previously collected from industrial case studies  The method is evaluated by performing maturity evaluations at several companies    2010 ACM   14 refs",Towards a process maturity model for evolutionary architecting of embedded system product lines,"['Embedded software', 'Industry', 'Legacy systems', 'Software architecture', 'Technical presentations', 'Capability maturity model integration', 'evolution', 'Industrial case study', 'Maturity model', 'Process maturity', 'Product-lines', 'System products', 'Systems and software', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Axelsson, Jakob']","School of Innovation, Design and Engineering, M lardalen University, SE 721 23 V ster s, Sweden",2010,ECSA
579,580,"Many formal languages have been proposed so far to describe software architectures  SA , but only very few of them are still supported and used in practical contexts  Many UML profiles and extensions have been provided when UML became a standard, in order to model as much as possible architectural concepts  They allow for an easy integration in industrial processes, however, different analysis techniques and domains still require different notations  In fact, since different communities require different information to be put into a diagram, depending on which architectural design aspects should be represented and analyzed, the idea of an unified UML language for SA is not adequate  Building on these considerations, we propose DUALLY, a core set of UML concepts, well suited for SA modeling, together with a framework which provides extensibility mechanisms to adapt the initial notation, in order to meet different needs    2005 IEEE   10 refs",DUALLY  Putting in synergy UML 2 0 and ADLs,"['Computer aided design', 'Context sensitive grammars', 'Formal languages', 'Industrial engineering', 'Mathematical models', 'Unified Modeling Language', 'Computer architectural concepts', 'Industrial processes', 'UML profiles', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Industrial Engineering', 'Mathematics']","['Inverardi, P', '', '', ' Muccini, H', '', '', ' Pelliccione, P', '', '']","Dipartimento di Informatica, University of l Aquila, Via Vetoio, 1, L Aquila, Italy  2  Software Engineering Competence Center, University of Luxembourg, 6, rue R  Coudenhove Kalergi, Luxembourg, Luxembourg",2005,WICSA
580,581,"Many issues must be taken into account in order to provide a right specification of the system to be to meet properly the established requirements  In this sense, the introduction of proper supporting techniques able to automate as much as possible the process means a clear advantage  In this work, we introduce a tool called MORPHEUS that gives support to our proposal by providing traceability throughout the process of generation of proto architecture from requirements    Springer Verlag Berlin Heidelberg 2007   8 refs",Supporting the automatic generation of proto architectures,"['Computer aided software engineering', 'Requirements engineering', 'Software prototyping', 'Specification languages', 'Proto-architecture', 'Traceability', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications']","['Navarro, Elena', '', '', 'Letelier, Patricio', '', '', 'Ja n, Javier', '', '', 'Ramos, Isidro']","Computing Systems Department, UCLM, Albacete, Spain  2  Department of Information Systems and Computation, UPV, Valencia, Spain",2007,ECSA
581,582,"Many issues must be taken into account in order to provide a right specification of the system to be to meet properly the established requirements  In this sense, the introduction of proper supporting techniques able to automate as much as possible the process means a clear advantage  In this work, we introduce a tool called MORPHEUS that gives support to our proposal by providing traceability throughout the process of generation of proto architecture from requirements    Springer Verlag Berlin Heidelberg 2007   8 refs",Supporting the automatic generation of proto architectures,"['Computer aided software engineering', 'Requirements engineering', 'Software prototyping', 'Specification languages', 'Proto-architecture', 'Traceability', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications']","['Navarro, Elena', '', '', 'Letelier, Patricio', '', '', 'Ja n, Javier', '', '', 'Ramos, Isidro']","Computing Systems Department, UCLM, Albacete, Spain  2  Department of Information Systems and Computation, UPV, Valencia, Spain",2008,ECSA
582,583,"Many issues must be taken into account in order to provide a right specification of the system to be to meet properly the established requirements  In this sense, the introduction of proper supporting techniques able to automate as much as possible the process means a clear advantage  In this work, we introduce a tool called MORPHEUS that gives support to our proposal by providing traceability throughout the process of generation of proto architecture from requirements   8 refs",Supporting the automatic generation of proto architectures,"['software architecture', 'proto-architectures automatic generation', 'MORPHEUS', 'software architecture', 'Software engineering techniques']","['Navarro, E', '', '', ' Letelier, P', ' Jaen, J', ' Ramos, I']","Comput  Syst  Dept , UCLM, Albacete, Spain",2007,ECSA
583,584,"Many issues must be taken into account in order to provide a right specification of the system to be to meet properly the established requirements  In this sense, the introduction of proper supporting techniques able to automate as much as possible the process means a clear advantage  In this work, we introduce a tool called MORPHEUS that gives support to our proposal by providing traceability throughout the process of generation of proto architecture from requirements   8 refs",Supporting the automatic generation of proto architectures,"['software architecture', 'proto-architectures automatic generation', 'MORPHEUS', 'software architecture', 'Software engineering techniques']","['Navarro, E', '', '', ' Letelier, P', ' Jaen, J', ' Ramos, I']","Comput  Syst  Dept , UCLM, Albacete, Spain",2008,ECSA
584,585,"Many of today s enterprise software systems are subject to variability  For example, enterprise software systems often run in different business units of an organization, with each unit having its own detailed requirements  Systematic handling of variability allows a software system to be adjusted for different contexts, by planning for adaptation during architecture design  As variability is system wide, it is reflected in the software architecture  To facilitate the representation and analysis of variability in the architecture of enterprise software systems, we propose an architecture viewpoint  To define a reusable variability viewpoint, we elicited stakeholders and concerns through exploratory studies  We also show how the viewpoint was applied for describing variability in a large scale e government system    2012 IEEE   10 refs",A variability viewpoint for enterprise software systems,"['Industry', 'Software architecture', 'Architecture designs', 'Business units', 'E-government systems', 'Enterprise software', 'Exploratory studies', 'Software systems', 'variability', 'viewpoints', 'Computer Software, Data Handling and Applications', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Galster, Matthias', '', '', 'Avgeriou, Paris']","University of Groningen, Netherlands",2012,ECSA
585,586,"Many of today s enterprise software systems are subject to variability  For example, enterprise software systems often run in different business units of an organization, with each unit having its own detailed requirements  Systematic handling of variability allows a software system to be adjusted for different contexts, by planning for adaptation during architecture design  As variability is system wide, it is reflected in the software architecture  To facilitate the representation and analysis of variability in the architecture of enterprise software systems, we propose an architecture viewpoint  To define a reusable variability viewpoint, we elicited stakeholders and concerns through exploratory studies  We also show how the viewpoint was applied for describing variability in a large scale e government system    2012 IEEE   10 refs",A variability viewpoint for enterprise software systems,"['Industry', 'Software architecture', 'Architecture designs', 'Business units', 'E-government systems', 'Enterprise software', 'Exploratory studies', 'Software systems', 'variability', 'viewpoints', 'Computer Software, Data Handling and Applications', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Galster, Matthias', '', '', 'Avgeriou, Paris']","University of Groningen, Netherlands",2012,WICSA
586,587,"Many organizations have to carry out their work by groups of people who are geographically distributed  The groups can experiment changes, which demand the development of applications supporting groupwork and allowing the adaptation to different groupwork organization styles and to both individual and collective needs  This paper proposes a SOA based architecture that provides the suitable structure for the development of collaborative applications that are both adaptive and adaptable  We also present an adaptation process that allows the applications based on the architecture to be adapted to the changes in the groupwork organization and to the necessity of new functionalities    Springer Verlag Berlin Heidelberg 2007   4 refs",Architecture for developing adaptive and adaptable collaborative applications,"['Computer supported cooperative work', 'Societies and institutions', 'Collaborative applications', 'Geographically distributed', 'Computer Programming', 'Computer Applications', 'Societies and Institutions']","['Anzures Garc a, Mario', ' ,', '', ' Hornos, Miguel J', '', '', ' Paderewski Rodr guez, Patricia']","Facultad de Ciencias de la Computaci n, Benem rita Universidad Aut noma de Puebla, Ciudad Universitaria, 14 sur y avenida San Claudio, San Manuel, 72570 Puebla, Mexico  2  Departamento de Lenguajes y Sistemas Inform ticos, E T S I  Inform tica y de Telecomunicaci n, Universidad de Granada, C  Periodista Saucedo Aranda, s n, 18071 Granada, Spain",2007,ECSA
587,588,"Many organizations have to carry out their work by groups of people who are geographically distributed  The groups can experiment changes, which demand the development of applications supporting groupwork and allowing the adaptation to different groupwork organization styles and to both individual and collective needs  This paper proposes a SOA based architecture that provides the suitable structure for the development of collaborative applications that are both adaptive and adaptable  We also present an adaptation process that allows the applications based on the architecture to be adapted to the changes in the groupwork organization and to the necessity of new functionalities    Springer Verlag Berlin Heidelberg 2007   4 refs",Architecture for developing adaptive and adaptable collaborative applications,"['Computer supported cooperative work', 'Societies and institutions', 'Collaborative applications', 'Geographically distributed', 'Computer Programming', 'Computer Applications', 'Societies and Institutions']","['Anzures Garc a, Mario', ' ,', '', ' Hornos, Miguel J', '', '', ' Paderewski Rodr guez, Patricia']","Facultad de Ciencias de la Computaci n, Benem rita Universidad Aut noma de Puebla, Ciudad Universitaria, 14 sur y avenida San Claudio, San Manuel, 72570 Puebla, Mexico  2  Departamento de Lenguajes y Sistemas Inform ticos, E T S I  Inform tica y de Telecomunicaci n, Universidad de Granada, C  Periodista Saucedo Aranda, s n, 18071 Granada, Spain",2008,ECSA
588,589,"Many organizations have to carry out their work by groups of people who are geographically distributed  The groups can experiment changes, which demand the development of applications supporting groupwork and allowing the adaptation to different groupwork organization styles and to both individual and collective needs  This paper proposes a SOA based architecture that provides the suitable structure for the development of collaborative applications that are both adaptive and adaptable  We also present an adaptation process that allows the applications based on the architecture to be adapted to the changes in the groupwork organization and to the necessity of new functionalities   4 refs",Architecture for developing adaptive and adaptable collaborative applications,"['groupware', 'adaptable collaborative applications', 'supporting groupwork development', 'SOA-based architecture', 'adaptation process', 'collaborative applications development', 'Groupware']","['Anzures Garcia, M', '', '', ' Hornos, M J', ' Paderewski Rodriguez, P']","Fac  de Cienc  de la Comput , Benemerita Univ  Autonoma de Puebla, Puebla, Mexico",2007,ECSA
589,590,"Many organizations have to carry out their work by groups of people who are geographically distributed  The groups can experiment changes, which demand the development of applications supporting groupwork and allowing the adaptation to different groupwork organization styles and to both individual and collective needs  This paper proposes a SOA based architecture that provides the suitable structure for the development of collaborative applications that are both adaptive and adaptable  We also present an adaptation process that allows the applications based on the architecture to be adapted to the changes in the groupwork organization and to the necessity of new functionalities   4 refs",Architecture for developing adaptive and adaptable collaborative applications,"['groupware', 'adaptable collaborative applications', 'supporting groupwork development', 'SOA-based architecture', 'adaptation process', 'collaborative applications development', 'Groupware']","['Anzures Garcia, M', '', '', ' Hornos, M J', ' Paderewski Rodriguez, P']","Fac  de Cienc  de la Comput , Benemerita Univ  Autonoma de Puebla, Puebla, Mexico",2008,ECSA
590,591,"Many software systems today have system of systems  SoS  architectures comprising interrelated and heterogeneous systems, which are developed by multiple teams and companies  Such systems emerge gradually and it is hard to analyze or predict their behavior due to their scale and complexity  In particular, certain behavior only emerges at runtime due to complex interactions between the involved systems and their environment  Monitoring the behavior of SoS at runtime is thus essential during development and evolution  However, existing monitoring approaches are often limited to particular architectural styles or technologies and are thus hard to apply in SoS architectures  In this paper we first analyze the challenges for monitoring SoS based on an industrial SoS for the automation of metallurgical plants  We then propose a flexible framework for monitoring heterogeneous systems within a SoS  We demonstrate its feasibility by applying it to two systems of an industrial SoS  We also report results of an evaluation assessing the framework s performance and scalability    2014 IEEE   35 refs",A flexible framework for runtime monitoring of system of systems architectures,"['Industrial plants', 'Network components', 'Software architecture', 'framework', 'Heterogeneous systems', 'Metallurgical plants', 'Monitoring approach', 'performance', 'Performance and scalabilities', 'Runtime Monitoring', 'System-of-systems architecture', 'Electric Networks', 'Computer Programming', 'Industrial Engineering and Management', 'Industrial Engineering', 'Systems Science']","['Vierhauser, Michael', '', '', 'Rabiser, Rick', '', '', 'Grunbacher, Paul', '', '', 'Danner, Christian', '', '', 'Wallner, Stefan', '', '', 'Zeisel, Helmut']","Christian Doppler Laboratory, MEVSS, Johannes Kepler University, Linz, Austria  2  Siemens VAI Metals Technologies, Linz, Austria",2014,WICSA
591,592,"Mapping elements from an application domain to architectural abstractions is a significant architecture description activity from the point of view of seamlessness in descriptions  For establishing such a mapping of domain elements to architectural abstractions, an approach based on ontological analysis is presented  The central idea of the approach is to establish the mapping through a uniform framework of understanding that is applicable over the problem domain as well as the solution domain  The reference ontology used is an adaptation of Bunge Wand Weber  BWW  ontology  Typically, an element from an application domain is mapped with an architectural abstraction when both represent the same phenomena from BWW ontology  The approach is realized as a model driven transformation process    2010 Springer Verlag Berlin Heidelberg   18 refs",Ontological analysis for generating baseline architectural descriptions,"['Abstracting', 'Mapping', 'Ontology', 'Abstracting', 'Mapping', 'Ontology', 'Application domains', 'Architectural descriptions', 'Architecture description', 'Domain elements', 'Model-driven', 'Ontological analysis', 'Problem domain', 'Transformation process', 'Uniform framework', 'Computer Software, Data Handling and Applications', 'Engineering Graphics', 'Information Science', 'Information Sources and Analysis']","['Kiwelekar, Arvind W', '', '', ' Joshi, Rushikesh K', '', '']","Department of Computer Science and Engineering, Indian Institute of Technology Bombay, Powai, Mumbai 400076, India",2010,ECSA
592,593,"Mapping elements from an application domain to architectural abstractions is a significant architecture description activity from the point of view of seamlessness in descriptions  For establishing such a mapping of domain elements to architectural abstractions, an approach based on ontological analysis is presented  The central idea of the approach is to establish the mapping through a uniform framework of understanding that is applicable over the problem domain as well as the solution domain  The reference ontology used is an adaptation of Bunge Wand Weber  BWW  ontology  Typically, an element from an application domain is mapped with an architectural abstraction when both represent the same phenomena from BWW ontology  The approach is realized as a model driven transformation process   18 refs",Ontological Analysis for Generating Baseline Architectural Descriptions,"['ontologies (artificial intelligence)', 'ontological analysis', 'architectural descriptions', 'architectural abstractions', 'reference ontology', 'Bunge-Wand-Weber', 'BWW', 'Knowledge engineering techniques']","['Kiwelekar, A W', '', '', ' Joshi, R K', '', '']","Dept  of Comput  Sci    Eng , Indian Inst  of Technol  Bombay, Mumbai, India",2010,ECSA
593,594,"Measurement of electrochemical surface area  ECSA  of fuel cell electrodes is a key diagnostic of performance and gives a useful parameter for monitoring degradation and state of health in polymer electrolyte membrane fuel cells  PEMFCs   However, conventional methods for determining ECSA require potentiostatic control of the cell, which is impractical in a fuel cell stack  Here we demonstrate for the first time the practical application of a galvanostatic technique that enables in situ monitoring of ECSA in each cell throughout the lifetime of a stack  The concept is demonstrated at single cell level using both H adsorption and CO stripping, and the H adsorption  cathodic current  method is extended to stack testing  The undesirable effects of H 2 crossover on the measurement may be minimised by appropriate selection of current density and by working with dilute H2 on the anode electrode  Good agreement is achieved with ECSA values determined using conventional single cell voltammetry across a range of MEA designs  The technique is straightforward to implement and provides an invaluable tool for state of health monitoring during PEMFC stack lifetime studies  Crown Copyright   2013 Published by Elsevier B V  All rights reserved   10 refs",In situ measurement of active catalyst surface area in fuel cell stacks,"['Electrochemical electrodes', 'Fuel cells', 'Conventional methods', 'Electrochemical surface area', 'Fuel cell electrodes', 'Galvanostatic measurement', 'Galvanostatic techniques', 'PEMFC stack', 'Polymer electrolyte membrane fuel cell (PEMFCs)', 'Potentiostatic control', 'Fuel Cells', 'Chemical Plants and Equipment']","['Brightman, E', '', '', ' Hinds, G', '', '', ' O Malley, R', '', '']","National Physical Laboratory, Teddington Middlesex TW11 0LW, United Kingdom  2  Johnson Matthey Fuel Cells, Lydiard Fields, Great Western Way, Swindon, Wiltshire SN5 8AT, United Kingdom",2013,ECSA
594,595,"Measurement of electrochemical surface area  ECSA  of fuel cell electrodes is a key diagnostic of performance and gives a useful parameter for monitoring degradation and state of health in polymer electrolyte membrane fuel cells  PEMFCs   However, conventional methods for determining ECSA require potentiostatic control of the cell, which is impractical in a fuel cell stack  Here we demonstrate for the first time the practical application of a galvanostatic technique that enables in situ monitoring of ECSA in each cell throughout the lifetime of a stack  The concept is demonstrated at single cell level using both H adsorption and CO stripping, and the H adsorption  cathodic current  method is extended to stack testing  The undesirable effects of H2 crossover on the measurement may be minimised by appropriate selection of current density and by working with dilute H2 on the anode electrode  Good agreement is achieved with ECSA values determined using conventional single cell voltammetry across a range of MEA designs  The technique is straightforward to implement and provides an invaluable tool for state of health monitoring during PEMFC stack lifetime studies    2013 Published by Elsevier B V  All rights reserved   10 refs",In situ measurement of active catalyst surface area in fuel cell stacks,"['Adsorption', 'Electrochemical electrodes', 'Electrodes', 'Fuel cells', 'Polyelectrolytes', 'Polymer membrane electrodes', 'Conventional methods', 'Electrochemical surface area', 'Fuel cell electrodes', 'Galvanostatic measurement', 'Galvanostatic techniques', 'PEMFC stack', 'Polymer electrolyte membrane fuel cell (PEMFCs)', 'Potentiostatic control', 'Fuel Cells', 'Electric Components', 'Chemical Plants and Equipment', 'Chemical Operations', 'Organic Polymers']","['Brightman, E', '', '', ' Hinds, G', '', '', ' O Malley, R', '', '']","National Physical Laboratory, Teddington, Middlesex, United Kingdom  2  Johnson Matthey Fuel Cells, Lydiard Fields, Great Western Way, Swindon, Wiltshire, United Kingdom",2013,ECSA
595,596,"Measurements of polycyclic aromatic hydrocarbons  PAHs  were carried out from 2001 to 2003 in various environmental compartments  ambient air, atmospheric deposition, soils, sediments, runoff, and surface waters  in the Seine Estuary  The goal of this study was to identify the importance of atmospheric fluxes to occurrence of PAHs in the estuary, and to estimate the major pathways of their transport and accumulation within this ecosystem  The annual atmospheric inputs in the estuary ranged from 2 5 to 16 kg for the first sampling year, which is high when compared to those calculated for other European locations  In parallel, PAH transport from the atmosphere to the watershed outlet was investigated for two rural and urban small experimental watersheds within the Seine Estuary  In rural areas, atmospheric inputs are higher than exported loads by surface water and PAHs are accumulating in soils  The inverse occurs in urban areas, where the contribution of atmospheric deposition is negligible compared with PAH exported loads by runoff  These results allowed us to establish a mass balance for PAHs on the scale of the Seine Estuary, and to determine the dynamics of PAH transport  This study highlights the role of the atmospheric compartment in the transfer of contaminants and the importance of the local PAH inputs within the Seine Estuary    2007 Springer Science Business Media B V   34 refs","Fluxes of polycyclic aromatic hydrocarbons in the Seine estuary, France  Mass balance and role of atmospheric deposition","['Deposition', 'Environmental engineering', 'Estuaries', 'Mass transfer', 'Runoff', 'Water resources', 'Atmospheric compartment', 'Atmospheric deposition', 'Seine Estuary', 'Chemical Operations', 'Mass Transfer', 'Environmental Engineering', 'Organic Compounds', 'Surface Water', 'Flood Control', 'Waterways', 'Water Resources']","['Motelay Massei, A', '', ',', '', ' Ollivon, D', '', '', ' Garban, B', '', '', ' Tiphagne Larcher, K', '', '', ' Chevreuil, M', '', '']","D partement de G ologie, UMR CNRS 6143, Universit  de Rouen, 10 Boulevard de Broglie, Mont Saint Aignan Cedex 76821, France  2  Environment Canada, Meteorological Service of Canada, Air Quality Processes Research Division, 4905 Dufferin Street, Downsview, Ont  M3H 5T4, Canada  3  Laboratoire Hydrologie et Environnement, UMR Sisyphe 7619 CNRS, Universit  Pierre et Marie Curie, case 123, 4 place Jussieu, Paris Cedex 5 75252, France",2007,ECSA
596,597,"Measurements of polycyclic aromatic hydrocarbons  PAHs  were carried out from 2001 to 2003 in various environmental compartments  ambient air, atmospheric deposition, soils, sediments, runoff, and surface waters  in the Seine Estuary  The goal of this study was to identify the importance of atmospheric fluxes to occurrence of PAHs in the estuary, and to estimate the major pathways of their transport and accumulation within this ecosystem  The annual atmospheric inputs in the estuary ranged from 2 5 to 16 kg for the first sampling year, which is high when compared to those calculated for other European locations  In parallel, PAH transport from the atmosphere to the watershed outlet was investigated for two rural and urban small experimental watersheds within the Seine Estuary  In rural areas, atmospheric inputs are higher than exported loads by surface water and PAHs are accumulating in soils  The inverse occurs in urban areas, where the contribution of atmospheric deposition is negligible compared with PAH exported loads by runoff  These results allowed us to establish a mass balance for PAHs on the scale of the Seine Estuary, and to determine the dynamics of PAH transport  This study highlights the role of the atmospheric compartment in the transfer of contaminants and the importance of the local PAH inputs within the Seine Estuary    2007 Springer Science Business Media B V   34 refs","Fluxes of polycyclic aromatic hydrocarbons in the Seine estuary, France  Mass balance and role of atmospheric deposition","['Deposition', 'Environmental engineering', 'Estuaries', 'Mass transfer', 'Runoff', 'Water resources', 'Atmospheric compartment', 'Atmospheric deposition', 'Seine Estuary', 'Chemical Operations', 'Mass Transfer', 'Environmental Engineering', 'Organic Compounds', 'Surface Water', 'Flood Control', 'Waterways', 'Water Resources']","['Motelay Massei, A', '', ',', '', ' Ollivon, D', '', '', ' Garban, B', '', '', ' Tiphagne Larcher, K', '', '', ' Chevreuil, M', '', '']","D partement de G ologie, UMR CNRS 6143, Universit  de Rouen, 10 Boulevard de Broglie, Mont Saint Aignan Cedex 76821, France  2  Environment Canada, Meteorological Service of Canada, Air Quality Processes Research Division, 4905 Dufferin Street, Downsview, Ont  M3H 5T4, Canada  3  Laboratoire Hydrologie et Environnement, UMR Sisyphe 7619 CNRS, Universit  Pierre et Marie Curie, case 123, 4 place Jussieu, Paris Cedex 5 75252, France",2008,ECSA
597,598,"Measuring the security level of an information system to acquire reliable perception of its state requires the use of various different security metrics that can provide extensive security evidence of the system  Visualization can then be used to facilitate the management of the security metrics and measurements and to enhance understanding on their relationships  This paper introduces a tool for modeling and monitoring the security state of a system and focuses on the visualization aspects of the tool  The security metrics of a system are organized hierarchically in the tool, so that more general and conceptual security metrics on the higher levels are connected to detailed, low level measurements  The tool helps bring meaningfulness to the security metrics and helps the user be more aware of the security state of the system during runtime use of the tool  By having organized security evidence from high level objectives to low level measurements the user is able to act on the security incidents more proficiently    2014 ACM   15 refs",A tool for security metrics modeling and visualization,"['Flow visualization', 'Level measurement', 'Software architecture', 'Cyber security', 'Low-level measurements', 'Runtimes', 'Security incident', 'Security level', 'Security metrics', 'Situation awareness', 'Fluid Flow, General', 'Computer Programming', 'Engineering Graphics', 'Mechanical Variables Measurements']","['Latvala, Outi Marja', '', '', 'Toivonen, Jyri', '', '', 'Kuusij rvi, Jarkko', '', '', 'Evesti, Antti']","VTT Technical Research Centre of Finland, Kaitov yl  1, 90571 Oulu, Finland",2014,ECSA
598,599,"Media authentication is becoming an increasingly important issue in wireless transmission  Authenticated media content is required to be transcoded at intermediate to accommodate heterogeneous applications  In this paper, an efficient stream authentication approach is proposed for scalable lossy media streams  At first, we describe a joint coding and stream authentication  JCSA  media transmission framework for flexible and secure transcoding  After that, we propose a generalized quality optimized stream authentication  QOSA  model to achieve optimal end to end quality and minimize the authentication overhead  Furthermore, an implementation on the consultative committee for space data systems image data compression  CCSDS IDC  coder is realized by using graph based and error correction coding based  ECC based  authentication  Experimental results demonstrate that the proposed scheme is able to provide high packet loss robustness at the cost of a very low overhead    2012 IEEE   14 refs",Quality optimized authentication of scalable media streams with flexible transcoding over wireless networks,"['Electronic document identification systems', 'Image coding', 'Image compression', 'Intelligent computing', 'Media streaming', 'Optimization', 'Consultative committee for space data systems', 'Error correction coding', 'Graph-based', 'Image data compression', 'Joint coding', 'Lossy media', 'Low overhead', 'Media content', 'Media security', 'Media streams', 'Media transmission', 'Secure transcoding', 'Stream authentication', 'Transcoding', 'Wireless transmissions', 'Computer Software, Data Handling and Applications', 'Light, Optics and Optical Devices', 'Optimization Techniques']","['Yi, Xiaowei', '', '', 'Li, Mingyu', '', '', 'Zheng, Gang', '', '', 'Zheng, Changwen']","Institute of Software, Chinese Academy of Sciences, Graduate University of Chinese Academy of Sciences, Beijing, China  2  Institute of Software, Chinese Academy of Sciences, Beijing, China",2012,QoSA
599,600,"Media authentication of wireless transmission is becoming an increasingly important issue  Authenticated media content is constantly required to be transcoded at intermediates to accommodate heterogeneous applications  In this paper, a general and efficient authentication approach is proposed for scalable lossy media streams  Firstly, a joint coding and stream authentication  JCSA  media transmission system is described in a heterogeneous wireless network  For the JCSA system, a novel structure maintained packetization is designed to realize flexible transcoding  Secondly, to obtain the optimal end to end quality and minimize the authentication overhead, a quality optimized stream authentication  QOSA  framework is proposed for authenticating media content  Finally, an implementation of the proposed QOSA optimization framework on the consultative committee for space data systems image data compression  CCSDS IDC  coder is presented by combining graph based and error correction coding based  ECC based  approaches  Experimental results demonstrate that our scheme can achieve the desired goal that it provides high robustness against packet loss at the cost of a very low overhead    2013 Springer Science Business Media New York   26 refs",Efficient authentication of scalable media streams over wireless networks,"['Electronic document identification systems', 'Heterogeneous networks', 'Image coding', 'Media streaming', 'Wireless networks', 'Consultative committee for space data systems', 'Efficient authentication', 'Error correction coding', 'Heterogeneous wireless network', 'Media quality', 'Rate-distortion optimization', 'Stream authentication', 'Transcoding', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Applications', 'Light, Optics and Optical Devices']","['Yi, Xiaowei', ' ,', '', ' Zheng, Gang', '', '', 'Li, Mingyu', ' ,', '', ' Ma, Hengtai', '', '', 'Zheng, Changwen']","National Key Lab of Integrated Information System Technology, Institute of Software, Chinese Academy of Sciences, Beijing, China  2  Graduate University of Chinese Academy of Sciences, Beijing, China",2014,QoSA
600,601,"Mediators stand as a core architectural paradigm for today s and future systems that increasingly need to be connected  The mediator concept has been used to cope with many heterogeneity dimensions  Still, a key challenge for today s systems architectures is to embed the necessary support for automated mediation, i e , the connector concept needs to evolve towards the one of mediating connector  In this paper, we introduce a framework to formalize mediating connectors  The proposed characterization paves the way for automated reasoning about protocol matching and mapping, and thus for the dynamic synthesis of mediating connectors to enable eternal networked systems, which we investigate as part of the CONNECT European project    2009 IEEE   24 refs",Towards a formalization of mediating connectors for on the fly interoperability,"['Architecture', 'Automata theory', 'Computer software', 'Interoperability', 'Network protocols', 'Automated reasoning', 'Dynamic synthesis', 'European project', 'Mediating connector', 'Networked systems', 'On the flies', 'Systems architecture', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Applications', 'Telephone Systems and Related Technologies  Line Communications', 'Telecommunication  Radar, Radio and Television', 'Buildings and Towers', 'Optical Communication']","['Spalazzese, Romina', '', '', 'Inverardi, Paola', '', '', 'Issarny, Val rie']","Universit  Degli Studi Dell Aquila, via Vetoio, I 67100 L Aquila, Italy  2  INRIA, Rocquencourt Domaine De Voluceau, 78153 Le Chesnay, France",2009,ECSA
601,602,"Mediators stand as a core architectural paradigm for today s and future systems that increasingly need to be connected  The mediator concept has been used to cope with many heterogeneity dimensions  Still, a key challenge for today s systems architectures is to embed the necessary support for automated mediation, i e , the connector concept needs to evolve towards the one of mediating connector  In this paper, we introduce a framework to formalize mediating connectors  The proposed characterization paves the way for automated reasoning about protocol matching and mapping, and thus for the dynamic synthesis of mediating connectors to enable eternal networked systems, which we investigate as part of the CONNECT European project    2009 IEEE   24 refs",Towards a formalization of mediating connectors for on the fly interoperability,"['Architecture', 'Automata theory', 'Computer software', 'Interoperability', 'Network protocols', 'Automated reasoning', 'Dynamic synthesis', 'European project', 'Mediating connector', 'Networked systems', 'On the flies', 'Systems architecture', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Applications', 'Telephone Systems and Related Technologies  Line Communications', 'Telecommunication  Radar, Radio and Television', 'Buildings and Towers', 'Optical Communication']","['Spalazzese, Romina', '', '', 'Inverardi, Paola', '', '', 'Issarny, Val rie']","Universit  Degli Studi Dell Aquila, via Vetoio, I 67100 L Aquila, Italy  2  INRIA, Rocquencourt Domaine De Voluceau, 78153 Le Chesnay, France",2009,WICSA
602,603,"Mediators stand as a core architectural paradigm for today s and future systems that increasingly need to be connected  The mediator concept has been used to cope with many heterogeneity dimensions  Still, a key challenge for today s systems architectures is to embed the necessary support for automated mediation, i e , the connector concept needs to evolve towards the one of mediating connector  In this paper, we introduce a framework to formalize mediating connectors  The proposed characterization paves the way for automated reasoning about protocol matching and mapping, and thus for the dynamic synthesis of mediating connectors to enable eternal networked systems, which we investigate as part of the CONNECT European project    2009 IEEE   24 refs",Towards a formalization of mediating connectors for on the fly interoperability,"['Architecture', 'Automata theory', 'Computer software', 'Interoperability', 'Network protocols', 'Automated reasoning', 'Dynamic synthesis', 'European project', 'Mediating connector', 'Networked systems', 'On the flies', 'Systems architecture', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Applications', 'Telephone Systems and Related Technologies  Line Communications', 'Telecommunication  Radar, Radio and Television', 'Buildings and Towers', 'Optical Communication']","['Spalazzese, Romina', '', '', 'Inverardi, Paola', '', '', 'Issarny, Val rie']","Universit  Degli Studi Dell Aquila, via Vetoio, I 67100 L Aquila, Italy  2  INRIA, Rocquencourt Domaine De Voluceau, 78153 Le Chesnay, France",2011,WICSA
603,604,"Medical diagnosis can be supported by segmenting structures of interest inside a large data volume  The Corkscrew Segmentation Algorithm  CSA  is known to work well on elongated structures  1   Additionally it is a simple and easy to extend algorithm, thus providing a useful basis for further optimizations  Although it was designed for segmenting vessels, it has not been evaluated yet with the Rotterdam Coronary Artery Algorithm Evaluation Frame  work1  2   This is due to the fact that coronary arteries are indeed elongated structures but additionally characterized by bifurcations that the CSA can not handle  This paper discusses an extension to the CSA to find these bifurcations  First evaluations of the extended CSA  eCSA  showed reasonable results on segmenting the coronary tree using data sets of the Coronary Artery Algorithm Evaluation   20 refs",Extending the corkscrew algorithm to find bifurcations of vessels,"['Algorithms', 'Bifurcation (mathematics)', 'Blood vessels', 'Computer graphics', 'Diagnosis', 'Heart', 'Image segmentation', 'Medical imaging', 'Semiconducting cadmium compounds', 'Volume rendering', 'Algorithm evaluation', 'Corkscrew algorithm', 'Coronary arteries', 'Coronary tree', 'Coronary tree tracking', 'Data sets', 'Elongated structures', 'Frame-work', 'Large data volumes', 'Medical diagnosis', 'Rotterdam', 'Segmentation algorithms', 'Mathematics', 'Imaging Techniques', 'Light Optics', 'Light, Optics and Optical Devices', 'Computer Applications', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory', 'Data Processing and Image Processing', 'Compound Semiconducting Materials', 'Medicine and Pharmacology', 'Biological Materials and Tissue Engineering', 'Biomedical Engineering', 'Computer Software, Data Handling and Applications']","['Wette, Philip', '', '', 'Arens, Stephan', '', '', 'Eisner, Andreas', '', '', 'Domik, Gitta']","Department of Computer Science, University of Paderborn, Germany",2010,ECSA
604,605,"Middleware architectures play a crucial role in determining the overall quality of many distributed applications  Systematic evaluation methods for middleware architectures are therefore important to thoroughly assess the impact of design decisions on quality goals  This paper presents MEMS, a scenario based evaluation approach  MEMS provides a principled way of evaluating middleware architectures by leveraging generic qualitative and quantitative evaluation techniques such as prototyping, testing, rating, and analysis  It measures middleware architectures by rating multiple quality attributes, and the outputs aid the determination of the suitability of alternative middleware architectures to meet an application s quality goals  MEMS also benefits middleware development by uncovering potential problems at early stage, making it cheaper and quicker to fix design problems  The paper describes a case study to evaluate the security architecture of grid middleware architectures for managing secure conversations and access control  The results demonstrate the practical utility of MEMS for evaluating middleware architectures for multiple quality attributes    2006 Springer Verlag   26 refs",MEMS  A method for evaluating middleware architectures,"['Access control', 'Computer software selection and evaluation', 'MEMS', 'Microelectromechanical devices', 'Middleware', 'Quality control', 'Design decisions', 'Design problems', 'Distributed applications', 'GRID middleware', 'Middleware architecture', 'Multiple quality', 'Overall quality', 'Potential problems', 'Prototyping', 'Quality goals', 'Quantitative evaluation', 'Scenario-based evaluation', 'Security Architecture', 'Systematic evaluation', 'Management', 'Control Equipment', 'Computer Applications', 'Computer Programming', 'Quality Assurance and Control', 'Computer Software, Data Handling and Applications', 'Electric Equipment', 'Electric Components', 'Mechanical Devices', 'Electronic Components and Tubes']","['Liu, Yan', '', '', 'Gorton, Ian', '', '', 'Bass, Len', '', '', 'Hoang, Cuong', '', '', 'Abanmi, Suhail']","National ICT Australia  NICTA , School of Computer Science and Engineering, University of New South Wales, Australia  2  Software Engineering Institute, United States  3  Engineering Faculty, University of Technology Sydney",2006,QoSA
605,606,"Middleware architectures play a crucial role in determining the overall quality of many distributed applications  Systematic evaluation methods for middleware architectures are therefore important to thoroughly assess the impact of design decisions on quality goals  This paper presents MEMS, a scenario based evaluation approach  MEMS provides a principled way of evaluating middleware architectures by leveraging generic qualitative and quantitative evaluation techniques such as prototyping, testing, rating, and analysis  It measures middleware architectures by rating multiple quality attributes, and the outputs aid the determination of the suitability of alternative middleware architectures to meet an application s quality goals  MEMS also benefits middleware development by uncovering potential problems at early stage, making it cheaper and quicker to fix design problems  The paper describes a case study to evaluate the security architecture of grid middleware architectures for managing secure conversations and access control  The results demonstrate the practical utility of MEMS for evaluating middleware architectures for multiple quality attributes   26 refs",MEMS  a method for evaluating middleware architectures,"['authorisation', 'grid computing', 'middleware', 'program diagnostics', 'program testing', 'software architecture', 'software prototyping', 'software quality', 'software quality', 'distributed application', 'software design', 'MEMS evaluation', 'software prototyping', 'software testing', 'software rating', 'software analysis', 'security architecture', 'grid middleware architecture', 'secure conversations', 'access control', 'Software engineering techniques', 'Distributed systems software', 'Diagnostic, testing, debugging and evaluating systems', 'Data security']","['Yan Liu', '', '', 'Gorton, I', '', '', ' Bass, L', ' Cuong Hoang', 'Abanmi, S']","Nat  ICT Australia, Sydney, NSW, Australia",2006,QoSA
606,607,"Middleware provides infrastructure support for creating dependable software systems  A specific middleware implementation plays a critical role in determining the quality attributes that satisfy a system s dependability requirements  Evaluating a middleware architecture at an early development stage can help to pinpoint critical architectural challenges and optimize design decisions  In this paper, we present a method and its application to evaluate middleware architectures, driven by emerging architecture patterns for developing self managing systems  Our approach focuses on two key attributes of dependability, reliability and maintainability by means of fault tolerance and fault prevention  We identify the architectural design patterns necessary to build an adaptive self managing architecture that is capable of preventing or recovering from failures  These architectural patterns and their impacts on quality attributes create the context for middleware evaluation  Our approach is demonstrated by an example application   failover control of a financial application on an enterprise service bus    2008 Springer Berlin Heidelberg   18 refs",Middleware architecture evaluation for dependable self managing systems,"['Architectural design', 'Computer software selection and evaluation', 'Fault tolerance', 'Fault tolerant computer systems', 'Maintainability', 'Middleware', 'Quality assurance', 'Architectural pattern', 'Dependable softwares', 'Development stages', 'Enterprise service bus', 'Failover', 'Fault prevention', 'Key attributes', 'Middleware architecture', 'Optimize design', 'Quality attributes', 'Self-managing', 'Self-managing systems', 'Maintenance', 'Quality Assurance and Control', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Structural Design, General', 'Buildings and Towers']","['Liu, Yan', '', '', 'Babar, Muhammad Ali', '', '', 'Gorton, Ian']","National ICT Australia, Australia  2  Lero, Irish Software Engineering Centre, University of Limerick, Ireland  3  Pacific Northwest National Laboratory, United States",2008,QoSA
607,608,"Middleware provides infrastructure support for creating dependable software systems  A specific middleware implementation plays a critical role in determining the quality attributes that satisfy a system s dependability requirements  Evaluating a middleware architecture at an early development stage can help to pinpoint critical architectural challenges and optimize design decisions  In this paper, we present a method and its application to evaluate middleware architectures, driven by emerging architecture patterns for developing self managing systems  Our approach focuses on two key attributes of dependability, reliability and maintainability by means of fault tolerance and fault prevention  We identify the architectural design patterns necessary to build an adaptive self managing architecture that is capable of preventing or recovering from failures  These architectural patterns and their impacts on quality attributes create the context for middleware evaluation  Our approach is demonstrated by an example application   failover control of a financial application on an enterprise service bus   18 refs",Middleware architecture evaluation for dependable self managing systems,"['middleware', 'object-oriented programming', 'software architecture', 'software fault tolerance', 'software maintenance', 'middleware', 'architecture evaluation', 'dependable self-managing systems', 'dependable software systems', 'dependability', 'reliability', 'maintainability', 'fault tolerance', 'fault prevention', 'architectural design patterns', 'Distributed systems software', 'Software engineering techniques', 'Object oriented programming']","['Yan Liu', '', '', 'Babar, M A', ' Gorton, I']","Nat  ICT Australia, Sydney, NSW, Australia",2008,QoSA
608,609,"Mobile devices have become for many the preferred way of interacting with the Internet, social media and the enterprise  However, mobile devices still do not have the computing power and battery life that will allow them to perform effectively over long periods of time or for executing applications that require extensive communication or computation, or low latency  Cyber foraging is a technique to enable mobile devices to extend their computing power and storage by offloading computation or data to more powerful servers located in the cloud or in single hop proximity  This paper presents the preliminary results of a systematic literature review  SLR  on architectures that support cyber foraging  The preliminary results show that this is an area with many opportunities for research that will enable cyber foraging solutions to become widely adopted as a way to support the mobile applications of the present and the future    2014 Springer International Publishing Switzerland   67 refs",Architecture strategies for cyber foraging  Preliminary results from a systematic literature review,"['Digital storage', 'Software architecture', 'Battery life', 'Computing power', 'Low latency', 'Mobile applications', 'Offloading computations', 'Social media', 'Systematic literature review', 'Systematic literature review (SLR)', 'Telecommunication  Radar, Radio and Television', 'Data Storage, Equipment and Techniques', 'Computer Programming']","['Lewis, Grace A', '', ',', '', ' Lago, Patricia', '', '', 'Procaccianti, Giuseppe']","Carnegie Mellon Software Engineering Institute, United States  2  VU University Amsterdam, Netherlands",2014,ECSA
609,610,"Mobile devices have become for many the preferred way of interacting with the Internet, social media and the enterprise  However, mobile devices still do not have the computing power and battery life that will allow them to perform effectively over long periods of time or for executing applications that require extensive communication or computation, or low latency  Cyber foraging is a technique to enable mobile devices to extend their computing power and storage by offloading computation or data to more powerful servers located in the cloud or in single hop proximity  This paper presents the preliminary results of a systematic literature review  SLR  on architectures that support cyber foraging  The preliminary results show that this is an area with many opportunities for research that will enable cyber foraging solutions to become widely adopted as a way to support the mobile applications of the present and the future   67 refs",Architecture Strategies for Cyber Foraging  Preliminary Results from a Systematic Literature Review,"['cloud computing', 'mobile computing', 'network servers', 'power aware computing', 'software architecture', 'architecture strategies', 'mobile devices', 'computing power', 'computing storage', 'computation offloading', 'data offloading', 'cloud servers', 'single-hop proximity', 'systematic literature review', 'SLR', 'cyber-foraging solutions', 'mobile applications', 'battery life', 'Internet software', 'Software engineering techniques', 'Mobile, ubiquitous and pervasive computing']","['Lewis, G A', '', '', ' Lago, P', '', '', ' Procaccianti, G', '', '']","Carnegie Mellon Software Eng  Inst , United States  2  VU Univ  Amsterdam, Amsterdam, Netherlands",2014,ECSA
610,611,"Model Driven Engineering  MDE  is an approach to develop software systems by creating models and applying automated transformations to them to ultimately generate the implementation for a target platform  Although the main focus of MDE is on the generation of code, it is also necessary to support the analysis of the designs with respect to quality attributes such as performance  To complement the model to implementation path of MDE approaches, an MDE tool infrastructure should provide what we call model driven analysis  This paper describes an approach to model driven analysis based on reasoning frameworks  In particular, it describes a performance reasoning framework that can transform a design into a model suitable for analysis of real time performance properties with different evaluation procedures including rate monotonic analysis and simulation  The concepts presented in this paper have been implemented in the PACC Starter Kit  a development environment that supports code generation and analysis from the same models   26 refs",Model driven performance analysis,"['software performance evaluation', 'model-driven performance analysis', 'model-driven engineering', 'software systems', 'automated transformations', 'performance reasoning framework', 'rate monotonic analysis', 'code generation', 'Software performance evaluation']","['Moreno, G A', '', '', ' Merson, P', '', '']","Software Eng  Inst , Carnegie Mellon Univ , Pittsburgh, PA, United States",2008,QoSA
611,612,"Model Driven Engineering  MDE  is an approach to develop software systems by creating models and applying automated transformations to them to ultimately generate the implementation for a target platform  Although the main focus of MDE is on the generation of code, it is also necessary to support the analysis of the designs with respect to quality attributes such as performance  To complement the model to implementation path of MDE approaches, an MDE tool infrastructure should provide what we call model driven analysis  This paper describes an approach to model driven analysis based on reasoning frameworks  In particular, it describes a performance reasoning framework that can transform a design into a model suitable for analysis of real time performance properties with different evaluation procedures including rate monotonic analysis and simulation  The concepts presented in this paper have been implemented in the PACC Starter Kit, a development environment that supports code generation and analysis from the same models    2008 Springer Berlin Heidelberg   26 refs",Model driven performance analysis,"['Computer software selection and evaluation', 'Simulators', 'Automated transformations', 'Code Generation', 'Development environment', 'Model-driven', 'Model-driven engineering', 'Performance analysis', 'Quality attributes', 'Rate monotonic analysis', 'Real time performance', 'Reasoning framework', 'Software systems', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Naval Architecture', 'Management', 'Automobiles', 'Satellites', 'Rockets and Missiles', 'Nuclear Reactors', 'Solar Energy and Phenomena']","['Moreno, Gabriel A', '', '', ' Merson, Paulo']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, United States",2008,QoSA
612,613,"Model based approaches for the development of software intensive real time embedded systems allow early verification of timing properties at the design phase  At this phase, the Real Time Operating System  RTOS  may not be chosen, hence some assumptions on the software platform are made to achieve timing verifications such as schedulability analysis of tasks describing the application  Among these assumptions, the synchronization protocol which is used to manage the concurrent access to resources that are shared between tasks  A classical solution is to consider the Priority Ceiling Protocol  PCP  synchronization protocol to avoid deadlocks  However, when this protocol is not provided by the target RTOS on which the application will be deployed, the concurrency model becomes not implementable and a new synchronization protocol must be considered  In this paper, we propose the Shared Resource Merge Pattern  SRMP  which aims to prevent deadlocks when the use of PCP protocol is not allowed by the target RTOS  The application of this pattern on the concurrency model must guarantee that the timing properties of the real time application are still met  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   17 refs",SRMP  A software pattern for deadlocks prevention in real time concurrency models,"['Computer operating systems', 'Synchronization', 'Verification', 'Deadlock', 'MDA', 'Priority ceiling protocols', 'Real time operating system', 'Real-time embedded systems', 'Schedulability analysis', 'Software patterns', 'Synchronization protocols', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Systems Science']","['Mzid, Rania', '', '', 'Mraidha, Chokri', '', '', 'Babau, Jean Philippe', '', '', 'Abid, Mohamed']","CES Laboratory, National School of Engineers of Sfax, Sfax, Tunisia  2  CEA, LIST, Laboratory of Model Driven Engineering for Embedded Systems, 91191 Gif sur Yvette, France  3  Lab STICC, UBO, UEB Brest, Brest, France",2014,QoSA
613,614,"Modeling SOA design patterns with a standard formal notation avoids misunderstanding by software architects and helps endow design methods with refinement approaches for mastering system architectures complexity  In this paper, we propose a formal architecture centric approach that aims to model message oriented SOA design patterns with the SoaML standard language  Pattern models are developed in a stepwise manner which are then automatically translated into Event B specifications that can be proved using the Rodin theorem prover  These two steps are performed before undertaking the effective coding of a design pattern providing correct by construction solutions  Our approach is experimented through pattern examples    2013 Springer Verlag   12 refs",Building correct by construction SOA design patterns  Modeling and refinement,"['Theorem proving', 'Architecture-centric', 'Correct-by-construction', 'Design Patterns', 'Event-b methods', 'Formal notations', 'Mastering systems', 'Pattern transformations', 'Software architects', 'Computer Programming', 'Mathematics']","['Tounsi, Imen', '', '', 'Hadj Kacem, Mohamed', '', '', 'Hadj Kacem, Ahmed']","ReDCAD Research Unit, University of Sfax, Sfax, Tunisia",2013,ECSA
614,615,"Models play a central role in software engineering  They may be used to reason about requirements, to identify possible missing parts or conflicts  They may be used at design time to analyze the effects and trade offs of different architectural choices before starting an implementation, anticipating the discovery of possible defects that might be uncovered at later stages, when they might be difficult or very expensive to remove  They may also be used at run time to support continuous monitoring of compliance of the running system with respect to the desired model  This paper focuses on models that support reasoning about non functional system properties   namely, performance and reliability  It provides a taxonomy, which tries to capture the main facets that are needed to understand, choose, and use models appropriately in the various phases of software development and operation  The paper also focuses on the roundtrip from models to reality and back  The forward path is followed in model driven development  The backward path is instead meant to enable model calibration, with the goal of building adequate abstractions, which reflect reality and its properties in a faithful manner  Calibration may be required because of flaws in the initial model or in the process that derived the implementation, or because of changes that occurred in the environment or in the requirements  This leads to the idea that models should continue to live at run time, on line with the running implementation  Calibrated models may drive the necessary dynamic changes that may support self adaptation of the implemented system    2008 Springer Berlin Heidelberg   79 refs",Rethinking the use of models in software architecture,"['Calibration', 'Computer software selection and evaluation', 'Models', 'Taxonomies', 'Calibrated model', 'Continuous monitoring', 'Design time', 'Dynamic changes', 'Model calibration', 'Model driven development', 'Non-functional', 'Roundtrip', 'Running systems', 'Runtimes', 'Self adaptation', 'Software development', 'Use-model', 'Moisture, Pressure and Temperature, and Radiation Measuring Instruments', 'Mechanical and Miscellaneous Measuring Instruments', 'Electric and Electronic Measuring Instruments', 'Acoustical and Optical Measuring Instruments', 'Management', 'Information Science', 'Codes and Standards', 'Engineering Graphics', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications']","['Ardagna, Danilo', '', '', 'Ghezzi, Carlo', '', '', 'Mirandola, Raffaela']","Dipartimento di Elettronica e Informazione, Politecnico di Milano, Piazza Leonardo da Vinci 32, 20133 Milano, Italy",2008,QoSA
615,616,"Models play a central role in software engineering  They may be used to reason about requirements, to identify possible missing parts or conflicts  They may be used at design time to analyze the effects and trade offs of different architectural choices before starting an implementation, anticipating the discovery of possible defects that might be uncovered at later stages, when they might be difficult or very expensive to remove  They may also be used at run time to support continuous monitoring of compliance of the running system with respect to the desired model  This paper focuses on models that support reasoning about non functional system properties   namely, performance and reliability  It provides a taxonomy, which tries to capture the main facets that are needed to understand, choose, and use models appropriately in the various phases of software development and operation  The paper also focuses on the roundtrip from models to reality and back  The forward path is followed in model driven development  The backward path is instead meant to enable model calibration, with the goal of building adequate abstractions, which reflect reality and its properties in a faithful manner  Calibration may be required because of flaws in the initial model or in the process that derived the implementation, or because of changes that occurred in the environment or in the requirements  This leads to the idea that models should continue to live at run time, on line with the running implementation  Calibrated models may drive the necessary dynamic changes that may support self adaptation of the implemented system   79 refs",Rethinking the use of models in software architecture,"['reasoning about programs', 'software architecture', 'system monitoring', 'user modelling', 'software architecture', 'software engineering', 'reason about requirements', 'continuous compliance monitoring', 'software development', 'model-driven development', 'model calibration', 'Software engineering techniques', 'Formal methods', 'Diagnostic, testing, debugging and evaluating systems', 'Knowledge engineering techniques']","['Ardagna, D', '', '', ' Ghezzi, C', '', '', ' Mirandola, R', '', '']","Dipt  di Elettron  e Inf , Politec  di Milano, Milano, Italy",2008,QoSA
616,617,"Models play a central role in the assessment of software non functional properties like performance and reliability  Models can be used both in the initial phases of development to support the designer decisions and at runtime to evaluate the impact of changes in the existing software  However, being abstraction, the models include perse a certain degree of uncertainty  Nevertheless, often this aspect is neglected and models are used beyond their capabilities  Recognising the presence of uncertainties and managing them, would increase the level of trust in a given software model  In this paper we exploit a recently defined taxonomy that classifies the different types of uncertainties and we define a method that, starting from a given model, helps in recognising the existence of uncertainty, in classifying and managing it  We show the method at work on an example application considering the performance of the application as target non functional property  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   36 refs",Dealing with uncertainties in the performance modelling of software systems,"['Models', 'Software reliability', 'Degree of uncertainty', 'Impact of changes', 'Non functional properties', 'Performance', 'Performance and reliabilities', 'Performance modelling', 'Software systems', 'Uncertainty', 'Engineering Graphics', 'Quality Assurance and Control', 'Probability Theory']","['Perez Palacin, Diego', '', '', 'Mirandola, Raffaela']","Politecnico di Milano Dipartimento di Elettronica, Informazione e Bioingegneria, Milano, Italy",2014,QoSA
617,618,"Modern IT systems evolve being re architected throughout their entire lifetime  Existing architecture decision making approaches are oriented towards systems design, rather than systems evolution  However, real life architecture evolution is substantially different to initial architectural design  It is a disorderly process, in most cases unrepeatable, and therefore difficult to be put into a predefined rut as most approaches try to do  MAD 2 0 model has been developed to support architect practitioners working on systems evolution  It does not impose any predefined classification or hierarchy of architectural decisions and assumes a limited number of kinds of relations between architectural decisions  This makes a model of the decision process intuitive and easy to comprehend  To explain the choices made and capture their rationale, the entire decision situation is presented, including  the decision topic, considered design options, relevant requirements, and the advantages and disadvantages of every considered option  The proposed models and approach, supported by an appropriate modelling tool, has been validated in the real life conditions of one of the telecom companies    2011 Springer Verlag   14 refs",Capturing architecture evolution with maps of architectural decisions 2 0,"['Architectural design', 'System theory', 'Systems analysis', 'Architectural decision', 'Architectural knowledge', 'Decision process', 'Decision situation', 'Design option', 'Diagrammatic representations', 'IT system', 'Modelling tools', 'Systems evolution', 'Telecom company', 'Buildings and Towers', 'Computer Programming', 'Systems Science']","['Zalewski, Andrzej', '', '', 'Kijas, Szymon', '', '', 'Sokoowska, Dorota']","Warsaw University of Technology, Institute of Automatic Control and Computational Engineering, Poland",2011,ECSA
618,619,"Modern component frameworks support continuous deployment and simultaneous execution of multiple software components on top of the same virtual machine  However, isolation between the various components is limited  A faulty version of any one of the software components can compromise the whole system by consuming all available resources  In this paper, we address the problem of efficiently identifying faulty software components running simultaneously in a single virtual machine  Current solutions that perform permanent and extensive monitoring to detect anomalies induce high overhead on the system, and can, by themselves, make the system unstable  In this paper we present an optimistic adaptive monitoring system to determine the faulty components of an application  Suspected components are finely instrumented for deeper analysis by the monitoring system, but only when required  Unsuspected components are left untouched and execute normally  Thus, we perform localized just in time monitoring that decreases the accumulated overhead of the monitoring system  We evaluate our approach against a state of the art monitoring system and show that our technique correctly detects faulty components, while reducing overhead by an average of 80     2014 IEEE   35 refs",Scapegoat  An adaptive monitoring framework for component based systems,"['Computer simulation', 'Software architecture', 'Adaptive monitoring', 'Component based systems', 'Component framework', 'Monitoring system', 'Runtimes', 'Software adaptation', 'Software component', 'Virtual machines', 'Computer Applications', 'Acoustical and Optical Measuring Instruments', 'Electric and Electronic Measuring Instruments', 'Mechanical and Miscellaneous Measuring Instruments', 'Moisture, Pressure and Temperature, and Radiation Measuring Instruments']","['Gonzalez Herrera, Inti', '', '', 'Bourcier, Johann', '', '', 'Daubert, Erwan', '', '', 'Rudametkin, Walter', '', '', 'Barais, Olivier', '', '', 'Fouquet, Francois', '', '', 'Jezequel, Jean Marc']","Univ Rennes 1   IRISA, Campus de Beaulieu, 35042 Rennes, France  2  INRIA, Campus de Beaulieu, 35042 Rennes, France  3  Univ du Luxembourg, Luxembourg, Luxembourg",2014,WICSA
619,620,"Modern data centers are subject to an increasing demand for flexibility  Increased flexibility and dynamics, however, also result in a higher system complexity  This complexity carries on to run time resource management for Quality of Service  QoS  enforcement, rendering design time approaches for QoS assurance inadequate  In this paper, we present a set of novel meta models that can be used to describe the resource landscape, the architecture and resource layers of dynamic virtualized data center infrastructures, as well as their runtime adaptation and resource management aspects  With these meta models we introduce new modeling concepts to improve model based run time QoS assurance  We evaluate our meta models by modeling a representative virtualized service infrastructure and using these model instances for run time resource allocation  The results demonstrate the benefits of the new meta models and show how they can be used to improve model based system adaptation and run time resource management in dynamic virtualized data centers  Copyright   2012 ACM   21 refs",Modeling dynamic virtualized resource landscapes,"['Mathematical models', 'Natural resources management', 'Quality of service', 'Resource allocation', 'Data centers', 'Increased flexibility', 'Meta model', 'Model-based systems', 'Modeling concepts', 'Resource management', 'Resources', 'Runtime adaptation', 'Runtimes', 'System complexity', 'Virtualizations', 'Virtualized resources', 'Virtualized services', 'Mathematics', 'Operations Research', 'Information Dissemination', 'Computer Software, Data Handling and Applications', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television', 'Environmental Engineering', 'Water Resources']","['Huber, Nikolaus', '', '', 'Brosig, Fabian', '', '', 'Kounev, Samuel']","Karlsruhe Institute of Technology, Am Fasanengarten 5, Karlsruhe, Germany",2012,QoSA
620,621,"Modern distributed systems may consist of hundreds of thousands of computers, ranging from high end powerful machines to low end resource constrained wireless devices  We label them as extreme distributed systems, as they push scalability and complexity well beyond traditional scenarios  Most of these systems are still organized along traditional lines with hierarchical, centralized control planes  Things are changing though  more and more decentralized organizations are emerging, exemplified by P2P systems, ad hoc networks, vehicular networks, etc  Decentralized organizations often combine local decisionmaking with dissemination of information in order to improve the decision making process, exemplified by many gossip based protocols  3   These protocols have been designed to solve problems as diverse as information dissemination  4 , aggregation  6 , topology maintenance  7 , heartbeat synchronization  1 , etc  Solutions to these problems share many common aspects, yet they have been published and developed in a confused and scattered way, leaving developers alone when integrating them into real applications  In this talk, we briefly introduce the gossip paradigm, showing how it can applied to solve several different problems, and we discuss what are the challenges that are left open for the researchers willing to provide a general framework for the design, implementation and deployment of gossip protocols   8 refs",Designing extreme distributed systems  Challenges and opportunities,"['Hierarchical systems', 'Industrial applications', 'Information dissemination', 'Peer to peer networks', 'Problem solving', 'Centralized control', 'Decision making process', 'Distributed systems', 'Gossip', 'Gossip protocols', 'Gossip-based protocol', 'Local decision-making', 'P2P system', 'Peer to peer', 'Real applications', 'Resource-constrained', 'Topology maintenance', 'Vehicular networks', 'Wireless devices', 'Computer Systems and Equipment', 'Digital Computers and Systems', 'Information Dissemination', 'Production Planning and Control  Manufacturing', 'Mathematics', 'Systems Science']","['Montresor, Alberto']","University of Trento, Italy",2012,QoSA
621,622,"Modern enterprise software systems often need to interact with a large number of heterogeneous systems in an enterprise IT environment  The distributedness, large scale ness, and heterogeneity of such environment makes it difficult to test a system s quality attributes such as performance and scalability before it is actually deployed in the environment  In this paper, we present a Coloured Petri nets  CPN  based system behaviour emulation approach and a lightweight virtual testing framework for provisioning the deployment testing environment of an enterprise system so that its quality attributes, especially scalability, can be evaluated without physically connecting to the real production environment  This testing environment is scalable and has a flexible pluggable architecture to support the emulation of the behaviour of heterogeneous systems in the environment  To validate the feasibility of this approach, a CPN emulation model for LDAP has been developed and applied in testing the scalability of a real life identity management system  An in lab performance study has been conducted to demonstrate the effectiveness of this approach  Copyright   2012 ACM   29 refs",A virtual deployment testing environment for enterprise software systems,"['Computer software', 'Petri nets', 'Scalability', 'Coloured Petri Nets', 'Emulation model', 'Enterprise IT', 'Enterprise software', 'Enterprise system', 'Heterogeneous systems', 'Identity management systems', 'Performance study', 'Pluggable architecture', 'Production environments', 'Quality attributes', 'System emulation', 'System\x92s quality', 'Testing environment', 'Virtual testing', 'Computer Software, Data Handling and Applications', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory']","['Yu, Jian', '', '', 'Han, Jun', '', '', 'Schneider, Jean Guy', '', '', 'Hine, Cameron', '', '', 'Versteeg, Steve']","Faculty of Information and Communication Technologies, Swinburne University of Technology, Hawthorn, VIC 3122, Australia  2  CA Labs, 380 St  Kilda Rd, Melbourne, VIC 3004, Australia",2012,QoSA
622,623,"Modern middleware platforms provide the applications deployed on top of them with facilities for their adaptation  However, the level of adaptation support provided by the state of the art middleware solutions is often limited to dynamically loading and off loading of software components  Therefore, it is left to the application developers to handle the details of change such that the system s consistency is not jeopardized  In this paper, we present an approach that addresses the current shortcomings by utilizing the information encoded in a software system s architectural style  This information drives the development of adaptation patterns, which could be employed to enhance the adaptation support in middleware platforms  The patterns specify both the exact sequence of changes and the time at which those changes need to occur    2010 Springer Verlag Berlin Heidelberg   10 refs",On the role of architectural styles in improving the adaptation support of middleware platforms,"['Architecture', 'Dynamic loads', 'Middleware', 'Adaptation Patterns', 'Application developers', 'Architectural style', 'Middleware platforms', 'Off-loading', 'Software component', 'Software systems', 'Buildings and Towers', 'Structural Design, General', 'Computer Programming']","['Esfahani, Naeem', '', '', 'Malek, Sam']","Department of Computer Science, George Mason University, United States",2010,ECSA
623,624,"Modern society relies heavily on complex software systems for everyday activities  Dependability of these systems thus has become a critical feature that determines which products are going to be successfully and widely adopted  In this paper, we present an approach to modeling reliability of software systems at the architectural level  Dynamic Bayesian Networks are used to build a stochastic reliability model that relies on standard models of software architecture, and does not require implementation level artifacts  Reliability values obtained via this approach can aid the architect in evaluating design alternatives  The approach is evaluated using sensitivity and uncertainty analysis    2008 Springer Verlag Berlin Heidelberg   27 refs",A bayesian model for predicting reliability of software systems at the architectural level,"['Architecture', 'Bayesian networks', 'Chlorine compounds', 'Computer software', 'Computer software selection and evaluation', 'Inference engines', 'Quality assurance', 'Reliability', 'Sensitivity analysis', 'Software reliability', 'Standardization', 'Standards', 'Stochastic models', 'Uncertainty analysis', 'Bayesian modelling', 'Complex software systems', 'Design alternatives', 'Dynamic bayesian networks', 'International conferences', 'Quality of softwares', 'Reliability modeling', 'Software systems', 'Standard models', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory', 'Mathematics', 'Quality Assurance and Control', 'Codes and Standards', 'Organic Compounds', 'Probability Theory', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Strength of Building Materials  Mechanical Properties', 'Buildings and Towers', 'Expert Systems']","['Roshandel, Roshanak', '', '', 'Medvidovic, Nenad', '', '', 'Golubchik, Leana', ' ,', '']","Computer Science and Software Engineering Department, Seattle University, Seattle, WA 98122, United States  2  Computer Science Department, University of Southern California, Los Angeles, CA 90089, United States  3  EE Systems Department, University of Southern California, IMSC, Los Angeles, CA 90089, United States",2007,QoSA
624,625,"Modern society relies heavily on complex software systems for everyday activities  Dependability of these systems thus has become a critical feature that determines which products are going to be successfully and widely adopted  In this paper, we present an approach to modeling reliability of software systems at the architectural level  Dynamic Bayesian Networks are used to build a stochastic reliability model that relies on standard models of software architecture, and does not require implementation level artifacts  Reliability values obtained via this approach can aid the architect in evaluating design alternatives  The approach is evaluated using sensitivity and uncertainty analysis   27 refs",A Bayesian model for predicting reliability of software systems at the architectural level,"['belief networks', 'software architecture', 'software reliability', 'stochastic processes', 'Bayesian network model', 'software system predicting reliability', 'software architecture', 'stochastic reliability model', 'Software engineering techniques', 'Other topics in statistics', 'Combinatorial mathematics']","['Roshandel, R', '', '', ' Medvidovic, N', '', '', ' Golubchik, L', '', '']","Comput  Sci    Software Eng  Dept , Seattle Univ , Seattle, WA, United States  2  Comput  Sci  Dept , Univ  of Southern California, Los Angeles, CA, United States  3  EE Syst  Dept , Univ  of Southern California, Los Angeles, CA, United States",2008,QoSA
625,626,"Modern software applications are distributed and often operate in dynamic contexts, where requirements, assumptions about the environment, and usage profiles continuously change  These changes are difficult to predict and to anticipate at design time  The running software system should thus be able to react on its own, by dynamically adapting its behavior, in order to sustain a required quality of service  A key challenge is to provide the system with the necessary flexibility to perform self adaptation, without compromising dependability  Models Runtime is an emerging paradigm aiming at transferring traditional modeling activities  focusing on quality, verification, and so on  performed by humans, to the running system  In this trend, Kevoree provides a models  runtime platform to design heterogeneous, distributed and adaptive applications based on the component based software engineering paradigm  At the end of this tutorial, applicants will be able to develop and assemble new components and communication channel to design complex self  adaptable distributed architectures by reusing existing piece of code  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   7 refs",Designing and evolving distributed architecture using kevoree,"['Application programs', 'Quality of service', 'Adaptive application', 'Component-based software engineering', 'Distributed architecture', 'Dynamic contexts', 'Running systems', 'Software applications', 'Software systems', 'Traditional models', 'Structural Design', 'Computer Software, Data Handling and Applications']","['Fouquet, Fran ois', '', '', 'Nain, Gr gory', '', '', 'Daubert, Erwan', '', '', 'Bourcier, Johann', '', '', 'Barais, Olivier', '', '', 'Plouzeau, Noel', '', '', 'Morin, Brice']","Interdisciplinary Center for Security Reliability and Trust  SnT , University of Luxembourg, Luxembourg  2  University of Rennes 1, IRISA INRIA Centre, Rennes, France  3  SINTEF ICT, Oslo, Norway",2014,QoSA
626,627,"Modern software development practices show that there is significant diversity in the product, process and geographical location of software development due to economical, technical and logistical constraints  Such diverse development demands flexibility in the software engineering methodology  In this paper, we propose the Cellular Development Methodology  CDM , an architecture driven approach to flexible software development  CDM derives the development process and its architecture from the software architecture of product  The software development process is structured and customised as a network of cooperating cells  Our contribution is a cellular approach to software development based on the software architecture of the end product whereby a network of configurable cells yield customisable, potentially distributed software development processes which in turn produce software that is highly tailored to user requirements    2007 IEEE   31 refs",Flexible software development  From software architecture to process,"['Cellular automata', 'Constraint theory', 'Network security', 'Product development', 'User interfaces', 'Cellular Development Methodology (CDM)', 'Configurable cell network', 'Distributed software development', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Peripheral Equipment', 'Computer Programming', 'Computer Applications', 'Mathematics', 'Systems Science']","['Balasubramaniam, Dharini', '', '', 'Morrison, Ron', '', '', 'Greenwood, R', 'Mark', '', '', 'Warboys, Brian']","School of Computer Science, University of St Andrews, United Kingdom  2  School of Computer Science, University of Manchester, United Kingdom",2007,WICSA
627,628,"Modern software development practices show that there is significant diversity in the product, process and geographical location of software development due to economical, technical and logistical constraints  Such diverse development demands flexibility in the software engineering methodology  In this paper, we propose the cellular development methodology  CDM , an architecture driven approach to flexible software development  CDM derives the development process and its architecture from the software architecture of product  The software development process is structured and customised as a network of cooperating cells  Our contribution is a cellular approach to software development based on the software architecture of the end product whereby a network of configurable cells yield customisable, potentially distributed software development processes which in turn produce software that is highly tailored to user requirements   31 refs",Flexible software development  from software architecture to process,"['cellular manufacturing', 'flexible manufacturing systems', 'software architecture', 'flexible software development', 'product software architecture', 'software engineering', 'cellular development methodology', 'configurable cells', 'Production engineering computing', 'Software engineering techniques']","['Balasubramaniam, D', '', '', ' Morrison, R', '', '', ' Greenwood, R M', ' Warboys, B']","Sch  of Comput  Sci , Univ  of St Andrews, St  Andrews, United Kingdom",2007,WICSA
628,629,"Modern software operates in highly dynamic and often unpredictable environments that can degrade its quality of service  Therefore, it is increasingly important having systems able to adapt their behavior to the environment where they execute at any moment  Nevertheless, software with self adaptive capabilities is difficult to develop  To make easier its development, different architectural frameworks have been proposed during the last years  A shared characteristic among most frameworks is that they define applications that make an internal use of models, which are analyzed to discover the configurations that better fit in the changing environments  In this context, this tutorial presents the current research advances on architectural frameworks for building self adaptive software that meets its Quality of Service  QoS   We discuss architectures that use self adaption to improve the QoS and whose adaptations are planned as a result of the analysis of formal models  We also describe a set of current research challenges that are still preventing the complete automatic control of dependable self adaptive software  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   20 refs",Software QoS enhancement through self adaptation and formal models,"['Automation', 'Computer software', 'Control', 'Models', 'Architectural frameworks', 'Changing environment', 'Research advances', 'Research challenges', 'Self adaptation', 'Self-adaptive capability', 'Self-adaptive software', 'Unpredictable environments', 'Computer Software, Data Handling and Applications', 'Automatic Control Principles and Applications', 'Control Devices', 'Engineering Graphics']","['Mirandola, Raffaela', '', '', 'Perez Palacin, Diego']","Politecnico di Milano Dipartimento di Elettronica, Informazione e Bioingegneria, Milano, Italy",2014,QoSA
629,630,"Modern software platforms often depend on networks of user generated content  Although such platforms are very popular, their architectural concepts and underlying system dynamics are not yet fully understood  This paper uses stigmergy, a form of indirect communication and self organization, as basis for framing certain groups of software services in order to propose an architectural concept of stigmergic information systems and describe identified key fields  actor base, architecture, software ecosystem  inuencing them  Thus enabling the creation of better solution stack configurations needed to support effective and efficient development of such services  Copyright 2012 ACM   22 refs",A first account on stigmergic information systems and their impact on platform development,"['Ecosystems', 'Information systems', 'Collective intelligences', 'Human computation', 'Self-organization', 'Software ecosystems', 'Stigmergy', 'Ecology and Ecosystems', 'Computer Programming', 'Information Dissemination']","['Musil, Juergen', '', '', 'Musil, Angelika', '', '', 'Winkler, Dietmar', '', '', 'Biffl, Stefan']","Christian Doppler Laboratory for Software Engineering Integration for Flexible Automation Systems, Institute of Software Technology and Interactive Systems, Vienna University of Technology, Favoritenstrasse 9 11 188, 1040 Vienna, Austria",2012,ECSA
630,631,"Modern software platforms often depend on networks of user generated content  Although such platforms are very popular, their architectural concepts and underlying system dynamics are not yet fully understood  This paper uses stigmergy, a form of indirect communication and self organization, as basis for framing certain groups of software services in order to propose an architectural concept of stigmergic information systems and describe identified key fields  actor base, architecture, software ecosystem  inuencing them  Thus enabling the creation of better solution stack configurations needed to support effective and efficient development of such services  Copyright 2012 ACM   22 refs",A first account on stigmergic information systems and their impact on platform development,"['Ecosystems', 'Information systems', 'Collective intelligences', 'Human computation', 'Self-organization', 'Software ecosystems', 'Stigmergy', 'Ecology and Ecosystems', 'Computer Programming', 'Information Dissemination']","['Musil, Juergen', '', '', 'Musil, Angelika', '', '', 'Winkler, Dietmar', '', '', 'Biffl, Stefan']","Christian Doppler Laboratory for Software Engineering Integration for Flexible Automation Systems, Institute of Software Technology and Interactive Systems, Vienna University of Technology, Favoritenstrasse 9 11 188, 1040 Vienna, Austria",2012,WICSA
631,632,"Modern software systems are increasingly built out of services that are developed, deployed, and operated by independent organizations, which expose them for the use by potential clients  Services may be directly invoked by clients  They may also be composed by service integrators, who in turn expose the composite artifact as a new service  We envision a world in which multiple providers publish software artifacts which compete with each other by implementing the same  abstract  service  i e  they export the same API and provide the same functionality , but offering different quality of service  Clients may therefore select the most appropriate services targeting their requirements, among all the competing alternatives, and they may do so dynamically  This situation may be called dynamic binding in the many  Service selection may be performed by clients by following different strategies, which may in turn affect the overall quality of service invocations  In this paper we address the problem of analyzing and comparing different service selection strategies and we define a framework to model the different scenarios  Furthermore, we report on quantitative analyses through simulations of the modeled scenarios, highlighting advantages and limitations of each solution    2010 Springer Verlag   12 refs",QoS driven dynamic binding in the many,"['Computer software selection and evaluation', 'Quality control', 'Quality of service', 'Software architecture', 'Different services', 'Dynamic binding', 'New services', 'Overall quality', 'Quantitative analysis', 'Service selection', 'Software artifacts', 'Software systems', 'Management', 'Computer Applications', 'Computer Programming', 'Quality Assurance and Control', 'Computer Software, Data Handling and Applications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television', 'Telephone Systems and Related Technologies  Line Communications']","['Ghezzi, Carlo', '', '', 'Motta, Alfredo', '', '', 'Panzica La Manna, Valerio', '', '', 'Tamburrelli, Giordano']","Politecnico di Milano, Dipartimento di Elettronica e Informazione, Deep SE Group, Via Golgi 42, 20133 Milano, Italy",2010,QoSA
632,633,"Modern systems modelling languages frequently support the use of multiple views in order to provide flexible, extensible, and rich mechanisms for capturing system characteristics  Architectural description languages  ADLs  often provide many useful capabilities but fail to provide support for ensuring view consistency simply because they present a single view of the system  An ADL used for building dependable systems must provide multiple views  For these kinds of systems, ensuring view consistency is critical so as to provide guarantees about the system as a whole  In this paper, we outline an architectural modelling language, AIM, which supports multiple views, but we focus on its first class support for dependency links, which are used to ensure view consistency  We illustrate the principles on examples from a real engine control system    2008 Crown Copyright   9 refs",The role of dependency links in ensuring architectural view consistency,"['Linguistics', 'Query languages', 'Architectural description languages', 'Architectural views', 'Capturing system', 'Dependable systems', 'Engine control systems', 'Multiple views', 'Systems modelling', 'View consistency', 'Computer Programming', 'Computer Programming Languages', 'Information Dissemination']","['Radjenovic, Alek', '', '', 'Paige, Richard F', '', '']","Department of Computer Science, University of York, Heslington, York, YO10 5DD",2008,WICSA
633,634,"Most current literature on Software Architecture Knowledge Management  AKM  reports research aimed at developing AKM approaches or identifying challenges in and potential solutions to AKM  However, there has been little effort aimed at empirically studying and describing how AKM is practiced in real world projects  This paper reports a study aimed at empirically understanding how AKM is currently practiced in industry  Our findings are based on a systematic and rigorous analysis of reports of AKM practices in 29 industrial projects    2014 IEEE   16 refs",Empirical study of architectural knowledge management practices,"['Knowledge management', 'Architectural knowledge', 'Empirical Software Engineering', 'Empirical studies', 'Industrial projects', 'Real world projects', 'Rigorous analysis', 'Software architecture knowledge managements', 'Computer Programming', 'Computer Applications']","['Galster, Matthias', '', '', 'Babar, Muhammad Ali']","University of Canterbury, Christchurch, New Zealand  2  University of Adelaide, Adelaide, Australia",2014,WICSA
634,635,"Most of the research in the area of multimodality discusses either the usability aspect of multimodality or the multimodality support given by or missing in certain markup languages  The overall architectural side of large multimodal systems is unfortunately not adequately represented in today s literature  This report shows some results obtained during the implementation of such a system, e g , the use of the multimodal interaction framework and how a staged architecture can be combined with this framework to achieve domain independence    Springer Verlag Berlin Heidelberg 2007   29 refs",A distributed staged architecture for multimodal applications,"['Computer programming languages', 'Distributed computer systems', 'Research and development management', 'Distributed staged architecture', 'Multimodal applications', 'Digital Computers and Systems', 'Computer Programming Languages', 'Computer Applications', 'Engineering Research', 'Management']","['Pereira, Alessandro Costa', ' ,', '', ' Hartmann, Falk', ' ,', '', ' Kadner, Kay', ' ,', '']","Department of Computer Science, Technische Universit t Dresden, Dresden, Germany  2  SAP Research CEC Dresden, SAP AG, Dresden, Germany",2007,ECSA
635,636,"Most of the research in the area of multimodality discusses either the usability aspect of multimodality or the multimodality support given by or missing in certain markup languages  The overall architectural side of large multimodal systems is unfortunately not adequately represented in today s literature  This report shows some results obtained during the implementation of such a system, e g , the use of the multimodal interaction framework and how a staged architecture can be combined with this framework to achieve domain independence    Springer Verlag Berlin Heidelberg 2007   29 refs",A distributed staged architecture for multimodal applications,"['Computer programming languages', 'Distributed computer systems', 'Research and development management', 'Distributed staged architecture', 'Multimodal applications', 'Digital Computers and Systems', 'Computer Programming Languages', 'Computer Applications', 'Engineering Research', 'Management']","['Pereira, Alessandro Costa', ' ,', '', ' Hartmann, Falk', ' ,', '', ' Kadner, Kay', ' ,', '']","Department of Computer Science, Technische Universit t Dresden, Dresden, Germany  2  SAP Research CEC Dresden, SAP AG, Dresden, Germany",2008,ECSA
636,637,"Most of the research in the area of multimodality discusses either the usability aspect of multimodality or the multimodality support given by or missing in certain markup languages  The overall architectural side of large multimodal systems is unfortunately not adequately represented in today s literature  This report shows some results obtained during the implementation of such a system, e g , the use of the multimodal interaction framework and how a staged architecture can be combined with this framework to achieve domain independence   29 refs",A distributed staged architecture for multimodal applications,"['formal specification', 'Internet', 'software architecture', 'distributed staged architecture', 'multimodal applications', 'markup languages', 'multimodal interaction framework', 'Distributed systems software', 'Software engineering techniques', 'Formal methods']","['Pereira, A C', '', '', ' Hartmann, F', '', '', ' Kadner, K', '', '']","Dept  of Comput  Sci  Tech , Univ  Dresden, Dresden, Germany",2007,ECSA
637,638,"Most of the research in the area of multimodality discusses either the usability aspect of multimodality or the multimodality support given by or missing in certain markup languages  The overall architectural side of large multimodal systems is unfortunately not adequately represented in today s literature  This report shows some results obtained during the implementation of such a system, e g , the use of the multimodal interaction framework and how a staged architecture can be combined with this framework to achieve domain independence   29 refs",A distributed staged architecture for multimodal applications,"['formal specification', 'Internet', 'software architecture', 'distributed staged architecture', 'multimodal applications', 'markup languages', 'multimodal interaction framework', 'Distributed systems software', 'Software engineering techniques', 'Formal methods']","['Pereira, A C', '', '', ' Hartmann, F', '', '', ' Kadner, K', '', '']","Dept  of Comput  Sci  Tech , Univ  Dresden, Dresden, Germany",2008,ECSA
638,639,"Most of today s software systems are large scaled and have to manage manifold demands  To ease their development, reusable and proven architectural building blocks, for example architectural patterns, are often composed to the desired architecture  Building blocks are specified by their structure and behaviour  Additionally, each architectural building block has specific properties which are interpreted as assurances  Keeping assurances also valid during composition of different architectural building blocks is essential for software quality  This paper introduces an approach which constructs software architectures by composing architectural building blocks and which also assures architectural properties of these compositions  Aiming at a sound approach, a proper description of the different architectural building blocks and their properties is required  Furthermore, this paper presents how to compose architectural building blocks and how to check their assurances    2011 Springer Verlag   18 refs",A constructive approach to compositional architecture design,"['Buildings', 'Computer software selection and evaluation', 'Architectural buildings', 'Architectural pattern', 'Architectural properties', 'Architecture Composition', 'Architecture designs', 'Building blockes', 'Constructive approach', 'Software Quality', 'Software systems', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Deiters, Constanze', '', '', 'Rausch, Andreas']","Department of Informatics   Software Systems Engineering, Clausthal University of Technology, Julius Albert Str  4, 38678 Clausthal Zellerfeld, Germany",2011,ECSA
639,640,"Motivation  The current literature in the architectural knowledge domain has made a significant contribution related to documenting software architectural decisions  However, not many studies have been conducted to assess the architectural decision making and decision reuse processes through empirical investigations  Besides, the effect of the relationships among the actors in a software ecosystem on the architectural decisions making process of each actor is not well studied  Goal  The objective of this paper is to identify the main processes and issues on the architectural decision making in largescale enterprises by considering the relationships among the enterprises and other actors of the ecosystem  Method  We conducted semi structured interviews with six Norwegian companies in the software ecosystem of electricity industry  Results  Regarding the architectural decision making process, the findings are in line with previous empirical studies, showing that most of the companies are not using well known academic approaches such as ATAM, they are rather using their own procedures  The study also shows that the relationships among the actors of a software ecosystem could significantly affect the architectural decision making process in each of the actors, for example, by limiting their alternative solutions  Finally, the results confirm that it is advantageous for the enterprises to reuse the architectural decisions across their various projects or for cooperative companies to reuse the decisions across their similar projects  Conclusion  Improving the reusable architectural decision frameworks by considering the relationships among the actors in a software ecosystem would be beneficial for the industry    2013 Springer Verlag   22 refs",Architectural decision making in enterprises  Preliminary findings from an exploratory study in Norwegian electricity industry,"['Application programs', 'Decision making', 'Ecosystems', 'Electric industry', 'Software architecture', 'Architectural decision makings', 'Electricity industry', 'Empirical studies', 'Enterprise applications', 'Software ecosystems', 'Ecology and Ecosystems', 'Electric Components and Equipment', 'Electric Generators and Motors', 'Electric Transmission and Distribution', 'Computer Software, Data Handling and Applications', 'Management']","['Anvaari, Mohsen', '', '', 'Conradi, Reidar', '', '', 'Jaccheri, Letizia']","Norwegian University of Science and Technology, Trondheim, Norway",2013,ECSA
640,641,"Much of the complexity of software architecture design is derived from the inadequate modularization of key broadly scoped concerns, such as exception handling, distribution, and persistence  However, conventional architecture metrics are not sensitive to the driving architectural concerns, thereby leading a number of false positives and false negatives in the design assessment process  Therefore, there is a need for assessment techniques that support a more effective identification of early design modularity anomalies relative to crosscutting concerns  In this context, this paper proposes a concern driven measurement framework for assessing architecture modularity  It encompasses a mechanism for documenting architectural concerns, and a suite of concern oriented architecture metrics  We evaluated the usefulness of the proposed framework while comparing the modularity of architecture design alternatives in three different case studies    Springer Verlag Berlin Heidelberg 2007   24 refs",On the modularity of software architectures  A concern driven measurement framework,"['Computer aided design', 'Identification (control systems)', 'Measurement theory', 'Concern-driven measurement framework', 'Computer Programming', 'Computer Applications', 'Control Systems', 'Statistical Methods']","['Sant Anna, Cl udio', ' ,', '', ' Figueiredo, Eduardo', '', '', 'Garcia, Alessandro', '', '', 'Lucena, Carlos J', 'P', '', '']","Computer Science Department, PUC, Rio, Brazil  2  Computing Department, Lancaster University, United Kingdom",2007,ECSA
641,642,"Much of the complexity of software architecture design is derived from the inadequate modularization of key broadly scoped concerns, such as exception handling, distribution, and persistence  However, conventional architecture metrics are not sensitive to the driving architectural concerns, thereby leading a number of false positives and false negatives in the design assessment process  Therefore, there is a need for assessment techniques that support a more effective identification of early design modularity anomalies relative to crosscutting concerns  In this context, this paper proposes a concern driven measurement framework for assessing architecture modularity  It encompasses a mechanism for documenting architectural concerns, and a suite of concern oriented architecture metrics  We evaluated the usefulness of the proposed framework while comparing the modularity of architecture design alternatives in three different case studies    Springer Verlag Berlin Heidelberg 2007   24 refs",On the modularity of software architectures  A concern driven measurement framework,"['Computer aided design', 'Identification (control systems)', 'Measurement theory', 'Concern-driven measurement framework', 'Computer Programming', 'Computer Applications', 'Control Systems', 'Statistical Methods']","['Sant Anna, Cl udio', ' ,', '', ' Figueiredo, Eduardo', '', '', 'Garcia, Alessandro', '', '', 'Lucena, Carlos J', 'P', '', '']","Computer Science Department, PUC, Rio, Brazil  2  Computing Department, Lancaster University, United Kingdom",2008,ECSA
642,643,"Much of the complexity of software architecture design is derived from the inadequate modularization of key broadly scoped concerns, such as exception handling, distribution, and persistence  However, conventional architecture metrics are not sensitive to the driving architectural concerns, thereby leading a number of false positives and false negatives in the design assessment process  Therefore, there is a need for assessment techniques that support a more effective identification of early design modularity anomalies relative to crosscutting concerns  In this context, this paper proposes a concern driven measurement framework for assessing architecture modularity  It encompasses a mechanism for documenting architectural concerns, and a suite of concern oriented architecture metrics  We evaluated the usefulness of the proposed framework while comparing the modularity of architecture design alternatives in three different case studies   24 refs",On the modularity of software architectures  a concern driven measurement framework,"['software architecture', 'software metrics', 'software architecture design', 'concern-driven measurement framework', 'key broadly-scoped concern', 'software metrics', 'Software engineering techniques', 'Software metrics']","['Sant Anna, C', '', '', ' Figueiredo, E', ' Garcia, A', ' Lucena, C J P']","Comput  Sci  Dept , Pontifical Catholic Univ , Rio de Janeiro, Brazil",2007,ECSA
643,644,"Much of the complexity of software architecture design is derived from the inadequate modularization of key broadly scoped concerns, such as exception handling, distribution, and persistence  However, conventional architecture metrics are not sensitive to the driving architectural concerns, thereby leading a number of false positives and false negatives in the design assessment process  Therefore, there is a need for assessment techniques that support a more effective identification of early design modularity anomalies relative to crosscutting concerns  In this context, this paper proposes a concern driven measurement framework for assessing architecture modularity  It encompasses a mechanism for documenting architectural concerns, and a suite of concern oriented architecture metrics  We evaluated the usefulness of the proposed framework while comparing the modularity of architecture design alternatives in three different case studies   24 refs",On the modularity of software architectures  a concern driven measurement framework,"['software architecture', 'software metrics', 'software architecture design', 'concern-driven measurement framework', 'key broadly-scoped concern', 'software metrics', 'Software engineering techniques', 'Software metrics']","['Sant Anna, C', '', '', ' Figueiredo, E', ' Garcia, A', ' Lucena, C J P']","Comput  Sci  Dept , Pontifical Catholic Univ , Rio de Janeiro, Brazil",2008,ECSA
644,645,"Much research exists on architectural decisions, but little work describes architectural decisions in the real world  In this paper, we present the results of a survey with 43 architects from industry  We study characteristics of 86 real world architectural decisions and factors that contribute to their difficulty  Also, we compare decisions made by junior architects and senior architects  Finally, we compare good and bad architectural decisions  Survey results indicate that architectural decisions take an average time of eight working days  Dependencies between decisions and the effort required to analyze decisions are major factors that contribute to their difficulty  Compared to senior architects, junior architects spend a quarter of the time on making a decision  Good architectural decisions tend to include more decision alternatives than bad decisions  Finally, we found that 86  of architectural decisions are group decisions    2013 Springer Verlag   10 refs",Difficulty of architectural decisions   A survey with professional architects,"['Architecture', 'Surveys', 'Architectural decision', 'Group decision', 'Major factors', 'Real-world', 'Buildings and Towers', 'Surveying', 'Computer Programming']","['Tofan, Dan', '', '', 'Galster, Matthias', '', '', 'Avgeriou, Paris']","University of Groningen, Netherlands  2  University of Canterbury, New Zealand",2013,ECSA
645,646,"Much research in the software architecture field has focused on the purely technical aspects of architecting  architectural styles, documentation, analysis, architecture description languages, reverse engineering, and so forth  In this working session we seek to explore a less exhaustively studied, but equally important, realm  architectural competence  What defines a competent software architect  And equally important, what defines an architecturally competent software development organization  In particular, we seek to better understand the following issues  What do architects actually do on a day to day basis  What skills and knowledge must a competent architect have  What does it mean to be a competent architect  What can an organization do to get the best performance from its software architects  How can we measure architectural competence of an individual or an organization and how can we increase this  Our goal for this working session is to propose an initial  theory  of architectural competence, even if very informally rendered, and then provide some practical guidance deriving from that theory to practicing architects  and to those who aspire to be architects , as well as technical managers in software development organizations    2007 IEEE   1 refs",Working session  Software architecture competence,"['Engineering research', 'Information management', 'Information technology', 'Knowledge based systems', 'User interfaces', 'Architectural competence', 'Architectural styles', 'Technical managers', 'Working session', 'Management', 'Information Science', 'Engineering Research', 'Computer Applications', 'Expert Systems', 'Computer Programming', 'Computer Peripheral Equipment']","['Clements, Paul', '', '', 'Kazman, Rick', '', '', 'Klein, Mark']","Carnegie Mellon Software Engineering Institute  2  Carnegie Mellon Software Engineering Institute, University of Hawaii",2007,WICSA
646,647,Multi site development organizations require coordination and communication efforts between different sites to ensure successful distributed development  These efforts need to be guided by a set of principles and statements on the software architecture that must be complied with throughout the organization  architectural rules  It is of paramount importance that multi site development organizations incorporate measures in the architecting process to secure compliance with these rules throughout the organization  We describe a method to assess the degree to which compliance measures are secured in multi site development organizations  We share our experience in applying this method in a large development organization in the consumer electronics domain    2007 IEEE   14 refs,Assessing a multi site development organization for architectural compliance,"['Codes (symbols)', 'Distributed computer systems', 'Logic programming', 'Multi agent systems', 'Program compilers', 'Architectural compliance', 'Architectural rules', 'Multi-site development organizations', 'Digital Computers and Systems', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications']","['Clerc, Viktor', '', '', 'Lago, Patricia', '', '', 'Van Vliet, Hans']","Department of Computer Science, Vrije Universiteit, Amsterdam, Netherlands",2007,WICSA
647,648,Multi site development organizations require coordination and communication efforts between different sites to ensure successful distributed development  These efforts need to be guided by a set of principles and statements on the software architecture that must be complied with throughout the organization  architectural rules  It is of paramount importance that multi site development organizations incorporate measures in the architecting process to secure compliance with these rules throughout the organization  We describe a method to assess the degree to which compliance measures are secured in multi site development organizations  We share our experience in applying this method in a large development organization in the consumer electronics domain   14 refs,Assessing a multi site development organization for architectural compliance,"['formal specification', 'security of data', 'software architecture', 'multisite development organization assessment', 'software architectural compliance rule', 'distributed development', 'secure architectural compliance', 'software architectural principle', 'software architectural statement', 'Software engineering techniques', 'Data security', 'Formal methods']","['Clerc, V', '', '', ' Lago, P', '', '', ' van Vliet, H', '', '']","Dept  of Comput  Sci , Vrije Univ , Amsterdam, Netherlands",2007,WICSA
648,649,"Multithreading provides an adequate support for concurrent programming, but requires the software developer to take care of the correct synchronization and exchange of data among threads  In this paper we propose an architecture driven approach to the thread synchronization management, which is completely transparent to the software developer  This is realized by implementing a suitable Java package   which adheres to a general synchronization model and is inspired by the main architectural abstractions   by means of which well synchronized multithreaded Java programs can be synthesized from their architectural specifications  The approach is illustrated by means of a real time audio processing system   11 refs",Generating well synchronized multithreaded programs from software architecture descriptions,"['Abstracting', 'Computer program listings', 'Data reduction', 'Java programming language', 'Parameter estimation', 'Synchronization', 'Abstracting', 'Computer program listings', 'Data reduction', 'Java programming language', 'Parameter estimation', 'Synchronization', 'Architectural abstraction', 'Audio processing systems', 'Multithreaded programs', 'Software architecture', 'Computer Programming', 'Computer Programming Languages', 'Data Processing and Image Processing', 'Control Systems', 'Information Sources and Analysis']","['Bernardo, Marco', '', '', 'Bont , Edoardo']","Universit  di Urbino Carlo Bo, Ist  Sci  e Tecnologie Informazione, Piazza della Repubblica 13, 61029 Urbino, Italy",2004,WICSA
649,650,"Multithreading provides an adequate support for concurrent programming, but requires the software developer to take care of the correct synchronization and exchange of data among threads  In this paper we propose an architecture driven approach to the thread synchronization management, which is completely transparent to the software developer  This is realized by implementing a suitable Java package   which adheres to a general synchronization model and is inspired by the main architectural abstractions   by means of which well synchronized multithreaded Java programs can be synthesized from their architectural specifications  The approach is illustrated by means of a real time audio processing system   11 refs",Generating well synchronized multithreaded programs from software architecture descriptions,"['audio signal processing', 'Java', 'multi-threading', 'software architecture', 'synchronisation', 'multithreaded programs', 'software architecture descriptions', 'concurrent programming', 'data exchange', 'thread synchronization management', 'Java package', 'architectural abstractions', 'architectural specifications', 'real-time audio processing system', 'software development', 'Java programs', 'Parallel programming', 'Software engineering techniques', 'Distributed systems software']","['Bernardo, M', '', '', ' Bonta, E', '', '']","Ist  di Sci  e Tecnol  dell Inf , Univ  di Urbino, Urbino, Italy",2004,WICSA
650,651,"N way combinatorial testing is a specification based testing criterion, which requires that for a system consisting of a few parameters, every combination of valid values of arbitrary n  n2  parameters be covered by at least one test  In this paper, we propose two different tests generation algorithms based on the combinatorial design for the n way combination testing  We show that the produced tests can cover all the combinations of parameters to the greatest degree with the small quantity  We implemented the automatic test generators based on the algorithms and obtained some valuable empirical results   8 refs",Automatic test generation for n way combinatorial testing,"['formal specification', 'formal verification', 'program testing', 'automatic test generation', 'n-way combinatorial testing', 'specification-based testing', 'Diagnostic, testing, debugging and evaluating systems', 'Formal methods']","['Changhai Nie', '', '', 'Baowen Xu', '', '', 'Liang Shi', '', '', 'Guowei Dong']","Dept  of Comput  Sci    Eng , Southeast Univ , Nanjing, Nanjing, China",2005,QoSA
651,652,"NICTA has developed a Service Oriented Performance Modeling technology, and for several years has conducted field trials of the technology incollaboration with government and non government projects  The technology enables rapid modeling and performance prediction of large scale heterogeneous Service Oriented Architectures  SOAs , using a methodology and tool support to model and simulate complex service compositions  Evolution in Enterprise Service Oriented Architectures  ESOAs  presents significant challenges to managing risks associated with performance and scalability  Four of the fieldtrials involved the construction and use of models to specifically address performance risks related to the evolution of service architectures, resulting from, and to explore changes in  architecture, services, deployment, resources, and loads  This paper first presents some unifying observations on the architectural commonalities of evolving enterprise services, discusses the performance and scalability challenges, and describes some common approaches to addressing them  We then demonstrate Service Oriented Performance Modeling applied to an illustrative example of enterprise service evolution  We conclude with a presentation of four case studieswhich summarize our experiences with performance modeling evolving service architectures    2009 IEEE   14 refs",Performance modeling evolving enterprise service oriented architectures,"['Architecture', 'Computer software', 'Information services', 'Risk management', 'Scalability', 'Service oriented architecture (SOA)', 'Complex services', 'Enterprise services', 'Heterogeneous services', 'Illustrative examples', 'Performance Modeling', 'Performance prediction', 'Performance risk', 'Service architecture', 'Service Oriented', 'Tool support', 'Probability Theory', 'Management', 'Information Services', 'Computer Applications', 'Systems Science', 'Computer Programming', 'Digital Computers and Systems', 'Telephone Systems and Related Technologies  Line Communications', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Brebner, Paul', '', '', 'O Brien, Liam', '', '', 'Gray, Jon']","NICTA, Canberra Research Laboratory, RSISE, Canberra, Australia",2009,ECSA
652,653,"NICTA has developed a Service Oriented Performance Modeling technology, and for several years has conducted field trials of the technology incollaboration with government and non government projects  The technology enables rapid modeling and performance prediction of large scale heterogeneous Service Oriented Architectures  SOAs , using a methodology and tool support to model and simulate complex service compositions  Evolution in Enterprise Service Oriented Architectures  ESOAs  presents significant challenges to managing risks associated with performance and scalability  Four of the fieldtrials involved the construction and use of models to specifically address performance risks related to the evolution of service architectures, resulting from, and to explore changes in  architecture, services, deployment, resources, and loads  This paper first presents some unifying observations on the architectural commonalities of evolving enterprise services, discusses the performance and scalability challenges, and describes some common approaches to addressing them  We then demonstrate Service Oriented Performance Modeling applied to an illustrative example of enterprise service evolution  We conclude with a presentation of four case studieswhich summarize our experiences with performance modeling evolving service architectures    2009 IEEE   14 refs",Performance modeling evolving enterprise service oriented architectures,"['Architecture', 'Computer software', 'Information services', 'Risk management', 'Scalability', 'Service oriented architecture (SOA)', 'Complex services', 'Enterprise services', 'Heterogeneous services', 'Illustrative examples', 'Performance Modeling', 'Performance prediction', 'Performance risk', 'Service architecture', 'Service Oriented', 'Tool support', 'Probability Theory', 'Management', 'Information Services', 'Computer Applications', 'Systems Science', 'Computer Programming', 'Digital Computers and Systems', 'Telephone Systems and Related Technologies  Line Communications', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Brebner, Paul', '', '', 'O Brien, Liam', '', '', 'Gray, Jon']","NICTA, Canberra Research Laboratory, RSISE, Canberra, Australia",2009,WICSA
653,654,"NICTA has developed a Service Oriented Performance Modeling technology, and for several years has conducted field trials of the technology incollaboration with government and non government projects  The technology enables rapid modeling and performance prediction of large scale heterogeneous Service Oriented Architectures  SOAs , using a methodology and tool support to model and simulate complex service compositions  Evolution in Enterprise Service Oriented Architectures  ESOAs  presents significant challenges to managing risks associated with performance and scalability  Four of the fieldtrials involved the construction and use of models to specifically address performance risks related to the evolution of service architectures, resulting from, and to explore changes in  architecture, services, deployment, resources, and loads  This paper first presents some unifying observations on the architectural commonalities of evolving enterprise services, discusses the performance and scalability challenges, and describes some common approaches to addressing them  We then demonstrate Service Oriented Performance Modeling applied to an illustrative example of enterprise service evolution  We conclude with a presentation of four case studieswhich summarize our experiences with performance modeling evolving service architectures    2009 IEEE   14 refs",Performance modeling evolving enterprise service oriented architectures,"['Architecture', 'Computer software', 'Information services', 'Risk management', 'Scalability', 'Service oriented architecture (SOA)', 'Complex services', 'Enterprise services', 'Heterogeneous services', 'Illustrative examples', 'Performance Modeling', 'Performance prediction', 'Performance risk', 'Service architecture', 'Service Oriented', 'Tool support', 'Probability Theory', 'Management', 'Information Services', 'Computer Applications', 'Systems Science', 'Computer Programming', 'Digital Computers and Systems', 'Telephone Systems and Related Technologies  Line Communications', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Brebner, Paul', '', '', 'O Brien, Liam', '', '', 'Gray, Jon']","NICTA, Canberra Research Laboratory, RSISE, Canberra, Australia",2011,WICSA
654,655,"Nanorod arrays of chromium  Cr  were grown on glassy carbon  GC  electrodes by a dc magnetron sputtering glancing angle deposition  GLAD  technique  The Cr nanorods were used as low cost, high surface area, metallic supports for a conformai layer of Pt thin film catalyst, as a potential low loading electrocatalyst for the oxygen reduction reaction  ORR  in polymer electrolyte membrane  PEM  fuel cells  A dc magnetron sputtering small angle deposition  SAD  technique was utilized for a conformai coating of Pt on Cr nanorods  The ORR activity of SAD Pt GLAD Cr electrodes was investigated using cyclic voltammetry  CV  and rotating disk electrode  RDE  techniques in a 0 1 M HClO4 solution at room temperature  A reference sample consisting of GLAD Cr nanorods coated with a Pt thin film deposited at normal incidence      0   was prepared and compared with the SAD Pt GLAD Cr nanorods  Compared to GLAD Cr nanorods coated with Pt thin film at     0 , the SAD Pt GLAD Cr nanorod electrode exhibited higher ECSA and area specific and mass specific ORR activity  These results indicate that the growth of catalyst layer on the base metal nanorods by the SAD technique provides a more conformai and possibly a nanostructured coating, significantly enhancing the catalyst utilization    2012 Materials Research Society   26 refs",Oxygen reduction reaction electrocatalytic activity of SAD Pt GLAD Cr nanorods,"['Chromium', 'Cyclic voltammetry', 'Electrocatalysts', 'Electrodes', 'Electrolytic reduction', 'Loading', 'Magnetron sputtering', 'Nanorods', 'Platinum', 'Thin films', 'Vapor deposition', 'Catalyst layers', 'Catalyst utilization', 'Conformai coatings', 'Dc magnetron sputtering', 'Electrocatalytic activity', 'Glancing angle deposition technique', 'Glassy carbon electrodes', 'High surface area', 'Metallic support', 'Nanorod arrays', 'Nanorod electrodes', 'Nanostructured coatings', 'Normal incidence', 'Oxygen reduction reaction', 'Pt thin films', 'Room temperature', 'Rotating-disk electrode', 'Solid State Physics', 'Coating Materials', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Electric Variables Measurements', 'Electronic Equipment, non communication', 'Electron Tubes', 'Naval Vessels', 'Precious Metals', 'Chromium and Alloys', 'Semiconductor Devices and Integrated Circuits']","['Khudhayer, Wisam J', '', '', ' Kariuki, Nancy', '', '', 'Myers, Deborah J', '', '', ' Shaikh, Ali U', '', '', ' Karabacak, Tansel']","Department of Systems Engineering, University of Arkansas at Little Rock, Little Rock, AR 72204, United States  2  Department of Chemistry, University of Arkansas at Little Rock, Little Rock, AR 72204, United States  3  Department of Applied Science, University of Arkansas at Little Rock, Little Rock, AR 72204, United States  4  Chemical Sciences and Engineering Division, Argonne National Laboratory, Argonne, IL 60439 4837, United States",2012,ECSA
655,656,"Nanorod arrays of platinum were fabricated on flat  Sample A  and patterned glassy carbon electrodes at room temperature using glancing angle deposition  GLAD  technique  Pt nanorod arrays were tested by cyclic voltammetry  CV  and rotating disk electrode  RDE  techniques as a potential polymer electrolyte membrane fuel cell cathode electrode for oxygen reduction reaction  ORR   Patterned substrates with honeycomb geometry were obtained utilizing modified nanosphere lithography method using polystyrene  PS  nanoparticles of diameters 250  Sample B  and 500  Sample C  nm  The RDE results demonstrate that samples B and C have higher diffusion limiting current density values of 5 8 and 6 mA cm2 at potential range of 0 2 0 7 V compared to 5 6 mA cm2 for sample A  ORR polarization curves show that the specific area activity  SA , normalized to the Pt ECSA, of sample A at 0 9 V is about 1,060  A cm2 that is about 18 7  higher than for the nanorods of sample B and C with SA of 893  A cm2  However, samples B and C exhibit significantly higher specific area activities at lower potentials, for example at 0 75 V, SA   41,773 and 95,870  A cm2, respectively, which are 2 8 and 6 5 times higher than 14,693  A cm2 of sample A  The higher ORR activity at low potential region in the polarization curve of periodic and well separated GLAD Pt nanorods is attributed to the enhanced electrode porosity which facilitates the oxygen mass transport to the active catalyst sites  Copyright   2012 American Scientific Publishers   32 refs",Periodic Pt nanorod arrays with controlled porosity for oxygen reduction reaction,"['Cyclic voltammetry', 'Electrocatalysts', 'Electrolytic reduction', 'Glass membrane electrodes', 'Lithography', 'Nanospheres', 'Platinum', 'Polarization', 'Polystyrenes', 'Proton exchange membrane fuel cells (PEMFC)', 'Sputtering', 'Active catalyst', 'Controlled porosity', 'Diffusion limiting current', 'Electrode porosity', 'Glancing angle deposition technique', 'Glassy carbon electrodes', 'Honeycomb geometry', 'Nanorod arrays', 'Nanosphere lithography technique', 'Oxygen reduction reaction', 'Patterned substrates', 'PEM fuel cell', 'Polarization curves', 'Polymer electrolyte membranes', 'Potential range', 'Potential region', 'Room temperature', 'Rotating-disk electrode', 'Solid State Physics', 'High Energy Physics', 'Organic Polymers', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Electric Variables Measurements', 'Nanotechnology', 'Electromagnetic Waves in Different Media', 'Electric Components', 'Fuel Cells', 'Precious Metals', 'Semiconductor Devices and Integrated Circuits']","['Khudhayer, Wisam J', '', '', ' Shaikh, Ali U', '', '', ' Karabacak, Tansel']","Department of Systems Engineering, University of Arkansas at Little Rock, Little Rock, AR 72204, United States  2  Department of Chemistry, University of Arkansas at Little Rock, Little Rock, AR 72204, United States  3  Department of Applied Science, University of Arkansas at Little Rock, Little Rock, AR 72204, United States",2012,ECSA
656,657,"Nanostructured platinum dispersed on functionalized graphene and functionalized multiwalled carbon nanotube  Pt  f G f MWNT   hybrid nanomaterials, a unique combination of three , two, and one dimensional structures, were used as an electrocatalyst for oxygen reduction reaction  ORR  in proton exchange membrane fuel cell  PEMFC   Electrochemical studies performed on Pt  f G f MWNT  composite materials by varying the ratio of the composition of f G and f MWNT for the investigation of the electrochemical active surface area  ECSA  have resulted in an ECSA as high as 108 m2  g for the Pt dispersed on nanocomposite containing equal proportions of f G and f MWNT  Polarization graphs for the ORR reaction in PEMFC with Pt  f G f MWNT  as an electrocatalyst resulted in the best performance of 540 mW  cm2 for the Pt   50 wt   f G 50 wt   f MWNT  cathode catalyst, agreeing with the electrochemical active surface area of Pt, due to good accessibility and uniform dispersion of the nanostructured Pt catalyst dispersed on the f G f MWNT catalyst support, making them a suitable electrocatalyst for advanced PEMFC    2010 The Electrochemical Society   30 refs",Nanostructured Pt dispersed on graphene multiwalled carbon nanotube hybrid nanomaterials as electrocatalyst for PEMFC,"['Catalyst supports', 'Electrocatalysts', 'Electrolytic reduction', 'Graphene', 'Multiwalled carbon nanotubes (MWCN)', 'Nanocomposites', 'Nanostructured materials', 'Oxygen', 'Platinum', 'Cathode catalyst', 'Electrochemical active surface areas', 'Electrochemical studies', 'Functionalized', 'Functionalized multi-walled carbon nanotubes', 'Hybrid nanomaterials', 'Nano-structured', 'One-dimensional structure', 'Oxygen reduction reaction', 'Pt catalysts', 'Uniform dispersions', 'Solid State Physics', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Fuel Cells', 'Precious Metals']","['Jafri, R', 'Imran', '', '', 'Arockiados, T', '', '', ' Rajalakshmi, N', '', '', ' Ramaprabhu, S', '', '']","Alternative Energy and Nanotechnology Laboratory, Nano Functional Materials Technology Center, Department of Physics, Madras, Chennai 600 036, India  2  Centre for Fuel Cell Technology, International Advanced Research Centre for Powder Metallurgy and New Materials, Chennai 600 113, India",2010,ECSA
657,658,"Nearly all organizations in business are highly relying on information systems  As business, business models, organizational structures, and business processes are changing quickly, also information systems have to follow these changes, otherwise they threaten the business success  A key quality attribute of software systems, which is defined to capture the needs for change, is flexibility  Although many of today s IT paradigms like service oriented architecture or business rule management claim to bring flexibility into information systems, this is often not achieved in practice, as experience shows  This paper explores in more detail the nature of flexibility and proposes an extension to architecture design processes, which allows constructing systems with flexibility directed at the real needs  It makes flexibility more tangible and gives concrete guidance for treating flexibility during architecture design    2011 Springer Verlag   11 refs",Enhancing architecture design methods for improved flexibility in long living information systems,"['Design', 'Information management', 'Information services', 'Information systems', 'Software architecture', 'Architecture designs', 'Business models', 'Business Process', 'Business rule management', 'Business success', 'Flexibility', 'IS flexibility', 'Organizational structures', 'Quality attributes', 'Service Oriented', 'Software systems', 'Structural Design', 'Digital Computers and Systems', 'Computer Programming', 'Information Science']","['Naab, Matthias']","Fraunhofer Institute for Experimental Software Engineering  IESE , Fraunhofer Platz 1, 67663 Kaiserslautern, Germany",2011,ECSA
658,659,"New technologies have increased the dynamism of distributed systems  advances such as Software Defined Networking  SDN  and cloud computing enable unprecedented service flexibility and scalability  By their nature, they are in a constant state of flux, presenting tough challenges for system security  Here an adaptive   in real time   risk management system capable of keeping abreast of these developments is considered  This paper presents an on going work on combining a hierarchical threat ontology, real time risk analysis, and SDN to an efficient whole  The main contribution of this paper is on finding the suitable architectures, components, necessary requirements, and favorable modifications on the systems and system modelling  including the models involving the security analysis  to reach this goal    2014 ACM   34 refs",Adaptive risk management with ontology linked evidential statistics and SDN,"['Network architecture', 'Network security', 'Risk analysis', 'Risk assessment', 'Risk management', 'Software architecture', 'Adaptive security', 'Dempster-Schafer', 'Dezert-Smarandache', 'Fuzzy C mean', 'SDN', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Management', 'Safety Engineering', 'Accidents and Accident Prevention', 'Statistical Methods', 'Probability Theory']","['Juhola, Arto', '', '', 'Ahola, Titta', '', '', 'Ahola, Kimmo']","VTT Technical Research Centre of Finland, Vuorimiehentie 3, 02044 VTT, Finland",2014,ECSA
659,660,"Ni nanoparticles with a dimension ranging between 80 and 200nm were synthesized by a microwave assisted polyol route  The reaction was carried out at 200 C in diethylenglycol  DEG  in the presence of a binary chelating agent system  polyvinylpyrrolidone PVP and dodecylamine DDA , in order to obtain stable and highly concentrated nanosols whose ratio was carefully optimized  Stable suspensions were produced with the future prospect of improving the performance of the anodic layer in solid oxide fuel cells  SOFCs , in which the metal is employed as catalyst  Studying the influence of different reaction times on the final product, it was possible to identify the reaction path that goes through the formation, after 10min, of crystalline Ni glycolate that turns completely into crystalline Ni metal after 20min  The as obtained Ni nanoparticles were characterized by XRD, TG DTA, FT IR, TEM  Preliminary tests on their catalytic and electrochemical activities were carried out by studying the hydrogenation of 4 nitrophenol  4 NP  to p aminophenol  4 AP  in the presence of NaBH4 as probe reaction and by calculating the electrochemically active surface area  AECSA  with cyclic voltammetry    2012 Elsevier B V   57 refs",Easily scalable synthesis of Ni nanosols suitable for the hydrogenation of 4 nitrophenol to p aminophenol under mild condition,"['Alcohols', 'Anodic oxidation', 'Catalysis', 'Catalyst activity', 'Chelation', 'Crystalline materials', 'Cyclic voltammetry', 'Hydrogenation', 'Microwaves', 'Nanoparticles', 'Nickel', 'Solid oxide fuel cells (SOFC)', '4-Nitrophenol', 'AECSA', 'Nanosols', 'Nickel nanoparticles', 'Polyol synthesis', 'Crystalline Solids', 'Solid State Physics', 'Organic Compounds', 'Chemical Reactions', 'Electric Variables Measurements', 'Nanotechnology', 'Electric and Magnetic Materials', 'Fuel Cells', 'Nickel', 'Electromagnetic Waves']","['Blosi, M', '', '', ' Albonetti, S', '', '', ' Costa, A L', '', '', ' Sangiorgi, N', '', '', ' Sanson, A', '', '']","ISTEC CNR, Institute of Science and Technology for Ceramics, National Research Council, Via Granarolo 64, 48018 Faenza, Italy  2  Department of Industrial Chemistry and Materials, Bologna University, Viale del Risorgimento 4, 40136 Bologna, Italy",2013,ECSA
660,661,"Nickel based metallic foams are commonly used in electrochemical energy storage devices  rechargeable batteries  as both current collectors and active mass support  These materials attract attention as tunable electrode materials because they are available in a range of chemical compositions, pore structures, pore sizes, and densities  This contribution presents structural, chemical, and electrochemical characterization of Ni based metallic foams  Several materials and surface science techniques  transmission electron microscopy  TEM , scanning electron microscopy  SEM , energy dispersive spectrometer  EDS , focused ion beam  FIB , and X ray photoelectron spectroscopy  XPS   and electrochemical methods  cyclic voltammetry  CV   are used to examine the micro , meso , and nanoscopic structural characteristics, surface morphology, and surface chemical composition of these materials  XPS combined with Ar ion etching is employed to analyze the surface and near surface chemical composition of the foams  The specific and electrochemically active surface areas  As, A ecsa  are determined using CV  Though the foams exhibit structural robustness typical of bulk materials, they have large As, in the range of 200 600 cm2 g 1  In addition, they are dual porosity materials and possess both macro and mesopores    2013 American Chemical Society   37 refs","Comprehensive structural, surface chemical and electrochemical characterization of nickel based metallic foams","['Characterization', 'Cyclic voltammetry', 'Electrocatalysts', 'Etching', 'Focused ion beams', 'Materials', 'Nickel', 'Photoelectrons', 'Porosity', 'Scanning electron microscopy', 'Secondary batteries', 'Transmission electron microscopy', 'X ray photoelectron spectroscopy', 'Chemical etching', 'Dual-porosity', 'Electrochemical characterizations', 'Electrochemical energy storage devices', 'Electrochemically active surface areas', 'Energy dispersive spectrometers', 'Nickel foam', 'Real surface areas', 'Physical Properties of Gases, Liquids and Solids', 'Chemical Agents and Basic Industrial Chemicals', 'Electrochemistry', 'Chemistry', 'Materials Science', 'Optical Devices and Systems', 'Secondary Batteries', 'Nickel', 'Metallurgy and Metallography', 'Electromagnetic Waves']","['Van Drunen, Julia', '', '', 'Kinkead, Brandy', '', '', 'Wang, Michael C', 'P', '', '', ' Sourty, Erwan', '', '', 'Gates, Byron D', '', '', ' Jerkiewicz, Gregory']","Department of Chemistry, Queen s University, 90 Bader Lane, Kingston, ON K7L 3N6, Canada  2  Department of Chemistry and 4D LABORATORIES, Simon Fraser University, 8888 University Drive, Burnaby, BC V5A 1S6, Canada  3  FEI Company, NanoPort, Bldg, Achtseweg Noord 5, 5651 GG, Eindhoven, Netherlands",2013,ECSA
661,662,No abstract available,"7th IEEE IFIP Working Conference on Software Architecture, WICSA 2008  Message from the conference chairs",[nan],"['Garlan, David', ' Woods, Eoin', ' Kruchten, Philippe']",None,2008,WICSA
662,663,No abstract available,Components and services session report,[nan],"['Crnkovic, Ivica', ' Jamwal, Vikram']",None,2005,WICSA
663,664,No abstract available,Hydrobiologia  Preface,[nan],"['Dauvin, Jean Claude', ' Romana, Louis Alexandre']",None,2007,ECSA
664,665,No abstract available,Hydrobiologia  Preface,[nan],"['Dauvin, Jean Claude', ' Romana, Louis Alexandre']",None,2008,ECSA
665,666,No abstract available,Lecture Notes in Computer Science  Preface,[nan],"['Reussner, Ralf', ' Mayer, Johannes', ' Stafford, Judith', ' Overhage, Sven', ' Becker, Steffen', ' Schroeder, Patrick J']",None,2005,QoSA
666,667,No abstract available,Lecture Notes in Computer Science  including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics   Preface,[nan],"['Morrison, Ron', ' Papadopoulos, George A']",None,2008,ECSA
667,668,No abstract available,Lecture Notes in Computer Science  including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics  Preface,[nan],"['Oquendo, Flavio', ' Cuesta, Carlos E', '', 'Marcos, Esperanza']",None,2007,ECSA
668,669,No abstract available,Lecture Notes in Computer Science  including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics  Preface,[nan],"['Oquendo, Flavio', ' Cuesta, Carlos E', '', 'Marcos, Esperanza']",None,2008,ECSA
669,670,No abstract available,Message from the chairs,[nan],"['Nord, Robert', ' Medvidovic, Nenad', ' Krikhaar, Rene', ' Stafford, Judith', ' Bosch, Jan']",None,2005,WICSA
670,671,No abstract available,Message from the chairs,[nan],"['Paulish, Dan', ' Gorton, Ian', ' Tyree, Jeff', ' Soni, Dilip']",None,2007,WICSA
671,672,No abstract available,Reexamining the role of interactions in software architecture,[nan],"['Hofmeister, Christine']",None,2005,QoSA
672,673,No abstract available,Software architecture evaluation and analysis session report,[nan],"['Garlan, David']",None,2005,WICSA
673,674,No abstract available,Working session reports,[nan],"['Stafford, Judith', ' Bosch, Jan']",None,2005,WICSA
674,675,No abstract available  1 refs,Are successful test cases useless or not,[nan],"['Chen, T Y']",None,2005,QoSA
675,676,No abstract available  1 refs,On the meeting of software architecture and reverse engineering,[nan],"['Chikofsky, Elliot']",None,2005,WICSA
676,677,No abstract available  2 refs,"Interplay of architecture, business goals, and current technology in the evolution of call center systems",[nan],"['Klein, John']",None,2008,WICSA
677,678,No abstract available  4 refs,Establishing connectors as integration services,[nan],"['Hepner, M', '', 'Gamble, R']",None,2005,WICSA
678,679,No abstract available  4 refs,Providing support for safe software architecture transformations,[nan],"['Barais, Olivier', ' Lawall, Julia', ' Le, Meur, Anne Francoise', ' Duchien, Laurence']",None,2005,WICSA
679,680,No abstract available  4 refs,Quality driven software architecture model transformation,[nan],"['Matinlassi, Mari']",None,2005,WICSA
680,681,No abstract available  5 refs,Architectural concerns when selecting an in house integration strategy   Experiences from industry,[nan],"['Land, Rikard', ' Blankers, Laurens', ' Larsson, Stig', ' Crnkovic, Ivica']",None,2005,WICSA
681,682,No abstract available  5 refs,Software components services for embedded real time systems,[nan],"['Luders, Frank', ' Flemstrom, Daniel', ' Wall, Anders']",None,2005,WICSA
682,683,No abstract available  6 refs,Coordination in software architectures  an aspect oriented approach,[nan],"['Perez, Jennifer', ' Llavador, Manuel', ' Carsi, Jose A', '', 'Canos, Jose H', '', 'Ramos, Isidro']",None,2005,WICSA
683,684,No abstract available  6 refs,Intelligent instrument design with ArchWare ADL,[nan],"['Revillard, Jerome', ' Cimpan, Sorana', ' Benoit, Eric', ' Oquendo, Flavio']",None,2005,WICSA
684,685,No abstract available  8 refs,Case study on architecture centered design for monitoring views at CERN,[nan],"['Ratcliffe, Olivier', ' Cimpan, Sorana', ' Oquendo, Flavio']",None,2005,WICSA
685,686,No abstract available  8 refs,Introducing ambient calculus in mobile aspect oriented software architectures,[nan],"['Ali, Nour', ' Perez, Jennifer', ' Ramos, Isidro', ' Carsi, Jose A']",None,2005,WICSA
686,687,No abstract available  8 refs,Managing separation of concerns in grid applications through architectural model transformations,[nan],"['Manset, David', ' Verjus, Herve', ' McClatchey, Richard']",None,2007,ECSA
687,688,No abstract available  8 refs,Managing separation of concerns in grid applications through architectural model transformations,[nan],"['Manset, David', ' Verjus, Herve', ' McClatchey, Richard']",None,2008,ECSA
688,689,"Normally, software development practices concentrate to take all security requirements into account at design time  Nevertheless, today s software products are intended to be used in mobile, or alternatively, in embedded devices whose environment changes during the application s execution  These kinds of changes occur especially in applications used in smart spaces  This enforces to think security concerns more dynamically  Thus, software has to be aware of its 1  security level in each time, and 2  changes in its environment that can cause security threats  Based on this awareness, software has to change its security mechanisms to fulfil security requirements in the current context  A security measurement is a key factor of this awareness  This work presents a micro architecture for security adaptation and taxonomy of context information affecting to information security in smart spaces  The security measurement is the essential part of the micro architecture  In addition, taxonomy describes concepts that have to be monitored in the smart space environment    2010 ACM   25 refs",Towards micro architecture for security adaptation,"['Computer software selection and evaluation', 'Embedded software', 'Software architecture', 'Software design', 'Taxonomies', 'Technical presentations', 'Context information', 'Embedded device', 'Environment change', 'Information security', 'Key factors', 'Micro architectures', 'quality', 'Runtimes', 'Security level', 'Security measurement', 'Security mechanism', 'Security requirements', 'Security threats', 'Smart space', 'Software development practices', 'Software products', 'Take-all', 'Computer Software, Data Handling and Applications', 'Information Science', 'Information Dissemination']","['Evesti, Antti', '', '', 'Pantsar Syv niemi, Susanna']","VTT Technical Research Centre of Finland, Kaitov yl  1, P O  Box 1100, 90571 Oulu, Finland",2010,ECSA
689,690,"Nowadays it is widely recognized the crucial role played in the software development process by the analysis of extra functional properties  and especially performance  at the architectural level  To foster this kind of quantitative analysis we envisage the need to transform the performance model generation and analysis into a rigorous and sound discipline  To this end we intend to exploit the knowledge  acquired by other disciplines  in the area of model transformation, and import both reasoning and methodologies in the software performance engineering  In this paper we investigate the area of performance model derivation and analysis focusing on model transformation  we propose an initial taxonomy for the area of performance analysis at software architecture level and we delineate our suggestions towards a software performance model driven engineering    2006 Springer Verlag   34 refs",Model transformation in software performance engineering,"['Computer software selection and evaluation', 'Knowledge engineering', 'Taxonomies', 'Architectural levels', 'Functional properties', 'Model transformation', 'Performance analysis', 'Performance Model', 'Quantitative analysis', 'Software development process', 'Software performance engineerings', 'Software performance models', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Information Science', 'Management']","['Di Marco, Antinisca', '', '', 'Mirandola, Raffaela']","Dipartimento di Informatica, Universit  di L Aquila, L Aquila, Italy  2  Dipartimento di Elettronica e Informazione, Politecnico di Milano, Milano, Italy",2006,QoSA
690,691,"Nowadays it is widely recognized the crucial role played in the software development process by the analysis of extra functional properties  and especially performance  at the architectural level  To foster this kind of quantitative analysis we envisage the need to transform the performance model generation and analysis into a rigorous and sound discipline  To this end we intend to exploit the knowledge  acquired by other disciplines  in the area of model transformation, and import both reasoning and methodologies in the software performance engineering  In this paper we investigate the area of performance model derivation and analysis focusing on model transformation  we propose an initial taxonomy for the area of performance analysis at software architecture level and we delineate our suggestions towards a software performance model driven engineering   34 refs",Model transformation in software performance engineering,"['formal specification', 'reasoning about programs', 'software architecture', 'software performance evaluation', 'model transformation', 'software performance engineering', 'software development', 'software architecture', 'quantitative analysis', 'reasoning', 'performance analysis', 'Software engineering techniques', 'Software performance evaluation', 'Formal methods']","['Di Marco, A', '', '', ' Mirandola, R']","Dipt  di Inf , Univ  di L Aquila, L Aquila, Italy",2006,QoSA
691,692,"Nowadays the software architecture of a system is often seen as a set of design decisions providing the rationale for the system design  When designing a software architecture multiple levels of design decisions need to be considered  For example, the service based integration of heterogeneous platforms and the development of applications on top of those integration services requires high level as well as technology , domain , and application dependent architectural decisions  In this context, we performed a series of qualitative studies following a multi method approach  First, we conducted a systematic literature review from which we derived a pattern language for platform integration featuring 40 patterns, as well as a pattern based architectural decision model  Then, we performed interviews with 9 platform experts from 3 companies for revising the architectural knowledge captured by the pattern language and the decision model  Finally, we participated in a case study and observed the decision making process to validate the results further  Our observations resulted in 1  a qualitatively validated, pattern based architectural decision model and 2  a generalized model of the different levels and stages of architectural decision making for service based platform integration    2012 IEEE   35 refs",Architectural decision making for service based platform integration  A qualitative multi method study,"['Decision making', 'Design', 'Integration', 'Models', 'Architectural decision', 'Architectural knowledge', 'Decision making process', 'Decision models', 'Design decisions', 'Generalized models', 'Heterogeneous platforms', 'Integration services', 'Multi methods', 'Multi-method approach', 'Multiple levels', 'Pattern languages', 'Qualitative study', 'Service-based', 'Systematic literature review', 'Computer Programming', 'Engineering Graphics', 'Management', 'Calculus']","['Lytra, Ioanna', '', '', 'Sobernig, Stefan', '', '', 'Zdun, Uwe']","Faculty of Computer Science, University of Vienna, Austria  2  Institute for IS and New Media, WU Vienna, Austria",2012,ECSA
692,693,"Nowadays the software architecture of a system is often seen as a set of design decisions providing the rationale for the system design  When designing a software architecture multiple levels of design decisions need to be considered  For example, the service based integration of heterogeneous platforms and the development of applications on top of those integration services requires high level as well as technology , domain , and application dependent architectural decisions  In this context, we performed a series of qualitative studies following a multi method approach  First, we conducted a systematic literature review from which we derived a pattern language for platform integration featuring 40 patterns, as well as a pattern based architectural decision model  Then, we performed interviews with 9 platform experts from 3 companies for revising the architectural knowledge captured by the pattern language and the decision model  Finally, we participated in a case study and observed the decision making process to validate the results further  Our observations resulted in 1  a qualitatively validated, pattern based architectural decision model and 2  a generalized model of the different levels and stages of architectural decision making for service based platform integration    2012 IEEE   35 refs",Architectural decision making for service based platform integration  A qualitative multi method study,"['Decision making', 'Design', 'Integration', 'Models', 'Architectural decision', 'Architectural knowledge', 'Decision making process', 'Decision models', 'Design decisions', 'Generalized models', 'Heterogeneous platforms', 'Integration services', 'Multi methods', 'Multi-method approach', 'Multiple levels', 'Pattern languages', 'Qualitative study', 'Service-based', 'Systematic literature review', 'Computer Programming', 'Engineering Graphics', 'Management', 'Calculus']","['Lytra, Ioanna', '', '', 'Sobernig, Stefan', '', '', 'Zdun, Uwe']","Faculty of Computer Science, University of Vienna, Austria  2  Institute for IS and New Media, WU Vienna, Austria",2012,WICSA
693,694,"Nowadays, Wireless Sensor Networks  WSN  are a very promising research field since they find application in many different areas  Current proposals for WSN system development are mainly focused on implementation issues and they rarely rely on a Software Engineering methodology which supports their entire development life cycle  The Model Driven Engineering  MDE  approach can contribute to solve this problem by allowing designers to model their systems at different abstraction levels, providing them with automatic model transformations to incrementally refine abstract models into more concrete ones  In this vein, this paper presents a MDE approach to WSN application development  Three levels of abstraction have been defined which allow designers to build   1  domain specific models,  2  component based architecture descriptions, and  3  platform specific models  Automatic model transformations between these three abstraction levels have been designed and, in order to demonstrate the viability of the proposal, a real WSN application has been developed using the implemented tools    Springer Verlag Berlin Heidelberg 2007   20 refs",Wireless sensor network application development  An architecture centric MDE approach,"['Mathematical models', 'Software architecture', 'Component-based software architecture', 'Domain specific languages', 'Model-driven engineering', 'Radio Systems and Equipment', 'Data Communication, Equipment and Techniques', 'Computer Programming', 'Computer Applications', 'Mathematics']","['Losilla, Fernando', '', '', 'Vicente Chicote, Cristina', '', '', ' lvarez, B rbara', '', '', 'Iborra, Andr s', '', '', 'S nchez, Pedro']","Divisi n de Sistemas e Ingenier a Electr nica  DSIE , Universidad Polit cnica de Cartagena, 30202 Cartagena, Spain",2007,ECSA
694,695,"Nowadays, Wireless Sensor Networks  WSN  are a very promising research field since they find application in many different areas  Current proposals for WSN system development are mainly focused on implementation issues and they rarely rely on a Software Engineering methodology which supports their entire development life cycle  The Model Driven Engineering  MDE  approach can contribute to solve this problem by allowing designers to model their systems at different abstraction levels, providing them with automatic model transformations to incrementally refine abstract models into more concrete ones  In this vein, this paper presents a MDE approach to WSN application development  Three levels of abstraction have been defined which allow designers to build   1  domain specific models,  2  component based architecture descriptions, and  3  platform specific models  Automatic model transformations between these three abstraction levels have been designed and, in order to demonstrate the viability of the proposal, a real WSN application has been developed using the implemented tools    Springer Verlag Berlin Heidelberg 2007   20 refs",Wireless sensor network application development  An architecture centric MDE approach,"['Mathematical models', 'Software architecture', 'Component-based software architecture', 'Domain specific languages', 'Model-driven engineering', 'Radio Systems and Equipment', 'Data Communication, Equipment and Techniques', 'Computer Programming', 'Computer Applications', 'Mathematics']","['Losilla, Fernando', '', '', 'Vicente Chicote, Cristina', '', '', ' lvarez, B rbara', '', '', 'Iborra, Andr s', '', '', 'S nchez, Pedro']","Divisi n de Sistemas e Ingenier a Electr nica  DSIE , Universidad Polit cnica de Cartagena, 30202 Cartagena, Spain",2008,ECSA
695,696,"Nowadays, Wireless Sensor Networks  WSN  are a very promising research field since they find application in many different areas  Current proposals for WSN system development are mainly focused on implementation issues and they rarely rely on a Software Engineering methodology which supports their entire development life cycle  The Model Driven Engineering  MDE  approach can contribute to solve this problem by allowing designers to model their systems at different abstraction levels, providing them with automatic model transformations to incrementally refine abstract models into more concrete ones  In this vein, this paper presents a MDE approach to WSN application development  Three levels of abstraction have been defined which allow designers to build   1  domain specific models,  2  component based architecture descriptions, and  3  platform specific models  Automatic model transformations between these three abstraction levels have been designed and, in order to demonstrate the viability of the proposal, a real WSN application has been developed using the implemented tools   20 refs",Wireless sensor network application development  an architecture centric MDE approach,"['abstract data types', 'object-oriented programming', 'software architecture', 'specification languages', 'telecommunication computing', 'wireless sensor networks', 'WSN application development', 'wireless sensor networks', 'architecture-centric MDE approach', 'software engineering methodology', 'development life-cycle', 'model-driven engineering', 'automatic model transformations', 'abstract models', 'WSN domain-specific modelling language', 'component-based architecture descriptions', 'platform-specific models', 'Radio links and equipment', 'Communications computing', 'Object oriented programming', 'Software engineering techniques', 'Formal methods']","['Losilla, F', '', '', ' Vicente Chicote, C', '', '', ' Alvarez, B', '', '', ' Iborra, A', '', '', ' Sanchez, P', '', '']","Div  de Sist  e Ing  Electron   DSIE , Univ  Politec  de Cartagena, Cartagena, Spain",2007,ECSA
696,697,"Nowadays, Wireless Sensor Networks  WSN  are a very promising research field since they find application in many different areas  Current proposals for WSN system development are mainly focused on implementation issues and they rarely rely on a Software Engineering methodology which supports their entire development life cycle  The Model Driven Engineering  MDE  approach can contribute to solve this problem by allowing designers to model their systems at different abstraction levels, providing them with automatic model transformations to incrementally refine abstract models into more concrete ones  In this vein, this paper presents a MDE approach to WSN application development  Three levels of abstraction have been defined which allow designers to build   1  domain specific models,  2  component based architecture descriptions, and  3  platform specific models  Automatic model transformations between these three abstraction levels have been designed and, in order to demonstrate the viability of the proposal, a real WSN application has been developed using the implemented tools   20 refs",Wireless sensor network application development  an architecture centric MDE approach,"['abstract data types', 'object-oriented programming', 'software architecture', 'specification languages', 'telecommunication computing', 'wireless sensor networks', 'WSN application development', 'wireless sensor networks', 'architecture-centric MDE approach', 'software engineering methodology', 'development life-cycle', 'model-driven engineering', 'automatic model transformations', 'abstract models', 'WSN domain-specific modelling language', 'component-based architecture descriptions', 'platform-specific models', 'Radio links and equipment', 'Communications computing', 'Object oriented programming', 'Software engineering techniques', 'Formal methods']","['Losilla, F', '', '', ' Vicente Chicote, C', '', '', ' Alvarez, B', '', '', ' Iborra, A', '', '', ' Sanchez, P', '', '']","Div  de Sist  e Ing  Electron   DSIE , Univ  Politec  de Cartagena, Cartagena, Spain",2008,ECSA
697,698,"Nowadays, with the increasing need of traveling and flying, the air traffic system is highly capacity constrained due to the limited availability of resources  These resources are shared among the various domain actors  In this paper, we propose an architectural perspective for resource management in the aeronautic domain, which is based on resource allocation, trading, and adaptation to reduce the congestion phenomenon in the air traffic system    2011 Springer Verlag   13 refs",Resource management in the air traffic domain,"['Air traffic control', 'Natural resources management', 'Resource allocation', 'Software architecture', 'Aeronautic domains', 'Air Traffic Systems', 'Air traffics', 'resource adaptation', 'Resource management', 'resource trading', 'Highway Traffic Control', 'Water Resources', 'Environmental Engineering', 'Computer Programming', 'Computer Applications', 'Operations Research']","['Lulli, Guglielmo', '', '', 'Mirandola, Raffaela', '', '', 'Potena, Pasqualina', '', '', 'Raibulet, Claudia']","Universit  degli Studi di Milano Bicocca, Dipartimento di Informatica, Sistemistica e Comunicazione, Edificio U14, Viale Sarca 336, 20126, Milan, Italy  2  Politecnico di Milano, Dipartimento di Elettronica Ed Informazione, Piazza Leonardo da Vinci, 32, 20133, Milan, Italy  3  Universit  degli Studi di Bergamo, Dipartimento dell Informazione e Metodi Matematici, Viale Marconi, 5, 24024, Dalmine  BG , Italy",2011,ECSA
698,699,"Numerous design decisions are made in model based software development which often are not documented explicitly  Hence, the design knowledge is  in the designers mind  and communicated orally, if at all, and the rationale behind the decisions is lost  Existing tools tackle this problem for architectural decisions which refer to the higher level architecture of a system  However, these decisions are separate artifacts and not linked to individual design model elements  Hence, there is no automatic check whether the design models comply with made decisions  This paper presents concepts for explicitly linking design decisions and design model elements  As first class artifacts, design decisions can be used for documentation, consistency checking, and reuse  In case consistency constraints are violated, the user is notified that the design models no longer comply with the decisions made  Reuse is realized by extracting design model changes as reusable patterns for recurring decisions    2010 Springer Verlag Berlin Heidelberg   22 refs",Linking design decisions to design models in model based software development,"['Design', 'Software architecture', 'Architectural decision', 'Consistency checking', 'Consistency constraints', 'Design decisions', 'Design knowledge', 'Design models', 'Model-based', 'Software development', 'Structural Design', 'Computer Programming']","['K nemann, Patrick', '', '', 'Zimmermann, Olaf']","Informatics and Mathematical Modelling, Technical University of Denmark, 2800 Kgs  Lyngby, Denmark  2  IBM Research   Z rich, S umerstrasse 8, R schlikon 8803, Switzerland",2010,ECSA
699,700,"Numerous design decisions including architectural decisions are made while developing a software system, which influence the architecture of the system as well as subsequent decisions  Several tools already exist for managing design decisions, i e  capturing, documenting, and maintaining them, but also for guiding the user by proposing subsequent decisions  In model based software development, many decisions directly affect the structural and behavioral models used to describe and develop a software system and its architecture  However, the decisions are typically not connected to these models  In this paper, we propose an integration of a decision management and a UML based modeling tool, based on use cases we distill from an example  the UML modeling tool shall show all decisions related to a model and allow extending or updating them  the decision management tool shall trigger the modeling tool to enforce design decisions  modify the models   We define tool independent concepts and architecture building blocks supporting these requirements and present first ideas how this can be implemented in the IBM Rational Software Modeler and Architectural Decision Knowledge Wiki  This seamless integration of formerly disconnected tools could improve tool usability as well as decision maker productivity    2009 IEEE   9 refs",Integrating decision management with UML modeling concepts and tools,"['Architecture', 'Computer software', 'Decision making', 'Integration', 'Mathematical models', 'Architectural decision', 'Behavioral model', 'Building blockes', 'Decision makers', 'Decision management', 'Design decisions', 'ITS architecture', 'Model-based', 'Modeling tool', 'Seamless integration', 'Software development', 'Software systems', 'UML Modeling', 'UML modeling tools', 'Calculus', 'Mathematics', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Buildings and Towers']","['K nemann, Patrick']","Informatics and Mathematical Modelling, Technical University of Denmark, 2800 Kgs  Lyngby, Denmark",2009,ECSA
700,701,"Numerous design decisions including architectural decisions are made while developing a software system, which influence the architecture of the system as well as subsequent decisions  Several tools already exist for managing design decisions, i e  capturing, documenting, and maintaining them, but also for guiding the user by proposing subsequent decisions  In model based software development, many decisions directly affect the structural and behavioral models used to describe and develop a software system and its architecture  However, the decisions are typically not connected to these models  In this paper, we propose an integration of a decision management and a UML based modeling tool, based on use cases we distill from an example  the UML modeling tool shall show all decisions related to a model and allow extending or updating them  the decision management tool shall trigger the modeling tool to enforce design decisions  modify the models   We define tool independent concepts and architecture building blocks supporting these requirements and present first ideas how this can be implemented in the IBM Rational Software Modeler and Architectural Decision Knowledge Wiki  This seamless integration of formerly disconnected tools could improve tool usability as well as decision maker productivity    2009 IEEE   9 refs",Integrating decision management with UML modeling concepts and tools,"['Architecture', 'Computer software', 'Decision making', 'Integration', 'Mathematical models', 'Architectural decision', 'Behavioral model', 'Building blockes', 'Decision makers', 'Decision management', 'Design decisions', 'ITS architecture', 'Model-based', 'Modeling tool', 'Seamless integration', 'Software development', 'Software systems', 'UML Modeling', 'UML modeling tools', 'Calculus', 'Mathematics', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Buildings and Towers']","['K nemann, Patrick']","Informatics and Mathematical Modelling, Technical University of Denmark, 2800 Kgs  Lyngby, Denmark",2009,WICSA
701,702,"Numerous design decisions including architectural decisions are made while developing a software system, which influence the architecture of the system as well as subsequent decisions  Several tools already exist for managing design decisions, i e  capturing, documenting, and maintaining them, but also for guiding the user by proposing subsequent decisions  In model based software development, many decisions directly affect the structural and behavioral models used to describe and develop a software system and its architecture  However, the decisions are typically not connected to these models  In this paper, we propose an integration of a decision management and a UML based modeling tool, based on use cases we distill from an example  the UML modeling tool shall show all decisions related to a model and allow extending or updating them  the decision management tool shall trigger the modeling tool to enforce design decisions  modify the models   We define tool independent concepts and architecture building blocks supporting these requirements and present first ideas how this can be implemented in the IBM Rational Software Modeler and Architectural Decision Knowledge Wiki  This seamless integration of formerly disconnected tools could improve tool usability as well as decision maker productivity    2009 IEEE   9 refs",Integrating decision management with UML modeling concepts and tools,"['Architecture', 'Computer software', 'Decision making', 'Integration', 'Mathematical models', 'Architectural decision', 'Behavioral model', 'Building blockes', 'Decision makers', 'Decision management', 'Design decisions', 'ITS architecture', 'Model-based', 'Modeling tool', 'Seamless integration', 'Software development', 'Software systems', 'UML Modeling', 'UML modeling tools', 'Calculus', 'Mathematics', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Buildings and Towers']","['K nemann, Patrick']","Informatics and Mathematical Modelling, Technical University of Denmark, 2800 Kgs  Lyngby, Denmark",2011,WICSA
702,703,"Obtaining the appropriate architecture for a software system assures the long term success of the product  Without a well defined and documented architecture is very hard or impossible to analyze and evaluate the quality of the product and the change impact  Thus it is very expensive to communicate to each stakeholder the information needed  Many existing approaches propose models based on a  closed  set of views to document architectures, such as  4 1  model, Siemens  model, etcetera  Nevertheless, industrial practices in Small and Medium size Enterprises  SME  works informally, often even not documenting  From a practical experience where the 4 1 model was applied, it was noticed that there were views not proposed that were interesting, therefore a method was defined to select the views that really turn out useful to document in each case  To this end, the approach proposed by Clements et al  1  has been adapted    2005 IEEE   4 refs",The ADOV method  An experience in selecting the relevant views of an architecture in a SME,"['Computer software selection and evaluation', 'Industrial engineering', 'Information dissemination', 'Mathematical models', 'Program documentation', 'Quality management', 'Documented architectures', 'Small and Medium size Enterprises (SME)', 'Computer Programming', 'Computer Applications', 'Information Dissemination', 'Industrial Engineering', 'Management', 'Mathematics']","['Sagardui, Goiuria', '', '', 'Aldekoa, Gentzane', '', '', 'Etxeberria, Leire']","University of Mondragon, Loramendi 4, 20500, Mondragon, Spain",2005,WICSA
703,704,"Offering services in the internet requires a dependable operation of the underlying software systems with guaranteed quality of service  The workload of such systems typically significantly varies throughout a day and thus leads to changing resource utilisations  Existing system monitoring tools often use fixed threshold values to determine if a system is in an unexpected state  Especially in low load situations, deviations from the system s expected behaviour are detected too late if fixed value thresholds  leveled for peak loads  are used  In this paper, we present our approach of a workload aware performance monitoring process based on performance prediction techniques  This approach allows early detections of performance problems before they become critical  We applied our approach to the e mail system operated by Germany s largest e mail provider, the 1 1 Internet AG  This case study demonstrates the applicability of our approach and shows its accuracy in the predicted resource utilisation with an error of mostly less than 10     2012 IEEE   23 refs",Workload aware system monitoring using performance predictions applied to a large scale e mail system,"['Computer software', 'Industrial applications', 'Internet', 'Quality of service', 'Software architecture', 'E-mail systems', 'Existing systems', 'Fixed threshold', 'Guaranteed quality', 'Industrial case study', 'Low load', 'Peak load', 'Performance monitoring', 'Performance prediction', 'Performance problems', 'Predictive models', 'Resource utilisation', 'Software performance', 'Software systems', 'System monitoring', 'Computer Software, Data Handling and Applications', 'Computer Applications', 'Production Planning and Control  Manufacturing']","['Rathfelder, Christoph', '', '', 'Becker, Stefan', '', '', 'Krogmann, Klaus', '', '', 'Reussner, Ralf']","FZI Research Center for Information Technology, Karlsruhe, Germany  2  1 and 1 Internet AG, Mail and Media Development, Karlsruhe, Germany  3  Karlsruhe Institute of Technology, Karlsruhe, Germany",2012,ECSA
704,705,"Offering services in the internet requires a dependable operation of the underlying software systems with guaranteed quality of service  The workload of such systems typically significantly varies throughout a day and thus leads to changing resource utilisations  Existing system monitoring tools often use fixed threshold values to determine if a system is in an unexpected state  Especially in low load situations, deviations from the system s expected behaviour are detected too late if fixed value thresholds  leveled for peak loads  are used  In this paper, we present our approach of a workload aware performance monitoring process based on performance prediction techniques  This approach allows early detections of performance problems before they become critical  We applied our approach to the e mail system operated by Germany s largest e mail provider, the 1 1 Internet AG  This case study demonstrates the applicability of our approach and shows its accuracy in the predicted resource utilisation with an error of mostly less than 10     2012 IEEE   23 refs",Workload aware system monitoring using performance predictions applied to a large scale e mail system,"['Computer software', 'Industrial applications', 'Internet', 'Quality of service', 'Software architecture', 'E-mail systems', 'Existing systems', 'Fixed threshold', 'Guaranteed quality', 'Industrial case study', 'Low load', 'Peak load', 'Performance monitoring', 'Performance prediction', 'Performance problems', 'Predictive models', 'Resource utilisation', 'Software performance', 'Software systems', 'System monitoring', 'Computer Software, Data Handling and Applications', 'Computer Applications', 'Production Planning and Control  Manufacturing']","['Rathfelder, Christoph', '', '', 'Becker, Stefan', '', '', 'Krogmann, Klaus', '', '', 'Reussner, Ralf']","FZI Research Center for Information Technology, Karlsruhe, Germany  2  1 and 1 Internet AG, Mail and Media Development, Karlsruhe, Germany  3  Karlsruhe Institute of Technology, Karlsruhe, Germany",2012,WICSA
705,706,"Offshoring is not as popular as it seems  According to a recent German survey, only 1 5  of all outsourcing activities target offshore locations  This is a remarkably small figure taking into account the widely published purported benefits of offshoring  In this paper we demonstrate that communication problems are at the core of offshoring woes  This does not come as a surprise as they also play a major role in onshore projects  Based on our experience in tackling these challenges with our well established communication centered agile design and development approach, we present case study reinforced advice for successful offshore projects  We show that a common view of the underlying architecture is of paramount importance for these projects    2007 IEEE   10 refs",Tackling offshore communication challenges with agile architecture centric development,"['Agile manufacturing systems', 'Computer aided design', 'Offshore structures', 'Project management', 'Reinforcement learning', 'Agile designs', 'Communication problems', 'Offshore projects', 'Marine Drilling Rigs and Platforms', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Management', 'Manufacturing']","['Kornst dt, Andreas', '', '', 'Sauer, Joachim']","Software Engineering Group, Department of Informatics, University of Hamburg, Vogt K lln Str  30, 22527 Hamburg, Germany",2007,WICSA
706,707,"Offshoring is not as popular as it seems  According to a recent German survey, only 1 5  of all outsourcing activities target offshore locations  This is a remarkably small figure taking into account the widely published purported benefits of offshoring  In this paper we demonstrate that communication problems are at the core of offshoring woes  This does not come as a surprise as they also play a major role in onshore projects  Based on our experience in tackling these challenges with our well established communication centered agile design and development approach, we present case study reinforced advice for successful offshore projects  We show that a common view of the underlying architecture is of paramount importance for these projects   10 refs",Tackling offshore communication challenges with agile architecture centric development,"['software engineering', 'offshore communication', 'agile architecture-centric development', 'German survey', 'offshoring', 'Software engineering techniques']","['Kornstadt, A', '', '', ' Sauer, J', '', '']","Dept  of Inf , Univ  of Hamburg, Hamburg, Germany",2007,WICSA
707,708,"One great challenge in the development of portable fuel cell systems is to explore novel electrocatalysts with better performance and lower costs  Here we report a facile strategy to fabricate a ternary nanocomposite based on Pd MnO2 nanolamella graphene sheets  Pd MNL GS  and demonstrate its application as a multifunctional catalyst for both the direct formic acid fuel cell  DFAFC  and direct methanol fuel cell  DMFC   The developed route rationally utilizes graphene as both a green reducing agent in the synthesis of MnO2 nanolamella and a superior supporting material for growing and supporting Pd nanoparticles  NPs   Whether for formic acid oxidation or methanol oxidation, the as prepared Pd MNL GS hybrid has extremely large electrochemically active surface area  ECSA  values and exhibits significantly high forward peak current densities, both of which are nearly 3 times greater than those of the Pd GS catalyst and 6 times the Pd Vulcan XC 72 catalyst, revealing that metal Pd can be effectively utilized in the presence of promoter components  MNL and GS   Therefore, such a ternary composite with a sophisticated 2D configuration may bring new design opportunities of high performance energy conversion devices in the future   97 refs",Design and synthesis of Pd MnO2 nanolamella graphene composite as a high performance multifunctional electrocatalyst towards formic acid and methanol oxidation,"['catalysis', 'catalysts', 'current density', 'direct methanol fuel cells', 'graphene', 'manganese compounds', 'nanocomposites', 'nanofabrication', 'nanoparticles', 'oxidation', 'palladium', 'nanolamella-graphene composite design', 'nanolamella-graphene composite synthesis', 'high-performance multifunctional electrocatalyst', 'methanol oxidation', 'portable fuel cell system development', 'ternary nanocomposite', 'nanolamella-graphene sheets', 'multifunctional catalyst', 'direct formic acid fuel cell', 'direct methanol fuel cell', 'green reducing agent', 'nanolamella synthesis', 'supporting material', 'Pd nanoparticles', 'formic acid oxidation', 'electrochemically active surface area', 'forward peak current densities', 'metal Pd', 'promoter components', '2D configuration', 'high-performance energy conversion devices', 'Pd-MnO2-C', 'Methods of nanofabrication and processing', 'Heterogeneous catalysis at surfaces and other surface reactions', 'Fuel cells', 'Structure of solid clusters, nanoparticles, nanotubes and nanostructured materials', 'Fuel cells']","['Huajie Huang', '', '', 'Xin Wang']","Key Lab  of Soft Chem    Functional Mater , Nanjing Univ  of Sci    Technol , Nanjing, China",2013,ECSA
708,709,"One of the aims of component based software engineering is the reuse of existing software components in different deployment contexts  With the redeployment of a component, its performance changes, since it depends on the performance of external services, the underlying hardware and software, and the operational profile  Therefore, performance prediction models are required that are able to handle these dependencies and use the properties of component based software systems  Parametric contracts model the relationship of provided and required services of a component  In this paper, we analyse the influence of external services on the service execution time applying parametric contracts and a performance prediction algorithm based on Markov chains  We verbalise the assumptions of this approach and evaluate their validity with an experiment  We will see that most of the assumptions hold only under certain constraints   18 refs",Predicting mean service execution times of software components based on Markov models,"['formal verification', 'Markov processes', 'object-oriented programming', 'software performance evaluation', 'software reusability', 'mean service execution time prediction', 'software components', 'Markov models', 'component-based software engineering', 'performance prediction models', 'parametric contract model', 'Object oriented programming', 'Software engineering techniques', 'Software performance evaluation', 'Formal methods', 'Markov processes']","['Happe, J', '', '']","Software Eng  Group, Oldenburg Univ , Oldenburg, Germany",2005,QoSA
709,710,"One of the approaches for documenting software architecture is to treat it as a set of architectural design decisions  Such decisions are always made in the context of requirements that must be fulfilled and in the context of decisions that were made before  Currently, models for representing architectural decisions are mainly concentrated on showing the decision making process of the initial architectural design  However, decisions that have been made in such a process may need to be changed during further evolution and maintenance of the software architecture, typically in response to the new or changed requirements  A graphical modelling notation for documenting architectural decisions  Maps of Architectural Decisions  has been developed by our team  In this paper, it is presented how this notation could be used to model architectural decisions under changing requirements  It is proposed how one decision change could be effectively propagated through the rest of the architectural decision model and how a rigorous and tool supported process of updating such models could be organized    2012 IEEE   13 refs",Modelling architectural decisions under changing requirements,"['Architectural design', 'Graphic methods', 'Architectural decision', 'Architectural design decisions', 'Decision making process', 'GraphicaL model', 'Graphical modelling', 'Requirement change', 'Buildings and Towers', 'Computer Programming', 'Engineering Graphics']","['Szlenk, Marcin', '', '', 'Zalewski, Andrzej', '', '', 'Kijas, Szymon']","Institute of Control and Computation Engineering, Warsaw Univeristy of Technology, Warsaw, Poland",2012,ECSA
710,711,"One of the approaches for documenting software architecture is to treat it as a set of architectural design decisions  Such decisions are always made in the context of requirements that must be fulfilled and in the context of decisions that were made before  Currently, models for representing architectural decisions are mainly concentrated on showing the decision making process of the initial architectural design  However, decisions that have been made in such a process may need to be changed during further evolution and maintenance of the software architecture, typically in response to the new or changed requirements  A graphical modelling notation for documenting architectural decisions  Maps of Architectural Decisions  has been developed by our team  In this paper, it is presented how this notation could be used to model architectural decisions under changing requirements  It is proposed how one decision change could be effectively propagated through the rest of the architectural decision model and how a rigorous and tool supported process of updating such models could be organized    2012 IEEE   13 refs",Modelling architectural decisions under changing requirements,"['Architectural design', 'Graphic methods', 'Architectural decision', 'Architectural design decisions', 'Decision making process', 'GraphicaL model', 'Graphical modelling', 'Requirement change', 'Buildings and Towers', 'Computer Programming', 'Engineering Graphics']","['Szlenk, Marcin', '', '', 'Zalewski, Andrzej', '', '', 'Kijas, Szymon']","Institute of Control and Computation Engineering, Warsaw Univeristy of Technology, Warsaw, Poland",2012,WICSA
711,712,"One of the main advantages of the Web component based development paradigm is the ability to build customizable and composable web application modules as independent units of development, and to share them with other developers by publishing them in libraries as COTS  Commercial Off The Shelf  or free components  Besides this, since many years, Web services confirmed their status of the most pertinent solution for a given service provider, like Google, Amazon or FedEx, to open its solutions for third party development  In this paper, we present an approach to build web services starting from existing web component based applications and deploy them on a web service provider  This transformation helps server side web application developers in transforming their  user interface  based web components into a set of web services intended for remote code extensions  We implemented our solution on a collection of Java EE technologies    2010 Springer Verlag Berlin Heidelberg   8 refs",From web components to web services  Opening development for third parties,"['Internet', 'User interfaces', 'Web services', 'Commercial off the shelves', 'Customizable', 'Free component', 'Remote code', 'Service provider', 'Third parties', 'Third-party development', 'WEB application', 'Web components', 'Web service providers', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Peripheral Equipment', 'Computer Software, Data Handling and Applications']","['Tibermacine, Chouki', '', '', 'Kerdoudi, Mohamed Lamine']","LIRMM, CNRS and Montpellier University, France  2  Computer Science Department, University of Biskra, Algeria",2010,ECSA
712,713,"One of the main objectives of model driven software engineering is to produce code automatically from high level design models  This goal can be achieved by providing suitable models and model to code transformations that ensure the conformance of the produced code to its high level specification  In this context we have developed PADL2Java, a software tool that translates PADL models into Java code  PADL is a process algebraic architectural description language equipped with a rigorous semantics and transformation rules into multithreaded object oriented software, which is employed in the verification tool TwoTowers  This paper discusses the code generation approach underlying PADL2Java, the structure of the synthesized code, and the integration of the translator in TwoTowers  The effectiveness of PADL2Java is illustrated through the generation of a Java implementation of a cruise control system    2009 IEEE   26 refs",PADL2Java  A java code generator for process algebraic architectural descriptions,"['Algebra', 'Architecture', 'Automatic programming', 'Computer control', 'Computer software', 'Cosine transforms', 'Models', 'Network components', 'Object oriented programming', 'Program compilers', 'Verification', 'Architectural description languages', 'Architectural descriptions', 'Code Generation', 'Code transformation', 'Cruise control systems', 'High level specification', 'High-level design', 'Java codes', 'Java implementation', 'Model-driven', 'Multithreaded', 'Object oriented software', 'Software tool', 'Transformation rules', 'Verification tools', 'Mathematical Transformations', 'Algebra', 'Engineering Graphics', 'Robotics', 'Computer Applications', 'Mathematical Statistics', 'Computer Programming', 'Logic Elements', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Electric Networks', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Bont , Edoardo', '', '', 'Bernardo, Marco']","Istituto di Scienze e Tecnologie Dell Informazione, Universit  di Urbino Carlo Bo, Italy",2009,ECSA
713,714,"One of the main objectives of model driven software engineering is to produce code automatically from high level design models  This goal can be achieved by providing suitable models and model to code transformations that ensure the conformance of the produced code to its high level specification  In this context we have developed PADL2Java, a software tool that translates PADL models into Java code  PADL is a process algebraic architectural description language equipped with a rigorous semantics and transformation rules into multithreaded object oriented software, which is employed in the verification tool TwoTowers  This paper discusses the code generation approach underlying PADL2Java, the structure of the synthesized code, and the integration of the translator in TwoTowers  The effectiveness of PADL2Java is illustrated through the generation of a Java implementation of a cruise control system    2009 IEEE   26 refs",PADL2Java  A java code generator for process algebraic architectural descriptions,"['Algebra', 'Architecture', 'Automatic programming', 'Computer control', 'Computer software', 'Cosine transforms', 'Models', 'Network components', 'Object oriented programming', 'Program compilers', 'Verification', 'Architectural description languages', 'Architectural descriptions', 'Code Generation', 'Code transformation', 'Cruise control systems', 'High level specification', 'High-level design', 'Java codes', 'Java implementation', 'Model-driven', 'Multithreaded', 'Object oriented software', 'Software tool', 'Transformation rules', 'Verification tools', 'Mathematical Transformations', 'Algebra', 'Engineering Graphics', 'Robotics', 'Computer Applications', 'Mathematical Statistics', 'Computer Programming', 'Logic Elements', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Electric Networks', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Bont , Edoardo', '', '', 'Bernardo, Marco']","Istituto di Scienze e Tecnologie Dell Informazione, Universit  di Urbino Carlo Bo, Italy",2009,WICSA
714,715,"One of the main objectives of model driven software engineering is to produce code automatically from high level design models  This goal can be achieved by providing suitable models and model to code transformations that ensure the conformance of the produced code to its high level specification  In this context we have developed PADL2Java, a software tool that translates PADL models into Java code  PADL is a process algebraic architectural description language equipped with a rigorous semantics and transformation rules into multithreaded object oriented software, which is employed in the verification tool TwoTowers  This paper discusses the code generation approach underlying PADL2Java, the structure of the synthesized code, and the integration of the translator in TwoTowers  The effectiveness of PADL2Java is illustrated through the generation of a Java implementation of a cruise control system    2009 IEEE   26 refs",PADL2Java  A java code generator for process algebraic architectural descriptions,"['Algebra', 'Architecture', 'Automatic programming', 'Computer control', 'Computer software', 'Cosine transforms', 'Models', 'Network components', 'Object oriented programming', 'Program compilers', 'Verification', 'Architectural description languages', 'Architectural descriptions', 'Code Generation', 'Code transformation', 'Cruise control systems', 'High level specification', 'High-level design', 'Java codes', 'Java implementation', 'Model-driven', 'Multithreaded', 'Object oriented software', 'Software tool', 'Transformation rules', 'Verification tools', 'Mathematical Transformations', 'Algebra', 'Engineering Graphics', 'Robotics', 'Computer Applications', 'Mathematical Statistics', 'Computer Programming', 'Logic Elements', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Electric Networks', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Bont , Edoardo', '', '', 'Bernardo, Marco']","Istituto di Scienze e Tecnologie Dell Informazione, Universit  di Urbino Carlo Bo, Italy",2011,WICSA
715,716,"One of the major advantages of component based software engineering is the ability for developers to reuse and assemble software entities to build complex software  Whereas decomposition of software into components has been and is largely addressed for what concerns the business  functional  part of applications, this is not yet the case for what concerns their documentation  non functional  part  In this paper, we propose a new and original solution to express componentbased software non functional documentation, and we will focus more especially on architecture constraints, which formalize parts of architecture decisions, as executable, customizable, reusable and composable building blocks represented by components  Component based applications using business and constraint components can be modeled with CLACS, a dedicated ADL which is also introduced in the paper  Architecture constraints can be executed at design time within CLACS  CLACS is implemented as a plugin in the Eclipse IDE    2010 Springer Verlag Berlin Heidelberg   7 refs","Software architecture constraints as customizable, reusable and composable entities","['Computer software reusability', 'Architecture decisions', 'Building blockes', 'Complex software', 'Component based applications', 'Component based software', 'Component-based software engineering', 'Customizable', 'Non-functional', 'Plug-ins', 'Software entities', 'Computer Software, Data Handling and Applications']","['Tibermacine, Chouki', '', '', 'Dony, Christophe', '', '', 'Sadou, Salah', '', '', 'Fabresse, Luc', ' ,', '']","LIRMM, CNRS and Montpellier University, France  2  VALORIA, Universit  Bretagne Sud, Vannes, France  3  Universit  Lille Nord de France, France  4   cole des Mines de Douai, France",2010,ECSA
716,717,"One of the major current research trends in Software Engineering is the focus on the development of new techniques to deal efficiently with the design of systems that are able to evolve overtime and adapt to rapid changes of their requirements  However, it is still an open issue how to quantify and evaluate the adaptability of a given software system  In this paper we propose the definition of metrics able to quantify and evaluate such software adaptability at the architectural level  Besides, we define a relationship with the quality of service that the software must guarantee by means of a relation between the values of these metrics and the system quality requirements  The presented metrics can be used by the software architect to guide the system adaptation to fulfill the overall quality requirements    2011 ACM   14 refs",Software architecture adaptability metrics for QoS based self adaptation,"['Quality control', 'Quality of service', 'adaptability metrics', 'Architectural levels', 'Overall quality', 'Rapid changes', 'Research trends', 'Self adaptation', 'Software adaptability', 'Software architects', 'Software systems', 'System adaptation', 'System quality', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Software, Data Handling and Applications', 'Quality Assurance and Control']","['Perez Palacin, Diego', '', '', 'Mirandola, Raffaela', '', '', 'Merseguer, Jos', '', '']","Dpto  de Inform tica e Ingenier a de Sistemas, Universidad de Zaragoza, Zaragoza, Spain  2  Politecnico di Milano, Dipartimento di Elettronica e Informazione, Milano, Italy",2011,QoSA
717,718,"One of the most critical components for proper water management and catalyst functioning in the proton exchange membrane fuel cell  PEMFC  is the Gas diffusion layer  GDL   This paper presents a preliminary study on advanced GDL performance characteristics in fuel cell environment  Off shelf carbon fiber based materials with promising microstructure typically used for applications other than PEM FC were employed for this study  The material electrochemical functionalities were evaluated in situ and compared with standard Sigracet SGL 35 BC The 5cm2 fuel cells were assembled with a 3 layer standard MEA and the GDLs and tested at 80 C with 100  humidified gases at ambient pressure  The results show that the advanced GDL enhanced catalyst ECSA, and decreased fuel cell ohmic losses  Finally, the current status of the advanced GDL functionalization properties are discussed and future materials optimization is proposed   The Electrochemical Society   10 refs",Advanced gas diffusion layers for PEM fuel cells,"['Carbon fibers', 'Catalysts', 'Diffusion in gases', 'Gas fuel purification', 'Polyelectrolytes', 'Ambient pressures', 'Critical component', 'Current status', 'Fiber-based materials', 'Functionalizations', 'Gas diffusion layers', 'In-situ', 'Ohmic loss', 'PEM fuel cell', 'Performance characteristics', 'Gas Fuels', 'Fuel Cells', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Organic Polymers', 'Physical Properties of Gases, Liquids and Solids']","['Stanic, V', '', '', ' Tatalovich, J', '', '']","EnerFuel, Inc , West Palm Beach, FL 33407, United States",2010,ECSA
718,719,"One of the most perplexing issues facing the United States Department of Defense  DoD  is defining and documenting business processes as a precursor to system and software development  The Reusable Quality Technical Architectures  RQ Tech  Methodology creates a virtual business environment that empowers business process owners  users  with tools and techniques for modeling requirements in a user friendly architectural framework  Once a few simple rules are conveyed, the users  model can grow as rapidly as they can search, name, click, and save  RQ Tech fills the ever widening gap between DoD  and Coalition Partner users  requirements generators  and system and software developers  capability providers  by invoking an  XML translator  disguised as the user s planning environment  RQ Tech updates a proven modeling technique for documenting processes, controls and mechanisms  while simplifying the model presentation    2009 IEEE   13 refs",RQ Tech method for user involved software development,"['Architecture', 'Computer software', 'Software design', 'Architectural frameworks', 'Business environments', 'Business Process', 'Coalition partners', 'Department of Defense', 'Modeling requirements', 'Modeling technique', 'Simple rules', 'Software developer', 'Software development', 'Technical architecture', 'Tools and techniques', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Hoyland, Christine A', '', '', ' MacG', 'Adams, Kevin']","NSWC, NAVSEA Dam Neck  2  Old Dominion University, United States",2009,ECSA
719,720,"One of the most perplexing issues facing the United States Department of Defense  DoD  is defining and documenting business processes as a precursor to system and software development  The Reusable Quality Technical Architectures  RQ Tech  Methodology creates a virtual business environment that empowers business process owners  users  with tools and techniques for modeling requirements in a user friendly architectural framework  Once a few simple rules are conveyed, the users  model can grow as rapidly as they can search, name, click, and save  RQ Tech fills the ever widening gap between DoD  and Coalition Partner users  requirements generators  and system and software developers  capability providers  by invoking an  XML translator  disguised as the user s planning environment  RQ Tech updates a proven modeling technique for documenting processes, controls and mechanisms  while simplifying the model presentation    2009 IEEE   13 refs",RQ Tech method for user involved software development,"['Architecture', 'Computer software', 'Software design', 'Architectural frameworks', 'Business environments', 'Business Process', 'Coalition partners', 'Department of Defense', 'Modeling requirements', 'Modeling technique', 'Simple rules', 'Software developer', 'Software development', 'Technical architecture', 'Tools and techniques', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Hoyland, Christine A', '', '', ' MacG', 'Adams, Kevin']","NSWC, NAVSEA Dam Neck  2  Old Dominion University, United States",2009,WICSA
720,721,"One of the most perplexing issues facing the United States Department of Defense  DoD  is defining and documenting business processes as a precursor to system and software development  The Reusable Quality Technical Architectures  RQ Tech  Methodology creates a virtual business environment that empowers business process owners  users  with tools and techniques for modeling requirements in a user friendly architectural framework  Once a few simple rules are conveyed, the users  model can grow as rapidly as they can search, name, click, and save  RQ Tech fills the ever widening gap between DoD  and Coalition Partner users  requirements generators  and system and software developers  capability providers  by invoking an  XML translator  disguised as the user s planning environment  RQ Tech updates a proven modeling technique for documenting processes, controls and mechanisms  while simplifying the model presentation    2009 IEEE   13 refs",RQ Tech method for user involved software development,"['Architecture', 'Computer software', 'Software design', 'Architectural frameworks', 'Business environments', 'Business Process', 'Coalition partners', 'Department of Defense', 'Modeling requirements', 'Modeling technique', 'Simple rules', 'Software developer', 'Software development', 'Technical architecture', 'Tools and techniques', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Hoyland, Christine A', '', '', ' MacG', 'Adams, Kevin']","NSWC, NAVSEA Dam Neck  2  Old Dominion University, United States",2011,WICSA
721,722,"Open pore nickel  Ni  foams are characterized using surface science and electrochemical techniques  A scanning electron microscopy analysis reveals interconnected Ni struts that generate small and large pores of ca  50 and 500  m in size, respectively  An X ray photoelectron spectroscopy  XPS  analysis of the surface chemical composition of the Ni foams shows that there are oxidized and metallic sections within their surfaces despite being prepared by sintering in an oxidizing atmosphere at a high temperature and being stored in moist air  The ratio of the areas of oxidized and metallic sections is evaluated using XPS data  Chemical etching of the Ni foams results in removal of the native surface oxide hydroxide without altering the three dimensional structure  it also increases the roughness  R  of the surfaces of Ni struts giving rise to an increase in the electrochemically active surface area  Aecsa   Thermal treatment of Ni foams in an H2 g  atmosphere at 500  C reduces the native surface oxide hydroxide but does not increase R or A ecsa  Electrochemical behavior of the Ni foams is examined in 0 5 M aqueous KOH solution using cyclic voltammetry  CV  and electrochemical impedance spectroscopy  EIS   As received, chemically etched, thermally reduced and electro oxidized Ni foams generate distinct CV profiles  their features are assigned to oxidized and metallic surface states  The observations made on the basis of XPS measurements are corroborated by the results of CV analyses  The application of CV and XPS or EIS allows in situ determination of A ecsa and the specific surface area  As  of the chemically etched and thermally reduced Ni foams  The values of As determined on the basis of joint CV and XPS measurements are 227   74 and 149   48 cm2 g 1 for the etched and reduced Ni foams, respectively  The values of As determined on the basis of CV, XPS and EIS measurements are 241   80 and 160   23 cm g 1 for the etched and reduced Ni foams, respectively   2012 American Chemical Society   65 refs",Surface science and electrochemical analysis of nickel foams,"['Cyclic voltammetry', 'Electrochemical impedance spectroscopy', 'Etching', 'Nickel', 'Nickel oxide', 'Photoelectrons', 'Scanning electron microscopy', 'Sintering', 'Struts', 'Chemical etching', 'Electrochemically active surface areas', 'Nickel electrode', 'Nickel foam', 'Nickel hydroxides', 'Surface area', 'Chemistry', 'Light Optics', 'Electromagnetic Waves', 'Electrochemistry', 'Nickel', 'Metallurgy and Metallography', 'Structural Members and Shapes', 'Powder Metallurgy Operations']","['Grden, Micha', '', '', 'Alsabet, Mohammad', '', '', 'Jerkiewicz, Gregory']","Department of Chemistry, Queen s University, Kingston, ON K7L 3N6, Canada",2012,ECSA
722,723,"Ordered mesoporous carbons  OMCs  are investigated as support materials of Pt catalyst in proton exchange membrane fuel cells  Four types of Pt OMC catalysts are prepared and their electrochemical performances and durability are evaluated by cyclic voltammetry and linear sweep voltammetry using a rotating disk electrode system  Pt nanoparticles of 2 3 nm seem to be uniformly dispersed on the supports regardless of the kind of OMC  The different pore structure between CMK 3 and CMK 5 affects the surface areas of carbon supports and the resulting Pt nanoparticles with indicating that larger surface area accompanies higher oxygen reduction reaction  ORR  activity  Although the graphitization of carbon support from CMK 3 to CMK 3G reduces the surface area of carbon support, the surface area and the ORR activity of Pt nanoparticles on CMK 3G are increased  In general, the reductions in electrochemical surface area  ECSA  and ORR activity become more noticeable in proportion to the initial ECSA and ORR of Pt OMC after accelerated durability test    The Electrochemical Society   28 refs",Durability of Pt catalysts supported on ordered mesoporous carbon for proton exchange membrane fuel cells,"['Carbon', 'Catalyst supports', 'Cyclic voltammetry', 'Electrolytic reduction', 'Mesoporous materials', 'Metal nanoparticles', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Rotating disks', 'Accelerated durability tests', 'Electrochemical performance', 'Electrochemical surface area', 'Linear sweep voltammetry', 'Ordered mesoporous carbon', 'Oxygen reduction reaction', 'Rotating disk electrodes', 'Support materials', 'Strength of Building Materials  Mechanical Properties', 'Precious Metals', 'Machine Components', 'Fuel Cells', 'Nanotechnology', 'Chemical Reactions', 'Chemical Products Generally', 'Physical Properties of Gases, Liquids and Solids', 'Electric Variables Measurements']","['Kim, Nam In', '', '', 'Seong, Jinhae', '', '', 'Yang, Min Ji', '', '', 'Cho, Sung Hwa', '', '', 'Park, Jun Young', '', '', 'Choi, Han Shin', '', '', 'Joo, Sang Hoon', '', '', 'Kwon, Kyungjung']","Green Energy Research Institute, Department of Nanotechnology and Advanced Materials Engineering, Sejong University, Seoul 143 747, Korea, Republic of  2  Korea Institute of Rare Metals, Korea Institute of Industrial Technology, Incheon 404 254, Korea, Republic of  3  School of Nano Bioscience and Chemical Engineering, Ulsan National Institute of Science and Technology  UNIST , Ulsan 689 798, Korea, Republic of  4  Department of Energy and Mineral Resources Engineering, Sejong University, Seoul 143 747, Korea, Republic of",2013,ECSA
723,724,"Organizations use to have implemented systems that represent a large effort and budget invested in the past  These systems are evolved and adapted over time in order to accommodate technological and business changes  Moreover, big companies often develop similar systems within the same domain  This has been motivating them to migrate to reuse approaches, such as domain engineering and product line  However, existing systems in general don t have up to date architectural documentation that can help in their maintenance and reuse  Considering this scenario, this paper presents an approach to architecture recovery and evaluation that aims at extracting knowledge from existing systems to help in their understanding and reuse  This extracted knowledge is represented through a recovered application architectural model composed by architectural elements that represent domain concepts traced to implemented functional requirements, which may help in generating reusable artifacts  In order to evaluate the approach feasibility, an experimental study was performed   26 refs",Architecture recovery and evaluation aiming at program understanding and reuse,"['knowledge acquisition', 'software architecture', 'architecture recovery', 'program understanding', 'business change', 'domain engineering', 'up-to-date architectural documentation', 'knowledge extraction', 'Software engineering techniques', 'Knowledge engineering techniques']","['Vasconcelos, A', '', '', ' Werner, C', '', '']","Syst  Eng    Comput  Sci  Program, Fed  Univ  of Rio de Janeiro, Rio de Janeiro, Brazil",2008,QoSA
724,725,"Organizing a software architecture into layers has been one of the earliest architectural styles ever used  Even today layered structure is a very common architectural style used in various industrial systems  However, we have observed that the usage of layered architectural style varies greatly in different contexts  This paper aims to compare the notion of software architecture layers in research literature as well as in industrial practice  Firstly, we performed a systematic literature review of research articles on layered software architectures  we also reviewed selected books of software architecture  Secondly, to understand the practice, we investigated a number different recent architecture documents to cover the current usage of layered architectures  Our results indicate that there is very little actual research done on layered architectures  The current usage of layered structures seems to be more complex than reported before  This gap between the research and practice needs to be bridged by researchers    2009 IEEE   19 refs",Layered architecture revisited   Comparison of research and practice,"['Architecture', 'Computer software', 'Research', 'Architectural style', 'Industrial practices', 'Industrial systems', 'Layered architecture', 'Layered Structures', 'Systematic literature review', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Engineering Research']","['Savolainen, Juha', '', '', 'Myll rniemi, Varvana']","Nokia Research Center, Helsinki University of Technology",2009,ECSA
725,726,"Organizing a software architecture into layers has been one of the earliest architectural styles ever used  Even today layered structure is a very common architectural style used in various industrial systems  However, we have observed that the usage of layered architectural style varies greatly in different contexts  This paper aims to compare the notion of software architecture layers in research literature as well as in industrial practice  Firstly, we performed a systematic literature review of research articles on layered software architectures  we also reviewed selected books of software architecture  Secondly, to understand the practice, we investigated a number different recent architecture documents to cover the current usage of layered architectures  Our results indicate that there is very little actual research done on layered architectures  The current usage of layered structures seems to be more complex than reported before  This gap between the research and practice needs to be bridged by researchers    2009 IEEE   19 refs",Layered architecture revisited   Comparison of research and practice,"['Architecture', 'Computer software', 'Research', 'Architectural style', 'Industrial practices', 'Industrial systems', 'Layered architecture', 'Layered Structures', 'Systematic literature review', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Engineering Research']","['Savolainen, Juha', '', '', 'Myll rniemi, Varvana']","Nokia Research Center, Helsinki University of Technology",2009,WICSA
726,727,"Organizing a software architecture into layers has been one of the earliest architectural styles ever used  Even today layered structure is a very common architectural style used in various industrial systems  However, we have observed that the usage of layered architectural style varies greatly in different contexts  This paper aims to compare the notion of software architecture layers in research literature as well as in industrial practice  Firstly, we performed a systematic literature review of research articles on layered software architectures  we also reviewed selected books of software architecture  Secondly, to understand the practice, we investigated a number different recent architecture documents to cover the current usage of layered architectures  Our results indicate that there is very little actual research done on layered architectures  The current usage of layered structures seems to be more complex than reported before  This gap between the research and practice needs to be bridged by researchers    2009 IEEE   19 refs",Layered architecture revisited   Comparison of research and practice,"['Architecture', 'Computer software', 'Research', 'Architectural style', 'Industrial practices', 'Industrial systems', 'Layered architecture', 'Layered Structures', 'Systematic literature review', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Engineering Research']","['Savolainen, Juha', '', '', 'Myll rniemi, Varvana']","Nokia Research Center, Helsinki University of Technology",2011,WICSA
727,728,"Originally, meta models were used to specify the structure  abstract syntax  of modelling languages  This is reflected both in meta languages like MOF and Ecore, and the four layer meta model architecture  Presently, meta modelling is used for specification of complete languages  In this situation, it turns out that the traditional meta languages are not always expressive enough to capture all language aspects  This usually implies the use of more than one metalanguage in the meta model architecture to cover the different language aspects  There are many approaches to address this challenge  In this paper, we analyze these approaches, and based on this analysis, we re think the meta model architecture focusing on complete language specifications  In our meta model architecture, each aspect of a language conforms to an aspect specific meta language at the level above, and models can reside at different levels depending on their context and use  This meta model architecture is easier to understand, more flexible and more extensible  therefore it may be useful in the design of meta model based language specification platforms, as well as for promoting the understanding of the principles of meta modelling    2010 ACM   21 refs",Specification of modelling languages in a flexible meta model architecture,"['Specifications', 'Technical presentations', 'Abstract syntax', 'Language specification', 'MDA', 'Meta language', 'Meta model', 'Meta-languages', 'Meta-modelling', 'Modelling language', 'Abstract syntax', 'Language specification', 'MDA', 'Meta language', 'Meta model', 'Meta-languages', 'Meta-modelling', 'Modelling language', 'Computer Programming', 'Codes and Standards', 'Information Dissemination']","['Mu, Liping', '', '', 'Gjster, Terje', '', '', 'Prinz, Andreas', '', '', 'Tveit, Merete Skjelten']","Faculty of Engineering and Science, University of Agder, Serviceboks 509, NO 4898 Grimstad, Norway",2010,ECSA
728,729,"Outages to the cloud infrastructures have been widely publicized and it would be easy to conclude that application developers only need to be concerned with large scale cloud provider infrastructure outages  Unfortunately, this is not the case  In cloud applications heavily rely on cloud infrastructure APIs  directly or indirectly through scripts and consoles  for many sporadic activities such as deployment change, scaling out in, backup, recovery and migration  Failures and or issues around API calls are a large source of faults that could lead to application failures, especially during sporadic activities  Infrastructure outages can also be greatly exacerbated by API related issues  In this paper we present an empirical study of issues in Amazon EC2 APIs  Some of the major findings around API issues include  1  A majority  60   of the cases of API failures are related to  stuck  API calls or unresponsive API calls  2  A significant portion  12   of the cases of API failures are about slow responsive API calls  3  19  of the cases of API failures are related to the output issues of API calls, including failed calls with unclear error messages, as well as missing output, wrong output, and unexpected output of API calls  4  There are 9  cases of API failures reporting that their calls  performing some actions and expecting a state change  were pending for a certain time and then returned to the original state without informing the caller properly or the calls were reported to be successful first but failed later  We also classify the causes of API issues and discuss the impact of API issues on application architectures  Copyright   ACM   28 refs",Cloud API issues  An empirical study and impact,"['Architecture', 'Cloud computing', 'Reliability', 'API', 'Application architecture', 'Application developers', 'Application failure', 'Cloud infrastructures', 'Cloud providers', 'Empirical studies', 'Fault-tolerant designs', 'Buildings and Towers', 'Strength of Building Materials  Mechanical Properties', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications']","['Lu, Qinghua', ' ,', '', ' Zhu, Liming', ' ,', '', ' Bass, Len', ' ,', '', ' Xu, Xiwei', '', '', 'Li, Zhanwen', '', '', 'Wada, Hiroshi', ' ,', '']","Software Systems Research Group, NICTA, Sydney, Australia  2  School of Computer Science and Engineering, University of New South Wales, Sydney, Australia",2013,QoSA
729,730,"Over the last decade, Architecture Description Languages  ADLs  are attracting considerable attention by automotive companies because they consider them as one of the key solutions to improve the quality of automotive electronic and software systems  Automotive ADLs like EAST ADL, AADL, TADL, and AML are being defined to address not only the architectural description or the representation issues but also as a method to enable requirements traceability and early analysis of a system  Besides the automotive specific ADLs, SysML and MARTE are emerging as viable modeling approaches for automotive systems engineering domain as well  However, all these modeling approaches lack the capability of ensuring the architectural quality  This paper identifies an architectural inconsistency between the different architectural levels as one of the key issues regarding architectural quality of automotive systems and proposes a rule based method to enforce consistency between these levels  Since there is no standard ADL for automotive systems, we first evaluated a set of modeling approaches based on the automotive specific modeling requirements and selected SysML mainly due to its flexibility, and mature and accessible tool support  We modeled a Cruise Control system to demonstrate modeling of an automotive system in SysML and to evaluate the method for the architectural consistency checking using SysML  Copyright   2012 ACM   35 refs",Automotive ADLs  A study on enforcing consistency through multiple architectural levels,"['Computer control', 'Software architecture', 'Architectural consistency', 'Architectural descriptions', 'Architectural levels', 'Architectural quality', 'Architecture description languages', 'Automotive ADL', 'Automotive companies', 'Automotive Systems', 'Automotive systems engineering', 'Consistency checking', 'EAST-ADL', 'Key solution', 'Modeling approach', 'Modeling requirements', 'Requirements traceability', 'Rule-based method', 'Software systems', 'Tool support', 'Buildings and Towers', 'Computer Programming', 'Robotics']","['Dajsuren, Yanja', '', '', 'Van Den Brand, Mark', '', '', 'Serebrenik, Alexander', '', '', 'Huisman, Rudolf']","Eindhoven University of Technology, 5612 AZ Eindhoven, Netherlands  2  DAF Trucks NV, P O  Box 90065, 5600 PT Eindhoven, Netherlands",2012,QoSA
730,731,"Over the past decade a number of architecture description languages  ADLs  have been proposed to facilitate modeling and analysis of software architecture  While each claims to have various benefits, to date there have been few studies to assess the relative merits of these approaches  In this paper we describe our experience using two ADLs to model a system initially described in UML, and compare their effectiveness in identifying system design flaws  We also describe the techniques we used for extracting architectural models from a UML system description   22 refs",Understanding tradeoffs among different architectural modeling approaches,"['Automation', 'Database systems', 'Distributed computer systems', 'Interfaces (computer)', 'Network protocols', 'Program documentation', 'Software engineering', 'Architecture description languages (ADL)', 'Mission data systems (MDS)', 'Range information', 'State variables', 'Computer Systems and Equipment', 'Computer Peripheral Equipment', 'Digital Computers and Systems', 'Database Systems', 'Automatic Control Principles and Applications']","['Roshandel, Roshanak', '', '', 'Schmerl, Bradley', '', '', 'Medvidovic, Nenad', '', '', 'Garlan, David', '', '', 'Zhang, Dehua']","Computer Science Department, University of Southern California, Los Angeles, CA 90089, United States  2  School of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213, United States",2004,WICSA
731,732,"Over the past decade, a number of architecture description languages  ADLs  have been proposed to facilitate modeling and analysis of software architecture  While each claims to have various benefits, to date, there have been few studies to assess the relative merits of these approaches  In this paper, we describe our experience using two ADLs to model a system initially described in UML, and compare their effectiveness in identifying system design flaws  We also describe the techniques we used for extracting architectural models from a UML system description   22 refs",Understanding tradeoffs among different architectural modeling approaches,"['software architecture', 'specification languages', 'architecture description languages', 'software architecture', 'system design flaws', 'architectural modeling', 'UML system description', 'Software engineering techniques', 'High level languages']","['Roshandel, R', '', '', ' Schmerl, B', ' Medvidovic, N', ' Garlan, D', ' Zhang, D']","Dept  of Comput  Sci , Univ  of California, Los Angeles, Los Angeles, CA, United States",2004,WICSA
732,733,"Over the past two decades, strong technical convergence has been observed between computing and engineering  Computing in this context includes Computer Engineering, Computer Science, Information Systems, Information Technology and Software Engineering  Within the traditional engineering disciplines  including Computer Engineering , academic programme accreditation is well established, but most academic computing programmes in South Africa are still unaccredited  Those that are accredited were reviewed by accreditation agencies from other countries  US, UK   The convergence between computing and engineering opened the debate and accentuated the need for accreditation within the wider computing profession in South Africa    2012 IEEE   10 refs",Accreditation of academic programmes in computing in South Africa,"['Information systems', 'Professional aspects', 'Software engineering', 'ABET', 'computing', 'ECSA', 'Engineering accreditation', 'Seoul Accord', 'Computer Programming', 'Engineering Professional Aspects', 'Education', 'Information Dissemination']","['Gerber, Aurona', ' ,', ',', '', ' Sinha, Saurabh', ' ,', ',', '', ' Van Der Merwe, Alta', ' ,', '', ' Kam, Moshe']","Department of Informatics, University of Pretoria, Pretoria, South Africa  2  Electronics and Microelectronics, Dept  of Electrical, Electronic and Computer Engineering, University of Pretoria, Pretoria, South Africa  3  ECE Department, Drexel University, Philadelphia, PA 19104, United States  4  Center for Artificial Intelligence Research  CAIR , CSIR Meraka  5  SMCS, IEEE South Africa Section  6  IEEE Committee on Global Accreditation Activities  CGAA   7  Educational Activities Board  EAB",2012,ECSA
733,734,"Oxygen reduction reaction  ORR  catalyst supported by hybrid composite materials is prepared by well mixing carbon black  CB  with Pt loaded reduced graphene oxide  RGO   With the insertion of CB particles between RGO sheets, stacking of RGO can be effectively prevented, promoting diffusion of oxygen molecules through the RGO sheets and enhancing the ORR electrocatalytic activity  The accelerated durability test  ADT  demonstrates that the hybrid supporting material can dramatically enhance the durability of the catalyst and retain the electrochemical surface area  ECSA  of Pt  the final ECSA of the Pt nanocrystal on the hybrid support after 20 000 ADT cycles is retained at  95 , much higher than the commercially available catalyst  We suggest that the unique 2D profile of the RGO functions as a barrier, preventing leaching of Pt into the electrolyte, and the CB in the vicinity acts as active sites to recapture renucleate the dissolved Pt species  We furthermore demonstrate that the working mechanism can be applied to the commercial Pt C product to greatly enhance its durability    2012 American Chemical Society   40 refs",Stabilization of high performance oxygen reduction reaction Pt electrocatalyst supported on reduced graphene oxide carbon black composite,"['Carbon black', 'Electrocatalysts', 'Electrolytic reduction', 'Graphene', 'Leaching', 'Platinum', 'Active site', 'Durability test', 'Electrocatalytic activity', 'Electrochemical surface area', 'Hybrid composite materials', 'Hybrid support', 'Oxygen molecule', 'Oxygen reduction reaction', 'Pt electrocatalysts', 'Reduced graphene oxides', 'Supporting material', 'Working mechanisms', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Precious Metals', 'Ore Treatment', 'Strength of Building Materials  Mechanical Properties']","['Li, Yujing', ' ,', '', ' Li, Yongjia', '', '', 'Zhu, Enbo', '', '', 'McLouth, Tait', '', '', 'Chiu, Chin Yi', '', '', 'Huang, Xiaoqing', '', '', 'Huang, Yu', ' ,', '']","Department of Materials Science and Engineering, University of California, Los Angeles, CA 90095, United States  2  California NanoSystems Institute, University of California, Los Angeles, CA 90095, United States  3  China University of Petroleum, Beijing, China",2012,ECSA
734,735,"Performance analysis at the architectural level has been a widely studied topic in the last few years  Automated solutions to this problem, such as the ones based on model transformations, would allow early detection of performance critical aspects in the software lifecycle  In this paper, building on top of our existing methodology  11  that aims at integrating software architectural models and platform models in the same notation  UML RT , we present a new implementation based on the UML 2 metamodel that we call MOSES  MOdeling Software and platform architEcture in UML 2 for Simulation based performance analysis   The goal of this paper is to provide a proof of concept that the UML 2 metamodel is rich enough to implement our approach that aims at modeling software and platform architecture within the same environment for sake of performance analysis  Finally we compare the results that we obtain with MOSES to the ones that we have obtained with the UML RT implementation    2008 Springer Berlin Heidelberg   27 refs",MOSES  MOdeling software and platform architEcture in UML 2 for simulation based performance analysis,"['Channel capacity', 'Computer software selection and evaluation', 'Simulators', 'Architectural levels', 'Automated solutions', 'Early detection', 'Meta model', 'Model transformation', 'Modeling softwares', 'Performance analysis', 'Platform architecture', 'Platform models', 'Proof of concept', 'Resource Modeling', 'Simulation', 'Simulation-based', 'Software architectural', 'Software life cycles', 'Software Performance', 'UML', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Information Theory and Signal Processing', 'Naval Architecture', 'Automobiles', 'Solar Energy and Phenomena', 'Satellites', 'Rockets and Missiles', 'Nuclear Reactors']","['Cortellessa, Vittorio', '', '', 'Pierini, Pierluigi', '', '', 'Spalazzese, Romina', '', '', 'Vianale, Alessio']","Dipartimento di Informatica, Universit  dell Aquila, Via Vetoio, 67010 Coppito  AQ , Italy  2  TechnoLabs S p A , S S  17 Localit  Boschetto, 67100 L Aquila  AQ , Italy  3  Accenture S p A , Largo Donegani 2, 20121 Milano, Italy",2008,QoSA
735,736,"Performance analysis at the architectural level has been a widely studied topic in the last few years  Automated solutions to this problem, such as the ones based on model transformations, would allow early detection of performance critical aspects in the software lifecycle  In this paper, building on top of our existing methodology  11  that aims at integrating software architectural models and platform models in the same notation  UML RT , we present a new implementation based on the UML 2 metamodel that we call MOSES  modeling software and platform architecture in UML 2 for simulation based performance analysis   The goal of this paper is to provide a proof of concept that the UML 2 metamodel is rich enough to implement our approach that aims at modeling software and platform architecture within the same environment for sake of performance analysis  Finally we compare the results that we obtain with MOSES to the ones that we have obtained with the UML RT implementation   27 refs",MOSES  modeling software and platform architecture in UML 2 for simulation based performance analysis,"['formal specification', 'software architecture', 'software performance evaluation', 'Unified Modeling Language', 'MOSES', 'modeling software', 'platform architecture', 'simulation-based performance analysis', 'model transformation', 'performance critical aspects', 'software lifecycle', 'software architectural model', 'UML-RT', 'UML 2 metamodel', 'Software performance evaluation', 'Formal methods', 'Software engineering techniques']","['Cortellessa, V', '', '', ' Pierini, P', ' Spalazzese, R', ' Vianale, A']","Dipt  di Inf , Univ  del Aquila, Coppito, Italy",2008,QoSA
736,737,"Performance analysis is often conducted before achieving full knowledge of a software system, in other words under a certain degree of uncertainty  Uncertainty is particularly critical in the performance domain when it relates to values of parameters such as workload, operational profile, resource demand of services, service time of hardware devices, etc  The goal of this paper is to explicitly consider uncertainty in the performance modelling and analysis process  In particular, we use probabilistic formulation of parameter uncertainties and present a Monte Carlo simulation based approach to systematically assess the robustness of an architectural model despite its uncertainty  In case of unsatisfactory results, we introduce refactoring actions aimed at generating new software architectural models that better tolerate the uncertainty of parameters  The proposed approach is illustrated on a case study from the e Health domain  Copyright 2013 ACM   23 refs",Model based performance analysis of software architectures under uncertainty,"['Monte Carlo methods', 'Software architecture', 'Degree of uncertainty', 'Parameter uncertainty', 'Performance', 'Performance analysis', 'Performance modelling', 'Probabilistic formulation', 'Software architectural', 'Software architecture evaluation', 'Computer Programming', 'Probability Theory', 'Mathematical Statistics']","['Trubiani, Catia', '', '', 'Meedeniya, Indika', '', '', 'Cortellessa, Vittorio', '', '', 'Aleti, Aldeida', '', '', 'Grunske, Lars']","University of L Aquila, Italy  2  Portland House Group, Australia  3  Monash University, Australia  4  Universit t Stuttgart, Germany",2013,QoSA
737,738,"Performance is an important aspect of software quality  To prevent performance degradation during software development, performance can be monitored and software modifications that damage performance can be reverted or optimized  Regression benchmarking provides means for an automated monitoring of performance, yielding a list of software modifications potentially associated with performance changes  We focus on locating individual modifications as causes of individual performance changes and present three methods that help narrow down the list of modifications potentially associated with a performance change  We illustrate the entire process on a real world project   20 refs",Quality assurance in performance  evaluating mono benchmark results,"['program testing', 'quality assurance', 'software performance evaluation', 'software quality', 'system monitoring', 'quality assurance', 'software quality', 'software development', 'software performance', 'software modifications', 'regression benchmarking', 'Software performance evaluation', 'Software engineering techniques', 'Diagnostic, testing, debugging and evaluating systems']","['Kalibera, T', '', '', ' Bulej, L', '', '', ' Tuma, P', '', '']","Dept  of Software Eng , Charles Univ , Prague, Prague, Czech Republic",2005,QoSA
738,739,"Performance predictions aim at increasing the quality of software architectures during design time  To enable such predictions, specifications of the performance properties of individual components within the architecture are required  However, the response times of a component might depend on its configuration in a specific setting and the data send to or retrieved from it  Many existing prediction approaches for component based systems neglect these influences  This paper introduces extensions to a performance specification language for components, the Palladio Component Model, to model these influences  The model enables to predict response times of different architectural alternatives  A case study on a component based architecture for a web portal validates the approach and shows that it is capable of supporting a design decision in this scenario    2008 Springer Verlag Berlin Heidelberg   29 refs",Predicting the performance of component based software architectures with different usage profiles,"['Architecture', 'Computer software selection and evaluation', 'Electronic commerce', 'Forecasting', 'Software architecture', 'Software design', 'Specifications', 'Case studies', 'Component modelling', 'Component-based architectures', 'Component-based software', 'Component-based systems', 'Design decisions', 'Design time', 'Individual components', 'International conferences', 'Performance predictions', 'Performance properties', 'Performance specifications', 'Quality of softwares', 'Response times', 'Web portals', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Codes and Standards', 'Management']","['Koziolek, Heiko', ' ,', '', ' Becker, Steffen', ' ,', '', ' Happe, Jens', ' ,', '']","Graduate School Trustsoft, University of Oldenburg, Germany  2  Department of Software Design and Quality, University of Karlsruhe, Germany",2007,QoSA
739,740,"Performance predictions aim at increasing the quality of software architectures during design time  To enable such predictions, specifications of the performance properties of individual components within the architecture are required  However, the response times of a component might depend on its configuration in a specific setting and the data send to or retrieved from it  Many existing prediction approaches for component based systems neglect these influences  This paper introduces extensions to a performance specification language for components, the Palladio component model, to model these influences  The model enables to predict response times of different architectural alternatives  A case study on a component based architecture for a Web portal validates the approach and shows that it is capable of supporting a design decision in this scenario   29 refs",Predicting the performance of component based software architectures with different usage profiles,"['object-oriented programming', 'software architecture', 'software performance evaluation', 'software quality', 'specification languages', 'performance prediction', 'component-based software architectures', 'usage profiles', 'software architecture quality', 'performance property specifications', 'specification language', 'Palladio component model', 'Web portal', 'Software engineering techniques', 'Object oriented programming', 'Software performance evaluation', 'Formal methods']","['Koziolek, H', '', '', ' Becker, S', '', '', ' Happe, J', '', '']","Grad  Sch  Trustsoft, Univ  of Oldenburg, Oldenburg, Germany",2008,QoSA
740,741,"Performance predictions based on design documents aim at improving the quality of software architectures  In component based architectures, it is difficult to specify the performance of individual components, because it depends on the deployment context of a component, which may be unknown to its developers  The way components are used influences the perceived performance, but most performance prediction approaches neglect this influence  In this paper, we present a specification notation based on annotated UML diagrams to explicitly model the influence of parameters on the performance of a software component  The UML specifications are transformed into a stochastical model that allows the prediction of response times as distribution functions  Furthermore, we report on a case study performed on an online store  The results indicate that more accurate predictions could be obtained with the newly introduced specification and that the method was able to support a design decision on the architectural level in our scenario    2006 Springer Verlag   17 refs",Parameter dependent performance specifications of software components,"['Computer software selection and evaluation', 'Distribution functions', 'Electronic commerce', 'Forecasting', 'Specifications', 'Accurate prediction', 'Architectural levels', 'As distribution', 'Component-based architecture', 'Design decisions', 'Design documents', 'Individual components', 'Online store', 'Performance prediction', 'Performance specifications', 'Quality of softwares', 'Response time', 'Software component', 'UML diagrams', 'UML specifications', 'Probability Theory', 'Mathematics', 'Management', 'Marketing', 'Mathematical Statistics', 'Industrial Economics', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Codes and Standards']","['Koziolek, Heiko', ' Happe, Jens', ' Becker, Steffen']",None,2006,QoSA
741,742,"Performance predictions based on design documents aim at improving the quality of software architectures  In component based architectures, it is difficult to specify the performance of individual components, because it depends on the deployment context of a component, which may be unknown to its developers  The way components are used influences the perceived performance, but most performance prediction approaches neglect this influence  In this paper, we present a specification notation based on annotated UML diagrams to explicitly model the influence of parameters on the performance of a software component  The UML specifications are transformed into a stochastical model that allows the prediction of response times as distribution functions  Furthermore, we report on a case study performed on an online store  The results indicate that more accurate predictions could be obtained with the newly introduced specification and that the method was able to support a design decision on the architectural level in our scenario   17 refs",Parameter dependent performance specifications of software components,"['formal specification', 'object-oriented programming', 'software architecture', 'software performance evaluation', 'software quality', 'stochastic processes', 'Unified Modeling Language', 'parameter dependent performance specification', 'software components', 'performance prediction', 'software architecture', 'software quality', 'component-based architecture', 'UML diagrams', 'UML specification', 'stochastical model', 'Formal methods', 'Object oriented programming', 'Software performance evaluation', 'Software engineering techniques', 'Other topics in statistics']","['Koziolek, H', '', '', ' Happe, J', '', '', ' Becker, S', '', '']","Grad  Sch  Trustsoft, Oldenburg Univ , Oldenburg, Germany",2006,QoSA
742,743,"Performance predictions on the software architecture level support the design and evaluation of component based systems  Composable and parameterized models are used in current prediction approaches for reasoning  The actual model for an influencing factor or component of the system is the result of a trade off between the required accuracy, prediction speed, and validation effort  Different models can have different accuracies and the overall effect on the prediction depends on their composition and used parameter values  Existing prediction approaches neglect to take into account this potentially difference in the accuracies of models  In this paper, we present an approach in which accuracy statements attached to composable performance models allow analyzing their influence on predictions without adding restrictions on the compositionality of each model  The resulting support for risk mitigation in decision making, prediction quality evaluation, as well as inaccuracy effect propagation from parts of the analyzed system on the overall prediction results are evaluated on a case study  Copyright   2012 ACM   21 refs",Improving performance predictions by accounting for the accuracy of composed performance models,"['Forecasting', 'Software architecture', 'Accuracy', 'Component based systems', 'Compositionality', 'Improving performance', 'Influencing factor', 'Model composition', 'Parameter values', 'Parameterized model', 'Performance Model', 'Performance prediction', 'Prediction quality', 'Risk mitigation', 'Computer Programming', 'Quality Assurance and Control', 'Mathematics']","['Groenda, Henning']","FZI Forschungszentrum Informatik, Haid und Neu Str  10 14, 76131 Karlsruhe, Germany",2012,QoSA
743,744,"Performance problems such as high response times in software applications have a significant effect on the customer s satisfaction  In enterprise applications, performance problems are frequently manifested in inefficient or unnecessary communication patterns between software components originating from poor architectural design or implementation  Due to high manual effort, thorough performance analysis is often neglected, in practice  In order to overcome this problem, automated engineering approaches are required for the detection of performance problems  In this paper, we introduce several heuristics for measurement based detection of well known performance anti patterns in inter component communications  The detection heuristics comprise load and instrumentation descriptions for performance tests as well as corresponding detection rules  We integrate these heuristics with Dynamic Spotter, a framework for automatic detection of performance problems  We evaluate our heuristics on four evaluation scenarios based on an e commerce benchmark  TPC W  where the heuristics detect the expected communication performance anti patterns and pinpoint their root causes  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   25 refs",Automatic detection of performance anti patterns in inter component communications,"['Application programs', 'Customer satisfaction', 'Automatic Detection', 'Communication pattern', 'Communication performance', 'Enterprise applications', 'Performance analysis', 'Performance problems', 'Software applications', 'Software component', 'Computer Software, Data Handling and Applications', 'Industrial Engineering and Management']","['Wert, Alexander', '', '', 'Oehler, Marius', '', '', 'Heger, Christoph', '', '', 'Farahbod, Roozbeh']","Karlsruhe Institute of Technology, Am Fasanengarten 5, Karlsruhe, Germany  2  SAP AG, Vincenz Priessnitz Strasse 1, Karlsruhe, Germany",2014,QoSA
744,745,"Platinum dendrites were synthesized with the controlled sizes of 13 53 nm, and their electrocatalytic properties were evaluated for oxygen reduction reaction  ORR   Dendrites showed a superior activity for ORR and better selectivity for the production of H2O, compared to commercial E tek catalysts  Durability was also tested by estimating the change in electrochemically active surface area  ECSA  after extended periods of oxygen reduction  Dendrites with larger sizes showed improved durability    2010 Elsevier B V  All rights reserved   18 refs",Platinum dendrites with controlled sizes for oxygen reduction reaction,"['Durability', 'Electrolytic reduction', 'Oxygen', 'Platinum', 'Activity', 'Controlled size', 'Dendrites', 'Electrocatalytic properties', 'Electrochemically active surface areas', 'Oxygen Reduction', 'Oxygen reduction reaction', 'Platinum dendrites', 'Strength of Building Materials  Mechanical Properties', 'Precious Metals', 'Chemical Reactions', 'Chemical Products Generally', 'Crystal Growth']","['Kim, Cheonghee', '', '', 'Oh, Jong Gil', '', '', 'Kim, Yong Tae', '', '', 'Kim, Hansung', '', '', 'Lee, Hyunjoo']","Department of Chemical and Biomolecular Engineering, Specialized Graduate School of Hydrogen and Fuel Cell, Yonsei University, Seoul 120 749, Korea, Republic of  2  School of Mechanical Engineering, Pusan National University, Busan 609 735, Korea, Republic of",2010,ECSA
745,746,"Platinum deposited titanium nitride  Pt TiN  nanoparticle aggregates with high porosities were successfully prepared via a self assembly assisted spray pyrolysis method  The addition of formic acid  HCOOH  had a significant influence on the process, promoting the simultaneous formation of metallic Pt and reduction on the surface of the TiN support material  Complete reduction of the Pt TiN nanoparticle aggregates improved the catalytic activity  The electrochemical surface area  ECSA  of Pt TiN with HCOOH  Pt TiNw HCOOH  was 87 15 m2 g Pt, which was higher than that of Pt TiN without HCOOH  Pt TiNw o HCOOH   The catalytic durability of Pt TiNw HCOOH was twice that of Pt TiNw o HCOOH  An effective strategy for obtaining carbon free catalysts with high activities and durabilities was identified    2013 American Institute of Chemical Engineers   21 refs",Influence of formic acid on electrochemical properties of high porosity Pt TiN nanoparticle aggregates,"['Aerosols', 'Aggregates', 'Catalysis', 'Catalyst activity', 'Drying', 'Durability', 'Electrochemistry', 'Nanoparticles', 'Nanotechnology', 'Platinum', 'Porosity', 'Reduction', 'Spray pyrolysis', 'Titanium nitride', 'Carbon-free', 'Electrochemical surface area', 'High activity', 'High porosity', 'Nanoparticle aggregate', 'Simultaneous formation', 'Spray pyrolysis method', 'Support materials', 'Solid State Physics', 'Physical Properties of Gases, Liquids and Solids', 'Chemical Products Generally', 'Chemical Operations', 'Chemical Reactions', 'Electrochemistry', 'Nanotechnology', 'Electric and Magnetic Materials', 'Precious Metals', 'Strength of Building Materials  Mechanical Properties', 'Highway Engineering']","['Ogi, Takashi', '', '', 'Balgis, Ratna', '', '', 'Okuyama, Kikuo', '', '', 'Tajima, Naoko', '', '', 'Setyawan, Heru']","Dept  of Chemical Engineering, Graduate School of Engineering, Hiroshima University, 1 4 1 Kagamiyama, Higashi Hiroshima, Hiroshima, 739 8527, Japan  2  Kanomax Japan, Inc , 2 1 Shimizu Suita City, Osaka, 565 0805, Japan  3  Dept  of Chemical Engineering, Faculty of Industrial Technology, Sepuluh Nopember Institute of Technology, Kampus ITS Sukolilo, Surabaya, East Java, 60111, Indonesia",2013,ECSA
746,747,"Porous activated carbon fiber  ACF  is prepared from oxidized polyacrylonitrile  PAN  fiber through three activation methods, which are traditional chemical activation, traditional physical activation, and ameliorative chemical activation  The samples under various high temperature heat treatments are used as electrode for the supercapacitor  The structure and electrochemical properties of these samples are then characterized by nitrogen adsorption at 77 K, X ray diffraction  XRD , Raman spectrum, electron spectroscopy for chemical analysis  ECSA , Fourier transform infrared spectrometer  FTIR , cyclic voltammetry  CV , and galvanotactic charge discharge, respectively  Once formed by the ameliorative chemical activation method, which is used for the electrodes of supercapacitors, the samples exhibited excellent capacitance characteristics in the 1MH2SO4 electrolyte and showed a high specific capacitance of 158 F g, which is higher than the two traditional activation methods  HP20 1 3 900 presents a high specific capacitance of 173 F g in 1 M H2SO4 electrolyte and a high discharge capacitance of 180 F g  Moreover, HP20 1 3 900 has near triangular shapes, reflecting their excellent charge discharge capacitive performance  Results of this study demonstrate that the ameliorative activation process for preparing makes this activated carbon fiber a highly promising electrode material for industrial applications of supercapacitors   2009 American Chemical Society   38 refs",Various treated conditions to prepare porous activated carbon fiber for application in supercapacitor electrodes,"['Activated carbon', 'Capacitance', 'Capacitors', 'Carbon fibers', 'Charcoal', 'Cyclic voltammetry', 'Electric discharges', 'Electrochemical electrodes', 'Electrochemical properties', 'Electrolytes', 'Electrolytic capacitors', 'Electron spectroscopy', 'Fibers', 'Fourier transform infrared spectroscopy', 'Gas adsorption', 'Heat treatment', 'Industrial applications', 'Polyacrylonitriles', 'Raman spectroscopy', 'X ray diffraction', 'X ray diffraction analysis', 'Activation method', 'Activation process', 'Capacitance characteristics', 'Charge/discharge', 'Electrode material', 'Electron spectroscopy for chemical analysis', 'Fourier transform infrared spectrometer', 'High temperature heat treatment', 'Nitrogen adsorption', 'Physical activation', 'Polyacrylonitrile fiber', 'Raman Spectrum', 'Specific capacitance', 'Super capacitor', 'Supercapacitor electrodes', 'Triangular shapes', 'Ceramics, Refractories and Glass', 'Production Planning and Control  Manufacturing', 'Impact of Technology on Society', 'Fiber Products', 'Polymer Products', 'Plastics and Other Polymers  Products and Applications', 'Organic Polymers', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory', 'Physical Properties of Gases, Liquids and Solids', 'Atomic and Molecular Physics', 'High Energy Physics  Nuclear Physics  Plasma Physics', 'Crystal Lattice', 'Electric Variables Measurements', 'Mechanics', 'Wood and Wood Products', 'Solid Fuels', 'Light Optics', 'Electric Components', 'Electric Networks', 'Electric Batteries and Fuel Cells', 'Electricity  Basic Concepts and Phenomena', 'Heat Treatment Processes', 'Chemistry', 'Chemical Plants and Equipment', 'Chemical Reactions', 'Chemical Operations', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Electrochemistry']","['Lin, Jui Hsiang', '', '', 'Ko, Tse Hao', '', '', 'Lin, Yu Hsin', '', '', 'Pan, Chung Kai']","Department of Materials Science and Engineering, Feng Chia University, Taichung, Taiwan  2  Department of Biological Science and Technology, China Medical University, Taichung, Taiwan",2009,ECSA
747,748,"Potential cycling tests using 42 2 wt  and 19 1 wt  Pt C catalysts were conducted by the RRDE method to evaluate the changes in the electrochemical surface area  ECSA  and H2O2 formation ability of the catalysts  As the typical operating conditions of a proton exchange membrane fuel cell  PEMFC , square wave potential cycling  0 7 0 9 V  was applied to the catalysts for 150,000 cycles in an O2 saturated 0 1 M HClO 4 electrolyte  During the potential cycling test, electrochemical measurements were carried out to characterize the ECSA, oxygen reduction reaction  ORR  activity and H2O2 formation  After 150,000 potential cyclings, while the ECSA of the 42 2 wt  Pt C dropped by 35  , the ECSA loss for the 19 1 wt  Pt C was 55    This result implies that the Pt content in the cathode catalyst affects the ECSA loss during the long term PEMFC operation  Additionally, the H2O2 formation ratio obviously increased with the potential cycling only in the case of the 19 1 wt  Pt C  In order to verify the H2O2 formation dependence on the ECSA, four types of catalysts, which included different Pt loading amounts  42 2, 28 1, 19 1 and 9 5 wt  Pt C , were evaluated, and these results explained the relationship between the ECSA decay and H2O2 formation increase in the durability tests    The Electrochemical Society   28 refs",Effect of pt dissolution on H2O2 formation based on RRDE method,"['Catalysts', 'Durability', 'Electrolytic reduction', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Synthesis (chemical)', 'Cathode catalyst', 'Durability test', 'Electrochemical measurements', 'Electrochemical surface area', 'Oxygen reduction reaction', 'Potential cycling', 'Pt dissolutions', 'Typical operating conditions', 'Strength of Building Materials  Mechanical Properties', 'Precious Metals', 'Fuel Cells', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally']","['Ono, Kenshiro', '', '', 'Sekizawa, Koshi', '', '', 'Takeuchi, Norimitsu', '', '', 'Yoshida, Toshihiko', '', '', 'Sudoh, Masao']","Department of Materials Science and Chemical Engineering, Shizuoka University, 3 5 1 Johoku, Hamamatsu, Shizuoka 432 8561, Japan  2  Toyota Motor Corporation Fuel Cell System Development Division, 1200 Mishuku, Susono, Shizuoka 410 1193, Japan",2012,ECSA
748,749,"Potential cycling tests using 42 2 wt  and 19 1 wt  Pt C catalysts were conducted by the RRDE technique to evaluate the changes in the electrochemical surface area  ECSA  and H2O2 formation ability of the catalysts  As the typical operating conditions of a proton exchange membrane fuel cell  PEMFC , square wave potential cycling  0 7 0 9 V  was applied to the catalysts for 150,000 cycles in an O2 saturated 0 1 M HClO 4 electrolyte  During the potential cycling test, electrochemical measurements were carried out to characterize the ECSA, oxygen reduction reaction  ORR  activity and H2O2 formation  After 150,000 potential cyclings, while the ECSA of the 42 2 wt  Pt C dropped by 35 , the ECSA loss for the 19 1 wt  Pt C was 55   This result implies that the Pt content in the cathode catalyst affects the ECSA loss during the long term PEMFC operation  Additionally, the H2O2 formation ratio obviously increased with the potential cycling only in the case of the 19 1 wt  Pt C  In order to verify the H2O2 formation dependence on the ECSA, four types of catalysts, which included different Pt loading amounts  42 2, 28 1, 19 1 and 9 5 wt  Pt C , were evaluated, and these results explained the relationship between the ECSA decay and H2O2 formation increase in the durability tests    2013 Elsevier Ltd   36 refs",Evaluation of Pt C catalyst degradation and H2O2 formation changes under simulated PEM fuel cell condition by a rotating ring disk electrode,"['Catalysts', 'Durability', 'Electrolytic reduction', 'Hydrogen peroxide', 'Platinum', 'Platinum alloys', 'Electrochemical measurements', 'Electrochemical surface area', 'Fuel cell catalysts', 'Oxygen reduction reaction', 'Potential cycling', 'Rotating ring-disk electrode', 'RRDE', 'Typical operating conditions', 'Inorganic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Fuel Cells', 'Precious Metals', 'Strength of Building Materials  Mechanical Properties']","['Ono, Kenshiro', '', '', 'Yasuda, Yuki', '', '', 'Sekizawa, Koshi', '', '', 'Takeuchi, Norimitsu', '', '', 'Yoshida, Toshihiko', '', '', 'Sudoh, Masao']","Department of Materials Science and Chemical Engineering, Shizuoka University, 3 5 1 Johoku, Naka ku, Hamamatsu 432 8561, Japan  2  Toyota Motor Corporation Fuel Cell System Development Division, 1200 Mishuku, Susono, Shizuoka 410 1194, Japan",2013,ECSA
749,750,"Practices designed to expedite the delivery of stakeholder value can paradoxically lead to unexpected rework costs that ultimately degrade the flow of value over time  This is especially observable when features are developed based on immediate value, while dependencies that may slow down future development efforts are neglected  The technical debt metaphor conceptualizes this tradeoff between short term and long term value  taking shortcuts to optimize the delivery of features in the short term incurs debt, analogous to financial debt, that must be paid off later to optimize long term success  In this paper, we describe taking an architecture focused and measurement based approach to develop a metric that assists in strategically managing technical debt  Such an approach can be used to optimize the cost of development over time while continuing to deliver value to the customer  We demonstrate our approach by describing its application to an ongoing system development effort    2012 IEEE   31 refs",In search of a metric for managing architectural technical debt,"['Optimization', 'Software architecture', 'Financial debt', 'Measurement-based approach', 'Rework costs', 'Short term', 'Software economics', 'Stakeholder values', 'System development', 'technical debt', 'Total cost of ownership', 'Computer Programming', 'Cost and Value Engineering  Industrial Economics', 'Optimization Techniques']","['Nord, Robert L', '', '', ' Ozkaya, Ipek', '', '', 'Kruchten, Philippe', '', '', 'Gonzalez Rojas, Marco']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, United States  2  Electrical and Computer Engineering, University of British Columbia, Vancouver, BC, Canada",2012,ECSA
750,751,"Practices designed to expedite the delivery of stakeholder value can paradoxically lead to unexpected rework costs that ultimately degrade the flow of value over time  This is especially observable when features are developed based on immediate value, while dependencies that may slow down future development efforts are neglected  The technical debt metaphor conceptualizes this tradeoff between short term and long term value  taking shortcuts to optimize the delivery of features in the short term incurs debt, analogous to financial debt, that must be paid off later to optimize long term success  In this paper, we describe taking an architecture focused and measurement based approach to develop a metric that assists in strategically managing technical debt  Such an approach can be used to optimize the cost of development over time while continuing to deliver value to the customer  We demonstrate our approach by describing its application to an ongoing system development effort    2012 IEEE   31 refs",In search of a metric for managing architectural technical debt,"['Optimization', 'Software architecture', 'Financial debt', 'Measurement-based approach', 'Rework costs', 'Short term', 'Software economics', 'Stakeholder values', 'System development', 'technical debt', 'Total cost of ownership', 'Computer Programming', 'Cost and Value Engineering  Industrial Economics', 'Optimization Techniques']","['Nord, Robert L', '', '', ' Ozkaya, Ipek', '', '', 'Kruchten, Philippe', '', '', 'Gonzalez Rojas, Marco']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, United States  2  Electrical and Computer Engineering, University of British Columbia, Vancouver, BC, Canada",2012,WICSA
751,752,"Presently, no methods exist that support the creation process of an industry taxonomy within a specific domain  Without such a method, taxonomies remain erroneous, making the development of, for instance, a directory of companies for research, extremely hard  This paper presents a method for creating complete and encompassing domain specific taxonomies  With such a method, researchers can create complete, consistent, taxonomies that in turn provide a strong basis for data model development  The method is applied in practice, and the industry taxonomy is evaluated by practitioners    2010 ACM   33 refs",Industry taxonomy engineering  The case of the European software ecosystem,"['Ecosystems', 'Industry', 'Taxonomies', 'Technical presentations', 'Creation process', 'Data models', 'Domain specific', 'software ecosystem', 'Software ecosystems', 'Production Planning and Control  Manufacturing', 'Industrial Engineering and Management', 'Cost and Value Engineering  Industrial Economics', 'Information Dissemination', 'Information Science', 'Computer Programming', 'Ecology and Ecosystems']","['Hunink, Ivo', '', '', 'Van Erk, Rene', '', '', 'Jansen, Slinger', '', '', 'Brinkkemper, Sjaak']","ISVWorld, Utrecht, Netherlands  2  Utrecht University, Utrecht, Netherlands",2010,ECSA
752,753,"Processes and techniques for the development of enterprise software are best served when infused with practical experience  Pragmatic reflection on what works and what doesn t is critical to enable successful adoption of any process  One aspect of developing software intensive systems is that of architecture description  A very popular approach to software architecture description is the 4 1 Views of Architecture  1   From practical experience applying this framework, this paper discuses an amplification of the 4 1 Views approach   the  3 1 Views of Architecture   in 3D   It is also compliant with the best practices described within the international standard IEEE 1471   Recommended Practice for Architectural Description of Software Intensive Systems  2     2008 IEEE   15 refs",The 3 1 Views of architecture  in 3d    An amplification of the 4 1 viewpoint framework,"['Amplification', 'Architecture', 'Large scale systems', 'Standards', 'Architectural descriptions', 'Architecture description', 'Best Practices', 'Developing software', 'Enterprise software', 'International standard', 'Practical experience', 'Recommended practice', 'Software-intensive systems', 'Buildings and Towers', 'Amplifiers', 'Computer Programming', 'Codes and Standards', 'Systems Science']","['Kennaley, Mark']",Fourth Medium Consulting Inc,2008,WICSA
753,754,"Product line engineering is an approach that works well for managing the anticipated variability of software systems as demonstrated in numerous studies  However, little empirical research and few approaches exist for dealing with the unanticipated evolution of product lines  As a result, the understanding of product line evolution is still weak and the maturity of approaches and tools supporting evolution is often insufficient  In this paper we present results of a case study on impact analyses and desired tool support in product line evolution  Our findings are based on observing 30 person months of development  We analyzed changes made to a product line in typical evolution scenarios by involving the key developers  We used empirical data on observed development activities and impact analyses to derive a trace information model showing frequently desired trace links  We discuss lessons learned and implications for tool developers    2012 IEEE   46 refs",A case study on the evolution of a component based product line,"['Information theory', 'Production engineering', 'Software architecture', 'Component based', 'Development activity', 'Empirical data', 'Empirical research', 'evolution', 'Impact analysis', 'Product line engineering', 'Product-lines', 'Software systems', 'Tool requirements', 'Tool support', 'Trace information', 'traceability', 'Information Theory and Signal Processing', 'Computer Programming', 'Engineering Research', 'Production Engineering']","['Heider, Wolfgang', '', '', 'Vierhauser, Michael', '', '', 'Lettner, Daniela', '', '', 'Gr nbacher, Paul']","Christian Doppler Lab  for Automated Software Engineering, Johannes Kepler Universit t, Austria  2  Siemens VAI Metals Technologies, Turmstrae 44, Linz, Austria  3  Systems Engineering and Automation, Johannes Kepler Universit t, Linz, Austria",2012,ECSA
754,755,"Product line engineering is an approach that works well for managing the anticipated variability of software systems as demonstrated in numerous studies  However, little empirical research and few approaches exist for dealing with the unanticipated evolution of product lines  As a result, the understanding of product line evolution is still weak and the maturity of approaches and tools supporting evolution is often insufficient  In this paper we present results of a case study on impact analyses and desired tool support in product line evolution  Our findings are based on observing 30 person months of development  We analyzed changes made to a product line in typical evolution scenarios by involving the key developers  We used empirical data on observed development activities and impact analyses to derive a trace information model showing frequently desired trace links  We discuss lessons learned and implications for tool developers    2012 IEEE   46 refs",A case study on the evolution of a component based product line,"['Information theory', 'Production engineering', 'Software architecture', 'Component based', 'Development activity', 'Empirical data', 'Empirical research', 'evolution', 'Impact analysis', 'Product line engineering', 'Product-lines', 'Software systems', 'Tool requirements', 'Tool support', 'Trace information', 'traceability', 'Information Theory and Signal Processing', 'Computer Programming', 'Engineering Research', 'Production Engineering']","['Heider, Wolfgang', '', '', 'Vierhauser, Michael', '', '', 'Lettner, Daniela', '', '', 'Gr nbacher, Paul']","Christian Doppler Lab  for Automated Software Engineering, Johannes Kepler Universit t, Austria  2  Siemens VAI Metals Technologies, Turmstrae 44, Linz, Austria  3  Systems Engineering and Automation, Johannes Kepler Universit t, Linz, Austria",2012,WICSA
755,756,"Prototyping Service Oriented Architectures based on web services is a complex and time consuming process  Several steps, some of them complicated, are required for even the simplest application  Therefore, it is desirable to be able to create prototypes using more familiar constructs, entirely within a single programming language, and then define some of the components as web services, and others as clients  We present a framework which enables programmers to create web services and clients in ArchJava, an extension to Java which supports components and connectors as first class entities, by defining interfaces to services as ports on components  This supports rapid creation of prototypes by defining a component and connector structure of a web service based system in ArchJava, and then later, with only minor modifications, change the prototype to use web services  The services and client components will not be aware of this  From their point of view they are talking through connectors  Client components can also be connected to existing web services    Springer Verlag Berlin Heidelberg 2007   15 refs",First class connectors for prototyping service oriented architectures,"['Computer programming languages', 'Software prototyping', 'Web services', 'ArchJava', 'Service Oriented Architectures', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Information Services']","['Kjr, Kristian Ellebk']","Department of Computer Science, University of Aarhus,  bogade 34, 8200  rhus N , Denmark",2007,ECSA
756,757,"Prototyping Service Oriented Architectures based on web services is a complex and time consuming process  Several steps, some of them complicated, are required for even the simplest application  Therefore, it is desirable to be able to create prototypes using more familiar constructs, entirely within a single programming language, and then define some of the components as web services, and others as clients  We present a framework which enables programmers to create web services and clients in ArchJava, an extension to Java which supports components and connectors as first class entities, by defining interfaces to services as ports on components  This supports rapid creation of prototypes by defining a component and connector structure of a web service based system in ArchJava, and then later, with only minor modifications, change the prototype to use web services  The services and client components will not be aware of this  From their point of view they are talking through connectors  Client components can also be connected to existing web services    Springer Verlag Berlin Heidelberg 2007   15 refs",First class connectors for prototyping service oriented architectures,"['Computer programming languages', 'Software prototyping', 'Web services', 'ArchJava', 'Service Oriented Architectures', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Information Services']","['Kjr, Kristian Ellebk']","Department of Computer Science, University of Aarhus,  bogade 34, 8200  rhus N , Denmark",2008,ECSA
757,758,"Prototyping service oriented architectures based on Web services is a complex and time consuming process  Several steps, some of them complicated, are required for even the simplest application  Therefore, it is desirable to be able to create prototypes using more familiar constructs, entirely within a single programming language, and then define some of the components as Web services, and others as clients  We present a framework which enables programmers to create Web services and clients in ArchJava, an extension to Java which supports components and connectors as first class entities, by defining interfaces to services as ports on components  This supports rapid creation of prototypes by defining a component and connector structure of a Web service based system in ArchJava, and then later, with only minor modifications, change the prototype to use Web services  The services and client components will not be aware of this  Prom their point of view they are talking through connectors  Client components can also be connected to existing Web services   15 refs",First class connectors for prototyping service oriented architectures,"['Java', 'object-oriented programming', 'software architecture', 'software prototyping', 'Web services', 'first class connectors', 'service oriented architecture prototyping', 'Web services', 'programming language', 'ArchJava', 'Distributed systems software', 'Object oriented programming', 'Software engineering techniques']","['Kjaer, K E', '', '']","Dept  of Comput  Sci , Univ  of Aarhus, Arhus, Denmark",2007,ECSA
758,759,"Prototyping service oriented architectures based on Web services is a complex and time consuming process  Several steps, some of them complicated, are required for even the simplest application  Therefore, it is desirable to be able to create prototypes using more familiar constructs, entirely within a single programming language, and then define some of the components as Web services, and others as clients  We present a framework which enables programmers to create Web services and clients in ArchJava, an extension to Java which supports components and connectors as first class entities, by defining interfaces to services as ports on components  This supports rapid creation of prototypes by defining a component and connector structure of a Web service based system in ArchJava, and then later, with only minor modifications, change the prototype to use Web services  The services and client components will not be aware of this  Prom their point of view they are talking through connectors  Client components can also be connected to existing Web services   15 refs",First class connectors for prototyping service oriented architectures,"['Java', 'object-oriented programming', 'software architecture', 'software prototyping', 'Web services', 'first class connectors', 'service oriented architecture prototyping', 'Web services', 'programming language', 'ArchJava', 'Distributed systems software', 'Object oriented programming', 'Software engineering techniques']","['Kjaer, K E', '', '']","Dept  of Comput  Sci , Univ  of Aarhus, Arhus, Denmark",2008,ECSA
759,760,"Pt C Nafion electrocatalyst was prepared by introducing Nafion polymer during the synthesis process, which was characterized by Thermogravimetry  TG , Energy Dispersive Spectrometer  EDS , X ray diffraction  XRD , transmission electron microscope  TEM  and electrochemical method  The results show that comparing with Pt C electrocatalyst, the introduction of Nation makes better particle distribution in Pt C Nafion, and the electrochemical surface area  ECSA  of the catalyst layer with Pt C Nafion is 23 61 m2 g, which is about 33 5  higher than that of Pt C   19 refs",Preparation and characterization of nafion modified Pt C electrocatalyst,"['carbon', 'catalysts', 'electrochemistry', 'materials preparation', 'platinum', 'polymers', 'thermal analysis', 'transmission electron microscopy', 'X-ray chemical analysis', 'X-ray diffraction', 'nafion modified electrocatalyst preparation', 'nafion polymer', 'thermogravimetry', 'TG', 'energy dispersive spectrometer', 'EDS', 'X-ray diffraction', 'XRD', 'transmission electron microscope', 'TEM', 'electrochemical method', 'electrochemical surface area', 'Pt-C', 'Heterogeneous catalysis at surfaces and other surface reactions', 'Electromagnetic radiation spectrometry  chemical analysis', 'A     Other methods of preparation of materials', 'Electrochemistry and electrophoresis']","['Zhang Yuan yuan', '', '', 'Li Xiang yi', '', '', 'Li Huan qiao', '', '', 'Xin Qin', '', '', 'Sun Gong quan']","Dalian Inst  of Chem  Phys , Chinese Acad  of Sci , Dalian, China",2009,ECSA
760,761,"Pt C and Pt3Ni C electrocatalysts that contained 12 27 wt   Pt were prepared via the reduction of precursors in a binary solvent  The metal loading, average size of the Pt or Pt alloy nanoparticles, and electrochemical surface area  ECSA  of the obtained catalysts were found to be dependent on the choice of organic components and their relative amounts in the starting solution  Downsizing the nanoparticles was shown to favor the agglomeration processes that counterbalance the expected increase in the electrochemical surface area  This adverse effect of downsizing can be reduced through selection of the optimum binary solvent composition    2012 Elsevier B V   37 refs",Microstructure and size effects in Pt C and Pt3Ni C electrocatalysts synthesized in solutions based on binary organic solvents,"['Fuel cells', 'Loading', 'Metal nanoparticles', 'Nanoparticles', 'Organic solvents', 'Platinum', 'Platinum alloys', 'Adverse effect', 'Average size', 'Binary solvents', 'Electrochemical surface area', 'Metal loadings', 'Organic components', 'Pt alloy', 'Size effects', 'Starting solutions', 'Precious Metals', 'Naval Vessels', 'Fuel Cells', 'Nanotechnology', 'Chemical Agents and Basic Industrial Chemicals']","['Guterman, V E', '', '', ' Pakharev, A Yu', '', '', ' Tabachkova, N Yu', '', '']","Chemistry Department, Southern Federal University, Zorge st , 7, Rostov on Don 344090, Russia  2  University of Science and Technology MISIS, Leninskiy pr  4, Moscow 119049, Russia",2013,ECSA
761,762,"Pt C catalysts containing 20wt  platinum per carbon were prepared by NaBH4 reduction methods in acidic ethylene glycol  EG  or H2O conditions of pH le2 and alkaline EG or H2O conditions of pH 12, and characterized by transmission electron microscopy  TEM , cyclic voltammetry  CV , and linear sweep voltammetry  LSV , investigating the stabilizing effect of solvent EG in the NaBH4 reduction method  The results indicate that Pt nanoparticles uniformly distributed on the carbon support with mean diameter of 2 5 nm, were prepared by the NaBH4 reduction method in alkaline EG solutions of pH 12  Electrochemically active specific surface area  ECSA  and Pt mass based current density of the catalyst for methanol electrooxidation at potential of 0 8 V vs NHE from LSV, are 74 4 m2 g Pt and 229 1 mA mg Pt, 5 6 times larger and 5 3 times higher than those of the catalyst prepared in alkaline H2O solutions of pH 12, respectively   17 refs",Pt C nanocatalysts prepared by NaBH4 reduction methods using ethylene glycol as a stabilizing agent,"['Catalysis', 'Catalysts', 'Cell membranes', 'Cyclic voltammetry', 'Electrooxidation', 'Ethylene', 'Ethylene glycol', 'Fuel cells', 'Methanol', 'Platinum', 'Platinum alloys', 'Transmission electron microscopy', 'Carbon support', 'Linear sweep voltammetry', 'Mean diameter', 'Methanol electrooxidation', 'NaBH4', 'Nanocatalysts', 'O-conditions', 'Pt nanoparticles', 'Pt/C', 'Reduction method', 'Stabilizing agents', 'Stabilizing effects', 'TEM', 'Electric Variables Measurements', 'Organic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Electrochemistry', 'Chemistry, General', 'Optical Devices and Systems', 'Fuel Cells', 'Precious Metals', 'Biological Materials and Tissue Engineering']","['Wu, Feng', ' ,', '', ' Liu, Yan Hong', '', '', 'Wu, Chuan', ' ,', '']","School of Chemical Engineering and the Environment, Beijing Institute of Technology, Beijing 100081, China  2  National Development Center for High Technology Green Materials, Beijing 100081, China",2009,ECSA
762,763,"Pt C electrocatalysts, aimed at maximizing the electrochemical surface area  ECSA  and consequently the specific mass activity of fuel cell reactions, are obtained by firstly depositing Pt nanoparticles on colloidal silica  Pt silica , followed by the adsorption of the latter onto a carbon support  This method of catalyst preparation increases Pt metal utilization and generates accessible void space in the interpenetrating particle network of carbon and silica for the facile transport of reactants and products  Both electrochemical hydrogen adsorption desorption and CO oxidation measurements show an increase in the ECSA using this approach  Methanol electrooxidation is used as a test reaction to evaluate the catalytic activity  It is found that the silica modified catalyst is three times as active as a catalyst prepared without silica, under otherwise identical conditions    2007 WILEY VCH Verlag GmbH   Co  KGaA   22 refs",Increased metal utilization in carbon supported Pt catalysts by adsorption of preformed Pt nanoparticles on colloidal silica,"['Adsorption', 'Carbon', 'Electrooxidation', 'Fuel cells', 'Nanoparticles', 'Platinum', 'Carbon support', 'Colloidal silica', 'Metal utilization', 'Methanol electrooxidation', 'Solid State Physics', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Operations', 'Chemical Reactions', 'Electrochemistry', 'Nanotechnology', 'Fuel Cells', 'Precious Metals']","['Zeng, J', '', '', ' Lee, J Y', '', '', ' Chen, J', '', '', ' Shen, P K', '', '', ' Song, S', '', '']","Research Institute of Tsinghua University in Shenzhen, Shenzhen High Tech Industrial Park, Shenzhen, 518057, China  2  Department of Chemical and Biomolecular Engineering, National University of Singapore, 10 Kent Ridge Crescent, Singapore 119260, Singapore  3  State Key Laboratory of Optoelectronic Materials and Technologies, School of Physics and Engineering, Sun Yat Sen University, 135 Xingang Road, Guangzhou, Guangdong 510275, China",2007,ECSA
763,764,"Pt C electrocatalysts, aimed at maximizing the electrochemical surface area  ECSA  and consequently the specific mass activity of fuel cell reactions, are obtained by firstly depositing Pt nanoparticles on colloidal silica  Pt silica , followed by the adsorption of the latter onto a carbon support  This method of catalyst preparation increases Pt metal utilization and generates accessible void space in the interpenetrating particle network of carbon and silica for the facile transport of reactants and products  Both electrochemical hydrogen adsorption desorption and CO oxidation measurements show an increase in the ECSA using this approach  Methanol electrooxidation is used as a test reaction to evaluate the catalytic activity  It is found that the silica modified catalyst is three times as active as a catalyst prepared without silica, under otherwise identical conditions    2007 WILEY VCH Verlag GmbH   Co  KGaA   22 refs",Increased metal utilization in carbon supported Pt catalysts by adsorption of preformed Pt nanoparticles on colloidal silica,"['Adsorption', 'Carbon', 'Electrooxidation', 'Fuel cells', 'Nanoparticles', 'Platinum', 'Carbon support', 'Colloidal silica', 'Metal utilization', 'Methanol electrooxidation', 'Solid State Physics', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Operations', 'Chemical Reactions', 'Electrochemistry', 'Nanotechnology', 'Fuel Cells', 'Precious Metals']","['Zeng, J', '', '', ' Lee, J Y', '', '', ' Chen, J', '', '', ' Shen, P K', '', '', ' Song, S', '', '']","Research Institute of Tsinghua University in Shenzhen, Shenzhen High Tech Industrial Park, Shenzhen, 518057, China  2  Department of Chemical and Biomolecular Engineering, National University of Singapore, 10 Kent Ridge Crescent, Singapore 119260, Singapore  3  State Key Laboratory of Optoelectronic Materials and Technologies, School of Physics and Engineering, Sun Yat Sen University, 135 Xingang Road, Guangzhou, Guangdong 510275, China",2008,ECSA
764,765,"Pt C electrocatalysts, aimed at maximizing the electrochemical surface area  ECSA  and consequently the specific mass activity of fuel cell reactions, are obtained by firstly depositing Pt nanoparticles on colloidal silica  Pt silica , followed by the adsorption of the latter onto a carbon support  This method of catalyst preparation increases Pt metal utilization and generates accessible void space in the interpenetrating particle network of carbon and silica for the facile transport of reactants and products  Both electrochemical hydrogen adsorption desorption and CO oxidation measurements show an increase in the ECSA using this approach  Methanol electrooxidation is used as a test reaction to evaluate the catalytic activity  It is found that the silica modified catalyst is three times as active as a catalyst prepared without silica, under otherwise identical conditions   22 refs",Increased metal utilization in carbon supported Pt catalysts by adsorption of preformed Pt nanoparticles on colloidal silica,"['adsorption', 'carbon', 'catalysts', 'desorption', 'electrochemical analysis', 'nanoparticles', 'platinum', 'silicon compounds', 'carbon-supported Pt catalysts', 'Pt nanoparticles', 'colloidal silica', 'Pt/C electrocatalysts', 'electrochemical surface area', 'fuel cell reactions', 'catalyst preparation', 'Pt metal utilization', 'interpenetrating particle network', 'electrochemical hydrogen adsorption', 'electrochemical hydrogen desorption', 'CO oxidation measurements', 'methanol electrooxidation', 'silica modified catalyst', 'Pt', 'Element', 'C', 'Element', 'Pt', 'C', 'Fluid kinetics  evaporation, adsorption, condensation, catalysis, etc', 'A    F Electrochemical analytical methods', 'Methods of nanofabrication and processing', 'Adsorption and desorption kinetics  evaporation and condensation']","['Zeng, J', '', '', ' Lee, J Y', ' Chen, J', ' Shen, P K', ' Song, S']","Res Inst  of Tsinghua Univ , Shenzhen, China",2007,ECSA
765,766,"Pt C electrocatalysts, aimed at maximizing the electrochemical surface area  ECSA  and consequently the specific mass activity of fuel cell reactions, are obtained by firstly depositing Pt nanoparticles on colloidal silica  Pt silica , followed by the adsorption of the latter onto a carbon support  This method of catalyst preparation increases Pt metal utilization and generates accessible void space in the interpenetrating particle network of carbon and silica for the facile transport of reactants and products  Both electrochemical hydrogen adsorption desorption and CO oxidation measurements show an increase in the ECSA using this approach  Methanol electrooxidation is used as a test reaction to evaluate the catalytic activity  It is found that the silica modified catalyst is three times as active as a catalyst prepared without silica, under otherwise identical conditions   22 refs",Increased metal utilization in carbon supported Pt catalysts by adsorption of preformed Pt nanoparticles on colloidal silica,"['adsorption', 'carbon', 'catalysts', 'desorption', 'electrochemical analysis', 'nanoparticles', 'platinum', 'silicon compounds', 'carbon-supported Pt catalysts', 'Pt nanoparticles', 'colloidal silica', 'Pt/C electrocatalysts', 'electrochemical surface area', 'fuel cell reactions', 'catalyst preparation', 'Pt metal utilization', 'interpenetrating particle network', 'electrochemical hydrogen adsorption', 'electrochemical hydrogen desorption', 'CO oxidation measurements', 'methanol electrooxidation', 'silica modified catalyst', 'Pt', 'Element', 'C', 'Element', 'Pt', 'C', 'Fluid kinetics  evaporation, adsorption, condensation, catalysis, etc', 'A    F Electrochemical analytical methods', 'Methods of nanofabrication and processing', 'Adsorption and desorption kinetics  evaporation and condensation']","['Zeng, J', '', '', ' Lee, J Y', ' Chen, J', ' Shen, P K', ' Song, S']","Res Inst  of Tsinghua Univ , Shenzhen, China",2008,ECSA
766,767,"Pt Co alloy nanoparticles have emerged as one of the most promising electrocatalysts for the oxygen reduction reaction  ORR  in hydrogen fuel cells  Our study presents a comprehensive structural, compositional and electrochemical characterization linked with ORR activity for carbon supported PtCo3, PtCo, and Pt3Co alloy nanoparticle catalysts in 0 1 M HClO4 and 0 1 M KOH  Surface sensitive cyclic voltammetry was used to investigate the changes of composition of outermost atomic layers of Pt Co alloys  Our electrochemical results in alkaline media clearly show the stability and voltage induced accumulation of Co on the particle surface, whereas in 0 1 M HClO4 the voltage cycling initiates the rapid dissolution of Co to form a Pt enriched surface surrounding by alloy core  We correlated the ECSA and ORR activity with the as synthesized chemical composition of Pt Co alloys  In results, after electrochemical treatment in 0 1 M HClO4 the Pt mass based activities  jmass  increase according  Pt HT  3Co 3 at comparable particle size  Unlike to acid, after voltage cycling in 0 1 M KOH jmass increase according  PtCo3 3Co  However, in 0 1 M KOH activated PtCo3 core shell catalyst shows 4 5 fold higher mass activity compared to pure Pt and Pt HT     2012 The Electrochemical Society   97 refs","Oxygen electroreduction on PtCo3, PtCo and Pt3Co alloy nanoparticles for alkaline and acidic PEM fuel cells","['Cobalt alloys', 'Cyclic voltammetry', 'Electrocatalysts', 'Electrolytic reduction', 'Fuel cells', 'Hydrogen fuels', 'Nanoparticles', 'Platinum', 'Alkaline media', 'Alloy nanoparticle', 'Atomic layer', 'Chemical compositions', 'Core-shell', 'Electrochemical characterizations', 'Electrochemical treatments', 'Mass activity', 'Oxygen electroreduction', 'Oxygen reduction reaction', 'Particle surface', 'PEM fuel cell', 'Pt-Co alloys', 'Electric Variables Measurements', 'Solid State Physics', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Electric and Magnetic Materials', 'Fuel Cells', 'Nonferrous Metals and Alloys excluding Alkali and Alkaline Earth Metals', 'Precious Metals', 'Gas Fuels']","['Oezaslan, Mehtap', '', '', 'Hasch , Fr d ric', '', '', 'Strasser, Peter']","Department of Chemistry, Chemical Engineering Division, Technical University Berlin, Berlin 10623, Germany",2012,ECSA
767,768,"Pt nanoparticles  2 3 nm  supported on carbon black  C , single walled carbon nanotubes  SWNT , double walled carbon nanotubes  DWNT  and multi walled carbon nanotubes  MWNT  are prepared by an ethylene glycol reduction method  The catalytic activity towards the oxygen reduction reaction  ORR  and the durability of the catalysts are evaluated under condition simulating the environment of proton exchange membrane fuel cell  PEMFCs   The Pt electrochemical surface area  ECSA  of Pt DWNT and Pt MWNT degrade 32  after accelerated durability test  ADT , compared with 38  for Pt SWNT and 48  for Pt C  The degradation rate of Pt C is about 1 5 times higher than that of Pt DWNT  The typical ORR polarization curves of Pt C, Pt SWNT, Pt DWNT and Pt MWNT obtained before and after ADT are also examined  Before ADT, Pt DWNT shows the highest catalytic activity towards ORR, followed by Pt MWNT, Pt C, and Pt SWNT in that order  After ADT, the sequence of ORR activity of Pt C and Pt SWNT has changed and the overall order is  Pt DWNT   Pt MWNT   Pt SWNT   Pt C  The Pt DWNT catalyst shows the highest catalytic activity and the best durability for ORR among the C and CNT supported Pt catalysts    The Electrochemical Society   34 refs","Durability and activity study of single walled, double walled and multi walled carbon nanotubes supported Pt catalyst for PEMFCs","['Blood vessel prostheses', 'Carbon', 'Carbon black', 'Catalysis', 'Catalyst activity', 'Catalyst supports', 'Catalysts', 'Cell membranes', 'Cells', 'Charged particles', 'Chemical sensors', 'Cubic boron nitride', 'Degradation', 'Direct energy conversion', 'Durability', 'Electric batteries', 'Electrochemical sensors', 'Electrochemistry', 'Electrolytic reduction', 'Ethylene', 'Ethylene glycol', 'Fuel cells', 'Fuels', 'Fullerenes', 'Gas fuel purification', 'Glycols', 'Ion exchange membranes', 'Membranes', 'Multiwalled carbon nanotubes (MWCN)', 'Nanocomposites', 'Nanopores', 'Nanostructured materials', 'Nanostructures', 'Nanotechnology', 'Nanotubes', 'Oxygen', 'Platinum', 'Platinum alloys', 'Proton exchange membrane fuel cells (PEMFC)', 'Protons', 'Rate constants', 'Reduction', 'Single-walled carbon nanotubes (SWCN)', 'Solid oxide fuel cells (SOFC)', 'Sulfate minerals', '(I ,J) conditions', 'Catalytic activities', 'degradation rates', 'Double walled carbon nanotubes (DWCNT)', 'Double-walled', 'Durability testing', 'Electrochemical Society (ECS)', 'Electrochemical surface area (ESA)', 'Multiwalled carbon nanotubes (MW-CNT)', 'Oxygen reduction reaction (ORR)', 'Polarization curves (PC)', 'Proton exchange membrane fuel cell (PEM-FC)', 'Pt nano-particles', 'reduction methods', 'Single-walled', 'Single-walled carbon nanotubes (SWCNTs)', 'Supported Pt', 'Materials Science', 'Nanotechnology', 'Chemistry', 'Electrochemistry', 'Chemical Plants and Equipment', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Organic Compounds', 'Ceramics', 'Atomic and Molecular Physics', 'Fuel Cells', 'Strength of Building Materials  Mechanical Properties', 'Biological Materials and Tissue Engineering', 'Prosthetics', 'Minerals', 'Electric Batteries', 'Gas Fuels', 'Precious Metals', 'Electricity  Basic Concepts and Phenomena', 'Electric Batteries and Fuel Cells', 'Ore Treatment']","['Chen, Zhomgwei', '', '', 'Deng, Weiqiao', ' ,', '', ' Wang, Xin', ' ,', '', ' Yan, Yushan']","Department of Chemical and Environmental Engineering, College of Engineering, University of California, Riverside, CA 92521  2  Division of Chemistry and Biological Chemistry, Nanyang Technological University, Singapore 637722, Singapore  3  Division of Chemical and Biomolecular Engineering, Nanyang Technological University, Singapore 637722, Singapore",2007,ECSA
768,769,"Pt nanoparticles  2 3 nm  supported on carbon black  C , single walled carbon nanotubes  SWNT , double walled carbon nanotubes  DWNT  and multi walled carbon nanotubes  MWNT  are prepared by an ethylene glycol reduction method  The catalytic activity towards the oxygen reduction reaction  ORR  and the durability of the catalysts are evaluated under condition simulating the environment of proton exchange membrane fuel cell  PEMFCs   The Pt electrochemical surface area  ECSA  of Pt DWNT and Pt MWNT degrade 32  after accelerated durability test  ADT , compared with 38  for Pt SWNT and 48  for Pt C  The degradation rate of Pt C is about 1 5 times higher than that of Pt DWNT  The typical ORR polarization curves of Pt C, Pt SWNT, Pt DWNT and Pt MWNT obtained before and after ADT are also examined  Before ADT, Pt DWNT shows the highest catalytic activity towards ORR, followed by Pt MWNT, Pt C, and Pt SWNT in that order  After ADT, the sequence of ORR activity of Pt C and Pt SWNT has changed and the overall order is  Pt DWNT   Pt MWNT   Pt SWNT   Pt C  The Pt DWNT catalyst shows the highest catalytic activity and the best durability for ORR among the C and CNT supported Pt catalysts    The Electrochemical Society   34 refs","Durability and activity study of single walled, double walled and multi walled carbon nanotubes supported Pt catalyst for PEMFCs","['Blood vessel prostheses', 'Carbon', 'Carbon black', 'Catalysis', 'Catalyst activity', 'Catalyst supports', 'Catalysts', 'Cell membranes', 'Cells', 'Charged particles', 'Chemical sensors', 'Cubic boron nitride', 'Degradation', 'Direct energy conversion', 'Durability', 'Electric batteries', 'Electrochemical sensors', 'Electrochemistry', 'Electrolytic reduction', 'Ethylene', 'Ethylene glycol', 'Fuel cells', 'Fuels', 'Fullerenes', 'Gas fuel purification', 'Glycols', 'Ion exchange membranes', 'Membranes', 'Multiwalled carbon nanotubes (MWCN)', 'Nanocomposites', 'Nanopores', 'Nanostructured materials', 'Nanostructures', 'Nanotechnology', 'Nanotubes', 'Oxygen', 'Platinum', 'Platinum alloys', 'Proton exchange membrane fuel cells (PEMFC)', 'Protons', 'Rate constants', 'Reduction', 'Single-walled carbon nanotubes (SWCN)', 'Solid oxide fuel cells (SOFC)', 'Sulfate minerals', '(I ,J) conditions', 'Catalytic activities', 'degradation rates', 'Double walled carbon nanotubes (DWCNT)', 'Double-walled', 'Durability testing', 'Electrochemical Society (ECS)', 'Electrochemical surface area (ESA)', 'Multiwalled carbon nanotubes (MW-CNT)', 'Oxygen reduction reaction (ORR)', 'Polarization curves (PC)', 'Proton exchange membrane fuel cell (PEM-FC)', 'Pt nano-particles', 'reduction methods', 'Single-walled', 'Single-walled carbon nanotubes (SWCNTs)', 'Supported Pt', 'Materials Science', 'Nanotechnology', 'Chemistry', 'Electrochemistry', 'Chemical Plants and Equipment', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Organic Compounds', 'Ceramics', 'Atomic and Molecular Physics', 'Fuel Cells', 'Strength of Building Materials  Mechanical Properties', 'Biological Materials and Tissue Engineering', 'Prosthetics', 'Minerals', 'Electric Batteries', 'Gas Fuels', 'Precious Metals', 'Electricity  Basic Concepts and Phenomena', 'Electric Batteries and Fuel Cells', 'Ore Treatment']","['Chen, Zhomgwei', '', '', 'Deng, Weiqiao', ' ,', '', ' Wang, Xin', ' ,', '', ' Yan, Yushan']","Department of Chemical and Environmental Engineering, College of Engineering, University of California, Riverside, CA 92521  2  Division of Chemistry and Biological Chemistry, Nanyang Technological University, Singapore 637722, Singapore  3  Division of Chemical and Biomolecular Engineering, Nanyang Technological University, Singapore 637722, Singapore",2008,ECSA
769,770,"Pt25Cu75 and Pt20Cu20Co 60 electrochemically dealloyed electrocatalysts were shown to possess improved resistance to electrochemical surface area  ECSA  loss relative to commercially available Pt HSC and Pt Vu catalysts  The difference in ECSA loss was shown to be directly related to the temperature at which the alloy catalysts were prepared  i e  reduced annealed , with higher temperatures resulting in greater resistance to ECSA loss  To normalize for preparation conditions, commercially available catalysts were exposed to a heat treatment process mimicking the annealing reducing procedure for the Pt alloys    The  Electrochemical Society   20 refs",Electrochemical stability of ptcu and ptcuco core shell oxygen reduction reaction electrocatalysts in liquid electrolyte,"['Catalysis', 'Copper alloys', 'Electrocatalysts', 'Electrolysis', 'Electrolytic reduction', 'Ion exchange membranes', 'Membranes', 'Oxygen', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Protons', 'Alloy catalysts', 'Core shells', 'Electrochemical stabilities', 'Electrochemical surface areas', 'Heat treatment process', 'Higher temperatures', 'Liquid electrolytes', 'Oxygen reduction reactions', 'Preparation conditions', 'Pt alloys', 'Materials Science', 'High Energy Physics', 'Atomic and Molecular Physics', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Chemical Plants and Equipment', 'Electrochemistry', 'Fuel Cells', 'Electric Batteries and Fuel Cells', 'Precious Metals', 'Copper Alloys', 'Ore Treatment']","['Neyerlin, K C', '', '', ' Vastava, Ratndeep', '', '', 'Strasser, Peter', ' ,', '']","Department of Chemical and Biomolecular Engineering, University of Houston, Houston, TX 77204  2  Institut fuer Chemie, Technische Universitaet Berlin, 10623 Berlin, Germany",2008,ECSA
770,771,"Quality assurance processes of software intensive systems are an increasing challenge as the complexity of these systems dramatically increases  The use of Architecture Description Languages  ADLs  provide an important basis for evaluation  The Architecture Analysis and Design Language  AADL  is an ADL developed for designing software intensive systems  In this paper, we propose an architecture based verification technique covering the entire development process by adapting a combination of model checking and model based testing approaches to AADL specifications  The technique reveals inconsistencies of early design decisions and ensures a system s conformity with its AADL specification  The objective and criteria  test selection  of the verification technique is derived from traditional integration testing    2011 Springer Verlag   7 refs",An architecture based verification technique for AADL specifications,"['Model checking', 'Quality assurance', 'Specifications', 'Architecture analysis', 'Architecture description languages', 'Design decisions', 'Development process', 'Integration testing', 'Model based testing', 'Software intensive systems', 'Verification techniques', 'Computer Programming', 'Codes and Standards', 'Quality Assurance and Control']","['Johnsen, Andreas', '', '', 'Pettersson, Paul', '', '', 'Lundqvist, Kristina']","School of Innovation, Design and Engineering, M lardalen University, V ster s, Sweden",2011,ECSA
771,772,"Quality attributes  QA  play a fundamental role when architecting software systems  However, in contrast to QA in traditional software systems, the role of QA when architecting service based systems  SBS  has not yet been studied in depth  Thus, we conducted a descriptive survey to explore how QA are treated during the architecting of SBS  Data were collected using an online questionnaire targeted at participants with architecting experience  Our survey shows that QA and functional requirements of SBS are mostly considered equally important  Also, QA are usually treated explicitly rather than implicitly  Furthermore, dependability and performance appear to be the most important QA in the context of SBS  Our results partially show that general findings on QA also apply to the domain of SBS  On the other hand, we did not find a confirmation that QA are primary drivers for the architecting of SBS, or that certain application domains would focus on particular QA    2013 Springer Verlag   21 refs",The role of quality attributes in service based systems architecting  A survey,"['Computer software', 'Software architecture', 'Surveying', 'architecting', 'Functional requirement', 'Online questionnaire', 'Quality attributes', 'Service-based systems', 'Software systems', 'Surveying', 'Computer Software, Data Handling and Applications']","['Ameller, David', '', '', 'Galster, Matthias', '', '', 'Avgeriou, Paris', '', '', 'Franch, Xavier']","Universitat Polit cnica de Catalunya  UPC , Barcelona, Spain  2  University of Canterbury, Christchurch, New Zealand  3  University of Groningen, Netherlands",2013,ECSA
772,773,"Quality attributes are important to creating, understanding, and evaluating software architectures  The architectural attributes and challenges for ecosystem architectures are different from one off systems  The study of those aspects that influence quality attributes in this new environment can help to understand these architectures  In previous work, we hypothesized that the architecture for an ecosystem should be extensible, scalable, and flexible and reported initial investigations into extensibility and scalability  In this paper, we report on our investigation into flexibility  We analyze various features that impact how to design flexible architectures  We highlight that flexibility for ecosystems is not only a technical issue, but a business issue as well  We classified features that affect flexibility into business and technical dimensions  We adapted a software system metric for flexibility to measure the flexibility of an ecosystem s architecture    2014 ACM   18 refs",Flexibility in ecosystem architectures,"['Design', 'Ecosystems', 'Information management', 'Management', 'Measurements', 'Product design', 'Quality assurance', 'Software architecture', 'Data abstraction', 'Design tools and techniques', 'Product metrics', 'Software ecosystems', 'Software quality assurance', 'Structural Design', 'Ecology and Ecosystems', 'Computer Programming', 'Management', 'Production Engineering', 'Quality Assurance and Control', 'Acoustical and Optical Measuring Instruments', 'Electric and Electronic Measuring Instruments', 'Mechanical and Miscellaneous Measuring Instruments', 'Moisture, Pressure and Temperature, and Radiation Measuring Instruments']","['Da Silva Amorim, Simone', '', '', 'McGregor, John D', '', '', ' De Almeida, Eduardo Santana', '', '', 'Von Flach G', 'Chavez, Christina']","Federal Institute of Education, Science and Technology of Bahia, Salvador, BA 40110, Brazil  2  Strategic Software Engineering Research Group, Clemson University, Clemson, SC 29634, United States  3  Federal University of Bahia, Fraunhofer Project Center for Software and Systems Engineering, Salvador, BA 40170, Brazil  4  Federal University of Bahia, Salvador, BA 40170, Brazil",2014,ECSA
773,774,"Quality aware service delivery has been receiving increasing attention in both software architecture and service management  Our approach values software and service quality assurance, ranging from quality assessment in software architecting to quality matching in service discovery  This paper proposes an integrated QoS aware service management method, which examines the  service as a software  development and the  software as a service  management against QoS requirements  Moreover, we design an integrated QoS aware service management infrastructure which promises complete software and service workflow management coupled with a QoS ontology development  We develop the QoS property ontology from the viewpoints of technical quality and managerial quality information management    2007 IEEE   45 refs",An integrated QoS aware service development and management framework,"['Computer science', 'Information management', 'Information technology', 'Quality assurance', 'Software architecture', 'Quality matching', 'Service development', 'Service management', 'Service workflows', 'Quality Assurance and Control', 'Management', 'Information Science', 'Computer Applications', 'Computer Programming', 'Computer Circuits and Logic Elements', 'Telecommunication  Radar, Radio and Television']","['Zhou, Jiehan', '', '', 'Niemel , Eila', '', '', 'Savolainen, Pekka']","VTT Technical Research Centre of Finland, Kaitov yl  1, 90571 Oulu, Finland",2007,WICSA
774,775,"Quality aware service delivery has been receiving increasing attention in both software architecture and service management  Our approach values software and service quality assurance, ranging from quality assessment in software architecting to quality matching in service discovery  This paper proposes an integrated QoS aware service management method, which examines the  service as a software  development and the  software as a service  management against QoS requirements  Moreover, we design an integrated QoS aware service management infrastructure which promises complete software and service workflow management coupled with a QoS ontology development  We develop the QoS property ontology from the viewpoints of technical quality and managerial quality information management   45 refs",An integrated QoS aware service development and management framework,"['ontologies (artificial intelligence)', 'quality of service', 'software management', 'Web services', 'quality-aware service delivery', 'service management', 'software architecture management', 'ontology', 'Distributed systems software', 'Knowledge engineering techniques', 'Software management']","['Jiehan Zhou', '', '', 'Niemela, E', '', '', ' Savolainen, P', '', '']","VTT Tech  Res  Centre of Finland, Oulu, Finland",2007,WICSA
775,776,"Quality goals have to be under a special consideration during software architectural design  Evolvability constitutes a quality goal with a special relevance for business critical systems  Architectural patterns can significantly contribute to the satisfaction of quality goals  But architectural design decisions regarding these goals have to be made in a systematic, methodical way and concerning the patterns  influence on quality properties  Unfortunately, pattern catalogs do not well support quality goal oriented design decisions  This paper presents a systematic refinement and mapping of the quality goal evolvability to properties for good architectural design  A set of architectural patterns is evaluated regarding these properties  Furthermore, a calculation scheme is provided that enables the evaluation of the patterns to support design decisions  The results have been developed, revised, and evaluated in a series of applications based on industrial expertise    2010 Springer Verlag Berlin Heidelberg   35 refs",Impact evaluation for quality oriented architectural decisions regarding evolvability,"['Architectural design', 'Computer software selection and evaluation', 'Software architecture', 'Software design', 'Structural design', 'Architectural decision', 'Architectural design decisions', 'Architectural pattern', 'Calculation scheme', 'Critical systems', 'Design decisions', 'Evolvability', 'Impact evaluation', 'Quality goals', 'Quality properties', 'Software architectural', 'Support design', 'Support quality', 'Structural Design, General', 'Computer Software, Data Handling and Applications', 'Quality Assurance and Control']","['Bode, Stephan', '', '', 'Riebisch, Matthias']","Ilmenau University of Technology, P O  Box 10 05 65, Ilmenau 98684, Germany",2010,ECSA
776,777,"Quantitative assessment of quality attributes  i e , non functional requirements, such as performance, safety or reliability  of software architectures during design supports important early decisions and validates the quality requirements established by the stakeholder  In current practice, these quality requirements are most often manually checked, which is time consuming and error prone due to the overwhelmingly complex designs  We propose an automated approach to assess the reliability of software architectures  It consists in extracting a Markov model from the system specification written in an Architecture Description Language  ADL   Our approach translates the specified architecture to a high level probabilistic model checking language, supporting system validation and quantitative reliability prediction against usage profile, component arrangement and architectural styles  We validate our approach by applying it to different architectural styles and comparing those with two different quantitative reliability assessment methods presented in the literature  the composite and the hierarchical methods    2012 IEEE   33 refs",Automated reliability prediction from formal architectural descriptions,"['Architecture', 'High level languages', 'Markov processes', 'Model checking', 'Reliability analysis', 'Specifications', 'Architectural descriptions', 'Architectural style', 'Architecture description languages', 'Automated approach', 'Complex designs', 'Design support', 'Early decision', 'Error prones', 'Hierarchical method', 'Markov model', 'Non-functional requirements', 'Probabilistic model-checking', 'Quality attributes', 'Quality requirements', 'Quantitative assessments', 'Reliability assessments', 'Reliability modeling', 'Reliability prediction', 'Supporting systems', 'System specification', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Codes and Standards', 'Production Planning and Control  Manufacturing', 'Probability Theory']","['Franco, Jo o M', '', '', ' Barbosa, Raul', '', '', 'Zenha Rela, M rio']","University of Coimbra, Portugal",2012,ECSA
777,778,"Quantitative assessment of quality attributes  i e , non functional requirements, such as performance, safety or reliability  of software architectures during design supports important early decisions and validates the quality requirements established by the stakeholder  In current practice, these quality requirements are most often manually checked, which is time consuming and error prone due to the overwhelmingly complex designs  We propose an automated approach to assess the reliability of software architectures  It consists in extracting a Markov model from the system specification written in an Architecture Description Language  ADL   Our approach translates the specified architecture to a high level probabilistic model checking language, supporting system validation and quantitative reliability prediction against usage profile, component arrangement and architectural styles  We validate our approach by applying it to different architectural styles and comparing those with two different quantitative reliability assessment methods presented in the literature  the composite and the hierarchical methods    2012 IEEE   33 refs",Automated reliability prediction from formal architectural descriptions,"['Architecture', 'High level languages', 'Markov processes', 'Model checking', 'Reliability analysis', 'Specifications', 'Architectural descriptions', 'Architectural style', 'Architecture description languages', 'Automated approach', 'Complex designs', 'Design support', 'Early decision', 'Error prones', 'Hierarchical method', 'Markov model', 'Non-functional requirements', 'Probabilistic model-checking', 'Quality attributes', 'Quality requirements', 'Quantitative assessments', 'Reliability assessments', 'Reliability modeling', 'Reliability prediction', 'Supporting systems', 'System specification', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Codes and Standards', 'Production Planning and Control  Manufacturing', 'Probability Theory']","['Franco, Jo o M', '', '', ' Barbosa, Raul', '', '', 'Zenha Rela, M rio']","University of Coimbra, Portugal",2012,WICSA
778,779,"Real time software intensive embedded systems complexity, as in the automotive domain, requires rigorous Requirements Engineering  RE  approaches  Scenario based RE formalisms like Modal Sequence Diagrams  MSDs  enable an intuitive specification and the simulative validation of functional requirements  However, the dependencies between events occurring in different MSD scenarios are implicit so that it is difficult to find causes of requirements defects, if any  The automotive architecture description language EAST ADL addresses this problem by relying on event chains, which make dependencies between events explicit  However, EAST ADL event chains have a low abstraction level, and their relationship to functional requirements has seldom been investigated  Based on the EAST ADL functional architecture, we propose to use its central notion of event to conciliate both approaches  We conceived an automatic transformation from the high abstraction level requirements specified in MSDs to the low abstraction level event chains   17 refs",Generating EAST ADL Event Chains from Scenario based Requirements Specifications,"['embedded systems', 'formal specification', 'programming languages', 'software architecture', 'traffic engineering computing', 'EAST-ADL event chain generation', 'scenario-based requirement specifications', 'real-time software-intensive embedded system complexity', 'automotive domain', 'requirements engineering approach', 'scenario-based RE formalism approach', 'modal sequence diagrams', 'MSDs', 'automotive architecture description language', 'EAST-ADL functional architecture', 'low abstraction level event chains', 'Traffic engineering computing', 'Programming languages', 'Formal methods', 'Software engineering techniques']","['Koch, T', '', '', ' Holtmann, J', '', '', ' DeAntoni, J', '', '']","Project Group Mechatron  Syst  Design, Fraunhofer IPT, Paderborn, Germany  2  Univ  Nice Sophia Antipolis, Sophia Antipolis, France",2014,ECSA
779,780,"Real time software intensive embedded systems complexity, as in the automotive domain, requires rigorous Requirements Engineering  RE  approaches  Scenario based RE formalisms like Modal Sequence Diagrams  MSDs  enable an intuitive specification and the simulative validation of functional requirements  However, the dependencies between events occurring in different MSD scenarios are implicit so that it is difficult to find causes of requirements defects, if any  The automotive architecture description language east adl addresses this problem by relying on event chains, which make dependencies between events explicit  However, east adl event chains have a low abstraction level, and their relationship to functional requirements has seldom been investigated  Based on the east adl functional architecture, we propose to use its central notion of event to conciliate both approaches  We conceived an automatic transformation from the high abstraction level requirements specified in MSDs to the low abstraction level event chains    2014 Springer International Publishing Switzerland   17 refs",Generating EAST ADL event chains from scenario based requirements specifications,"['Abstracting', 'Embedded systems', 'Requirements engineering', 'Software architecture', 'Specifications', 'Abstracting', 'Embedded systems', 'Requirements engineering', 'Software architecture', 'Specifications', 'Architecture description languages', 'Automatic transformations', 'automotive', 'EAST-ADL', 'Functional architecture', 'Functional requirement', 'Requirements specifications', 'Scenario-based specifications', 'Mechanical Drives', 'Computer Software, Data Handling and Applications', 'Codes and Standards', 'Information Sources and Analysis']","['Koch, Thorsten', '', '', 'Holtmann, J rg', '', '', 'Deantoni, Julien']","Project Group Mechatronic Systems Design, Fraunhofer IPT, Zukunftsmeile 1, 33102 Paderborn, Germany  2  Univ  Nice Sophia Antipolis, I3S, UMR 7271 CNRS, Sophia Antipolis, France",2014,ECSA
780,781,"Recent advances in ubiquitous computing and artificial intelligence have led to a desire to better support user oriented tasks by placing more intelligence in the computing infrastructure  This infrastructure helps mediate between computing resources and legacy applications on the one hand, and a user s high level goals on the other hand  In this talk I survey recent research in developing software architectures to support these new capabilities  Key features of these architectures are the ability to interface with legacy applications, but still add considerable support for user tasks  the ability to incorporate machine learning so that the system adapts to the user over time  and the ability to cope with resource variability and user mobility  I outline some of the consequent software engineering challenges that arise in this setting    Springer Verlag Berlin Heidelberg 2007",Software architectures for task oriented computing,"['Artificial intelligence', 'Computation theory', 'Learning systems', 'Ubiquitous computing', 'Computing resources', 'User-oriented tasks', 'Ergonomics and Human Factors Engineering', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Robotics']","['Garlan, David']","School of Computer Science, Carnegie Mellon University, 5000 Forbes Ave, Pittsburgh, PA 15213, United States",2007,ECSA
781,782,"Recent advances in ubiquitous computing and artificial intelligence have led to a desire to better support user oriented tasks by placing more intelligence in the computing infrastructure  This infrastructure helps mediate between computing resources and legacy applications on the one hand, and a user s high level goals on the other hand  In this talk I survey recent research in developing software architectures to support these new capabilities  Key features of these architectures are the ability to interface with legacy applications, but still add considerable support for user tasks  the ability to incorporate machine learning so that the system adapts to the user over time  and the ability to cope with resource variability and user mobility  I outline some of the consequent software engineering challenges that arise in this setting    Springer Verlag Berlin Heidelberg 2007",Software architectures for task oriented computing,"['Artificial intelligence', 'Computation theory', 'Learning systems', 'Ubiquitous computing', 'Computing resources', 'User-oriented tasks', 'Ergonomics and Human Factors Engineering', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Robotics']","['Garlan, David']","School of Computer Science, Carnegie Mellon University, 5000 Forbes Ave, Pittsburgh, PA 15213, United States",2008,ECSA
782,783,"Recent advances in ubiquitous computing and artificial intelligence have led to a desire to better support user oriented tasks by placing more intelligence in the computing infrastructure  This infrastructure helps mediate between computing resources and legacy applications on the one hand, and a user s high level goals on the other hand  In this talk I survey recent research in developing software architectures to support these new capabilities  Key features of these architectures are the ability to interface with legacy applications, but still add considerable support for user tasks  the ability to incorporate machine learning so that the system adapts to the user over time  and the ability to cope with resource variability and user mobility  I outline some of the consequent software engineering challenges that arise in this setting   0 refs",Software architectures for task oriented computing,"['artificial intelligence', 'software architecture', 'task analysis', 'ubiquitous computing', 'software architectures', 'task oriented computing', 'ubiquitous computing', 'artificial intelligence', 'software engineering', 'User interfaces', 'Distributed systems software', 'Expert systems and other AI software and techniques', 'Software engineering techniques']","['Garlan, D', '', '']","Sch  of Comput  Sci , Carnegie Mellon Univ , Pittsburgh, PA, United States",2007,ECSA
783,784,"Recent advances in ubiquitous computing and artificial intelligence have led to a desire to better support user oriented tasks by placing more intelligence in the computing infrastructure  This infrastructure helps mediate between computing resources and legacy applications on the one hand, and a user s high level goals on the other hand  In this talk I survey recent research in developing software architectures to support these new capabilities  Key features of these architectures are the ability to interface with legacy applications, but still add considerable support for user tasks  the ability to incorporate machine learning so that the system adapts to the user over time  and the ability to cope with resource variability and user mobility  I outline some of the consequent software engineering challenges that arise in this setting   0 refs",Software architectures for task oriented computing,"['artificial intelligence', 'software architecture', 'task analysis', 'ubiquitous computing', 'software architectures', 'task oriented computing', 'ubiquitous computing', 'artificial intelligence', 'software engineering', 'User interfaces', 'Distributed systems software', 'Expert systems and other AI software and techniques', 'Software engineering techniques']","['Garlan, D', '', '']","Sch  of Comput  Sci , Carnegie Mellon Univ , Pittsburgh, PA, United States",2008,ECSA
784,785,"Recent research has recognised the potential of coupling ADLs with underlying runtime environments to support systematic and integrated  specification to deployment  architectures  However, while some promising results have been obtained, much of this research has not considered the crucial issue of causally connected dynamic reconfiguration and has considered only domain specific areas  In this paper we discuss a specification to deployment architecture called Plastik that employs an extended general purpose ADL and is underpinned by an efficient runtime that is suited both for high level application development and low level systems development  e g  embedded systems   Runtime reconfiguration is supported both at the ADL level and at the runtime level, and both programmed reconfiguration and adhoc reconfiguration are supported  The paper focuses on the mapping of ADL level specifications to runtime instantiations and on the necessary runtime support for causally connected dynamic reconfiguration    2005 IEEE   30 refs",Mapping ADL specifications to an efficient and reconfigurable runtime component platform,"['Computer systems programming', 'Embedded systems', 'General purpose computers', 'Software architecture', 'ADL specifications', 'Dynamic reconfiguration', 'Reconfigurable runtime component platform', 'Computer Systems and Equipment', 'Computer Programming Languages', 'Computer Applications']","['Joolia, Ackbar', '', '', 'Batista, Thais', '', '', 'Coulson, Geoff', '', '', 'Gomes, Antonio Tadeu A', '', '']","Computing Department, Lancaster University, Infolab21, LA1 4WA, Lancaster, United Kingdom  2  Departamento de Inform tica  DIMAp , Universidade Federal do Rio Grande do Norte  UFRN , 59072 970, Natal   RN, Brazil  3  Laborat rio Nacional de Computa  o Cient fica,  LNCC , 25651 075, Petr polis RJ, Brazil",2005,WICSA
785,786,"Recent research in software architecture has reasserted an emphasis on keeping track of design decisions and their rationales during the development process, that is, on maintaining architectural knowledge  AK   This knowledge takes the form of explicit assets, interrelated in decision networks  We argue that the relationships structuring these networks contain valuable information, specially those describing negative semantics  For this reason, we have extended an architecture centric, modeldriven development process, ATRIUM, which already provides support for AK, with new AK relationships to define AK as a network of knowledge    2009 IEEE   12 refs",Weaving a network of architectural knowledge,"['Architecture', 'Computer software', 'Architectural knowledge', 'Decision network', 'Design decisions', 'Development process', 'Model driven development', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Navarro, Elena', '', '', 'Cuesta, Carlos E', '', '', ' Perry, Dewayne E', '', '']","Computing Systems Department, University of Castilla La Mancha  2  Department of Computing Languages and Systems II, Rey Juan Carlos University  3  Department of Electrical and Computer Engineering, University of Texas, Austin, United States",2009,ECSA
786,787,"Recent research in software architecture has reasserted an emphasis on keeping track of design decisions and their rationales during the development process, that is, on maintaining architectural knowledge  AK   This knowledge takes the form of explicit assets, interrelated in decision networks  We argue that the relationships structuring these networks contain valuable information, specially those describing negative semantics  For this reason, we have extended an architecture centric, modeldriven development process, ATRIUM, which already provides support for AK, with new AK relationships to define AK as a network of knowledge    2009 IEEE   12 refs",Weaving a network of architectural knowledge,"['Architecture', 'Computer software', 'Architectural knowledge', 'Decision network', 'Design decisions', 'Development process', 'Model driven development', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Navarro, Elena', '', '', 'Cuesta, Carlos E', '', '', ' Perry, Dewayne E', '', '']","Computing Systems Department, University of Castilla La Mancha  2  Department of Computing Languages and Systems II, Rey Juan Carlos University  3  Department of Electrical and Computer Engineering, University of Texas, Austin, United States",2009,WICSA
787,788,"Recent research in software architecture has reasserted an emphasis on keeping track of design decisions and their rationales during the development process, that is, on maintaining architectural knowledge  AK   This knowledge takes the form of explicit assets, interrelated in decision networks  We argue that the relationships structuring these networks contain valuable information, specially those describing negative semantics  For this reason, we have extended an architecture centric, modeldriven development process, ATRIUM, which already provides support for AK, with new AK relationships to define AK as a network of knowledge    2009 IEEE   12 refs",Weaving a network of architectural knowledge,"['Architecture', 'Computer software', 'Architectural knowledge', 'Decision network', 'Design decisions', 'Development process', 'Model driven development', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Navarro, Elena', '', '', 'Cuesta, Carlos E', '', '', ' Perry, Dewayne E', '', '']","Computing Systems Department, University of Castilla La Mancha  2  Department of Computing Languages and Systems II, Rey Juan Carlos University  3  Department of Electrical and Computer Engineering, University of Texas, Austin, United States",2011,WICSA
788,789,"Recent research shows runtime architectural reflection is instrumental in, for instance, building adaptive and flexible systems or checking correspondence between design and implementation  Moreover, experience with computational reflection in various branches of computer science shows that the interface through which the meta information of the running system is accessed, and possibly modified, lies at the heart of designing reflective systems  This paper proposes that such an interface should be like a database  accessed through queries expressed using the concepts with which architecture is described  Specifically, our contributions are   1  a presentation of the general idea of a query based approach to architectural reflection,  2  a definition of an Architectural Query Language  AQL  in which perspectives on an architectural model can be expressed as queries,  3  a prototype of a system which both creates runtime models of specific distributed architectures and allow for evaluation of AQL queries on these models  We illustrate the viability of the approach in two particular applications of such a model  constraint checking relative to an architectural style, and reasoning about certain quality attributes of an architecture    2005 IEEE   29 refs",A declarative approach to architectural reflection,"['Computational methods', 'Computer science', 'Constraint theory', 'Database systems', 'Information analysis', 'Metadata', 'Query languages', 'Architectural Query Language (AQL)', 'Meta-information', 'Runtime models', 'Systems Science', 'Information Sources and Analysis', 'Computer Applications', 'Database Systems', 'Computer Programming Languages', 'Computer Programming', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory']","['Ingstrup, Mads', '', '', 'Hansen, Klaus Marius']","Department of Computer Science, University of Aarhus, Aabogade 34, 8200 Aarhus N, Denmark",2005,WICSA
789,790,"Recently, software developers are faced with a fierce market competition with  diverse market needs, ever increasing number of features, and shortening product life cycle  To survive in this fierce competition, software developers are searching for methods and tools to develop various products with reduced time to market and improved quality  In response to these needs, we present a new CASE called VULCAN  VULCAN is a software development workbench comprising various tools for supporting the entire phases of feature oriented product line software development from feature modeling to asset and product development  Especially, it provides several tools for supporting architecture model based software development where   1  product line architectures can be specified using various architecture patterns,  2  application specific architectures can be derived from the product line architecture specifications,  3  application specific control components can be generated from the application rchitecture specifications, and  4  different deployment architectures can be configured with various component communication mechanisms  Of various tools included in VULCAN, we focus on this tool set for supporting architecture model based software development in this paper and demonstration  Copyright 2012 ACM   15 refs",VULCAN  Architecture model based software development workbench,"['Commerce', 'Competition', 'Product development', 'Software architecture', 'Specifications', 'Architecture patterns', 'Architecture-model-based', 'Communication mechanisms', 'Control components', 'Deployment architecture', 'Feature modeling', 'Feature-oriented', 'Market competition', 'Market needs', 'Product life cycles', 'Product line architecture', 'Product-lines', 'Software developer', 'Software Product Line', 'Time-to-market', 'Computer Programming', 'Codes and Standards', 'Industrial Economics', 'Production Engineering']","['Lee, Hyesun', '', '', 'Yang, Jin Seok', '', '', 'Kang, Kyo C', '', '']","Computer Science and Engineering Department, Pohang University of Science and Technology  POSTECH , Pohang, Korea, Republic of",2012,ECSA
790,791,"Recently, software developers are faced with a fierce market competition with  diverse market needs, ever increasing number of features, and shortening product life cycle  To survive in this fierce competition, software developers are searching for methods and tools to develop various products with reduced time to market and improved quality  In response to these needs, we present a new CASE called VULCAN  VULCAN is a software development workbench comprising various tools for supporting the entire phases of feature oriented product line software development from feature modeling to asset and product development  Especially, it provides several tools for supporting architecture model based software development where   1  product line architectures can be specified using various architecture patterns,  2  application specific architectures can be derived from the product line architecture specifications,  3  application specific control components can be generated from the application rchitecture specifications, and  4  different deployment architectures can be configured with various component communication mechanisms  Of various tools included in VULCAN, we focus on this tool set for supporting architecture model based software development in this paper and demonstration  Copyright 2012 ACM   15 refs",VULCAN  Architecture model based software development workbench,"['Commerce', 'Competition', 'Product development', 'Software architecture', 'Specifications', 'Architecture patterns', 'Architecture-model-based', 'Communication mechanisms', 'Control components', 'Deployment architecture', 'Feature modeling', 'Feature-oriented', 'Market competition', 'Market needs', 'Product life cycles', 'Product line architecture', 'Product-lines', 'Software developer', 'Software Product Line', 'Time-to-market', 'Computer Programming', 'Codes and Standards', 'Industrial Economics', 'Production Engineering']","['Lee, Hyesun', '', '', 'Yang, Jin Seok', '', '', 'Kang, Kyo C', '', '']","Computer Science and Engineering Department, Pohang University of Science and Technology  POSTECH , Pohang, Korea, Republic of",2012,WICSA
791,792,"Reference architectures  RA  are reusable architectures for artifacts in a particular domain  They can serve as a basis for designing new architectures, but also as a means for quality control during system development  Quality control is performed through checking the conformance of systems in development to  company wide  reference architectures  If performed manually, reference architecture conformance checking is a time  and resource intensive process  In this paper we outline an approach for reference architecture conformance checking of application architectures in the banking domain  Reference architectures are defined on the basis of reusable rules, consisting of roles and of constraints on roles and role relationships  Conformance checking can be performed semi automatically and continuously by automating important steps like the extraction of the actual application architecture, the binding of reference architecture roles to the elements of a specific application architecture, and the evaluation of the reference architecture rules for an application architecture    2013 Springer Verlag   9 refs",Towards continuous reference architecture conformance analysis,"['Computer software reusability', 'Quality control', 'Software architecture', 'Application architecture', 'Conformance Analysis', 'Conformance checking', 'Reference architecture', 'Reusable architectures', 'System development', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Quality Assurance and Control']","['Buchgeher, Georg', '', '', 'Weinreich, Rainer']","Software Competence Center, Hagenberg, Austria  2  Johannes Kepler University, Linz, Austria",2013,ECSA
792,793,"Reference architectures  RA  have been studied to create a consistent notion of what constitutes them as well as their benefits and drawbacks  However, few empirical studies have been conducted to provide evidence that support the claims made  To increase this evidence, this paper investigates the actual industrial practice of using RAs  The study consists of a survey with 28 stakeholders from everis, a multinational consulting company based in Spain  We report the findings and contextualize them with previous research    2013 Springer Verlag   8 refs",Benefits and drawbacks of reference architectures,"['Artificial intelligence', 'Computer science', 'Consulting companies', 'Contextualize', 'Empirical Software Engineering', 'Empirical studies', 'Industrial practices', 'Reference architecture', 'Software reference architectures', 'Computer Circuits and Logic Elements', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Mart nez Fern ndez, Silverio', '', '', 'Ayala, Claudia P', '', '', ' Franch, Xavier', '', '', 'Martins Marques, Helena']","GESSI Research Group, Universitat Polit cnica de Catalunya, Barcelona, Spain  2  Everis, Barcelona, Spain",2013,ECSA
793,794,"Reference architectures have emerged as a special type of software architecture that achieves well recognized understanding of specific domains  Their purpose is therefore to be a guidance for the development, standardization, and evolution of systems of such domains or neighbor domains  Adequate representation of such architectures is essential to promote their effective use and dissemination, using, for instance, different architectural viewpoints  A comprehensive description of reference architectures should not only record common features and functionalities, but also variations that could be present in the instances of these architectures  In this scenario, the main contribution of our work is to propose an architecture viewpoint to represent variability in reference architectures  We also describe the steps for creating such viewpoint and present an example of a technique that could be used to represent it  A case study is also presented, demonstrating the feasibility of our approach  Based on initial results, we have observed that the variability viewpoint could contribute to a more adequate, complete description of reference architectures and, as a consequence, it could promote a more effective dissemination and use of such architectures  Copyright   2014 ACM 978 1 4503 2523 3 14 04 15 00   29 refs",Variability viewpoint to describe reference architectures,"['Software architecture', 'Architectural viewpoints', 'Architecture description', 'Common features', 'Reference architecture', 'Variability', 'Buildings and Towers', 'Computer Programming']","['Guessi, Milena', '', '', 'Oquendo, Flavio', '', '', 'Nakagawa, Elisa Yumi']","Dept  of Computer Systems, University of S o Paulo   USP, PO Box 668, 13560 970 S o Carlos, Brazil  2  IRISA Research Institute, University of South Brittany, PO Box 573, 56017 Vannes, France",2014,WICSA
794,795,"Reference architectures have emerged as a special type of software architecture that achieves well recognized understanding of specific domains, promoting reuse of design expertise and facilitating the development, standardization, and evolution of software systems  Because of their advantages, several reference architectures have been proposed and have been also successfully used, including in the industry  However, the most of these architectures are still built using an ad hoc approach, lacking of a systematization to their construction  If existing, these approaches could motivate and promote the building of new architectures and also support evolution of existing ones  In this scenario, the main contribution of this paper is to present the evolution of ProSA RA, a process that systematizes the design, representation, and evaluation of reference architectures  ProSA RA has been already applied in the establishment of reference architectures for different domains and this experience was used to evolve our process  In this paper, we illustrate an application of ProSA RA in the robotics domain  Results achieved through the use of ProSA RA have showed us that it is a viable, efficient process and, as a consequence, it could contribute to the reuse of knowledge in several applications domains, by promoting the establishment of new reference architectures    2014 IEEE   47 refs","Consolidating a process for the design, representation, and evaluation of reference architectures","['Design', 'Robotics', 'Software architecture', 'Applications domains', 'Design expertise', 'Different domains', 'Efficient process', 'Reference architecture', 'Software systems', 'Buildings and Towers', 'Structural Design', 'Computer Programming', 'Robotics']","['Nakagawa, Elisa Y', '', '', ' Guessi, Milena', '', '', 'Maldonado, Jose C', '', '', ' Feitosa, Daniel', '', '', 'Oquendo, Flavio']","University of S o Paulo, S o Carlos, SP, Brazil  2  University of Groningen, Groningen, Netherlands  3  University of South Brittany, Vannes, France",2014,WICSA
795,796,"Reference architectures have emerged as a special type of software architecture that achieves well recognized understanding of specific domains, promoting reuse of design expertise and facilitating the development, standardization, and evolution of software systems  Designed for various domains and purpose, they have increasingly impacted important aspects of system development, such as productivity and quality of such systems  However, reference architectures have been sometimes established without an adequate concern about which elements they should encompass  Besides that, there is a lack of work that investigate the essence of reference architectures, their dimensions and elements that they should contain  In this perspective, the main contribution of this paper is to present a reference model for reference architectures, named RAModel  Reference Architecture Model , that intends to improve the understanding about what reference architectures are, as well as their components and relationships, supporting the establishment, use, and evolution of such architectures    2012 IEEE   21 refs",RAModel  A reference model for reference architectures,"['Models', 'Reference architecture', 'Reference models', 'Software systems', 'System development', 'Computer Programming', 'Engineering Graphics']","['Nakagawa, Elisa Yumi', '', '', 'Oquendo, Flavio', '', '', 'Becker, Martin']","University of S o Paulo, S o Carlos, SP, Brazil  2  University of South Brittany, Vannes, France  3  Fraunhofer IESE, Kaiserslautern, Germany",2012,ECSA
796,797,"Reference architectures have emerged as a special type of software architecture that achieves well recognized understanding of specific domains, promoting reuse of design expertise and facilitating the development, standardization, and evolution of software systems  Designed for various domains and purpose, they have increasingly impacted important aspects of system development, such as productivity and quality of such systems  However, reference architectures have been sometimes established without an adequate concern about which elements they should encompass  Besides that, there is a lack of work that investigate the essence of reference architectures, their dimensions and elements that they should contain  In this perspective, the main contribution of this paper is to present a reference model for reference architectures, named RAModel  Reference Architecture Model , that intends to improve the understanding about what reference architectures are, as well as their components and relationships, supporting the establishment, use, and evolution of such architectures    2012 IEEE   21 refs",RAModel  A reference model for reference architectures,"['Models', 'Reference architecture', 'Reference models', 'Software systems', 'System development', 'Computer Programming', 'Engineering Graphics']","['Nakagawa, Elisa Yumi', '', '', 'Oquendo, Flavio', '', '', 'Becker, Martin']","University of S o Paulo, S o Carlos, SP, Brazil  2  University of South Brittany, Vannes, France  3  Fraunhofer IESE, Kaiserslautern, Germany",2012,WICSA
797,798,"Reference architectures refer to a special type of software architecture that achieves well recognized understanding of specific domains, promoting reuse of design expertise and facilitating the development, standardization, and evolution of software systems  Designed for various domains and purpose, they have increasingly impacted important aspects of system development, such as productivity and quality of such systems  In another perspective, variability has been considered in several research topics as a mechanism that facilitates software development and evolution  In this context, the main contribution of this paper is to present the current status regarding variability in the reference architecture engineering  It is also presented future research perspectives that could be conducted, providing new directions to the reference architecture engineering in order to become existing and new reference architectures more effective elements to the development and evolution of software intensive systems  Copyright 2012 ACM   31 refs",Reference architectures and variability  Current status and future perspectives,"['Computer applications', 'Current status', 'Future perspectives', 'Reference architecture', 'Research topics', 'Software intensive systems', 'Software systems', 'System development', 'Variability', 'Computer Applications']","['Nakagawa, Elisa Yumi']","Dept  of Computer Systems, University of S o Paulo   USP, PO Box 668, 13560 970, S o Carlos, SP, Brazil",2012,ECSA
798,799,"Reference architectures refer to a special type of software architecture that achieves well recognized understanding of specific domains, promoting reuse of design expertise and facilitating the development, standardization, and evolution of software systems  Designed for various domains and purpose, they have increasingly impacted important aspects of system development, such as productivity and quality of such systems  In another perspective, variability has been considered in several research topics as a mechanism that facilitates software development and evolution  In this context, the main contribution of this paper is to present the current status regarding variability in the reference architecture engineering  It is also presented future research perspectives that could be conducted, providing new directions to the reference architecture engineering in order to become existing and new reference architectures more effective elements to the development and evolution of software intensive systems  Copyright 2012 ACM   31 refs",Reference architectures and variability  Current status and future perspectives,"['Computer applications', 'Current status', 'Future perspectives', 'Reference architecture', 'Research topics', 'Software intensive systems', 'Software systems', 'System development', 'Variability', 'Computer Applications']","['Nakagawa, Elisa Yumi']","Dept  of Computer Systems, University of S o Paulo   USP, PO Box 668, 13560 970, S o Carlos, SP, Brazil",2012,WICSA
799,800,"Release planning is the process of deciding what to include in future release s  of a product  In this paper we look at how software architects are involved during release planning in industry today, and how architectural issues are considered during this phase    2008 IEEE   11 refs",Importance of software architecture during release planning,"['Paper coating', 'Process engineering', 'Release Planning', 'Software architects', 'Computer Programming', 'Papermaking Processes', 'Production Engineering']","['Lindgren, Markus', '', '', 'Norstr m, Christer', '', '', 'Wall, Anders', '', '', 'Land, Rikard']","ABB Force Measurement, V ster s, Sweden  2  M lardalen University, Dept  of Computer Science, V ster s, Sweden  3  ABB Corporate Research, V ster s, Sweden",2008,WICSA
800,801,"Reputation Based Trust  RBT  model with embedded incentive mechanisms provides an accurate quantitative measurement for services choosing their partners based on fair ratings accumulated from users  These mechanisms stimulate services to offer ratings truthfully, otherwise they lose their gains or even receive penalties  However, leveraging such mechanisms in distributed environments is a challenging task by its centralized nature  In this paper, we propose a new architecture development that combines relevant architectural components to make trust systems highly scalable with the auction mechanisms  capability to prevent lie  In this architecture we define an auction based trust negotiation protocol that guides the interactions of distributed services and realize it in the distributed trust framework  Our architecture scales efficiently for increasing numbers of services interacting with the system, while still achieving protection against untruthful incentives even when a majority of ratings are unfair  An example of a supply chain is devised with empirical evidence collected    2010 Springer Verlag Berlin Heidelberg   18 refs",An architectural approach to composing reputation based distributed services,"['Network architecture', 'Supply chains', 'Architectural approach', 'Architectural components', 'Auction mechanisms', 'Distributed environments', 'Distributed service', 'Empirical evidence', 'Incentive mechanism', 'Quantitative measurement', 'Trust frameworks', 'Trust negotiations', 'Trust systems', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Phoomvuthisarn, Suronapee', ' ,', ',', '', ' Liu, Yan', ' ,', '', ' Zhu, Liming', ' ,', '']","National ICT Australia  NICTA , Australia  2  Pacific Northwest National Laboratory, United States  3  School of Computer Science and Engineering, University of New South Wales, Australia  4  Mahanakorn University of Technology, Bangkok, Thailand",2010,ECSA
801,802,"Requirements and project related factors influence architectural design in intricate and multivariate ways  We are only beginning to understand some of the tacit but fundamental mechanisms involved in reasoning about design decisions, and one of them concerns the role of design constraints  This paper examines design constraints and how they shape design solutions  We introduce a design constraint model and an architectural design reasoning process for specifying design constraints and checking for design conflicts  We experiment with using logic for constraint verification with the Alloy tool    2009 IEEE   6 refs",Modeling constraints improves software architecture design reasoning,"['Architectural design', 'Computer software', 'Machine design', 'Model checking', 'Software design', 'Design constraints', 'Design decisions', 'Reasoning process', 'Shape designs', 'Software architecture design', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Logic Elements', 'Computer Applications', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Structural Design, General', 'Buildings and Towers', 'Mechanical Design']","['Tang, Antony', '', '', 'Van Vliet, Hans']","Swinburne University of Technology, Melbourne, Australia  2  VU University, Amsterdam, Netherlands",2009,ECSA
802,803,"Requirements and project related factors influence architectural design in intricate and multivariate ways  We are only beginning to understand some of the tacit but fundamental mechanisms involved in reasoning about design decisions, and one of them concerns the role of design constraints  This paper examines design constraints and how they shape design solutions  We introduce a design constraint model and an architectural design reasoning process for specifying design constraints and checking for design conflicts  We experiment with using logic for constraint verification with the Alloy tool    2009 IEEE   6 refs",Modeling constraints improves software architecture design reasoning,"['Architectural design', 'Computer software', 'Machine design', 'Model checking', 'Software design', 'Design constraints', 'Design decisions', 'Reasoning process', 'Shape designs', 'Software architecture design', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Logic Elements', 'Computer Applications', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Structural Design, General', 'Buildings and Towers', 'Mechanical Design']","['Tang, Antony', '', '', 'Van Vliet, Hans']","Swinburne University of Technology, Melbourne, Australia  2  VU University, Amsterdam, Netherlands",2009,WICSA
803,804,"Requirements and project related factors influence architectural design in intricate and multivariate ways  We are only beginning to understand some of the tacit but fundamental mechanisms involved in reasoning about design decisions, and one of them concerns the role of design constraints  This paper examines design constraints and how they shape design solutions  We introduce a design constraint model and an architectural design reasoning process for specifying design constraints and checking for design conflicts  We experiment with using logic for constraint verification with the Alloy tool    2009 IEEE   6 refs",Modeling constraints improves software architecture design reasoning,"['Architectural design', 'Computer software', 'Machine design', 'Model checking', 'Software design', 'Design constraints', 'Design decisions', 'Reasoning process', 'Shape designs', 'Software architecture design', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Logic Elements', 'Computer Applications', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Structural Design, General', 'Buildings and Towers', 'Mechanical Design']","['Tang, Antony', '', '', 'Van Vliet, Hans']","Swinburne University of Technology, Melbourne, Australia  2  VU University, Amsterdam, Netherlands",2011,WICSA
804,805,"Requirements evolve over the development lifecycle of a software project  Agile practices are designed specifically to address this challenge while showing early and continuous progress towards project goals  Applying an agile approach allows stakeholders to adapt the scope and capabilities of a development release to changing market needs  More recently, an agile approach has been recommended for developing the architecture of software systems, enabling the design to support current requirements and early releases while evolving to meet future expectations  Our experience defining emergent software systems to build a product line architecture for advanced data analytics demonstrates the benefits that can be gained from prioritizing work activities and delaying architecture decisions  This paper proposes a process and ontology for agile architecture development  Only the necessary aspects for each evolutionary release are designed and prototyped, as determined by expectations of the identified application domain scenarios  Feedback from implementing the scenarios using the architecture extends our understanding of the requirements and provides the backlog for successive design iterations    2014 IEEE   13 refs",Agile software architecture in advanced data analytics,"['Computer software', 'Agile architectures', 'Agile development', 'Architecture decisions', 'Best practices', 'Design iteration', 'Industrial experiments', 'Product line architecture', 'Software systems', 'Computer Software, Data Handling and Applications']","['Harper, K', 'Eric', '', '', 'Dagnino, Aldo']","Industrial Software Systems, ABB Corporate Research, Raleigh, NC, United States",2014,WICSA
805,806,"Research domains such as active networks, ad hoc networks, ubiquitous computing, pervasive computing, grid computing, and sensor networks, clearly show that computer networks will become more complex and heterogeneous  In many cases, central management and control of the network are far from trivial since both the topology and the connected devices change rapidly in such highly dynamic environments, while load circumstances may vary arbitrarily  The software architecture in a node needs to support flexibility  We have developed an architecture tailored to protocol stack software that allows customizing internal resource management in order to handle overload conditions gracefully  We show that the investment in explicit support for modularity and architectural constraints pays off  the paper elaborates on a case study in which dynamic adaptation of access control behavior leads to significant performance improvements   18 refs",The DiPS  software architecture for Self healing protocol stacks,"['Data processing', 'Investments', 'Java programming language', 'Optimization', 'Resource allocation', 'Robots', 'Sensors', 'Software engineering', 'Access control behavior', 'Grid computing', 'Pervasive computing', 'Protocol stacks', 'Ubiquitous computing', 'Optimization Techniques', 'Management', 'Industrial Economics', 'Control Instrumentation', 'Robotics', 'Data Processing and Image Processing', 'Computer Programming Languages', 'Computer Programming', 'Computer Software, Data Handling and Applications']","['Michiels, Sam', '', '', 'Desmet, Lieven', '', '', 'Joosen, Wouter', '', '', 'Verbaeten, Pierre']","DistriNet Research Group, Department of Computer Science, K U  Leuven, B 3001 Leuven, Belgium",2004,WICSA
806,807,"Research domains such as active networks, ad hoc networks, ubiquitous computing, pervasive computing, grid computing, and sensor networks, clearly show that computer networks will become more complex and heterogeneous  In many cases, central management and control of the network are far from trivial since both the topology and the connected devices change rapidly in such highly dynamic environments, while load circumstances may vary arbitrarily  The software architecture in a node needs to support flexibility  We have developed an architecture tailored to protocol stack software that allows customizing internal resource management in order to handle overload conditions gracefully  We show that the investment in explicit support for modularity and architectural constraints pays off  the paper elaborates on a case study in which dynamic adaptation of access control behavior leads to significant performance improvements   18 refs",The DiPS  software architecture for self healing protocol stacks,"['protocols', 'software architecture', 'DiPS+ software architecture', 'active networks', 'ad hoc networks', 'ubiquitous computing', 'pervasive computing', 'grid computing', 'sensor networks', 'computer networks', 'central management', 'network control', 'protocol stack software', 'internal resource management', 'modularity constraints', 'architectural constraints', 'access control behavior', 'performance improvement', 'Software engineering techniques', 'Distributed systems software', 'Protocols']","['Michiels, S', '', '', ' Desmet, L', '', '', ' Joosen, W', '', '', ' Verbaeten, P', '', '']","Dept  of Comput  Sci , Katholicke Univ  Leuven, Leuven, Belgium",2004,WICSA
807,808,"Research into design rationale in the past has focused on the representation of reasons and has omitted the connections between design rationales and design artefacts  Without such connections, designers and architects cannot easily assess how changing requirements or designs may affect the system  In this paper, we introduce a model called Architecture Rationale and Element Linkage  AREL  to represent the causal relationship between architecture elements and decisions  We further model AREL as a Bayesian Belief Network  BBN  to capture the probabilistic relationships between architecture elements and decisions in an architecture design model  Such probabilistic modelling enables architects to quantitatively predict and diagnose impact of change when part of the requirements or designs are changing  Using a partial design of a cheque image processing system, we illustrate how AREL is used to represent the decision model and how BBN is used to predict and diagnose change in the architecture design  We use a UML tool to capture the AREL model and a BBN tool to compute the probabilities of change impact    2005 IEEE   29 refs",Predicting change impact in architecture design with bayesian belief networks,"['Knowledge representation', 'Mathematical models', 'Requirements engineering', 'Software architecture', 'Software design', 'Unified Modeling Language', 'Architecture design', 'Architecture Rationale and Element Linkage (AREL)', 'Probabilistic modeling', 'Computer Programming', 'Computer Programming Languages', 'Artificial Intelligence', 'Computer Applications', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory']","['Tang, Antony', '', '', 'Jin, Yan', '', '', 'Han, Jun', '', '', 'Nicholson, Ann']","Faculty of ICT, Swinburne University of Technology, Melbourne, Australia  2  School of Computer Science and Software Engineering, Monash University, 3800, Vic , Australia",2005,WICSA
808,809,"Results of nitrate and phosphate concentrations measured using hand held  Hach  monitors are presented, both over individual tidal cycles and over longer term deployments at Pagham Harbour, West Sussex, UK  This macrotidal lagoon  offshore tidal range 3 0 m neaps 6 5 m springs  is a site of key importance as a nature reserve and a home for several rare species of plants and animals  In particular, the effects of fresh water salt water stratification over 4 tidal cycles at two tidal fresh water boundaries is presented  It is shown that obtaining periodic vertical profile measurements during individual tidal cycles helps to quantify the transport mechanisms of nutrients from the tidal limits into the main body of the lagoon  Of key interest is the interaction between sediment bound nutrients with the surrounding water in which the sediment is suspended during parts of the tidal cycle  Synthesis of these results with existing knowledge about sediment water nutrient interactions reveals how it is possible for nutrients to become trapped at the muddy tidal limits of the lagoon  In certain cases it is shown that nutrient rich water from fresh water streams only gradually mixes with the denser, salt water of the incoming tide  Whilst a degree of salinity induced stratification may be expected during the flood tide, these observations suggest that the water column is stratified with respect to both N and P, even well into the ebb tide  Thus at sites where stratification is important, there is a tendency for nutrients to remain preferentially near the water surface, and thus come into contact with fine, less mobile sediments near the surface of inter tidal zones, which are themselves, in general, accreting  Since the overlying water is generally slow moving during high water, it is postulated that saline induced vertical stratification of estuarine water is an important mechanism in promoting nutrient build up in muddy inter tidal areas of this kind    2007 Springer Science Business Media B V   16 refs","Influence of fresh water discharge on nutrient distribution in a macrotidal lagoon, West Sussex, UK","['Ecology', 'Nutrients', 'Phosphates', 'Sediment transport', 'Thermal stratification', 'Water resources', 'Fresh water', 'Tidal cycles', 'Water stratification', 'Atmospheric Properties', 'Water Resources', 'Ecology and Ecosystems', 'Soils and Soil Mechanics', 'Liquid Dynamics', 'Organic Compounds']","['Mitchell, S B', '', '', ' Theodoridou, A', '', '', ' Pope, D J', '', '']","School of the Environment, University of Brighton, Lewes Road, Brighton BN2 4GJ, United Kingdom",2007,ECSA
809,810,"Results of nitrate and phosphate concentrations measured using hand held  Hach  monitors are presented, both over individual tidal cycles and over longer term deployments at Pagham Harbour, West Sussex, UK  This macrotidal lagoon  offshore tidal range 3 0 m neaps 6 5 m springs  is a site of key importance as a nature reserve and a home for several rare species of plants and animals  In particular, the effects of fresh water salt water stratification over 4 tidal cycles at two tidal fresh water boundaries is presented  It is shown that obtaining periodic vertical profile measurements during individual tidal cycles helps to quantify the transport mechanisms of nutrients from the tidal limits into the main body of the lagoon  Of key interest is the interaction between sediment bound nutrients with the surrounding water in which the sediment is suspended during parts of the tidal cycle  Synthesis of these results with existing knowledge about sediment water nutrient interactions reveals how it is possible for nutrients to become trapped at the muddy tidal limits of the lagoon  In certain cases it is shown that nutrient rich water from fresh water streams only gradually mixes with the denser, salt water of the incoming tide  Whilst a degree of salinity induced stratification may be expected during the flood tide, these observations suggest that the water column is stratified with respect to both N and P, even well into the ebb tide  Thus at sites where stratification is important, there is a tendency for nutrients to remain preferentially near the water surface, and thus come into contact with fine, less mobile sediments near the surface of inter tidal zones, which are themselves, in general, accreting  Since the overlying water is generally slow moving during high water, it is postulated that saline induced vertical stratification of estuarine water is an important mechanism in promoting nutrient build up in muddy inter tidal areas of this kind    2007 Springer Science Business Media B V   16 refs","Influence of fresh water discharge on nutrient distribution in a macrotidal lagoon, West Sussex, UK","['Ecology', 'Nutrients', 'Phosphates', 'Sediment transport', 'Thermal stratification', 'Water resources', 'Fresh water', 'Tidal cycles', 'Water stratification', 'Atmospheric Properties', 'Water Resources', 'Ecology and Ecosystems', 'Soils and Soil Mechanics', 'Liquid Dynamics', 'Organic Compounds']","['Mitchell, S B', '', '', ' Theodoridou, A', '', '', ' Pope, D J', '', '']","School of the Environment, University of Brighton, Lewes Road, Brighton BN2 4GJ, United Kingdom",2008,ECSA
810,811,"Reverse engineering of software systems often employs static analysis of a program s source code  In this invited talk, I will present our approach to reverse engineering of software systems via analyzing monitoring data of a programs operational use  thus, via dynamic analysis  Our Kieker monitoring framework generates dependency graphs from observed monitoring data  It is used in several industrial cooperations on which I ll report  Copyright   2011 ACM   8 refs",Reverse engineering of dependency graphs via dynamic analysis,"['Computer software', 'Dynamic analysis', 'Monitoring', 'Reverse engineering', 'Static analysis', 'Dependency graphs', 'Industrial cooperation', 'Invited talk', 'Operational use', 'Software systems', 'Source codes', 'Strength of Building Materials', 'Methods', 'Computer Software, Data Handling and Applications', 'Acoustical and Optical Measuring Instruments', 'Electric and Electronic Measuring Instruments', 'Mechanical and Miscellaneous Measuring Instruments', 'Moisture, Pressure and Temperature, and Radiation Measuring Instruments']","['Hasselbring, Wilhelm']","University of Kiel, Institute of Computer Science, Software Engineering Group, D 24118 Kiel, Germany",2011,ECSA
811,812,"Reverse engineering the variability of an existing system is a challenging activity  The architect knowledge is essential to identify variation points and explicit constraints between features, for instance in feature models  FMs , but the manual creation of FMs is both time consuming and error prone  On a large scale, it is very difficult for an architect to guarantee that the resulting FM is consistent with the architecture it is associated with  In this paper, we present a comprehensive, tool supported process for reverse engineering architectural FMs  We develop automated techniques to extract and combine different variability descriptions of an architecture  Then, alignment and reasoning techniques are applied to integrate the architect knowledge and reinforce the extracted FM  We illustrate the process when applied to a representative software system and we report on our experience in this context    2011 Springer Verlag   24 refs",Reverse engineering architectural feature models,"['Models', 'Reverse engineering', 'Architectural features', 'Automated techniques', 'Error prones', 'Existing systems', 'Feature models', 'Reasoning techniques', 'Software systems', 'Computer Software, Data Handling and Applications', 'Engineering Graphics']","['Acher, Mathieu', '', '', 'Cleve, Anthony', '', '', 'Collet, Philippe', '', '', 'Merle, Philippe', '', '', 'Duchien, Laurence', '', '', 'Lahire, Philippe']","Universit  de Nice Sophia Antipolis   I3S  CNRS UMR 6070 , France  2  PReCISE Research Centre, University of Namur, Belgium  3  INRIA Lille Nord Europe, Univ  Lille 1   CNRS UMR 8022, France",2011,ECSA
812,813,"Robots have supported several areas of society, making daily tasks easier and executing dangerous, complex activities  The increasing demand and complexity of these robots have challenged the design of robotic systems, i e , the software systems that manage robots  In this context, Service Oriented Architecture  SOA  has been pointed out as a promising architectural style to structure such systems, arising the Service Oriented Robotic Systems  SORS   However, most of software architectures of SORS are still developed in an ad hoc manner  This lack of maturity reduces the potential of SOA in providing important quality attributes, such as reusability and maintainability, therefore affecting the overall quality of these systems  This paper presents ArchSORS, a systematic process that supports the design of software architectures for SORS  Experiment results have pointed out that ArchSORS can produce architectures with more quality, thus contributing to robotics and the areas of society that have gained with the use of robots    2014 Springer International Publishing Switzerland   11 refs",Towards a process to design architectures of service oriented robotic systems,"['Information services', 'Reusability', 'Robots', 'Service oriented architecture (SOA)', 'Software architecture', 'Architectural style', 'Complex activity', 'Design architecture', 'Quality attributes', 'Robotic systems', 'Service Oriented', 'Software systems', 'Systematic process', 'Industrial Wastes', 'Mechanical Design', 'Digital Computers and Systems', 'Computer Programming', 'Robotics', 'Information Services']","['Oliveira, Lucas Bueno Ruas', ' ,', '', ' Leroux, Elena', '', '', 'Felizardo, Katia Romero', '', '', 'Oquendo, Flavio', '', '', 'Nakagawa, Elisa Yumi']","Dept  of Computer Systems, University of S o Paulo   USP, S o Carlos, SP, Brazil  2  IRISA Research Institute, University of South Brittany, Vannes, France",2014,ECSA
813,814,"Robots have supported several areas of society, making daily tasks easier and executing dangerous, complex activities  The increasing demand and complexity of these robots have challenged the design of robotic systems, i e , the software systems that manage robots  In this context, Service Oriented Architecture  SOA  has been pointed out as a promising architectural style to structure such systems, arising the Service Oriented Robotic Systems  SORS   However, most of software architectures of SORS are still developed in an ad hoc manner  This lack of maturity reduces the potential of SOA in providing important quality attributes, such as reusability and maintainability, therefore affecting the overall quality of these systems  This paper presents ArchSORS, a systematic process that supports the design of software architectures for SORS  Experiment results have pointed out that ArchSORS can produce architectures with more quality, thus contributing to robotics and the areas of society that have gained with the use of robots   11 refs",Towards a Process to Design Architectures of Service Oriented Robotic Systems,"['robots', 'service-oriented architecture', 'software maintenance', 'software quality', 'software reusability', 'design architectures', 'service-oriented robotic systems', 'robot management', 'service-oriented architecture', 'SOA', 'software architectures', 'software quality attributes', 'software maintainability', 'software reusability', 'ArchSORS software architectures', 'Robotics', 'Software engineering techniques']","['Bueno Ruas Oliveira, L', '', '', ' Leroux, E', '', '', ' Romero Felizardo, K', '', '', ' Oquendo, F', '', '', ' Nakagawa, E Y', '', '']","Dept  of Comput  Syst , Univ  of Sao Paulo   USP, Sa o Carlos, Brazil  2  IRISA Res  Inst , Univ  of South Brittany, Vannes, France",2014,ECSA
814,815,"Runtime software adaptability   the ability to change an application s behavior during runtime   is an increasingly important capability for systems, both to support continuous operation and to support a good user experience  Achieving such adaptability may be very hard or easy  the degree of difficulty will largely reflect choices made in a system s architecture  Some architectural styles are much more supportive of dynamic change than others  This paper examines a range of styles and assesses them with respect to a four element evaluation framework, called BASE  The framework considers how a style supports changes to behavior, state, its execution context, and supports asynchrony of change  Styles considered include REST, event based, service oriented, and peer to peer    2009 IEEE   32 refs",Architectural styles for runtime software adaptation,"['Architecture', 'Computer software', 'Distributed computer systems', 'Architectural style', 'Asynchrony', 'Continuous operation', 'Dynamic changes', 'Evaluation framework', 'Event-based', 'Execution context', 'Peer to peer', 'Run-time software', 'Runtimes', 'Service Oriented', 'User experience', 'Buildings and Towers', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Taylor, Richard N', '', '', ' Medvidovic, Nenad', '', '', 'Oreizy, Peyman']","Institute for Software Research, University of California, Irvine, Irvine, CA 92697 3455, United States  2  Computer Science Department, University of Southern California, Los Angeles, CA 90089 0781, United States  3  Launch21",2009,ECSA
815,816,"Runtime software adaptability   the ability to change an application s behavior during runtime   is an increasingly important capability for systems, both to support continuous operation and to support a good user experience  Achieving such adaptability may be very hard or easy  the degree of difficulty will largely reflect choices made in a system s architecture  Some architectural styles are much more supportive of dynamic change than others  This paper examines a range of styles and assesses them with respect to a four element evaluation framework, called BASE  The framework considers how a style supports changes to behavior, state, its execution context, and supports asynchrony of change  Styles considered include REST, event based, service oriented, and peer to peer    2009 IEEE   32 refs",Architectural styles for runtime software adaptation,"['Architecture', 'Computer software', 'Distributed computer systems', 'Architectural style', 'Asynchrony', 'Continuous operation', 'Dynamic changes', 'Evaluation framework', 'Event-based', 'Execution context', 'Peer to peer', 'Run-time software', 'Runtimes', 'Service Oriented', 'User experience', 'Buildings and Towers', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Taylor, Richard N', '', '', ' Medvidovic, Nenad', '', '', 'Oreizy, Peyman']","Institute for Software Research, University of California, Irvine, Irvine, CA 92697 3455, United States  2  Computer Science Department, University of Southern California, Los Angeles, CA 90089 0781, United States  3  Launch21",2009,WICSA
816,817,"Runtime software adaptability   the ability to change an application s behavior during runtime   is an increasingly important capability for systems, both to support continuous operation and to support a good user experience  Achieving such adaptability may be very hard or easy  the degree of difficulty will largely reflect choices made in a system s architecture  Some architectural styles are much more supportive of dynamic change than others  This paper examines a range of styles and assesses them with respect to a four element evaluation framework, called BASE  The framework considers how a style supports changes to behavior, state, its execution context, and supports asynchrony of change  Styles considered include REST, event based, service oriented, and peer to peer    2009 IEEE   32 refs",Architectural styles for runtime software adaptation,"['Architecture', 'Computer software', 'Distributed computer systems', 'Architectural style', 'Asynchrony', 'Continuous operation', 'Dynamic changes', 'Evaluation framework', 'Event-based', 'Execution context', 'Peer to peer', 'Run-time software', 'Runtimes', 'Service Oriented', 'User experience', 'Buildings and Towers', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Taylor, Richard N', '', '', ' Medvidovic, Nenad', '', '', 'Oreizy, Peyman']","Institute for Software Research, University of California, Irvine, Irvine, CA 92697 3455, United States  2  Computer Science Department, University of Southern California, Los Angeles, CA 90089 0781, United States  3  Launch21",2011,WICSA
817,818,"Scalability is a significant feature of cloud computing, which addresses to increase or decrease the capacities of allocated virtual resources at application, platform, database and infrastructure level on demand  We investigate scalable architecture solutions for cloud PaaS that allow services to utilize the resources dynamically and effectively without directly affecting users  We have implemented scalable architectures with different session state management solutions, deploying an online shopping cart application in a PaaS solution, and measuring the performance and cost for three server side session state providers  Caching, SQL database and NoSQL database  A commercial solution with its supporting state management components has been used  Particularly when re architecting software for the cloud, the trade off between performance, scalability and cost implications needs to be discussed    2014 Springer International Publishing Switzerland   20 refs",Scalable architectures for platform as a service clouds  Performance and cost analysis,"['Electronic commerce', 'Scalability', 'Software architecture', 'Windows operating system', 'Cost analysis', 'Nosql database', 'Online shopping', 'Scalable architectures', 'Session state management', 'State management', 'Virtual resource', 'Windows azures', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications']","['Xiong, Huanhuan', '', '', 'Fowley, Frank', '', '', 'Pahl, Claus', '', '', 'Moran, Niall']","IC4   the Irish Centre for Cloud Computing and Commerce, Dublin City University, Dublin 9, Ireland  2  Microsoft Ireland, Dublin 18, Ireland",2014,ECSA
818,819,"Scalability is a significant feature of cloud computing, which addresses to increase or decrease the capacities of allocated virtual resources at application, platform, database and infrastructure level on demand  We investigate scalable architecture solutions for cloud PaaS that allow services to utilize the resources dynamically and effectively without directly affecting users  We have implemented scalable architectures with different session state management solutions, deploying an online shopping cart application in a PaaS solution, and measuring the performance and cost for three server side session state providers  Caching, SQL database and NoSQL database  A commercial solution with its supporting state management components has been used  Particularly when re architecting software for the cloud, the trade off between performance, scalability and cost implications needs to be discussed   20 refs",Scalable Architectures for Platform as a Service Clouds  Performance and Cost Analysis,"['cache storage', 'cloud computing', 'resource allocation', 'retail data processing', 'software architecture', 'software cost estimation', 'software management', 'software performance evaluation', 'SQL', 'systems re-engineering', 'virtualisation', 'platform-as-a-service clouds', 'performance analysis', 'cost analysis', 'cloud computing', 'virtual resource allocation', 'scalable architecture solutions', 'cloud PaaS', 'session state management solutions', 'online shopping cart application', 'performance measurement', 'server-side session state providers', 'caching', 'SQL database', 'NoSQL database', 'software rearchitecture', 'Windows Azure platform', 'Retailing and distribution computing', 'File organisation', 'Software engineering techniques', 'Internet software', 'Software performance evaluation']","['Huanhuan Xiong', '', '', 'Fowley, F', '', '', ' Pahl, C', '', '', ' Moran, N', '', '']","IC4 The Irish Centre for Cloud Comput    Commerce, Dublin City Univ , Dublin, Ireland  2  Microsoft Ireland, Dublin, Ireland",2014,ECSA
819,820,"Scaling relational database in the cloud is one of the critical factors in the migration of applications to the cloud  It is important that applications can directly monitor fine grained scaling performance  such as consistency related replication delays and queryspecific response time  and specify application specific policies for autonomic management of the scaling  However, there is no general mechanism and reusable framework and infrastructures to help this  The current facilities in cloud hosted relational databases are also very limited in providing fine grained and consumer centric monitoring data  The situation is exacerbated by the complexity of the different underlying cloud technologies and the need to separate scaling policy from business logic  This paper presents an architecture framework to facilitate a consumer centric, application managed autonomic scaling of relational databases in cloud  The architecture framework includes a new consumer centric monitoring infrastructure and customisable components for sensing, monitoring, analysing and actuation according to application level scaling policies without modifying an existing application  We evaluated our framework using a modified Web 2 0 application benchmark  The results demonstrate the framework s ability to provide application level flexibility in achieving improved throughput, data freshness  different levels of consistency  and monetary saving  Copyright 2012 ACM   23 refs",An architecture framework for application managed scaling of cloud hosted relational databases,"['Actuators', 'Architecture', 'Clouds', 'Computer software reusability', 'Database systems', 'Sensors', 'Software architecture', 'Amazon ec2', 'Application-managed', 'Architecture frameworks', 'Autonomic management', 'Business logic', 'Consumer-centric', 'Critical factors', 'Framework', 'Levels of consistency', 'Monetary savings', 'Monitor', 'Relational Database', 'Web 2.0 applications', 'Production Planning and Control  Manufacturing', 'Industrial Engineering and Management', 'Chemistry', 'Computer Software, Data Handling and Applications', 'Hydraulics, Pneumatics and Related Equipment, and Fluidics', 'Meteorology', 'Buildings and Towers']","['Zhao, Liang', ' ,', '', ' Sakr, Sherif', ' ,', '', ' Zhu, Liming', ' ,', '', ' Xu, Xiwei', ' ,', '', ' Liu, Anna', ' ,', '']","National ICT Australia  NICTA , University of New South Wales, Australia  2  School of Computer Science and Engineering, University of New South Wales, Australia",2012,ECSA
820,821,"Scaling relational database in the cloud is one of the critical factors in the migration of applications to the cloud  It is important that applications can directly monitor fine grained scaling performance  such as consistency related replication delays and queryspecific response time  and specify application specific policies for autonomic management of the scaling  However, there is no general mechanism and reusable framework and infrastructures to help this  The current facilities in cloud hosted relational databases are also very limited in providing fine grained and consumer centric monitoring data  The situation is exacerbated by the complexity of the different underlying cloud technologies and the need to separate scaling policy from business logic  This paper presents an architecture framework to facilitate a consumer centric, application managed autonomic scaling of relational databases in cloud  The architecture framework includes a new consumer centric monitoring infrastructure and customisable components for sensing, monitoring, analysing and actuation according to application level scaling policies without modifying an existing application  We evaluated our framework using a modified Web 2 0 application benchmark  The results demonstrate the framework s ability to provide application level flexibility in achieving improved throughput, data freshness  different levels of consistency  and monetary saving  Copyright 2012 ACM   23 refs",An architecture framework for application managed scaling of cloud hosted relational databases,"['Actuators', 'Architecture', 'Clouds', 'Computer software reusability', 'Database systems', 'Sensors', 'Software architecture', 'Amazon ec2', 'Application-managed', 'Architecture frameworks', 'Autonomic management', 'Business logic', 'Consumer-centric', 'Critical factors', 'Framework', 'Levels of consistency', 'Monetary savings', 'Monitor', 'Relational Database', 'Web 2.0 applications', 'Production Planning and Control  Manufacturing', 'Industrial Engineering and Management', 'Chemistry', 'Computer Software, Data Handling and Applications', 'Hydraulics, Pneumatics and Related Equipment, and Fluidics', 'Meteorology', 'Buildings and Towers']","['Zhao, Liang', ' ,', '', ' Sakr, Sherif', ' ,', '', ' Zhu, Liming', ' ,', '', ' Xu, Xiwei', ' ,', '', ' Liu, Anna', ' ,', '']","National ICT Australia  NICTA , University of New South Wales, Australia  2  School of Computer Science and Engineering, University of New South Wales, Australia",2012,WICSA
821,822,"Security in personal devices like mobile phones, tablets, is a major concern because these devices often carry sensitive information  Device platforms  e g  Android  implement  limit access  and  authorize  security tactics to protect privacy security sensitive resources against misuse by an app  For instance, Android defines a set of 100  permissions that guard resources such as phonebook data, network sockets and so on  However, due to poor understanding of these complex permissions, users inadvertently grant dangerous permissions to the apps, which defeat the security tactics implemented  Thus, security of a device is directly related to the capabilities granted to the intruder  app in this case   In this paper, we define a new quality attribute  QA  called Intrusiveness of an app, which characterizes the capabilities of an app to cause violation of personal and operational information of the user device  We suggest a framework to compute  in trusiveness  on a given platform  Intrusiveness of an app is represented as a 4 tuple  This tuple characterizes the extent to which the permissions, that are being sought by an app, could compromise in 4 dimensions of information, viz  User, Device, Carrier and the External World  It helps the user to realize the nature of privacy sensitive resources that  s he is exposing to the app  Efficacy of our framework is demonstrated by examining intrusiveness of 814 most popular free apps on Android  The Intrusiveness QA could be used to compute potential violation of User Personal Privacy, User Locational Privacy and violation of Device Integrity  Our analysis shows that 84  of apps examined are in a position to compromise User Personal Privacy, 96  can comprise Device Integrity and 92  can compromise Locational Privacy  Copyright 2013 ACM   11 refs",A multi dimensional measure for intrusion   The intrusiveness quality attribute,"['Data privacy', 'Android', 'Intrusiveness', 'Network sockets', 'Personal devices', 'Personal privacy', 'Phonebook', 'Quality attributes', 'Sensitive informations', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Robotics']","['Agrawal, Ashish', '', '', 'Sodhi, Balwinder', '', '', 'Prabhakar, T V', '', '']","Department of Computer Science and Eng , Indian Institute of Technology Kanpur, Kanpur, 208016, India  2  Department of Computer Science and Eng , Indian Institute of Technology Ropar, Ropar, 140001, India",2013,QoSA
822,823,"Security is a fundamental concern in clouds and several cloud vendors provide Security Reference Architectures  SRAs  to describe the security level of their services  A SRA is an abstract architecture without implementation details showing a conceptual model of security for a cloud system  In general, Reference Architectures  RAs  are becoming useful tools to understand and build complex systems  We propose here a Security Reference Architecture  SRA , defined using UML models and patterns, incorporating a specific approach to build secure systems  We present a metamodel and possible patterns to conceptualize the approach  We also describe some uses for this SRA, including its value for Service Level Agreements  SLAs , service certification, monitoring, and security evaluation  We show this latter use in some detail  Copyright   2014 ACM 978 1 4503 2523 3 14 04 15 00   17 refs",A Security Reference Architecture for cloud systems,"['Cloud computing', 'Software architecture', 'Unified Modeling Language', 'Abstract architecture', 'Conceptual model', 'Reference architecture', 'Secure software development', 'Security evaluation', 'Security level', 'Security patterns', 'Service level agreement (SLAs)', 'Abstract architecture', 'Conceptual model', 'Reference architecture', 'Secure software development', 'Security evaluation', 'Security level', 'Security patterns', 'Service level agreement (SLAs)', 'Buildings and Towers', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications']","['Fernandez, Eduardo B', '', '', ' Monge, Raul']","Department of Informatics, Universidad Tecnica Federico Santa Maria, Valparaiso, Chile",2014,WICSA
823,824,"Security is an important quality attribute for Service Oriented Architecture  SOA  based system  However, there is no sufficient support for modelling security centric concerns for SOA based application  This paper presents a metamodel called SoaML4Security, which introduces QoS concepts into Service oriented Modelling Language  SoaML  in order to support the modelling of security aspect  We motivate the need of extending SoaML for modelling security concerns from different viewpoints  We describe the process of developing the metamodel, which can support Model Driven Engineering  MDE  approach for service oriented applications  The use of the extended metamodel has been demonstrated by modelling a real world service oriented application for security requirements    2010 ACM   17 refs",Modeling security for service oriented applications,"['Information services', 'Quality of service', 'Software architecture', 'Technical presentations', 'MDE', 'QOS', 'security', 'SOA', 'SoaML', 'Information Services', 'Information Dissemination', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television']","['Kou, Siming', '', '', 'Babar, Muhammad Ali', '', '', 'Sangroya, Amit']","Shanghai Fandi Information Ltd , Caoxi North Street367, Xuhuiqu, Shanghai, China  2  ITU Copenhagen, Copenhagen, Denmark  3  IIIT Hyderabad, Hyderabad, India",2010,ECSA
824,825,"Security is an important quality attribute required in many software intensive systems  However, software development methodologies do not provide sufficient support to address security related issues  Furthermore, the majority of the software designers do not have adequate expertise in the security domain  Thus, security is often treated as an add on to the designed architecture  Such ad hoc practices to deal with security issues can result in a system that is vulnerable to different types of attacks  The security community has discovered several security sensitive design patterns, which can be used to compose a security sensitive architecture  However, there is little awareness about the relationship between security and software architecture  Our research has identified several security patterns along with the properties that can be achieved through those patterns  This paper presents those patterns and properties in a framework that can provide appropriate support to address security related issues during architecture processes   35 refs",Supporting security sensitive architecture design,"['object-oriented programming', 'security of data', 'software architecture', 'software quality', 'security sensitive architecture design', 'software quality', 'software intensive system', 'software development methodology', 'design patterns', 'software architecture', 'Software engineering techniques', 'Object oriented programming', 'Data security']","['Babar, M A', '', '', ' Wang, X', ' Gorton, I']","Nat  ICT Australia, Sydney, NSW, Australia",2005,QoSA
825,826,"Security metrics are the tools for providing correct and up to date information about a state of security  This information is essential for managing security efficiently  Although a number of security metrics were proposed we still need reliable ways for assessment of security  First of all, we do not have a widely accepted and unambiguous definition which defines what it means that one system is more secure than another one  Without this knowledge we cannot show that a metric really measures security  Second, there is no a universal formal model for all metrics which can be used for rigourous analysis  In this paper we investigate how we can define  more secure  relation and propose our basic formal model for a description and analysis of security metrics    2010 ACM   25 refs",Formal approach to security metrics  What does  more secure  mean for you,"['Software architecture', 'Technical presentations', 'Formal approach', 'formal metrics', 'Formal model', 'Security measurement', 'Security metrics', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Krautsevich, Leanid', '', '', 'Martinelli, Fabio', '', '', 'Yautsiukhin, Artsiom']","Department of Computer Science, University of Pisa, Largo B  Pontecorvo 3, Pisa, Italy  2  Istituto di Informatica e Telematica, Consiglio Nazionale Delle Ricerche, G  Moruzzi 1, Pisa, Italy",2010,ECSA
826,827,"Self Repairing  or healing  systems are systems equipped with a mechanism that monitors the system behaviour to determine whether it behaves within prefixed parameters  If a deviation exists, then the system itself is in charge of adapting its configuration  In this paper we show how to model self repairing systems by means of Dynamic Software Architectures  DSAs   DSAs are formalized as Typed  hyper  Graph Grammars  TGGs  and this formalization enables verification of correctness and completeness of self repairing systems  DSAs are modeled and verified by using the Attributed Graph Grammar system  AGG   The overall approach is applied to a traffic light system case study    2009 IEEE   28 refs",Self repairing systems modeling and verification using AGG,"['Architecture', 'Computer software selection and evaluation', 'Context sensitive grammars', 'Formal languages', 'Graph theory', 'Repair', 'Traffic signs', 'Attributed graphs', 'Dynamic software architecture', 'Graph grammar', 'Healing systems', 'Self repairing', 'Self-repairing systems', 'Traffic light', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory', 'Maintenance', 'Management', 'Computer Applications', 'Computer Programming Languages', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Highway Traffic Control', 'Highway Engineering', 'Buildings and Towers']","['Bucchiarone, Antonio', '', '', 'Pelliccione, Patrizio', '', '', 'Vattani, Charlie', '', '', 'Runge, Olga']","FBK IRST, Trento, Italy, via Sommarive 18, 38050 Trento, Italy  2  Dipartimento di Informatica, Universit  Dell Aquila, L Aquila, Italy  3  Department of Software Engineering and Theoretical Computer Science, Technical University, Berlin, Germany",2009,ECSA
827,828,"Self Repairing  or healing  systems are systems equipped with a mechanism that monitors the system behaviour to determine whether it behaves within prefixed parameters  If a deviation exists, then the system itself is in charge of adapting its configuration  In this paper we show how to model self repairing systems by means of Dynamic Software Architectures  DSAs   DSAs are formalized as Typed  hyper  Graph Grammars  TGGs  and this formalization enables verification of correctness and completeness of self repairing systems  DSAs are modeled and verified by using the Attributed Graph Grammar system  AGG   The overall approach is applied to a traffic light system case study    2009 IEEE   28 refs",Self repairing systems modeling and verification using AGG,"['Architecture', 'Computer software selection and evaluation', 'Context sensitive grammars', 'Formal languages', 'Graph theory', 'Repair', 'Traffic signs', 'Attributed graphs', 'Dynamic software architecture', 'Graph grammar', 'Healing systems', 'Self repairing', 'Self-repairing systems', 'Traffic light', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory', 'Maintenance', 'Management', 'Computer Applications', 'Computer Programming Languages', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Highway Traffic Control', 'Highway Engineering', 'Buildings and Towers']","['Bucchiarone, Antonio', '', '', 'Pelliccione, Patrizio', '', '', 'Vattani, Charlie', '', '', 'Runge, Olga']","FBK IRST, Trento, Italy, via Sommarive 18, 38050 Trento, Italy  2  Dipartimento di Informatica, Universit  Dell Aquila, L Aquila, Italy  3  Department of Software Engineering and Theoretical Computer Science, Technical University, Berlin, Germany",2009,WICSA
828,829,"Self Repairing  or healing  systems are systems equipped with a mechanism that monitors the system behaviour to determine whether it behaves within prefixed parameters  If a deviation exists, then the system itself is in charge of adapting its configuration  In this paper we show how to model self repairing systems by means of Dynamic Software Architectures  DSAs   DSAs are formalized as Typed  hyper  Graph Grammars  TGGs  and this formalization enables verification of correctness and completeness of self repairing systems  DSAs are modeled and verified by using the Attributed Graph Grammar system  AGG   The overall approach is applied to a traffic light system case study    2009 IEEE   28 refs",Self repairing systems modeling and verification using AGG,"['Architecture', 'Computer software selection and evaluation', 'Context sensitive grammars', 'Formal languages', 'Graph theory', 'Repair', 'Traffic signs', 'Attributed graphs', 'Dynamic software architecture', 'Graph grammar', 'Healing systems', 'Self repairing', 'Self-repairing systems', 'Traffic light', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory', 'Maintenance', 'Management', 'Computer Applications', 'Computer Programming Languages', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Highway Traffic Control', 'Highway Engineering', 'Buildings and Towers']","['Bucchiarone, Antonio', '', '', 'Pelliccione, Patrizio', '', '', 'Vattani, Charlie', '', '', 'Runge, Olga']","FBK IRST, Trento, Italy, via Sommarive 18, 38050 Trento, Italy  2  Dipartimento di Informatica, Universit  Dell Aquila, L Aquila, Italy  3  Department of Software Engineering and Theoretical Computer Science, Technical University, Berlin, Germany",2011,WICSA
829,830,"Self adaptation allows continuously running software systems to operate in changing and uncertain contexts while meeting their requirements in a broad range of contexts, e g , from low to high load situations  As a consequence, requirements for self adaptive systems are more complex than requirements for static systems as they have to explicitly address properties of the self adaptation layer  While approaches exist in the literature to capture this new type of requirements formally, their achievement cannot be analyzed in early design phases yet  In this paper, we apply RELAX to formally specify non functional requirements for self adaptive systems  We then apply our model based SimuLizar approach for a semi automatic analysis to test whether the self adaptation layer ensures that these nonfunctional requirements are met  We evaluate our approach on the design of a proof of concept load balancer system  As this evaluation demonstrates, we can iteratively improve our system design by improving unsatisfactory self adaption rules  Copyright 2013 ACM   23 refs",Performance analysis of self adaptive systems for requirements validation at design time,"['Early design phasis', 'Non-functional requirements', 'Performance analysis', 'Performance engineering', 'Requirements', 'Requirements validation', 'Self-adaptive', 'Self-adaptive system', 'Control Systems']","['Becker, Matthias', '', '', 'Luckey, Markus', '', '', 'Becker, Steffen']","Software Engineering Group, Heinz Nixdorf Institute, University of Paderborn, Zukunftsmeile 1, 33102 Paderborn, Germany  2  Department of Computer Science, University of Paderborn, Zukunftsmeile 1, 33102 Paderborn, Germany",2013,QoSA
830,831,"Self adaptation is now a promising approach to maximize the satisfaction of requirements under changing environmental conditions  One of the key challenges for such self adaptive systems is to automatically find a relevant architectural configuration  Existing approaches requires a set of adaptation strategies and the rough estimation of their side effects  However, due to the lack of validation methods for such strategies and side effects, existing approaches may lead to erroneous adaptations  Instead of side effects, our solution leverages quality contracts whose accuracy can be separately established and which can be dynamically composed to get a quality prediction of any possible architectural configurations  To support self adaptation, we propose a reactive planning algorithm which exploits quality contracts to dynamically discover unforeseen architectural configurations  We illustrate our approach using a running HTTP server adapting its architecture with respect to the number and the similarity of incoming requests    2010 Springer Verlag   21 refs",Using QoS contracts to drive architecture centric self adaptation,"['Adaptive systems', 'Computer software', 'Adaptation strategies', 'Environmental conditions', 'ITS architecture', 'Quality prediction', 'Reactive planning', 'Rough estimation', 'Self adaptation', 'Self-adaptive system', 'Side effect', 'Validation methods', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Control Systems']","['Chauvel, Franck', '', '', 'Song, Hui', '', '', 'Chen, Xiangping', '', '', 'Huang, Gang', '', '', 'Mei, Hong']","Key Laboratory of High Confidence Software Technologies, School of Electronics Engineering and Computer Science, Peking University, Beijing, 100871, China",2010,QoSA
831,832,"Self adaptive systems are capable of changing their behaviour at runtime to meet target constraints  An important research question is how quality of service models can inform runtime adaptation  This paper presents a solution to the problem by application of control theory to improve performance of queued systems by means of architectural adaptation  In a paper presented at the previous year s QoSA conference, we showed how Auto Regressive Integrated Moving Average techniques can be utilized to forecast how Quality of Service  QoS  characteristics are likely to evolve in the near future  This is particularly important in cases where systems can be adapted to counter QoS constraint violations  In this paper, we show how, given a similar type of QoS characteristic forecasts, strategies of architectural adaptation can be implemented that pre emptively avoid QoS violations  The novelty of our approach is that we use classical control theory to ensure that our adaptation strategies are stable, in the sense that they do not oscillate between choices  We provide a description of how our control theoretic model can be implemented using context based interception in  NET via model driven engineering    2008 Springer Verlag Berlin Heidelberg   15 refs",Pre emptive adaptation through classical control theory,"['Adaptive systems', 'Automation', 'Computer software selection and evaluation', 'Control systems', 'Control theory', 'Cybernetics', 'DC motors', 'Embedded systems', 'Forecasting', 'Quality control', 'Software architecture', 'System theory', 'Technology', 'Adaptation strategies', 'Auto-regressive', 'Classical control theory', 'Constraint violations', 'International conferences', 'Model-driven engineering', 'Moving averages', 'Previous year', 'Quality of softwares', 'Run-time', 'Run-time adaptations', 'Self-adaptive systems', 'Systems Science', 'Quality Assurance and Control', 'Management', 'Engineering Profession', 'Control Systems', 'Automatic Control Principles and Applications', 'Artificial Intelligence', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Systems and Equipment', 'Telecommunication  Radar, Radio and Television', 'DC Motors', 'Biology']","['Duzbayev, Nurzhan', '', '', 'Poernomo, Iman']","King s College London, Strand, London WC2R2LS, United Kingdom",2007,QoSA
832,833,"Self adaptive systems are capable of changing their behaviour at runtime to meet target constraints  An important research question is how quality of service models can inform runtime adaptation  This paper presents a solution to the problem by application of control theory to improve performance of queued systems by means of architectural adaptation  In a paper presented at the previous year s QoSA conference, we showed how auto regressive integrated moving average techniques can be utilized to forecast how quality of service  QoS  characteristics are likely to evolve in the near future  This is particularly important in cases where systems can be adapted to counter QoS constraint violations  In this paper, we show how, given a similar type of QoS characteristic forecasts, strategies of architectural adaptation can be implemented that pre emptively avoid QoS violations  The novelty of our approach is that we use classical control theory to ensure that our adaptation strategies are stable, in the sense that they do not oscillate between choices  We provide a description of how our control theoretic model can be implemented using context based interception in  NET via model driven engineering   15 refs",Pre emptive adaptation through classical control theory,"['autoregressive moving average processes', 'forecasting theory', 'quality of service', 'queueing theory', 'self-adjusting systems', 'preemptive adaptation', 'classical control theory', 'self-adaptive systems', 'runtime adaptation', 'performance improvement', 'queued systems', 'architectural adaptation', 'auto-regressive integrated moving average techniques', 'quality of service characteristic forecasting', 'context-based interception', '.NET', 'model driven engineering', 'Queueing systems', 'Queueing theory', 'Control applications in telecommunications', 'Self adjusting control systems', 'Queueing theory']","['Duzbayev, N', '', '', ' Poernomo, I', '', '']","King s Coll  London, London, United Kingdom",2008,QoSA
833,834,"Service Based Systems, composed of Web Services  WSs , offer promising solutions to software development problems for companies  Like other software artefacts, WSs evolve due to the changed user requirements and execution contexts, which may introduce poor solutions Antipatterns may cause  1  degradation of design and quality of service  QoS  and  2  difficult maintenance and evolution  Thus, the automatic detection of antipatterns in WSs, which aims at evaluating their design and QoS requires attention  We propose SODA W  Service Oriented Detection for Antipatterns in Web services , an approach supported by a framework for specifying and detecting antipatterns in WSs  Using SODA W, we specify ten antipatterns, including God Object Web Service and Fine Grained Web Service, and perform their detection in two different corpora   1  13 weather related and  2  109 financial related WSs  SODA W can specify and detect antipatterns in WSs with an average precision of more than 75  and a recall of 100     2014 Springer International Publishing Switzerland   22 refs",Specification and detection of SOA antipatterns in web services,"['Error detection', 'Quality of service', 'Software architecture', 'Specifications', 'Web services', 'Anti-patterns', 'Automatic Detection', 'Execution context', 'Fine grained', 'Service Oriented', 'Service-based systems', 'Software artefacts', 'User requirements', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Software, Data Handling and Applications', 'Codes and Standards']","['Palma, Francis', ' ,', '', ' Moha, Naouel', '', '', 'Tremblay, Guy', '', '', 'Gu h neuc, Yann Ga l']","Ptidej Team, DGIGL,  cole Polytechnique de Montr al, Canada  2  D partement d Informatique, Universit  du Qu bec   Montr al, Canada",2014,ECSA
834,835,"Service Based Systems, composed of Web Services  WSs , offer promising solutions to software development problems for companies  Like other software artefacts, WSs evolve due to the changed user requirements and execution contexts, which may introduce poor solutions Antipatterns may cause  1  degradation of design and quality of service  QoS  and  2  difficult maintenance and evolution  Thus, the automatic detection of antipatterns in WSs, which aims at evaluating their design and QoS requires attention  We propose SODA W  Service Oriented Detection for Antipatterns in Web services , an approach supported by a framework for specifying and detecting antipatterns in WSs  Using SODA W, we specify ten antipatterns, including God Object Web Service and Fine Grained Web Service, and perform their detection in two different corpora   1  13 weather related and  2  109 financial related WSs  SODA W can specify and detect antipatterns in WSs with an average precision of more than 75  and a recall of 100    22 refs",Specification and Detection of SOA Antipatterns in Web Services,"['formal specification', 'object-oriented methods', 'quality of service', 'service-oriented architecture', 'Web services', 'SOA antipattern detection', 'SOA antipattern specification', 'service-based systems', 'software development problems', 'software artefacts', 'design degradation', 'quality of service', 'QoS', 'automatic antipattern detection', 'SODA-W', 'service oriented detection for antipatterns in Web services', 'God Object Web Service', 'Fine Grained Web Service', 'weather-related WS', 'financial-related WS', 'Internet software', 'Software engineering techniques', 'Formal methods']","['Palma, F', '', '', ' Moha, N', '', '', ' Tremblay, G', '', '', ' Gue he neuc, Y', 'G', '', '']","DGIGL, Ecole Polytech  de Montreal, Montreal, QC, Canada  2  Dept  d Inf , Univ  du Quebec a Montreal, Montreal, QC, Canada",2014,ECSA
835,836,"Service Oriented Architecture  SOA  has received increasing attention by providing low coupling, reuse, productivity, and a better understanding of the business domain  However, there are challenges in creating quality solutions using services  Based on SOA, reference models and reference architectures have been proposed to support the understanding, development, and standardization in the development of service oriented systems  Considering the relevance of SOA, as well as the lack of a complete panorama about these models and architectures, this paper aims at presenting a detailed view about the establishment and use of these models and architectures  For this, we conducted a systematic review  As main results, we observed a recent increase in the number of work regarding reference models and reference architectures based on SOA, including for different domains  Furthermore, based on the presented view, we identified interesting and important perspectives for future research    2010 Springer Verlag Berlin Heidelberg   7 refs",Reference models and reference architectures based on service oriented architecture  A systematic review,"['Information services', 'Models', 'Business domain', 'Different domains', 'Low coupling', 'Reference architecture', 'Reference models', 'Service Oriented Systems', 'Systematic Review', 'Computer Programming', 'Engineering Graphics', 'Information Services']","['De Oliveira, Lucas Bueno Ruas', '', '', 'Romero Felizardo, Katia', '', '', 'Feitosa, Daniel', '', '', 'Nakagawa, Elisa Yumi']","Dept  of Computer Systems, University of S o Paulo   USP, PO Box 668, S o Carlos, SP 13560 970, Brazil",2010,ECSA
836,837,"Service Oriented Architectures  SOA  offer a flexible solution to the integration of systems, applications, protocols, data sources, and processes into a cohesive system to support critical business operations  A major challenge in these service based systems is how to ensure the availability and reliability of web services upon which user applications and services are built  This paper describes a high availability SOA platform for deploying and integrating enterprise applications  This SOA platform has been used to deploy and integrate multiple large enterprise applications that are used throughout Motorola for the past few years    2005 IEEE   5 refs",Service oriented architecture for deploying and integrating enterprise applications,"['Data reduction', 'Enterprise resource planning', 'Information services', 'Network protocols', 'User interfaces', 'Web services', 'Cohesive systems', 'Critical business operations', 'Multiple large enterprise', 'Service oriented architecture (SOA)', 'Computer Peripheral Equipment', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Information Services']","['Jiang, Michael', '', '', 'Willey, Allan']",Motorola,2005,WICSA
837,838,"Service based business processes must evolve to remain aligned with their goals, with zero downtime to guarantee business continuity  A new version of a service should be adopted as soon as it becomes available to let clients benefit from the updated functionality and or improved quality of service  In practice, however, existing services may be involved in distributed computations that cannot immediately adopt the new versions without suffering inconsistencies  The paper proposes a solution for the consistent runtime evolution of service based business processes  new service versions can be adopted safely and in a timely fashion, and old versions can be consistently decommissioned  The proposal has been evaluated in the context of an online bank wire transfer example  Our experiments show that the approach is timely in activating service updates, and that the overhead it introduces is negligible    2014 IEEE   20 refs",Consistent runtime evolution of service based business processes,"['Quality of service', 'Business continuity', 'Business Process', 'Distributed computations', 'New services', 'Online banks', 'Run-time evolutions', 'Service-based', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Software, Data Handling and Applications']","['Baresi, Luciano', '', '', 'Guinea, Sam', '', '', 'Manna, Valerio Panzica La']","Deep SE Group, Dipartimento di Elettronica Informazione e Bioingegneria, Piazza L  da Vinci, 32, 20133 Milano, Italy",2014,WICSA
838,839,"Service based software architectures are often modeled with queues and queuing networks  Such models are useful for performance evaluation and design  They can also assist in runtime maintenance and administration, but, in this context, it is often far more valuable to be able to forecast how QoS characteristics are likely to evolve in the near future  This is particularly important in cases where systems can be adapted to counter QoS constraint violations  in such systems, given predictions of likely future QoS characteristics, pre emptive adaptation strategies can be implemented  This paper outlines an approach to runtime prediction of QoS characteristics of queued systems  Predictions are computed by applying ARIMA forecasting techniques to basic properties of a queued model, and then using the model to predict complex QoS characteristics  We outline how our methods integrate into our implementation framework for monitoring and pre emptive adaptation of Web service based systems   19 refs",Runtime prediction of queued behaviour,"['queueing theory', 'software architecture', 'software performance evaluation', 'software quality', 'Web services', 'runtime queued behaviour prediction', 'service-based software architectures', 'queuing networks', 'performance evaluation', 'QoS characteristics', 'QoS constraint violations', 'ARIMA forecasting technique', 'Web service based systems', 'Software engineering techniques', 'Software performance evaluation', 'Distributed systems software', 'Queueing theory']","['Duzbayev, N', '', '', ' Poernomo, I', '', '']","King s Coll  London, London, United Kingdom",2006,QoSA
839,840,"Service based software architectures are often modeled with queues and queuing networks  Such models are useful for performance evaluation and design  They can also assist in runtime maintenance and administration, but, in this context, it is often far more valuable to be able to forecast how QoS characteristics are likely to evolve in the near future  This is particularly important in cases where systems can be adapted to counter QoS constraint violations  in such systems, given predictions of likely future QoS characteristics, pre emptive adaptation strategies can be implemented  This paper outlines an approach to runtime prediction of QoS characteristics of queued systems  Predictions are computed by applying ARIMA forecasting techniques to basic properties of a queued model, and then using the model to predict complex QoS characteristics  We outline how our methods integrate into our implementation framework for monitoring and pre emptive adaptation of web service based systems    2006 Springer Verlag   19 refs",Runtime prediction of queued behaviour,"['Computer software maintenance', 'Computer software selection and evaluation', 'Technological forecasting', 'Web services', 'Adaptation strategies', 'Basic properties', 'Forecasting techniques', 'Performance evaluation', 'QoS constraints', 'Queuing network', 'Runtimes', 'Service-based', 'Web service-based system', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Impact of Technology on Society', 'Information Services', 'Management']","['Duzbayev, Nurzhan', '', '', 'Poernomo, Iman']","King s College London, Strand, London, WC2R2LS, United Kingdom",2006,QoSA
840,841,"Service composition is one of the key objectives for adopting Service Oriented Architecture  Today, web services, however, are not always perfectly compatible and composition mismatches are common problems  Service mediation, generally classified into signature and protocol ones, thus becomes one key working area in SOA  While the former has received considerable attention, protocol mediation is still open and current approaches provide only partial solutions  In this paper, a pattern based approach is proposed for developers to semi automatically generate mediators and glue partially compatible services together  Based on the investigation on workflow patterns and message exchanging sequences in service interactions, several basic mediator patterns are developed and can be used to modularly construct advanced mediators that can resolve all possible protocol mismatches, especially such mismatches about complicated control logics  Moreover, the architecture for the service mediation system is designed and implemented to prove the feasibility of our approach    2008 IEEE   21 refs",A pattern based approach to development of service mediators for protocol mediation,"['Architectural design', 'Information services', 'Internet protocols', 'Ketones', 'Laws and legislation', 'Common problems', 'Control logics', 'Message exchanging', 'Partial solutions', 'Service compositions', 'Service interactions', 'Service mediation', 'Service-Oriented Architecture', 'Web services', 'Workflow patterns', 'Buildings and Towers', 'Data Communication, Equipment and Techniques', 'Computer Programming', 'Organic Compounds', 'Information Services', 'Social Sciences']","['Li, Xitong', '', '', 'Fan, Yushun', '', '', 'Wang, Jian', '', '', 'Wang, Li', '', '', 'Jiang, Feng']","Department of Automation, Tsinghua University, Beijing, 100084, China  2  IBM China Research Lab , Beijing, 100094, China",2008,WICSA
841,842,"Service markets provide software components in the form of services  In order to enable a service discovery that satisfies service requesters and providers best, markets need automatic service matching  approaches for comparing whether a provided service satisfies a service request  Current markets, e g , app markets, are limited to basic keyword based search although many better suitable matching approaches are described in literature  However, necessary architectural decisions for the integration of matchers have a huge impact on quality properties like performance or security  Architectural decisions wrt  service matchers have rarely been discussed, yet, and systematic approaches for their integration into service markets are missing  In this paper, we present a systematic integration approach including the definition of requirements and a discussion on architectural tactics  As a benefit, the decision making process of integrating service matchers is supported and the overall market success can be improved    2014 Springer International Publishing Switzerland   15 refs",Integrating service matchers into a service market architecture,"['Software architecture', 'Architectural decision', 'Decision making process', 'Keyword-based search', 'On-The-Fly Computing', 'Quality properties', 'Service markets', 'Service matching', 'Systematic integration', 'Computer Programming', 'Industrial Economics']","['Platenius, Marie Christin', '', '', 'Becker, Steffen', '', '', 'Sch fer, Wilhelm']","Software Engineering Group, Heinz Nixdorf Institute, University of Paderborn, Germany",2014,ECSA
842,843,"Service markets provide software components in the form of services  In order to enable a service discovery that satisfies service requesters and providers best, markets need automatic service matching  approaches for comparing whether a provided service satisfies a service request  Current markets, e g , app markets, are limited to basic keyword based search although many better suitable matching approaches are described in literature  However, necessary architectural decisions for the integration of matchers have a huge impact on quality properties like performance or security  Architectural decisions wrt  service matchers have rarely been discussed, yet, and systematic approaches for their integration into service markets are missing  In this paper, we present a systematic integration approach including the definition of requirements and a discussion on architectural tactics  As a benefit, the decision making process of integrating service matchers is supported and the overall market success can be improved   15 refs",Integrating service matchers into a service market architecture,"['decision making', 'object-oriented programming', 'software architecture', 'software quality', 'service matchers', 'service market architecture', 'software components', 'service discovery', 'service requesters', 'service providers', 'automatic service matching', 'keyword-based search', 'architectural decisions', 'quality impact', 'systematic integration approach', 'architectural tactics', 'decision making process', 'Software engineering techniques', 'Software management']","['Platenius, M C', '', '', ' Becker, S', '', '', ' Scha fer, W', '', '']","Software Eng  Group, Univ  of Paderborn, Paderborn, Germany",2014,ECSA
843,844,"Service oriented architecture is an architectural approach that can be applied for building autonomous service systems dynamically to satisfy on demand business requests  During the execution of service compositions, architectural constraint violations relating to functional and non fucntional system properties need to be handled intelligently and autonomously, possibly requiring architectural reconfigurations  We propose integrated architectural constraint violation handling to deal with architectural quality problems through dynamic reconfiguration  We concentrate on service replacement selection as a remedial strategy for a possible quality violation requiring architectural remedies    2010 Springer Verlag Berlin Heidelberg   12 refs",Dynamic architectural constraints monitoring and reconfiguration in service architectures,"['Dynamic models', 'Information services', 'Architectural approach', 'Architectural constraints', 'Architectural quality', 'Dynamic re-configuration', 'Remedial strategies', 'Replacement selections', 'Service architecture', 'Service compositions', 'Service systems', 'System property', 'Computer Programming', 'Information Services', 'Mathematics']","['John, Jose', '', '', 'Wang, Mingxue', '', '', 'Pahl, Claus']","School of Computing, Dublin City University, Dublin, Ireland",2010,ECSA
844,845,"Service oriented architectures are a standard based and technology independent distributed computing paradigm for discovering, binding and assembling loosely coupled software services  Software product lines on the other hand allow a generic architecture to be configured and deployed in different instances  Product lines facilitate systematic reuse through managing variability  In this paper, we combine ideas from the service domain and the product line domain and investigate what types of variability exist in service oriented software architectures  Moreover, we suggest a way for representing variability in service oriented architectures by formalizing the notion of variability  To allow different viewpoints on variability, we define stakeholder roles that occur in the context of service oriented software architectures  By applying the proposed concepts, we hope to improve variability management at the software architecture level of service oriented systems    2010 ACM   18 refs",Describing variability in service oriented software product lines,"['Information services', 'Service oriented architecture (SOA)', 'Technical presentations', 'Distributed Computing', 'Generic architecture', 'Level of Service', 'modeling', 'Product-lines', 'Service domain', 'Service Oriented', 'Service-Oriented Software Architectures', 'Software Product Line', 'Software services', 'variability', 'Variability management', 'Digital Computers and Systems', 'Computer Programming', 'Information Dissemination', 'Information Services']","['Galster, Matthias']","Department of Mathematics and Computing Science, University of Groningen, Nijenborgh 9, 9747 AG Groningen, Netherlands",2010,ECSA
845,846,"Several Software Architecture Design Methods  SADM  have been published, reviewed, and compared  But these surveys and comparisons are mostly centered on intrinsic elements of the design method, and they do not compare them from the perspective of the actual needs of software architects  We would like to analyze the completeness of SADM from an architect s point of view  To do so, we define nine categories of software architects  needs, propose an ordinal scale for evaluating the degree to which a given SADM meets the needs, and then apply this to a small set of SADMs  The contribution of the paper is twofold   i  to provide a different and useful frame of reference for architects to select SADM, and  H  to suggest SADM areas of improvements  We found two answers to our question   do architectural design methods meet the needs of the architect   Yes, all architect s needs are met by one or another SADM, but No, no architectural design method meets simultaneously all the needs of an architect  This approach may lead to improvements of existing SADMs    2007 IEEE   49 refs",Do architecture design methods meet architects  needs,"['Computational efficiency', 'Computer aided design', 'Computer graphics', 'Information use', 'Numerical methods', 'Intrinsic elements', 'Ordinal scales', 'Software Architecture Design Methods (SADM)', 'Computer Programming', 'Computer Applications', 'Information Retrieval and Use', 'Mathematics', 'Numerical Methods']","['Falessi, Davide', '', '', 'Cantone, Giovanni', '', '', 'Kruchten, Philippe']","University of Rome Tor Vergata, DISP, Rome, Italy  2  University of British Columbia, ECE, Vancouver, Canada",2007,WICSA
846,847,"Several Software Architecture Design Methods  SADM  have been published, reviewed, and compared  But these surveys and comparisons are mostly centered on intrinsic elements of the design method, and they do not compare them from the perspective of the actual needs of software architects  We would like to analyze the completeness of SADM from an architect s point of view  To do so, we define nine categories of software architects  needs, propose an ordinal scale for evaluating the degree to which a given SADM meets the needs, and then apply this to a small set of SADMs  The contribution of the paper is twofold   i  to provide a different and useful frame of reference for architects to select SADM, and  ii  to suggest SADM areas of improvements  We found two answers to our question   do architectural design methods meet the needs of the architect   Yes, all architect s needs are met by one or another SADM, but No, no architectural design method meets simultaneously all the needs of an architect  This approach may lead to improvements of existing SADMs   49 refs",Do architecture design methods meet architects  needs,"['software architecture', 'software architecture design methods', 'Software engineering techniques']","['Falessi, D', '', '', ' Cantone, G', '', '', ' Kruchten, P']","DISP Rome, Univ  of Rome  Tor Vergata , Rome, Italy",2007,WICSA
847,848,"Several architecture analysis methods are proposed in the literature for evaluating both the structure and the behavior of architectures  A parallel between humans and software systems leads to some interesting consideration on kinds of analysis that can be performed on a system architecture, such as the identification of vital element  Such identification improves the system architecture understanding and allows us to estimate to what extent, a change on some components could impact the rest of the architecture    2008 IEEE   14 refs",Towards software architecture physiology  Identifying vital components 1,"['Architecture', 'Computer software', 'Architecture analysis', 'Software systems', 'System architectures', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming']","['Alloui, Ilham', '', '', 'C mpan, Sorana', '', '', 'Verjus, Herve']","University of Savoie, Polytech  Savoie   LISTIC Lab , B P  80439, 74944 Annecy le Vieux Cedex, France",2008,WICSA
848,849,"Several architectures for autonomic systems have been proposed in the past decade  In this research challenge paper, we briefly discuss them with an emphasize on their robustness and scalability  We propose a two layer autonomic architecture where the global management functions are carried out by a self organizing feedback loop inspired by the behavior of ant colonies and expect it to be robust and scalable  The proposed architecture is sustained with examples from our past work as well as our plans for future research    2010 ACM   17 refs",Robustness and scalability   A dual challenge for autonomic architectures,"['Fault tolerance', 'Quality assurance', 'Scalability', 'Technical presentations', 'Ant colonies', 'Autonomic architecture', 'Autonomic Computing', 'Autonomic Systems', 'Feed-back loop', 'Global management', 'Proposed architectures', 'Research challenges', 'Self organizing', 'Self-organizations', 'Two layers', 'Telephone Systems and Related Technologies  Line Communications', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Quality Assurance and Control', 'Systems Science']","['Caprarescu, Bogdan Alexandru']","West University of Timisoara, Faculty of Mathematics and Computer Science, Romania",2010,ECSA
849,850,"Sharing and reuse of software architectural knowledge  SHARK  has become an emerging topic of discussion and research in the field of software architecture development  SHARK is efficient with tool support, particularly so when that support is appropriate  However, there seems to be little guidance for selecting a suitable SHARK tool for use in an organization  The contribution of this paper is twofold  First, we present an evaluation framework that can be used for presenting an overview of SHARK tool features or comparing their differences  Secondly, we use the presented framework to evaluate three publicly available SHARK tools  The evaluated tools are the following  WebOfPatterns, Stylebase for Eclipse and PAKME    2009 IEEE   31 refs",Open source based tools for sharing and reuse of software architectural knowledge,"['Architecture', 'Computer software reusability', 'Computer software selection and evaluation', 'Emerging topics', 'Evaluation framework', 'Open sources', 'Software architectural', 'Tool support', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Henttonen, Katja', '', '', 'Matinlassi, Mari']","VTT Technical Research Centre of Finland, Finland",2009,ECSA
850,851,"Sharing and reuse of software architectural knowledge  SHARK  has become an emerging topic of discussion and research in the field of software architecture development  SHARK is efficient with tool support, particularly so when that support is appropriate  However, there seems to be little guidance for selecting a suitable SHARK tool for use in an organization  The contribution of this paper is twofold  First, we present an evaluation framework that can be used for presenting an overview of SHARK tool features or comparing their differences  Secondly, we use the presented framework to evaluate three publicly available SHARK tools  The evaluated tools are the following  WebOfPatterns, Stylebase for Eclipse and PAKME    2009 IEEE   31 refs",Open source based tools for sharing and reuse of software architectural knowledge,"['Architecture', 'Computer software reusability', 'Computer software selection and evaluation', 'Emerging topics', 'Evaluation framework', 'Open sources', 'Software architectural', 'Tool support', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Henttonen, Katja', '', '', 'Matinlassi, Mari']","VTT Technical Research Centre of Finland, Finland",2009,WICSA
851,852,"Sharing and reuse of software architectural knowledge  SHARK  has become an emerging topic of discussion and research in the field of software architecture development  SHARK is efficient with tool support, particularly so when that support is appropriate  However, there seems to be little guidance for selecting a suitable SHARK tool for use in an organization  The contribution of this paper is twofold  First, we present an evaluation framework that can be used for presenting an overview of SHARK tool features or comparing their differences  Secondly, we use the presented framework to evaluate three publicly available SHARK tools  The evaluated tools are the following  WebOfPatterns, Stylebase for Eclipse and PAKME    2009 IEEE   31 refs",Open source based tools for sharing and reuse of software architectural knowledge,"['Architecture', 'Computer software reusability', 'Computer software selection and evaluation', 'Emerging topics', 'Evaluation framework', 'Open sources', 'Software architectural', 'Tool support', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Henttonen, Katja', '', '', 'Matinlassi, Mari']","VTT Technical Research Centre of Finland, Finland",2011,WICSA
852,853,"Sharing the architectural knowledge of architectural analysis among stakeholders proves to be troublesome  This causes problems in and with architectural analysis, which can have serious consequences for the quality of a system being developed, as this quality might be incompletely or wrongly assessed  This paper presents a domain model, which can be used as a common ground among analysts and architects to capture and explicitly share such knowledge  This enables a way to overcome some of the obstacles imposed by the multi disciplinary context in which architectural analysis takes place  To apply the domain model in practice, we have created a tool implementing  part of  this domain model for capturing and using explicit architectural knowledge during analysis  We validate the tool and domain model in the context of an industrial case study    2008 Springer Berlin Heidelberg   24 refs",Sharing the architectural knowledge of quantitative analysis,"['Computer software selection and evaluation', 'Architectural analysis', 'Architectural knowledge', 'Common ground', 'Domain model', 'Industrial case study', 'Multi-disciplinary', 'Quantitative analysis', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Jansen, Anton', '', '', 'De Vries, Tjaard', '', '', 'Avgeriou, Paris', '', '', 'Van Veelen, Martijn', ' ,', '']","Department of Mathematics and Computing Science, University of Groningen, P O  Box 800, 9700AV Groningen, Netherlands  2  ASML, DE SSD, Litho Systems Architecture, 5504DR Veldhoven, Netherlands  3  Previously Employed by ASTRON, P O  Box 2, 7990AA Dwingeloo, Netherlands",2008,QoSA
853,854,"Sharing the architectural knowledge of architectural analysis among stakeholders proves to be troublesome  This causes problems in and with architectural analysis, which can have serious consequences for the quality of a system being developed, as this quality might be incompletely or wrongly assessed  This paper presents a domain model, which can be used as a common ground among analysts and architects to capture and explicitly share such knowledge  This enables a way to overcome some of the obstacles imposed by the multi disciplinary context in which architectural analysis takes place  To apply the domain model in practice, we have created a tool implementing  part of  this domain model for capturing and using explicit architectural knowledge during analysis  We validate the tool and domain model in the context of an industrial case study   24 refs",Sharing the architectural knowledge of quantitative analysis,"['knowledge acquisition', 'software architecture', 'quantitative analysis', 'architectural knowledge sharing', 'multidisciplinary context', 'Knowledge engineering techniques', 'Software engineering techniques']","['Jansen, A', '', '', ' de Vries, T', '', '', ' Avgeriou, P', '', '', ' van Veclen, M']","Dept  of Math    Comput  Sci , Groningen Univ , Groningen, Netherlands",2008,QoSA
854,855,"Short innovation cycles in software and hardware make architecture design a key issue in future development processes for embedded systems  The basis for architectural design decisions is a transparent architecture evaluation  Our model based approach supports a uniform representation of hierarchies of quality attributes and an integration of different architecture evaluation techniques and methods  We present a metamodel for architecture evaluation as a basis for the precise description of the quality attribute structure and the evaluation methodology  By modelling architecture evaluation, the relationships between architectural elements and quality attributes and interdependences between quality attributes can be represented and investigated  Thereby, the architecture exploration process with its evaluations, decisions, and optimizations is made explicit, traceable, and analyzable   20 refs",Embedded systems architecture  evaluation and analysis,"['embedded systems', 'formal specification', 'program diagnostics', 'software architecture', 'software performance evaluation', 'software quality', 'embedded systems architecture', 'system evaluation', 'system analysis', 'architecture design', 'system development', 'software quality', 'architecture evaluation metamodel', 'Software engineering techniques', 'Software performance evaluation', 'Diagnostic, testing, debugging and evaluating systems', 'Formal methods']","['Florentz, B', '', '', ' Huhn, M', '', '']","Tech  Univ  of Braunschweig, Braunschweig, Germany",2006,QoSA
855,856,"Short innovation cycles in software and hardware make architecture design a key issue in future development processes for embedded systems  The basis for architectural design decisions is a transparent architecture evaluation  Our model based approach supports a uniform representation of hierarchies of quality attributes and an integration of different architecture evaluation techniques and methods  We present a metamodel for architecture evaluation as a basis for the precise description of the quality attribute structure and the evaluation methodology  By modelling architecture evaluation, the relationships between architectural elements and quality attributes and interdependencies between quality attributes can be represented and investigated  Thereby, the architecture exploration process with its evaluations, decisions, and optimizations is made explicit, traceable, and analyzable    2006 Springer Verlag   20 refs",Embedded systems architecture  Evaluation and analysis,"['Architectural design', 'Computer software selection and evaluation', 'Embedded software', 'Embedded systems', 'Quality control', 'Architectural element', 'Architecture designs', 'Architecture evaluation', 'Architecture exploration', 'Development process', 'Evaluation methodologies', 'Innovation cycles', 'ITS evaluation', 'Key issues', 'Meta model', 'Model based approach', 'Quality attributes', 'Management', 'Computer Applications', 'Computer Programming', 'Quality Assurance and Control', 'Computer Software, Data Handling and Applications', 'Structural Design, General', 'Buildings and Towers', 'Computer Systems and Equipment']","['Florentz, Bastian', '', '', 'Huhn, Michaela']","Technical University of Braunschweig, 38106 Braunschweig, Germany",2006,QoSA
856,857,"Simulation is a mean for verifying the quality of an architectural specification  Some approaches have been proposed in the past  Each approach has its own internal simulation engine, and allows for certain types of simulations  Goal of this paper is to propose SASIM, a software architecture level simulation technique for modeling and simulating architectural specifications  It improves existing techniques, by permitting various kinds of simulation, and making use of SPIN as external simulator  This allows a real and useful integration between simulation and exhaustive verification  The paper discusses SASIM and compares it with existing techniques    2008 IEEE   9 refs",Simulating software architectures for functional analysis,"['Computer software', 'Computer software selection and evaluation', 'Integral equations', 'Specifications', 'Architectural specifications', 'External-', 'Simulation engines', 'Simulation techniques', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Codes and Standards', 'Calculus']","['Muccini, Henry', '', '', 'Pelliccione, Patrizio']","Dipartimento di Informatica, Universit  degli Studi dell Aquila, Italy",2008,WICSA
857,858,"Simulation models are used for performance optimization and validation of embedded systems  However, these models are usually not validated in a structural, formal way  This paper describes a method for testing a   model using the model based test tool TorX  The method is explained by using a simple example  After that, we describe the results of a case study performed on a simulation model of an industrial system   19 refs",Automated model based testing of   simulation models with TorX,"['embedded systems', 'formal verification', 'program testing', 'software tools', 'automated model-based testing', '? simulation model', 'TorX model-based test-tool', 'embedded system', 'Diagnostic, testing, debugging and evaluating systems', 'Programming support', 'Formal methods']","['van Osch, M', '', '']","Dept  of Math    Comput  Sci , Eindhoven Univ  of Technol , Eindhoven, Netherlands",2005,QoSA
858,859,"Since 2004 in St  Andrews  Scotland, U K  , ECSA the European Conference on Software Architecture  formerly EWSA, the European Workshop on Software Architecture  has been considered as an important meeting point for researchers and practitioners on the topic of software architecture  ECSA has matured from a workshop format to a full software engineering conference in the subfield of software architecture  This year, ECSA has become more ambitious and expanded its scope and schedule up to four full days  The program includes a series of tutorials, a doctoral mentoring program, and four full day workshops  New and existing software challenges have led to a variety of trends in software architecture research, which makes the conference and workshops more attractive and promotes the discussion on current and emerging topics  Based on the scientific and technical interest of the topics, the innovativeness of workshop topics, and the capacity of the conference workshop program, the workshop co chairs selected four workshops from the nine submitted proposals  We summarize the aims and goals of each workshop and the contributions accepted for the four workshops   bull 2nd International Workshop on Software Ecosystems  EcoSys   Piers Campbell, Faheem Ahmed, Jan Bosch, Sliger Jansen   bull 1st International Workshop on Measurability of Security in Software Architectures  MeSSa   Reijo Savola, Teemu Kranste n, Antti Evesti   bull 8th Nordic Workshop on Model Driven Software Engineering  NW MODE   Andrzej Wasowski, Dragos Truscan, Ludwik Kuzniarz   bull 1st International Workshop on Variability in Software Product Line Architectures  VARI ARCH   Alexander Helleboogh, Paris Avgeriou, Nelis Boucke, Patryck Heymans  The ECSA 2010 Workshop co chairs would like to thanks all workshop organizers for their effort and enthusiasm to attract submission in different software architecture research topics and make the ECSA 2010 workshops a success    2010 ACM   38 refs",Current and emerging topics in software architecture  ECSA 2010 Workshops Summary,"['Ecology', 'Research', 'Technical presentations', 'Architecture research', 'Campbell', 'Emerging topics', 'Innovativeness', 'International workshops', 'Mentoring programs', 'Model driven software engineering', 'On currents', 'Scotland', 'Software ecosystems', 'Software product line architecture', 'Ecology and Ecosystems', 'Computer Programming', 'Education', 'Engineering Research']","['Weyns, Danny', '', '', 'Capilla, Rafael']","Katholieke Universiteit, Leuven, Belgium  2  Universidad Rey Juan Carlos, Madrid, Spain",2010,ECSA
859,860,"Since conventional software security approaches are often manually developed and statically deployed, they are no longer sufficient against today s sophisticated and evolving cyber security threats  This has motivated the development of self protecting software that is capable of detecting security threats and mitigating them through runtime adaptation techniques  In this paper, we argue for an architecture based self protection  ABSP  approach to address this challenge  In ABSP, detection and mitigation of security threats are informed by an architectural representation of the running system, maintained at runtime  With this approach, it is possible to reason about the impact of a potential security breach on the system, assess the overall security posture of the system, and achieve defense in depth  To illustrate the effectiveness of this approach, we present several architecture adaptation patterns that provide reusable detection and mitigation strategies against well known web application security threats  Finally, we describe our ongoing work in realizing these patterns on top of Rainbow, an existing architecture based adaptation framework  Copyright 2013 ACM   33 refs",Architecture based self protecting software systems,"['Security systems', 'Software architecture', 'Adaptation framework', 'Architectural representation', 'Architecture adaptation', 'Mitigation strategy', 'Runtime adaptation', 'Self-protection', 'Software security', 'Web application security', 'Computer Software, Data Handling and Applications', 'Accidents and Accident Prevention']","['Yuan, Eric', '', '', 'Malek, Sam', '', '', 'Schmerl, Bradley', '', '', 'Garlan, David', '', '', 'Gennari, Jeff']","George Mason University, 4400 University Drive, Fairfax, VA, 22030, United States  2  Carnegie Mellon University, 5000 Forbes Avenue, Pittsburgh PA, 15213, United States",2013,QoSA
860,861,"Since many years, Web services have confirmed their status of one of the most pertinent solutions for a given service provider, like Google, Amazon or FedEx, to open its solutions for third party software development  New business logic can be implemented through orchestrations of existing Web services  This helps development teams in capitalizing resources held by the providers of these services  Nonetheless, these service oriented software architectures, like any other software artifact, are subject to changes during their lifecycle, and thus can undergo an evolution phenomenon  In this phenomenon, it is argued that quality can be weakened after successive changes  Lehman s 7th law of software evolution , and this is mainly due to the lack of architecture documentation and tool support to supervise architecture changes  In this paper, we present an approach to supervise the evolution of Web service orchestrations, with quality requirements considered as a support documentation  First, we show how important design decisions, like the choice of a service oriented architecture pattern can be formalized as a documentation for the quality they implement  Then, we detail how this documentation can be used to supervise architecture changes  In this way, the impact of changes made on a software architecture are analyzed on the fly to determine which quality is affected    2011 Springer Verlag   20 refs",Supervising the evolution of web service orchestrations using quality requirements,"['Information services', 'Internet', 'Service oriented architecture (SOA)', 'Software architecture', 'Software design', 'Architecture patterns', 'Business logic', 'Design decisions', 'Development teams', 'On-the-fly', 'Quality requirements', 'Service Oriented', 'Service provider', 'Service-Oriented Software Architectures', 'Software artifacts', 'Software Evolution', 'Support documentation', 'Third party software', 'Tool support', 'Web service orchestration', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Information Services']","['Tibermacine, Chouki', '', '', 'Zernadji, Tarek']","LIRMM, CNRS, Montpellier II University, France  2  Computer Science Department, University of Biskra, Algeria",2011,ECSA
861,862,"Since the first works involving software reuse, domain engineering is considered a key process to develop reusable and flexible software  However, the results have shown that there is still much to do before the vision of domain engineering is completely achieved  Among the reasons for this problem, we may highlight the lack of a process to support the design of domain specific software architectures  This paper presents such an approach, based on a well defined set of principles, guidelines and metrics    2007 IEEE   20 refs",Designing domain specific software architecture  DSSA   Towards a new approach,"['Computer aided design', 'Computer software reusability', 'Computer vision', 'Domain decomposition methods', 'Problem solving', 'Designing domain-specific software architecture (DSSA)', 'Domain engineering', 'Flexible softwares', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Vision', 'Numerical Methods']","['De Almeida, Eduardo Santana', '', '', 'Alvaro, Alexandre', '', '', 'Garcia, Vinicius Cardoso', '', '', 'Nascimento, Leandro', '', '', 'Meira, Silvio Lemos', '', '', 'Lucr dio, Daniel']","Federal University of Pernambuco, C E S A R , Recife Center for Advanced Studies and Systems  2  Universidade de S o Paulo, Instituto de Ci ncias Matem ticas e de Computa   o  ICMC",2007,WICSA
862,863,"Since the first works involving software reuse, domain engineering is considered a key process to develop reusable and flexible software  However, the results have shown that there is still much to do before the vision of domain engineering is completely achieved  Among the reasons for this problem, we may highlight the lack of a process to support the design of domain specific software architectures  This paper presents such an approach, based on a well defined set of principles, guidelines and metrics   20 refs",Designing domain specific software architecture  DSSA   towards a new approach,"['software architecture', 'software metrics', 'software reusability', 'domain-specific software architecture', 'software reuse', 'flexible software', 'domain engineering', 'Software engineering techniques', 'Software metrics']","['de Almeida, E S', '', '', ' Alvaro, A', '', '', ' Garcia, V C', '', '', ' Nascimento, L', '', '', ' Meira, S L', '', '', ' Lucredio, D']","C E S A R , Fed  Univ  of Pernambuco, Recife, Brazil",2007,WICSA
863,864,"Since the groundbreaking work of Kamin, Reddy, and particularly Cook in the late 1980s, there has been broad agreement that the meaning of inheritance in object oriented programming languages can be best explained using generator functions and their fixpoints  Consequently, it is a little surprising to realise that no current mainstream programming language actually explains inheritance to its users in this way  Instead, most languages make up a  story  that purports to explain inheritance, but that on closer inspection contains serious flaws  It is as if, being asked to explain the facts of life to our children, we are so embarrassed by the truth that we make up a story about storks, knowing even as we do so that it defies the laws not only of biology but also of physics  This paper explores both the truth and the fictions about how objects are brought into the world  My hope is that future programming languages can tell the children, if not the whole truth, then at least a partial truth that is consistent with the laws of mathematics  Copyright   2013 ACM 978 1 4503 2046 7 13 07       15 00   19 refs",What shall we tell the children  about inheritance,"['Semantics', 'Fixpoints', 'Generator function', 'Immutable objects', 'Object initialisation', 'Object-oriented programming languages', 'Partial truth', 'Computer Programming', 'Information Dissemination']","['Black, Andrew P', '', '']","Portland State University, United States",2013,ECSA
864,865,"Single cell and half cell degradation test procedures are evaluated for carbon supported Pt catalysts  Half cell analyses are employed in identification of specific test parameters for evaluation of cathode catalysts  Single cell measurements run at 100   relative humidity  RH  evaluate the impact of catalysts degradation on fuel cell performance  The measurements in both setups show a 20   deviation of the electrochemical surface area loss  ECSA , while the oxygen reduction reaction  ORR  activity losses were comparable  The quantification of specific degradation mechanism as Pt dissolution and particle agglomeration in correlation with surface area and oxygen reduction activity is discussed    The Electrochemical Society   26 refs",Cathode catalysts degradation mechanism from liquid electrolyte to polymer electrolyte membrane fuel cells,"['Catalysts', 'Cathodes', 'Cells', 'Degradation', 'Electrolytic reduction', 'Platinum', 'Polyelectrolytes', 'Polymers', 'Testing', 'Carbon-supported Pt', 'Degradation mechanism', 'Electrochemical surface area', 'Fuel cell performance', 'Liquid electrolytes', 'Oxygen reduction reaction', 'Particle agglomerations', 'Single-cell measurements', 'Polymeric Materials', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Organic Polymers', 'Electric Components', 'Precious Metals', 'Biological Materials and Tissue Engineering', 'Non Mechanical Properties of Building Materials  Test Methods', 'Fuel Cells']","['Marcu, A', '', '', ' Toth, G', '', '', ' Pietrasz, P', '', '']","Daimler AG, R and D MEA and Stack Technology, Kirchheim Nabern 73230, Germany  2  Ford Motor Company, Dearborn, MI 48124, United States",2012,ECSA
865,866,"Smart spaces are dynamic environments for sharing information e g  in personal, building, or public networks  Key challenges for smart spaces include security and interoperability between heterogeneous devices, from high end PCs to embedded gadgets and sensors  We propose a novel security architecture, which enables heterogeneous devices to share data in controlled manner  Centralized information brokering device is used to measure security level of published information  These measurements are then used to authorize information access  Hence, the architecture enables devices to share information with the same security level even when these devices do not have interoperable security protocols  We propose policy configuration and deployment models, which are feasible and usable with embedded devices  We also describe our practical experiences from implementing the proposed security solution for smart spaces    2010 ACM   32 refs",Secure information sharing between heterogeneous embedded devices,"['Access control', 'Information retrieval', 'Interoperability', 'Network architecture', 'Network protocols', 'Security systems', 'Software architecture', 'Technical presentations', 'communication security', 'Dynamic environments', 'Embedded device', 'Heterogeneous devices', 'Information access', 'Information sharing', 'Policy configurations', 'Practical experience', 'Public networks', 'Security Architecture', 'Security level', 'Security protocols', 'Security solutions', 'Sharing information', 'Smart space', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Accidents and Accident Prevention']","['Suomalainen, Jani', '', '', 'Hyttinen, Pasi', '', '', 'Tarvainen, Pentti']","VTT Technical Research Centre of Finland, Vuorimiehentie 3, P O  Box 1000, FIN 02044 VTT, Espoo, Finland  2  VTT Technical Research Centre of Finland, Microkatu 1, P O  Box 1199, FIN 70211, Kuopio, Finland  3  VTT Technical Research Centre of Finland, Kaitov yl  1, P O  Box 1100, FIN 90590, Oulu, Finland",2010,ECSA
866,867,"Sn modified platinum catalysts are presently one of the most active catalysts for the room temperature electrooxidation of ethanol at low potentials  In this study, Pt SnOx C catalysts are prepared by the polyol method in different ethylene glycol water mixtures using a Pt Sn atomic ratio of 3 in the preparation solution  When the water content in the synthesis is very low  2 vol   , only a limited amount of Sn can be incorporated into the catalyst  Pt Sn atomic ratio of 91 9   Increasing the water content in the synthesis increases the Sn content and the intrinsic activity for ethanol electrooxidation by the  bifunctional catalysis  mechanism  however, water content in excess of 50 vol   is counterproductive since there is a corresponding growth in the catalyst particle size which results in a reduction of the electrochemically active surface area  ECSA   Experimentally a 50 50  vol  vol   mixture of ethylene glycol and water is the most effective since all the precursor metals in the preparation solution can be completely transferred to the target catalyst  The advantages are not only limited to composition control  concordance of catalyst composition and solution composition in preparation , but also a small particle size   2 2 nm  and the highest mass activity    2012 Elsevier B V  All rights reserved   33 refs",The importance of water in the polyol synthesis of carbon supported platinum tin oxide catalysts for ethanol electrooxidation,"['Alcohols', 'Direct ethanol fuel cells (DEFC)', 'Electrocatalysts', 'Electrooxidation', 'Ethanol', 'Ethylene glycol', 'Platinum', 'Synthesis (chemical)', 'Tin oxides', 'Active catalyst', 'Atomic ratio', 'Bifunctional catalysis', 'Catalyst composition', 'Catalyst particle size', 'Composition control', 'Electrochemically active surface areas', 'Ethanol electro-oxidation', 'Ethanol electrooxidation reaction', 'Glycol-water mixture', 'Intrinsic activities', 'Mass activity', 'Oxide catalysts', 'Platinum catalysts', 'Platinum-tin', 'Polyol methods', 'Polyol synthesis', 'Precursor metals', 'Room temperature', 'Small particle size', 'Solution composition', 'Inorganic Compounds', 'Organic Compounds', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Fuel Cells', 'Precious Metals', 'Tin and Alloys']","['Liu, Bo', '', '', 'Chia, Zhi Wen', '', '', 'Lee, Zhen You', '', '', 'Cheng, Chin Hsien', '', '', 'Lee, Jim Yang', '', '', 'Liu, Zhao Lin']","Chemical and Biomolecular Engineering, National University of Singapore, 4 Engineering Drive 4, Singapore 117576, Singapore  2  NUS Graduate School for Integrative Sciences and Engineering  NGS , Centre for Life Sciences  CeLS , 05 01 28 Medical Drive, Singapore 117456, Singapore  3  Institute of Materials Research and Engineering, 3 Research Link, Singapore 117602, Singapore",2012,ECSA
867,868,"Social web applications like wikis, social networks, and crowdsourcing markets have provided people with new dynamic forms of communication and collaboration  Although communities have widely adopted these systems, the methodological support for their architecting is still at the beginning  Since social web applications are mediation environments for human interaction, environment based coordination models like stigmergy have increased in relevance  Therefore, we propose the concept of a Stigmergic Information System  SIS  architecture metamodel, which embeds a stigmergy like coordination model  The metamodel defines key system elements and organizes a system into four layers  agent, artifact data, analysis   control and workflow  The metamodel should support the systematic investigation of common architecture elements, their relations and interdependencies, and future approaches for the description and modeling of social web applications  In this work we introduce the SIS architecture metamodel and evaluate the metamodel s validity with preliminary results from a pilot survey on groupware systems    2014 Springer International Publishing Switzerland   19 refs",Towards a coordination centric architecture metamodel for social web applications,"['Groupware', 'Information systems', 'Software architecture', 'Architecture meta-model', 'Collective intelligences', 'Coordination', 'Social Web applications', 'Stigmergy', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Musil, Juergen', '', '', 'Musil, Angelika', '', '', 'Biffl, Stefan']","CDL Flex, Institute of Software Technology and Interactive Systems, Vienna University of Technology, Favoritenstrasse 9 188, 1040 Vienna, Austria",2014,ECSA
868,869,"Social web applications like wikis, social networks, and crowdsourcing markets have provided people with new dynamic forms of communication and collaboration  Although communities have widely adopted these systems, the methodological support for their architecting is still at the beginning  Since social web applications are mediation environments for human interaction, environment based coordination models like stigmergy have increased in relevance  Therefore, we propose the concept of a Stigmergic Information System  SIS  architecture metamodel, which embeds a stigmergy like coordination model  The metamodel defines key system elements and organizes a system into four layers  agent, artifact data, analysis   control and workflow  The metamodel should support the systematic investigation of common architecture elements, their relations and interdependencies, and future approaches for the description and modeling of social web applications  In this work we introduce the SIS architecture metamodel and evaluate the metamodel s validity with preliminary results from a pilot survey on groupware systems   19 refs",Towards a Coordination Centric Architecture Metamodel for Social Web Applications,"['groupware', 'human computer interaction', 'information systems', 'Internet', 'social sciences computing', 'software architecture', 'coordination-centric architecture metamodel', 'social Web applications', 'mediation environments', 'human interaction', 'environment-based coordination models', 'stigmergic information system', 'SIS architecture metamodel', 'stigmergy-like coordination model', 'artifact data', 'groupware systems', 'Social and behavioural sciences computing', 'Information networks', 'Software engineering techniques', 'Groupware']","['Musil, J', '', '', ' Musil, A', '', '', ' Biffl, S', '', '']","CDL Flex, Inst  of Software Technol    Interactive Syst , Vienna Univ  of Technol , Vienna, Austria",2014,ECSA
869,870,"Software Architecture is a key artifact in the software development process, as it provides a bridge between the requirements of the system to be and its final design  Architectural description is therefore a critical step, which can be assisted by the use of Architectural Styles  Styles make it possible to reuse architectural knowledge by providing guidelines for its description, and by constraining the configuration and behavior of the target system  The architect must superimpose these constraints, but this could be an error prone task unless some kind of automatic support is provided  Therefore, this paper presents a proposal that generates proto architectures by superimposing architectural styles on the initial requirements  operationalization, using model to model  M2M  transformation techniques  Our proposal includes a tool called MORPHEUS, which applies QVT as the transformation language  a real world example is provided to explain how the superimposition process works, and how the QVT language is used to express these style based transformations    2011 Springer Verlag   19 refs",Using model transformation techniques for the superimposition of architectural styles,"['Architecture', 'Bridges', 'Software design', 'Architectural descriptions', 'Architectural knowledge', 'Architectural style', 'Critical steps', 'Error prones', 'Model driven development', 'Model transformation technique', 'model transformations', 'Software development process', 'Target systems', 'Transformation techniques', 'Bridges', 'Buildings and Towers', 'Computer Programming']","['Navarro, Elena', '', '', 'Cuesta, Carlos E', '', '', ' Perry, Dewayne E', '', '', ' Roda, Cristina']","Computing Systems Department, University of Castilla La Mancha, Spain  2  Dept  LSI2  Computing Languages and Systems II , Rey Juan Carlos University, Spain  3  Electrical and Computer Engineering Department, University of Texas, Austin, TX, United States",2011,ECSA
870,871,"Software Ecosystems  SECOs  have in recent years emerged as a promising approach for improved inter and intra organizational reuse and for reusability involving end users in the software development process  Understanding the software s role in a larger perspective and how it interconnects with stakeholders is key for progress in those directions  However, for SECOs, several theoretical and methodological gaps remain to be charted  This paper identifies one such gap, the need for precise process modeling  It elaborates on experiences gained from the analysis of a SECO for mobile learning and brings up several aspects and insights for this particular domain  The main contributions are an initial reference model for the mobile learning domain and an outline for an analysis method for domain specific SECOs    2010 ACM   18 refs",On the role of software process modeling in software ecosystem design,"['Computer software reusability', 'Ecosystems', 'Reusability', 'Software architecture', 'Technical presentations', 'Analysis method', 'Domain specific', 'End-users', 'Mobile Learning', 'mobile learning ecosystem', 'Process Modeling', 'Reference models', 'Role of software', 'Software development process', 'Software ecosystems', 'Software process modeling', 'Industrial Wastes', 'Ecology and Ecosystems', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Pettersson, Oskar', '', '', 'Svensson, Martin', '', '', 'Gil, Didac', '', '', 'Andersson, Jesper', '', '', 'Milrad, Marcelo']","CELEKT Group, Linnaeus University, V xj , Sweden  2  Software Technology Group, Linnaeus University, V xj , Sweden",2010,ECSA
871,872,"Software Product Line  SPL  development typically relies on feature models to represent the commonalities and variabilities of a family of software products  Although feature models play an important role in describing SPL elements, they are limited to provide high level feature decompositions that do not explicitly represent the SPL architecture  To tackle this problem, we present PL AspectualACME, an extension of the ACME architecture description language that enriches existing abstractions to express architectural variabilities  They support the specification of product variations without forcing architects to learn many new abstractions  We evaluate the applicability of our proposal in the context of a real large scale system, the Ginga SPL architecture    2011 Springer Verlag   11 refs",PL AspectualACME  An aspect oriented architectural description language for software product lines,"['Abstracting', 'Network architecture', 'Software design', 'Abstracting', 'Network architecture', 'Software design', 'ADL', 'Architectural description languages', 'Architectural variability', 'Architecture description languages', 'Aspect-oriented', 'Feature models', 'High-level features', 'PL-AspectualACME', 'Product variations', 'Software Product Line', 'Software product lines', 'Software products', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Information Sources and Analysis']","['Adachi Barbosa, Eiji', '', '', 'Batista, Thais', '', '', 'Garcia, Alessandro', '', '', 'Silva, Eduardo']","OPUS Research Group, Informatics Department, PUC Rio, Rio de Janeiro, Brazil  2  Informatics Department, UFRN, Natal, Brazil",2011,ECSA
872,873,"Software Product Line Engineering is becoming widely used due to the improvement it means when developing software products of the same family  The commonalities and variabilities of Software Product Lines  SPL  are identified during the Domain Engineering process and then, they are realized in the software architecture  Therefore, mechanisms to explicitly specify the commonalities and variabilities of SPLs at the architectural level are required  Most of the current mechanisms specify variations on the architecture by adding or removing architectural elements  However, it is also necessary to specify variations inside components  In this paper, we propose the notion of Plastic Partial Components to support internal variations  The specification of these components is performed using Invasive Software Composition techniques and without tangling the core and product architectures of the SPL  This contribution is illustrated through a SPL for developing domainspecific validation environments    2009 IEEE   28 refs",Plastic partial components  A solution to support variability in architectural components,"['Architecture', 'Computer software', 'Network architecture', 'Production engineering', 'Software design', 'Architectural components', 'Architectural element', 'Architectural levels', 'Current mechanisms', 'Domain engineering', 'Domain specific', 'Invasive software', 'Product architecture', 'Software product line engineerings', 'Software product lines', 'Software products', 'Buildings and Towers', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Production Engineering']","['P rez, Jennifer', '', '', 'D az, Jessica', '', '', 'Costa Soria, Crist bal', '', '', 'Garbajosa, Juan']","Universidad Polit cnica de Madrid, E U  Inform tica, Spain  2  DSIC, Universidad Polit cnica de Valencia, Spain",2009,ECSA
873,874,"Software Product Line Engineering is becoming widely used due to the improvement it means when developing software products of the same family  The commonalities and variabilities of Software Product Lines  SPL  are identified during the Domain Engineering process and then, they are realized in the software architecture  Therefore, mechanisms to explicitly specify the commonalities and variabilities of SPLs at the architectural level are required  Most of the current mechanisms specify variations on the architecture by adding or removing architectural elements  However, it is also necessary to specify variations inside components  In this paper, we propose the notion of Plastic Partial Components to support internal variations  The specification of these components is performed using Invasive Software Composition techniques and without tangling the core and product architectures of the SPL  This contribution is illustrated through a SPL for developing domainspecific validation environments    2009 IEEE   28 refs",Plastic partial components  A solution to support variability in architectural components,"['Architecture', 'Computer software', 'Network architecture', 'Production engineering', 'Software design', 'Architectural components', 'Architectural element', 'Architectural levels', 'Current mechanisms', 'Domain engineering', 'Domain specific', 'Invasive software', 'Product architecture', 'Software product line engineerings', 'Software product lines', 'Software products', 'Buildings and Towers', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Production Engineering']","['P rez, Jennifer', '', '', 'D az, Jessica', '', '', 'Costa Soria, Crist bal', '', '', 'Garbajosa, Juan']","Universidad Polit cnica de Madrid, E U  Inform tica, Spain  2  DSIC, Universidad Polit cnica de Valencia, Spain",2009,WICSA
874,875,"Software Product Line Engineering is becoming widely used due to the improvement it means when developing software products of the same family  The commonalities and variabilities of Software Product Lines  SPL  are identified during the Domain Engineering process and then, they are realized in the software architecture  Therefore, mechanisms to explicitly specify the commonalities and variabilities of SPLs at the architectural level are required  Most of the current mechanisms specify variations on the architecture by adding or removing architectural elements  However, it is also necessary to specify variations inside components  In this paper, we propose the notion of Plastic Partial Components to support internal variations  The specification of these components is performed using Invasive Software Composition techniques and without tangling the core and product architectures of the SPL  This contribution is illustrated through a SPL for developing domainspecific validation environments    2009 IEEE   28 refs",Plastic partial components  A solution to support variability in architectural components,"['Architecture', 'Computer software', 'Network architecture', 'Production engineering', 'Software design', 'Architectural components', 'Architectural element', 'Architectural levels', 'Current mechanisms', 'Domain engineering', 'Domain specific', 'Invasive software', 'Product architecture', 'Software product line engineerings', 'Software product lines', 'Software products', 'Buildings and Towers', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Production Engineering']","['P rez, Jennifer', '', '', 'D az, Jessica', '', '', 'Costa Soria, Crist bal', '', '', 'Garbajosa, Juan']","Universidad Polit cnica de Madrid, E U  Inform tica, Spain  2  DSIC, Universidad Polit cnica de Valencia, Spain",2011,WICSA
875,876,"Software Product Line architects are concerned not only with traditional software architecture issues, but also with variation mechanisms that support diversity of products  A variation point may be scattered over various implementation elements  i e  components and connectors  undermining product line architecture evolution  Aspect connectors support the modularization of variation points by integrating aspects and components concepts  This work quantitatively evaluates to what extent aspect connectors supports evolution of component based product line architectures by means of a comparative study against a pure object oriented component model  This study considered five evolution measures  scattering of variation points, scattering of features, tangling of features, change impact on components, and efferent coupling between components  The results have shown evidences that aspect connectors can provide effective support for product line architecture evolution    2011 Springer Verlag   17 refs",Aspect connectors to support the evolution of component based product line architectures  A comparative study,"['Modular construction', 'Comparative studies', 'Component based', 'Component model', 'Modularizations', 'Object oriented', 'Product line architecture', 'Software Product Line', 'Variation mechanisms', 'Construction Methods', 'Computer Programming']","['Tizzei, Leonardo P', '', '', ' Rubira, Cec lia M', 'F', '', '']","University of Campinas, Campinas, SP, Brazil",2011,ECSA
876,877,"Software Product Lines  SPL , Component Based Software Engineering  CBSE  and Commercial Off The Shelf  COTS  components provide a rich supporting base for creating software architectures  Further, they promise significant improvements in the quality of software configurations that can be composed from pre built components  Software architectural styles provide a way for achieving a desired coherence for such component based architectures  This is because the different architectural styles enforce different quality attributes for a system  If the architectural style of an emergent system could be predicted in advance, a System Integrator could make necessary changes to ensure that the quality attributes dictated by the system requirements were satisfied before the actual system was deployed and tested  In this paper we propose a model for predicting architectural styles based on use cases that need to be met by a system configuration  Moreover, our technique can be used to determine stylistic conformance and hence indicate the presence or absence of architectural drift   2005 IEEE   7 refs",Predicting architectural styles from component specifications  Extended abstract,"['Computer software selection and evaluation', 'Electronic equipment', 'Quality management', 'Software engineering', 'Specifications', 'Verification', 'Commercial Off The Shelf (COTS)', 'Component based software engineering', 'Component Based Software Engineering (CBSE)', 'Software Product Lines (SPL)', 'System composition', 'Electronic Equipment, General Purpose and Industrial', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming', 'Computer Applications', 'Codes and Standards', 'Management']","['Bhattacharya, Sutirtha', '', '', 'Perry, Dewayne E', '', '']","PTD Automation, Intel Corporation, Hillsboro, OR   97124  2  Empirical Software Engineering Lab   ESEL , ECE, University of Texas at Austin, Austin, TX 78712",2005,WICSA
877,878,"Software Product Lines are typically used to support development of a software product family and not a software product population, which denotes a broader and more diverse range of software products  We present a Software Product Line Infrastructure  SPLI  that has been designed to increase the reuse of software efforts in product populations  The SPLI takes a bottom up approach by structuring product features in highly reusable software components called Active Components which contain different types of artefacts  Variability is expressed using domain specific models and formal variability models  Variability is bound during product derivation by executing model to artefact transformations  Components are active because they are invoked during the derivation process, thereby empowering the component  The SPLI enables step wise refinements of applications by allowing specialization and composition of models before variability is bound  A prototype of the SPLI has been created that was used to develop and evaluate an experimental software product line  It is concluded that within the context of our experimental software product line the SPLI improves software reuse in software product populations    2010 ACM   25 refs",Increasing software product reusability and variability using active components  A software product line infrastructure,"['Computer software reusability', 'Network architecture', 'Reusability', 'Software architecture', 'Technical presentations', 'Active components', 'components', 'model-driven development', 'Software Product Line', 'variability', 'Industrial Wastes', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Geertsema, Bas', '', '', 'Jansen, Slinger']","Information and Computing Sciences, University Utrecht, Utrecht, Netherlands",2010,ECSA
878,879,"Software architecting entails making architecture decisions, which requires a lot of experience and expertise  Current literature contains several methods and processes to support architects with architecture design, documentation and evaluation but not with the design reasoning involved in decision making  In order to derive a systematic reasoning process we need to understand the current state of practice and propose ways to improve it  In this paper we present the results of a survey that was conducted with undergraduate software engineering students, aiming to find out the innate reasoning process during architecting  The results of the survey are compared to the existing architecture literature in order to identify promising directions towards systematic reasoning processes    2010 Springer Verlag Berlin Heidelberg   33 refs",Naive architecting   Understanding the reasoning process of students  A descriptive survey,"['Decision making', 'Surveys', 'Architecture decisions', 'Architecture designs', 'Reasoning process', 'Software architecting', 'State of practice', 'Undergraduate software engineering', 'Surveying', 'Computer Programming', 'Management']","['Van Heesch, Uwe', ' ,', '', ' Avgeriou, Paris']","University of Groningen, Netherlands  2  Fontys University of Applied Sciences Venlo, Netherlands",2010,ECSA
879,880,"Software architecting is a highly knowledge intensive process demanding and producing a large and rich amount of information  To remain competitive, companies and organizations working in the IT sector must be able to manage this knowledge portfolio and effectively exploit and reuse it  In the era of Web 2 0, knowledge grids, social networking, global development and semantic web, this working session addresses the problem of building a knowledge community in the field of software architecture  To this end, we aim at exploring the wishes of academics and industrial organizations, on the one hand, and their boundaries on he other  Our goal is to compare and contrast the inputs from academia and industry, and gain a shared understanding about what can be done now, and in the near future    2008 IEEE   14 refs",Wishes and boundaries for a software architecture knowledge community,"['Helium', 'Industrial management', 'Information theory', 'Amount of information', 'Architecture knowledge', 'Global developments', 'Industrial organizations', 'Knowledge communities', 'Knowledge grids', 'Knowledge intensive processes', 'Shared understanding', 'Social networking', 'Software architecting', 'Web 2.0', 'Working sessions', 'Information Theory and Signal Processing', 'Computer Programming', 'Chemical Products Generally', 'Management']","['Lago, Patricia', '', '', 'Avgeriou, Paris', '', '', 'Capilla, Rafael', '', '', 'Kruchten, Philippe']","VU Univ , Amsterdam, Netherlands  2  Univ  Groningen, Netherlands  3  University Rev , Juan Carlos, Spain  4  Univ  British Columbia, Canada",2008,WICSA
880,881,"Software architects are often forced to make design decisions based on limited information  In this paper, we present an approach that allows software architects to study information about design decisions made by hundreds or more software architects by automatically analyzing the version management data of large open source repositories  The contribution is, first, that it develops a conceptual model to reason about the automatic derivation of specifically medium level architectural design decisions  Second, we show that it is indeed possible to derive these design decisions automatically from open source projects  This provides a basis for statistical and quantitative reasoning about software architecture design decisions that allows software architects to make better informed decisions    2013 Springer Verlag   13 refs",Making the right decision  Supporting architects with design decision data,"['Architecture', 'Design', 'Architectural design decisions', 'Architectural knowledge', 'Automatic derivation', 'Components', 'Design decisions', 'Open source projects', 'Quantitative reasoning', 'Software architecture design', 'Buildings and Towers', 'Structural Design', 'Computer Programming']","['Van Der Ven, Jan Salvador', '', '', 'Bosch, Jan']","University of Groningen, Groningen, Netherlands  2  Chalmers University of Technology, Gothenborg, Sweden",2013,ECSA
881,882,"Software architects create and consume many interrelated artifacts during the architecting process  These artifacts may represent functional and nonfunctional requirements, architectural patterns, infrastructure topology units, code, and deployment descriptors as well as architecturally significant design decisions  Design decisions have to be linked to chunks of architecture description in order to achieve a fine grained control when a design is modified  Moreover, it is imperative to identify quickly the key decisions affected by a runtime change that are critical for a system s mission  This paper extends previous work on architectural knowledge with a metamodel for architectural decision capturing and sharing to   i  create and maintain fine grained dependency links between the entities during decision identification, making, and enforcement,  ii  keep track of the evolution of the decisions, and  iii  support runtime decisions    2011 Springer Verlag   25 refs",An enhanced architectural knowledge metamodel linking architectural design decisions to other artifacts in the software engineering lifecycle,"['Architectural design', 'Life cycle', 'Architectural design decisions', 'Architectural knowledge', 'evolution', 'Meta model', 'Runtimes', 'traceability', 'Buildings and Towers', 'Computer Programming', 'Production Engineering']","['Capilla, Rafael', '', '', 'Zimmermann, Olaf', '', '', 'Zdun, Uwe', '', '', 'Avgeriou, Paris', '', '', 'K ster, Jochen M', '', '']","Universidad Rey Juan Carlos, Madrid, Spain  2  IBM Research, Zurich, Switzerland  3  Vienna University of Technology, Vienna, Austria  4  University of Groningen, Groningen, Netherlands",2011,ECSA
882,883,"Software architects struggle to choose an adequate architectural style for multi tenant software systems  Bad choices result in poor performance, low scalability, limited flexibility, and obstruct software evolution  We present a comparison of 12 Multi Tenant Architecture  MTA  patterns that supports architects in choosing the most suitable architectural pattern, using 17 assessment criteria  Both patterns and criteria were evaluated by domain experts  Five architecture assessment rules of thumb are presented in the paper, aimed at making fast and efficient design decisions  The comparison provides architects with an effective method for selecting the applicable multi tenant architecture pattern, saving them effort, time, and mitigating the effects of making wrong decisions   14 refs",Multi tenant Architecture Comparison,"['software architecture', 'multitenant software architecture', 'multitenant software systems', 'software evolution', 'MTA patterns', 'assessment criteria', 'architecture assessment rules', 'design decisions', 'multitenant architecture pattern', 'Software engineering techniques']","['Kabbedijk, J', '', '', ' Pors, M', '', '', ' Jansen, S', '', '', ' Brinkkemper, S', '', '']","Dept  of Inf    Comput  Sci , Utrecht Univ , Utrecht, Netherlands",2014,ECSA
883,884,"Software architecture analysis methods aim to predict the quality of a system before it has been developed  In general, the quality of the architecture is validated by analyzing the impact of predefined scenarios on architectural components  Hereby, it is implicitly assumed that an appropriate refactoring of the architecture design can help in coping with critical scenarios and mending the architecture  This paper shows that there are also concerns at the architecture design level which inherently crosscut multiple architectural components, which cannot be localized in one architectural component and which, as such, can not be easily managed by using conventional abstraction mechanisms  We propose the Aspectual Software Architecture Analysis Method  ASAAM  to explicitly identify and specify these architectural aspects and make them transparent early in the software development life cycle  ASAAM introduces a set of heuristic rules that help to derive architectural aspects and the corresponding tangled architectural components from scenarios  The approach is ilustrated for architectural aspect identification in the architecture design of a window management system   18 refs",ASAAM  Aspectual software architecture analysis method,"['Computer aided design', 'Computer operating systems', 'Formal logic', 'Heuristic methods', 'Information science', 'Principal component analysis', 'Aspect-oriented software architecture design', 'Aspectual software architecture', 'Scenario based architectural evaluation', 'Tangled components', 'Mathematical Statistics', 'Mathematics', 'Information Science', 'Computer Applications', 'Computer Programming', 'Computer Systems and Equipment', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory']","['Tekinerdogan, Bedir']","Department of Computer Science, University of Twente, P O  Box 217, 7500 AE Enschede, Netherlands",2004,WICSA
884,885,"Software architecture analysis methods aim to predict the quality of a system before it has been developed  In general, the quality of the architecture is validated by analyzing the impact of predefined scenarios on architectural components  Hereby, it is implicitly assumed that an appropriate refactoring of the architecture design can help in coping with critical scenarios and mending the architecture  This paper shows that there are also concerns at the architecture design level which inherently crosscut multiple architectural components, which cannot be localized in one architectural component and which, as such, can not be easily managed by using conventional abstraction mechanisms  We propose the aspectual software architecture analysis method  ASAAM  to explicitly identify and specify these architectural aspects and make them transparent early in the software development life cycle  ASAAM introduces a set of heuristic rules that help to derive architectural aspects and the corresponding tangled architectural components from scenarios  The approach is illustrated for architectural aspect identification in the architecture design of a window management system   18 refs",ASAAM  aspectual software architecture analysis method,"['object-oriented programming', 'software architecture', 'software quality', 'software architecture analysis', 'multiple architectural components', 'conventional abstraction mechanisms', 'aspect-oriented software architecture design', 'software development life cycle', 'heuristic rules', 'scenario-based aspect-identification', 'window management system', 'scenario-based architectural evaluation', 'system quality', 'architecture design refactoring', 'abstraction mechanism', 'architectural aspect identification', 'Software engineering techniques', 'Object oriented programming']","['Tekinerdogan, B', '', '']","Dept  of Comput  Sci , Twente Univ , Enschede, Netherlands",2004,WICSA
885,886,"Software architecture and software architecture practices become increasingly important for information systems since they enable reasoning on the design of the system  The concept of architectural knowledge, i e  architectural design decisions and the resulting design, plays a pivotal role in architecture  In order to get the most out of architectural knowledge, we need insight into the ways in which architectural knowledge is used  Currently, we lack this insight  We performed survey based research in the Netherlands to collect feedback on the importance of architectural knowledge for the daily work of practitioners in architecture  We present our findings using two perspectives  the architectural roles practitioners fulfill and the architecture level practitioners are engaged in  We use these perspectives to construct and reflect on the architect s mindset on architectural knowledge  This mindset of architects reveals an approach which is focused on  to create and communicate  rather than  to review and maintain  an architecture    2008 Springer Verlag Berlin Heidelberg   29 refs",The architect s mindset,"['Architecture', 'Computer software selection and evaluation', 'Design', 'Software architecture', 'Software design', 'Architectural knowledge', 'Architecture level', 'Design decisions', 'Information systems', 'International conferences', 'Netherlands', 'Pivotal role', 'Quality of softwares', 'Survey-based research', 'Buildings and Towers', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Computer Programming']","['Clerc, Viktor', '', '', 'Lago, Patricia', '', '', 'Van Vliet, Hans']","Department of Computer Science, VU University, Amsterdam, Netherlands",2007,QoSA
886,887,"Software architecture and software architecture practices become increasingly important for information systems since they enable reasoning on the design of the system  The concept of architectural knowledge, i e  architectural design decisions and the resulting design, plays a pivotal role in architecture  In order to get the most out of architectural knowledge, we need insight into the ways in which architectural knowledge is used  Currently, we lack this insight  We performed survey based research in the Netherlands to collect feedback on the importance of architectural knowledge for the daily work of practitioners in architecture  We present our findings using two perspectives  the architectural roles practitioners fulfill and the architecture level practitioners are engaged in  We use these perspectives to construct and reflect on the architect s mindset on architectural knowledge  This mindset of architects reveals an approach which is focused on  to create and communicate  rather than  to review and maintain  an architecture   29 refs",The architect s mindset,"['information systems', 'software architecture', 'software architecture', 'information systems', 'architectural knowledge', 'survey-based research', 'Software engineering techniques']","['Clerc, V', '', '', ' Lago, P', '', '', ' van Vliet, H', '', '']","Dept  of Comput  Sci , VU Univ , Amsterdam, Netherlands",2008,QoSA
887,888,Software architecture can be represented as a set of design decisions  Exploring and analyzing architectural design decisions are difficult due to how the decisions are represented and displayed  We describe four visualization aspects that apply to architectural design decision exploration and analysis  1  tabular listing  2  decision structure visualization  3  decision chronology visualization  and 4  decision impact visualization  These aspects address some situations where visualization helps people understand and utilize decisions    2008 Springer Verlag Berlin Heidelberg   9 refs,Visualizing software architectural design decisions,"['Design', 'Software architecture', 'Software design', 'Structural design', 'Visualization', 'Decision impacts', 'Decision structures', 'Design decisions', 'Software architectural', 'Buildings and Towers', 'Structural Design', 'Structural Design, General', 'Computer Programming', 'Computer Applications', 'Engineering Graphics']","['Lee, Larix', '', '', 'Kruchten, Philippe']",University of British Columbia,2008,ECSA
888,889,"Software architecture consists of a set of design choices that can be partially expressed in form of rules that the implementation must conform to  Architectural rules are intended to ensure properties that fulfill fundamental non functional requirements  Verifying architectural rules is often a non trivial activity  available tools are often not very usable and support only a narrow subset of the rules that are commonly specified by practitioners  In this paper we present a new highly readable declarative language for specifying architectural rules  With our approach, users can specify a wide variety of rules using a single uniform notation  Rules can get tested by third party tools by conforming to pre defined specification templates  Practitioners can take advantage of the capabilities of a growing number of testing tools without dealing with them directly    2014 ACM   19 refs",Dicto  A unified DSL for testing architectural rules,"['Computer applications', 'Computer programming', 'DSL', 'Architectural rules', 'Declarative Languages', 'Non-functional requirements', 'Non-trivial', 'Testing tools', 'Third-party tools', 'Validation', 'Telecommunication  Radar, Radio and Television', 'Computer Software, Data Handling and Applications']","['Caracciolo, Andrea', '', '', 'Lungu, Mircea Filip', '', '', 'Nierstrasz, Oscar']","Software Composition Group, University of Bern, Switzerland",2014,ECSA
889,890,"Software architecture description languages allow software designers to focus on high level aspects of an application by abstracting from details  In general, a system s architecture is specified in a hierarchical way  In fact, hierarchical components hide, at each level, the complexity of the sub entities composing the system  As rewriting logic is a natural semantic framework for representing concurrency, parallelism, communication and interaction, it can be used for systems specification and verification  In this paper, we show how we can take advantage of hierarchical modeling of software systems specified with LfP, to proto type model checking process using Maude system  This approach allows us to hide and show, freely and easily, encapsulated details by moving between hierarchical levels  Thus, state explosion problem is mastered and reduced  In addition, system s maintainability and error detection become easier and faster    Springer Verlag Berlin Heidelberg 2007   17 refs",Hierarchical verification in maude of LfP software architectures,"['Computer programming languages', 'Logic programming', 'Semantics', 'Verification', 'Hierarchical verification', 'Software architecture description languages', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming Languages', 'Computer Applications', 'Information Dissemination']","['Jerad, Chadlia', '', '', 'Barkaoui, Kamel', '', '', 'Touzi, Amel Grissa']","LSTS   ENIT, BP 37, Le Belvedere 1002 Tunis, Tunisia  2  CEDRIC   CNAM, 292, Rue Saint Martin, Paris 75003, France",2007,ECSA
890,891,"Software architecture description languages allow software designers to focus on high level aspects of an application by abstracting from details  In general, a system s architecture is specified in a hierarchical way  In fact, hierarchical components hide, at each level, the complexity of the sub entities composing the system  As rewriting logic is a natural semantic framework for representing concurrency, parallelism, communication and interaction, it can be used for systems specification and verification  In this paper, we show how we can take advantage of hierarchical modeling of software systems specified with LfP, to proto type model checking process using Maude system  This approach allows us to hide and show, freely and easily, encapsulated details by moving between hierarchical levels  Thus, state explosion problem is mastered and reduced  In addition, system s maintainability and error detection become easier and faster    Springer Verlag Berlin Heidelberg 2007   17 refs",Hierarchical verification in maude of LfP software architectures,"['Computer programming languages', 'Logic programming', 'Semantics', 'Verification', 'Hierarchical verification', 'Software architecture description languages', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming Languages', 'Computer Applications', 'Information Dissemination']","['Jerad, Chadlia', '', '', 'Barkaoui, Kamel', '', '', 'Touzi, Amel Grissa']","LSTS   ENIT, BP 37, Le Belvedere 1002 Tunis, Tunisia  2  CEDRIC   CNAM, 292, Rue Saint Martin, Paris 75003, France",2008,ECSA
891,892,"Software architecture description languages allow software designers to focus on high level aspects of an application by abstracting from details  In general, a system s architecture is specified in a hierarchical way  In fact, hierarchical components hide, at each level, the complexity of the sub entities composing the system  As rewriting logic is a natural semantic framework for representing concurrency, parallelism, communication and interaction, it can be used for systems specification and verification  In this paper, we show how we can take advantage of hierarchical modeling of software systems specified with LfP, to prototype model checking process using Maude system  This approach allows us to hide and show, freely and easily, encapsulated details by moving between hierarchical levels  Thus, state explosion problem is mastered and reduced  In addition, system s maintainability and error detection become easier and faster   17 refs",Hierarchical verification in Maude of LfP software architectures,"['formal verification', 'rewriting systems', 'software architecture', 'specification languages', 'hierarchical verification', 'LfP software architecture', 'software architecture description language', 'system architecture', 'rewriting logic', 'natural semantic framework', 'systems specification', 'systems verification', 'hierarchical modeling', 'software systems', 'model checking', 'Maude system', 'Software engineering techniques', 'Formal languages and computational linguistics', 'Formal methods']","['Jerad, C', '', '', ' Barkaoui, K', ' Grissa Touzi, A']","LSTS   ENIT, Tunis, Tunisia",2007,ECSA
892,893,"Software architecture description languages allow software designers to focus on high level aspects of an application by abstracting from details  In general, a system s architecture is specified in a hierarchical way  In fact, hierarchical components hide, at each level, the complexity of the sub entities composing the system  As rewriting logic is a natural semantic framework for representing concurrency, parallelism, communication and interaction, it can be used for systems specification and verification  In this paper, we show how we can take advantage of hierarchical modeling of software systems specified with LfP, to prototype model checking process using Maude system  This approach allows us to hide and show, freely and easily, encapsulated details by moving between hierarchical levels  Thus, state explosion problem is mastered and reduced  In addition, system s maintainability and error detection become easier and faster   17 refs",Hierarchical verification in Maude of LfP software architectures,"['formal verification', 'rewriting systems', 'software architecture', 'specification languages', 'hierarchical verification', 'LfP software architecture', 'software architecture description language', 'system architecture', 'rewriting logic', 'natural semantic framework', 'systems specification', 'systems verification', 'hierarchical modeling', 'software systems', 'model checking', 'Maude system', 'Software engineering techniques', 'Formal languages and computational linguistics', 'Formal methods']","['Jerad, C', '', '', ' Barkaoui, K', ' Grissa Touzi, A']","LSTS   ENIT, Tunis, Tunisia",2008,ECSA
893,894,"Software architecture descriptions can play a wide variety of roles in the software lifecycle, from requirements specification, to logical design, to implementation architectures  In addition, execution architectures can be used both to constrain and enhance the functionality of running systems, e g  security architectures and debugging architectures  Along with others from DARPA s DASADA program we proposed an execution infrastructure for so called self healing, self adaptive systems   systems that maintain a particular level of healthiness or quality of service  QoS   This externalized infrastructure does not entail any modification of the target system   whose health is to be maintained  It is driven by a reflective model of the target system s operation to determine what aspects can be changed to effect repair  We present that infrastructure along with an example implemented in accord with it   14 refs",An externalized infrastructure for self healing systems,"['software architecture', 'software maintenance', 'externalized infrastructure', 'self-healing systems', 'software architecture descriptions', 'software lifecycle', 'requirements specification', 'logical design', 'execution architectures', 'DARPA DASADA program', 'execution infrastructure', 'self-adaptive systems', 'quality of service', 'QoS', 'Software engineering techniques']","['Wile, D S', '', '', ' Egyed, A', '', '']","Teknowledge Corp , Marina del Rey, CA, United States",2004,WICSA
894,895,"Software architecture descriptions can play a wide variety of roles in the software lifecycle, from requirements specification, to logical design, to implementation architectures  In addition, execution architectures can be used both to constrain and enhance the functionality of running systems, e g  security architectures and debugging architectures  Along with others from DARPA s DASADA program we proposed an execution infrastructure for so called self healing, self adaptive systems   systems that maintain a particular level of healthiness or quality of service  QoS   This externalized infrastructure does not entail any modification of the target system whose health is to be maintained  It is driven by a reflective model of the target system s operation to determine what aspects can be changed to effect repair  Herein we present that infrastructure along with an example implemented in accord with it   14 refs",An externalized infrastructure for self healing systems,"['Broadcasting', 'Information analysis', 'Middleware', 'Quality of service', 'Specifications', 'Standardization', 'Systems analysis', 'Architectural elements', 'Self-healing systems', 'Software architecture', 'Software lifecycle', 'Telecommunication  Radar, Radio and Television', 'Radio Systems and Equipment', 'Computer Programming', 'Codes and Standards', 'Information Sources and Analysis', 'Operations Research']","['Wile, David S', '', '', ' Egyed, Alexander']","Teknowledge Corporation, 4640 Admiralty Way, Marina del Rey, CA 90292, United States",2004,WICSA
895,896,"Software architecture design decisions are central to the architecting process  Hence, the software architecture community has been constantly striving towards making the decision making process robust and reliable to create high quality architectures  Surveys of practitioners has demonstrated that most decisions made by them are group decisions  Hence, for any tool or method to be useful to them, it must include provision for making group decisions  In this paper we analyse if and how current software architecture decision making techniques support Group Decision Making  GDM   We use an evaluation framework with eight criteria, identified by the GDM community, to evaluate selected SA decision making techniques in order to check their adequacy and suitability to support group decisions  As per our analysis, most of the selected methods in their current form are not yet fully suitable for group decision making and may need to integrate more aspects like provision for stakeholders to explicitly indicate their preferences, conflict resolution mechanisms, and group decision rules meant to specify how stakeholders  preferences are taken into account    2014 Springer International Publishing Switzerland   39 refs",Suitability of software architecture decision making methods for group decisions,"['Software architecture', 'Architecture community', 'Architecture decisions', 'Conflict resolution mechanisms', 'Decision making process', 'Evaluation framework', 'Group decision', 'Group Decision Making', 'Software architecture design', 'Computer Programming', 'Management']","['Rekha V , Smrithi', ' ,', '', ' Muccini, Henry']","Amrita School of Business, Amrita Vishwa Vidyapeetham, India  2  Center for Research in Advanced Technologies for Education  CREATE , Amrita Vishwa Vidyapeetham, India  3  Department of Engineering, Computer Science, and Mathematics, University of l Aquila, Italy",2014,ECSA
896,897,"Software architecture design decisions are central to the architecting process  Hence, the software architecture community has been constantly striving towards making the decision making process robust and reliable to create high quality architectures  Surveys of practitioners has demonstrated that most decisions made by them are group decisions  Hence, for any tool or method to be useful to them, it must include provision for making group decisions In this paper we analyse if and how current software architecture decision making techniques support Group Decision Making  GDM   We use an evaluation framework with eight criteria, identified by the GDM community, to evaluate selected SA decision making techniques in order to check their adequacy and suitability to support group decisions  As per our analysis, most of the selected methods in their current form are not yet fully suitable for group decision making and may need to integrate more aspects like provision for stakeholders to explicitly indicate their preferences, conflict resolution mechanisms, and group decision rules meant to specify how stakeholders  preferences are taken into account   39 refs",Suitability of Software Architecture Decision Making Methods for Group Decisions,"['decision making', 'software architecture', 'software architecture decision making methods', 'group decision making', 'architecting process', 'high-quality architectures', 'GDM community', 'SA decision-making techniques', 'conflict resolution mechanisms', 'group decision rules', 'stakeholder preferences', 'Software engineering techniques']","['Rekha, V S', '', '', ' Muccini, H', '', '']","Amrita Sch  of Bus , Amrita Vishwa Vidyapeetham, Coimbatore, India  2  Dept  of Eng , Comput  Sci ,   Math , Univ  of L Aquila, L Aquila, Italy",2014,ECSA
897,898,"Software architecture erosion and architectural drift are well known software evolution problems  While there exist a number of approaches to address these problems, so far in these approaches the understandability of the resulting architectural models  e g , component models  is seldom studied  However, reduced understandability of the architectural models might lead to problems similar to architecture erosion and architectural drift  To address this problem, we propose to extend our existing DSL based architecture abstraction approach with empirically evaluated understandability metrics  While the DSL based architecture abstraction approach enables software architects to keep source code and architecture consistent, the understandability metrics extensions enables them, while working with the DSL, to continuously judge the understandability of the architectural component models they create with the DSL  We studied the applicability of our approach in a case study of an existing open source system    2014 ACM   25 refs",Supporting software evolution by integrating DSL based architectural abstraction and understandability related metrics,"['Abstracting', 'DSL', 'Erosion', 'Open source software', 'Software architecture', 'Abstracting', 'DSL', 'Erosion', 'Open source software', 'Software architecture', 'Architectural Abstraction', 'Architectural components', 'Empirical evaluations', 'Software Evolution', 'Software metrics', 'Understandability', 'Architectural Abstraction', 'Architectural components', 'Empirical evaluations', 'Software Evolution', 'Software metrics', 'Understandability', 'Maritime and Port Structures  Rivers and Other Waterways', 'Soil Mechanics and Foundations', 'Telecommunication  Radar, Radio and Television', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Information Sources and Analysis']","['Stevanetic, Srdjan', '', '', 'Haitzer, Thomas', '', '', 'Zdun, Uwe']","Software Architecture Research Group, University of Vienna, Austria",2014,ECSA
898,899,"Software architecture erosion can reduce the quality of software systems significantly  It is hence of great importance to repair erosion efficiently, for example, by means of refactoring  However, existing refactoring approaches do not address architecture erosion holistically  In this paper, we describe the problem of optimally repairing software architecture erosion and investigate the applicability and limitations of current refactoring approaches  We argue that a heuristic search for adequate repairs using formalized and explicit knowledge of software engineers could overcome those limitations  This paper outlines an approach we have been starting to investigate in our recent research and also aims at stimulating a discussion about further research challenges in repairing software architecture erosion    2013 Springer Verlag   25 refs",Towards extensive software architecture erosion repairs,"['Computer software maintenance', 'Erosion', 'Heuristic algorithms', 'Software architecture', 'Architecture erosion', 'Explicit knowledge', 'Heuristic search', 'Quality of softwares', 'Recent researches', 'Refactorings', 'Research challenges', 'Maritime and Port Structures  Rivers and Other Waterways', 'Soil Mechanics and Foundations', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Maintenance']","['Mair, Matthias', '', '', 'Herold, Sebastian']","Clausthal University of Technology, Department of Informatics, Julius Albert Strasse 4, 38678 Clausthal Zellerfeld, Germany",2013,ECSA
899,900,"Software architecture evaluation is an essential part of architecture management and a means to uncover problems and increase confidence in the capability of the software architecture in fulfilling the most critical requirements  Architecture evaluation is typically carried out at an early stage of a software development  However, development efforts are often related to further development of existing software  We present a case study of the software architecture board  SWAB  initiative carried out at in a company called NSN  SWAB employed a lightweight architecture evaluation and management approach to exchange architectural experiences with related products and assess ability to fulfill future requirements  SWAB operated for two years but ultimately came to an end because the desired objectives were not achieved  The case study provides lessons for the evaluation of architecture in mature products and for using a lightweight evaluation approach  Evaluation in mature products seems not to be about finding problems and risk or making trade offs, but about architecture management such as better communication, raising awareness about the architecture, and increased confidence to the architecture throughout the organization and a lightweight architecture evaluation seems to be a good approach especially for mature products  However, the motivation and justification for architectural evaluation of mature products remains challenging, as their architecture is already in place and evolved over years towards good candidates, although the need for inter product communication and alignment of architectural issues can be argued for  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   32 refs",Architecture management and evaluation in mature products  Experiences from a lightweight approach,"['Communication', 'Research', 'Architectural evaluation', 'Architecture evaluation', 'Architecture management', 'Evaluation approach', 'Lightweight architecture', 'Mature product', 'Related products', 'Software architecture evaluation', 'Telecommunication  Radar, Radio and Television', 'Computer Programming', 'Engineering Research']","['Raatikainen, Mikko', '', '', 'Savolainen, Juha', '', '', 'M nnist , Tomi']","Department of Computer, Science and Engineering, Aalto University, Finland  2  Danfoss, Denmark  3  University of Helsinki, Finland",2014,QoSA
900,901,"Software architecture has become an established discipline in industry  Nevertheless, the available documentation of architecture is often not perceived as adequate by developers  As a foundation for the improvement of methods and tools around architecture documentation, we conducted a survey with 147 industrial participants, investigating their current problems and wishes for the future  Participants from different countries in Europe, Asia, North and South America shared their experiences  This paper presents the results of the survey  The results confirmed the common belief that architecture documentation is most frequently outdated and inconsistent and backed it up with data  Further, developers perceive difficulties with a  one size fits all  architecture documentation, which does not adequately provide information for their specific task and context  Developers seek for more interactive ways of working with architecture documentation that allow finding needed information more easily with extended navigation and search possibilities    2013 Springer Verlag   23 refs",Software architecture documentation for developers  A survey,"['Architecture', 'Industry', 'Software architecture', 'Surveying', 'System program documentation', 'Current problems', 'developers', 'implementation', 'Improvement of methods', 'Interactive way', 'South America', 'Specific tasks', 'Buildings and Towers', 'Surveying', 'Computer Programming', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Rost, Dominik', '', '', 'Naab, Matthias', '', '', 'Lima, Crescencio', '', '', 'Von Flach Garcia Chavez, Christina']","Fraunhofer Institute for Experimental Software Engineering, Kaiserslautern, Germany  2  Fraunhofer Project Center on Software and Systems Engineering, Department of Computer Science, Federal University of Bahia, Bahia, Brazil",2013,ECSA
901,902,"Software architecture has been advocated as an effective means to produce quality systems  In this paper, we argue that integration between analysis conducted at different stages of development is still lacking  Hence we propose an architecture centric approach which, by combining different technologies and tools for analysis and testing, supports a seamless tool supported approach to validate required properties  The idea is to start from the requirements, produce a validated model of the SA, and then use the SA to derive a set of conformance test cases  In this paper, we outline the process, and discuss how some existing tools, namely QuARS, MooTEST, CowTEST and UIT, could be exploited to support the approach  The integrated framework is under development   35 refs",An architecture centric approach for producing quality systems,"['formal specification', 'formal verification', 'program testing', 'software architecture', 'software quality', 'software tools', 'software architecture', 'quality systems', 'architecture-centric approach', 'conformance test cases', 'QuARS', 'MooTEST', 'CowTEST', 'UIT', 'Software engineering techniques', 'Formal methods', 'Diagnostic, testing, debugging and evaluating systems', 'Programming support']","['Bertolino, A', '', '', ' Bucchiarone, A', '', '', ' Gnesi, S', '', '', ' Muccini, H']","Istituto di Scienza e Tecnologie dell Informazione, CNR, Pisa, Italy",2005,QoSA
902,903,"Software architecture has been proven as a conceptual tool to manage the development and evolution of a software product  However, integrating architecting as an activity in software engineering is still perceived as a major challenge in practice  Our observation from many projects centered around architecture is that most organizations actually fail to plan architecting activities and align them in product development  The consequence is that the value of the architecture is underrated and the power of architecture remains more often than not unexploited  In this paper, we introduce the notion of architecture engagement purpose   an auxiliary construct to align architecting with other engineering activities in the product lifecycle  We gained first promising results in applying it in industrial projects, where explicit architecture engagement purposes enabled the organization in planning and tracking architecting as an activity within their software engineering    2012 IEEE   8 refs",Architecture engagement purposes  Towards a framework for planning  just enough  architecting in software engineering,"['Product development', 'Societies and institutions', 'architectecting', 'Engineering activities', 'Industrial projects', 'product', 'Product-life-cycle', 'Software products', 'Computer Programming', 'Societies and Institutions', 'Production Engineering']","['Keuler, Thorsten', '', '', 'Knodel, Jens', '', '', 'Naab, Matthias', '', '', 'Rost, Dominik']","Fraunhofer Institute for Experimental Software Engineering  IESE , Kaiserslautern, Germany",2012,ECSA
903,904,"Software architecture has been proven as a conceptual tool to manage the development and evolution of a software product  However, integrating architecting as an activity in software engineering is still perceived as a major challenge in practice  Our observation from many projects centered around architecture is that most organizations actually fail to plan architecting activities and align them in product development  The consequence is that the value of the architecture is underrated and the power of architecture remains more often than not unexploited  In this paper, we introduce the notion of architecture engagement purpose   an auxiliary construct to align architecting with other engineering activities in the product lifecycle  We gained first promising results in applying it in industrial projects, where explicit architecture engagement purposes enabled the organization in planning and tracking architecting as an activity within their software engineering    2012 IEEE   8 refs",Architecture engagement purposes  Towards a framework for planning  just enough  architecting in software engineering,"['Product development', 'Societies and institutions', 'architectecting', 'Engineering activities', 'Industrial projects', 'product', 'Product-life-cycle', 'Software products', 'Computer Programming', 'Societies and Institutions', 'Production Engineering']","['Keuler, Thorsten', '', '', 'Knodel, Jens', '', '', 'Naab, Matthias', '', '', 'Rost, Dominik']","Fraunhofer Institute for Experimental Software Engineering  IESE , Kaiserslautern, Germany",2012,WICSA
904,905,"Software architecture is developed as a result of a selection process for software architectural solutions  The complexity, diversity and evolution nature of architectural solutions  interactions forces the architect to make critical design decisions based only on his own experience  Even though, the same design problem has already been addressed by another architect in a similar situation  In this paper, we are presenting a model for reusable software architectural knowledge to support the architect within the design process in understanding the relationship between the different architectural solutions, and how they impact the architectural design reasoning  In addition, the model acts as a base for organizational software architectural knowledge sharing  Our contribution in this paper is classifying and modeling the solutions and decisions  interactions, as well as how the design decision can be used as a reusable element for sharing the architectural experience    2014 Springer International Publishing Switzerland   11 refs",Modeling the interactions between decisions within software architecture knowledge,"['Computer software reusability', 'Design', 'Professional aspects', 'Architectural solutions', 'Critical design', 'Design decisions', 'Design problems', 'Design process', 'Design reasonings', 'Reusable softwares', 'Software architectural', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Engineering Professional Aspects']","['Soliman, Mohamed', '', '', 'Riebisch, Matthias']","Universit t Hamburg, Vogt K lln Str  30, 22527 Hamburg, Germany",2014,ECSA
905,906,"Software architecture is developed as a result of a selection process for software architectural solutions  The complexity, diversity and evolution nature of architectural solutions  interactions forces the architect to make critical design decisions based only on his own experience  Even though, the same design problem has already been addressed by another architect in a similar situation  In this paper, we are presenting a model for reusable software architectural knowledge to support the architect within the design process in understanding the relationship between the different architectural solutions, and how they impact the architectural design reasoning  In addition, the model acts as a base for organizational software architectural knowledge sharing  Our contribution in this paper is classifying and modeling the solutions and decisions  interactions, as well as how the design decision can be used as a reusable element for sharing the architectural experience   11 refs",Modeling the Interactions between Decisions within Software Architecture Knowledge,"['decision making', 'inference mechanisms', 'software architecture', 'software reusability', 'interaction modeling', 'software architectural solutions', 'critical design decision making', 'reusable software architectural knowledge model', 'architectural design reasoning', 'organizational software architectural knowledge sharing', 'Software engineering techniques', 'Knowledge engineering techniques', 'Software management']","['Soliman, M', '', '', ' Riebisch, M', '', '']","Univ  Hamburg, Hamburg, Germany",2014,ECSA
906,907,"Software architecture is the result of a design effort aimed at ensuring a certain set of quality attributes  As we show, quality requirements are commonly specified in practice but are rarely validated using automated techniques  In this paper we analyze and classify commonly specified quality requirements after interviewing professionals and running a survey  We report on tools used to validate those requirements and comment on the obstacles encountered by practitioners when performing such activity  e g , insufficient tool support  poor understanding of user s needs   Finally we discuss opportunities for increasing the adoption of automated tools based on the information we collected during our study  e g , using a business readable notation for expressing quality requirements  increasing awareness by monitoring non functional aspects of a system     2014 Springer International Publishing Switzerland   21 refs",How do software architects specify and validate quality requirements,"['Artificial intelligence', 'Computer science', 'Computers', 'Automated techniques', 'Automated tools', 'Empirical studies', 'Non-functional aspects', 'Quality attributes', 'Quality requirements', 'Software architects', 'validation', 'Computer Circuits and Logic Elements', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Caracciolo, Andrea', '', '', 'Lungu, Mircea Filip', '', '', 'Nierstrasz, Oscar']","Software Composition Group, University of Bern, 3012 Bern, Switzerland",2014,ECSA
907,908,"Software architecture is the result of a design effort aimed at ensuring a certain set of quality attributes  As we show, quality requirements are commonly specified in practice but are rarely validated using automated techniques  In this paper we analyze and classify commonly specified quality requirements after interviewing professionals and running a survey  We report on tools used to validate those requirements and comment on the obstacles encountered by practitioners when performing such activity  e g , insufficient tool support  poor understanding of user s needs   Finally we discuss opportunities for increasing the adoption of automated tools based on the information we collected during our study  e g , using a business readable notation for expressing quality requirements  increasing awareness by monitoring non functional aspects of a system    21 refs",How Do Software Architects Specify and Validate Quality Requirements,"['software architecture', 'software quality', 'software architecture', 'quality attributes', 'automated techniques', 'Software engineering techniques']","['Caracciolo, A', '', '', ' Lungu, M F', '', '', ' Nierstrasz, O', '', '']","Software Composition Group, Univ  of Bern, Bern, Switzerland",2014,ECSA
908,909,"Software architecture may go through many changes during its existence  Architecture evaluation can point out current problems, help to anticipate some of the future changes, and also show the absolute limits of a design  This paper presents experiences from eleven scenario based architecture evaluations with ATAM  The evaluations were completed on a tight two day evaluation schedule  This limited time forced to search for alternative scheduling options  The evaluated system designs had relatively long life cycle up to 30 years and all the designs were evaluated for the first time  We have learnt that in evaluations current issues often overshadow the long view of the future  We suggest that architecture evaluations should be integrated to the development process as a tool not only for today but also for tomorrow    2010 Springer Verlag Berlin Heidelberg   13 refs",Experiences from scenario based architecture evaluations with ATAM,"['Computer software selection and evaluation', 'Design', 'Alternative scheduling', 'Architecture evaluation', 'Development process', 'Long life', 'System design', 'Structural Design', 'Computer Software, Data Handling and Applications']","['Reijonen, Ville', '', '', 'Koskinen, Johannes', '', '', 'Haikala, Ilkka']","Institute of Software Systems, Tampere University of Technology, PL 553, Tampere 33101, Finland",2010,ECSA
909,910,"Software architecture modeling and representation became a main phase of the development process of complex systems  In fact, software architecture representation provides many advantages during all phases of software life cycle  Nevertheless, for many systems, like legacy or eroded ones, there is no available representation of their architectures  In order to benefit from this representation, we propose, in this paper, an approach called ROMANTIC which focuses on extracting a component based architecture of an existing object oriented system  The main idea of this approach is to propose a quasi automatic process of architecture recovery based on semantic and structural characteristics of software architecture concepts    2008 IEEE   10 refs",Extraction of component based architecture from object oriented systems,"['Architecture', 'Chlorine compounds', 'Information theory', 'Ketones', 'Legacy systems', 'Life cycle', 'Architecture recovery', 'Complex systems', 'Component-based architectures', 'Development processes', 'Object-oriented systems', 'Software architecture modeling', 'Software life cycles', 'Structural characteristics', 'Buildings and Towers', 'Information Theory and Signal Processing', 'Computer Systems and Equipment', 'Computer Programming', 'Organic Compounds', 'Production Engineering']","['Chardigny, Sylvain', '', '', 'Seriai, Abdelhak', '', '', 'Oussalah, Mourad', '', '', 'Tamzalit, Dalila']","Ecole des Mines de Douai, 941 rue Charles Bourseul, 59508 Douai, France  2  LINA, universit de Nantes, 2 rue de la Houssiniere, 44322 Nantes, France",2008,WICSA
910,911,"Software architecture plays an important role for the application understanding before its maintenance  Unfortunately, for legacy systems code often there is no corresponding  or up to date  architecture  So, several work tackle this problem by extracting components from the legacy system and define their links  Although these components allow to get an architectural view of the legacy system, they still can t be easily implemented in a concrete framework  In fact, restructuring completely the legacy system facilitates the mapping between the architectural elements and their corresponding ones in the code  This paves the way to the future maintenance of the system  Our approach aims to reach this complete restructuring  Thus it goes beyond what exists in the state of the art by proposing a technique that makes components extracted from object oriented applications implementable within a concrete component model  This is done by using class instances that compose the extracted components to infer possible instances the components  Thus, we propose for each extracted component its provided and required interfaces, and a way to construct its instances  We validated the feasibility of the proposed approach through the Spring framework and we illustrated it through a legacy Java application   19 refs",Enactment of components extracted from an object oriented application,"['object-oriented programming', 'software architecture', 'software maintenance', 'object-oriented programming', 'component extraction enactment', 'software architecture', 'legacy system code', 'architectural elements', 'system maintenance', 'concrete component model', 'Spring framework', 'legacy Java application', 'Object oriented programming', 'Software engineering techniques']","['Seriai, A', '', '', ' Sadou, S', '', '', ' Sahraoui, H A', '', '']","IRISA, Univ  de Bretagne Sud, Vannes, France  2  DIRO, Univ  de Montreal, Montre al, QC, Canada",2014,ECSA
911,912,"Software architecture practice is highly complex  Software architects interact with business as well as technical aspects of systems, often embedded in large and changing organizations  We first make an argument that an appropriate research agenda for understanding, describing, and changing architectural practice in this context is based on an action research agenda in which researchers use ethnographic techniques to understand practice and engages directly with and in practice when proposing and designing new practices  Secondly, we present an overview of an ongoing project which applies action research techniques to understand and potentially change architectural practice in four Danish software companies    2008 IEEE   8 refs",Ready  set  go  an action research agenda for software architecture research,"['Architecture', 'Chlorine compounds', 'Embedded systems', 'Action research', 'Architecture practice', 'Architecture research', 'Research agenda', 'Software architects', 'Software companies', 'Technical aspects', 'Buildings and Towers', 'Computer Systems and Equipment', 'Computer Programming', 'Organic Compounds']","['Christensen, Henrik Brbak', '', '', 'Hansen, Klaus Marius', '', '', 'Schougaard, Kari Rye']","Department of Computer Science, University of Aarhus, Aabogade 34, 8200 Aarhus N, Denmark",2008,WICSA
912,913,"Software architecture provides a high level design that serves as the basis for system implementation and communication among stakeholders  However, changes in requirements and lack of conformance checks during development can cause the implemented architecture to deviate from the intended one  Such architecture degradation can cause rapid software aging and high maintenance costs  Conformance checking to detect inconsistencies between a model and its corresponding implementation is one of the strategies used to minimise architecture degradation  Existing conformance checking tools often require formal architecture specifications, which are not usually available outwith academic settings, or manual intervention in the process, which affects their viability  This paper describes an automated approach that uses mappings between architecture models in UML and corresponding implementations in Java to check conformance  These notations have been chosen for their adoption in industry  A customisable tool called Card, which implements this approach, is also introduced and evaluated    2013 Springer Verlag   25 refs",Maintaining architectural conformance during software development  A practical approach,"['Software architecture', 'Tools', 'Architecture models', 'Architecture specification', 'Automated approach', 'Conformance checking', 'Conformance checking tools', 'Implemented architectures', 'Manual intervention', 'System implementation', 'Machine Tools', 'Small Tools and Hardware', 'Computer Programming']","['Dimech, Claire', '', '', 'Balasubramaniam, Dharini']","School of Computer Science, University of St  Andrews, St Andrews KY16 9SX, United Kingdom",2013,ECSA
913,914,"Software architecture reconstruction is essentially the process of creating a set of architectural views with the information recovered from the actual implementation of a software system  While recovering the basic facts about the implementation can be automated with source code analyzers, mapping them to logical concepts is mainly a conceptual activity  We investigate the problem of how to bridge the logical and concrete domains for the purpose of creating architectural views  Our conclusion is that there is still a considerable gap between the theoretical framework and the practical experiences  This hinders the possibility of developing a general, rigorous and effective architecture reconstruction method    2005 IEEE   6 refs",Bridging the concrete and logical domains for software architecture reconstruction,"['Codes (symbols)', 'Computer software selection and evaluation', 'Conformal mapping', 'Formal logic', 'Information analysis', 'Software engineering', 'Information recovery', 'Logical domains', 'Software architecture reconstruction', 'Software systems', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Information Sources and Analysis', 'Mathematics']","['Riva, Claudio']","Nokia Research Center, P O  Box 407, FIN 00045 Helsinki, Finland",2005,WICSA
914,915,"Software architecture views represent the basic structures of a complex software system  By means of these views, it is possible to shape the different concerns that appear in the requirements and design phases  A modular view specifies the elements that must be built in the detailed design, and the relationships that must be established among them  This paper makes an analysis of the styles present in the modular view  This work establishes how these styles can be shaped and analyzed by means of their relations    Springer Verlag Berlin Heidelberg 2007   6 refs",Analyzing styles of the modular software architecture view,"['Computer aided design', 'Requirements engineering', 'Modular software architecture', 'Software systems', 'Computer Programming', 'Computer Applications']","['Cordero, Rogelio Limon', '', '', 'Salavert, Isidro Ramos']","Department of Information Systems and Computation, Technical University of Valencia, Camino de Vera s n, E 46022 Valencia",2007,ECSA
915,916,"Software architecture views represent the basic structures of a complex software system  By means of these views, it is possible to shape the different concerns that appear in the requirements and design phases  A modular view specifies the elements that must be built in the detailed design, and the relationships that must be established among them  This paper makes an analysis of the styles present in the modular view  This work establishes how these styles can be shaped and analyzed by means of their relations    Springer Verlag Berlin Heidelberg 2007   6 refs",Analyzing styles of the modular software architecture view,"['Computer aided design', 'Requirements engineering', 'Modular software architecture', 'Software systems', 'Computer Programming', 'Computer Applications']","['Cordero, Rogelio Limon', '', '', 'Salavert, Isidro Ramos']","Department of Information Systems and Computation, Technical University of Valencia, Camino de Vera s n, E 46022 Valencia",2008,ECSA
916,917,"Software architecture views represent the basic structures of a complex software system  By means of these views, it is possible to shape the different concerns that appear in the requirements and design phases  A modular view specifies the elements that must be built in the detailed design, and the relationships that must be established among them  This paper makes an analysis of the styles present in the modular view  This work establishes how these styles can be shaped and analyzed by means of their relations   6 refs",Analyzing styles of the modular software architecture view,"['software architecture', 'modular software architecture', 'software development', 'Software engineering techniques']","['Cordero, R L', '', '', ' Salavert, I R', '', '']","Dept  of Inf  Syst    Comput , Tech  Univ  of Valencia, Valencia, Spain",2007,ECSA
917,918,"Software architecture views represent the basic structures of a complex software system  By means of these views, it is possible to shape the different concerns that appear in the requirements and design phases  A modular view specifies the elements that must be built in the detailed design, and the relationships that must be established among them  This paper makes an analysis of the styles present in the modular view  This work establishes how these styles can be shaped and analyzed by means of their relations   6 refs",Analyzing styles of the modular software architecture view,"['software architecture', 'modular software architecture', 'software development', 'Software engineering techniques']","['Cordero, R L', '', '', ' Salavert, I R', '', '']","Dept  of Inf  Syst    Comput , Tech  Univ  of Valencia, Valencia, Spain",2008,ECSA
918,919,"Software architectures and their representations in models are instrumental in achieving sustainability and the fulfillment of requirements  In this context, sustainability encompasses cost efficient maintainability and evolvability, which are central concerns for long living software systems  Hence, it is of great importance to support an architect in addressing these concerns when designing and evolving architectures  However, there is no framework available in which a designed architecture can be evaluated against these important quality attributes  In this paper, we address this challenge by proposing seven metrics which characterize the completeness, consistency, correctness and clarity of the documentation  These seven metrics should enable an architect to efficiently identify issues in an architecture model  Copyright   2014 ACM 978 1 4503 2523 3 14 04 15 00   11 refs",Towards quantitative metrics for architecture models,"['Software architecture', 'Sustainable development', 'Clarity', 'Completeness', 'Consistency', 'Correctness', 'Evolvability', 'Quality attributes', 'Buildings and Towers', 'Computer Programming', 'Industrial Economics']","['Sehestedt, Stephan', '', '', 'Cheng, Chih Hong', '', '', 'Bouwers, Eric']","ABB Corporate Research Germany, Industrial Software Systems Program, 68526 Ladenburg, Germany  2  Software Improvement Group, Amstelplein 1, 1096 HA Amsterdam, United States",2014,WICSA
919,920,"Software architectures are considered crucial because they are the earliest blueprints for target products and at the right level for achieving systemwide qualities  Existing methods of architecture design still face the challenge of bridging the gap between software requirements and architectures in practice  The emerging methods that focus on design decisions and rationale provide little support for deriving target architectures  In this paper we propose a decisioncentric architecture design approach, which models issues, solutions, decisions, and rationale as the core elements of architecture design and the key notions to direct the derivation of target architectures  The approach transits from requirements to architectures through a process including issue eliciting, solution exploiting, solution synthesizing, and architecture deciding  We implement the automated synthesis of candidate architecture solutions from various issue solutions, and provide a way to capture comprehensive design decisions and rationale during this design process  We finally illustrate the applicability of this approach with a case study    2008 IEEE   20 refs",Towards automated solution synthesis and rationale capture in decision centric architecture design,"['Architecture', 'Process design', 'Process engineering', 'Software architecture', 'Software design', 'Solutions', 'Targets', 'Architecture designs', 'Automated synthesis', 'Case studies', 'Comprehensive designs', 'Core elements', 'Design decisions', 'Design processes', 'Software requirements', 'Solution synthesis', 'Target architectures', 'Buildings and Towers', 'Computer Programming', 'Chemistry', 'Industrial Engineering', 'Production Engineering', 'Particle Accelerators']","['Cui, Xiaofeng', '', '', 'Sun, Yanchun', '', '', 'Mei, Hong']","Key Laboratory of High Confidence Software Technologies, Institute of Software, School of Electronics Engineering and Computer Science, Beijing 100871, China",2008,WICSA
920,921,"Software architectures for System of Systems  SoS  is an important research area  The design of an SoS can be organized around a set of architectural transformation models  In this paper, we propose a multi scale modeling approach for SoS architecture description mastering the description details complexity  The proposed design approach is founded on SysML  System modeling language  notations and uses block diagrams  The diagrams are subject to vertical and horizontal transformations for refinement, since reaching a fine grain description representing the necessary details  The intermediate models provide a description with a given abstraction that allow the validation to be conducted significantly while remaining tractable w r t  complexity  The validation scope can involve intrinsic properties ensuring the model correctness w r t  SysML description  eg  interface compatibility   An SoS architecture will provide these intrinsic properties, to have a precise model of the SoS architecture  its constituents and the connections between them   We adopt a rule oriented description technique  The rules manage the refinement process as a model transformation between the coarse grain and the fine grain descriptions  We experimented our approach by a case study modeling an Integrated Air Defense  IAD  SoS using SysML models    2014 ACM   10 refs",A multi scale modelling perspective for SoS architectures,"['Grain refinement', 'Software architecture', 'Architectural transformation', 'Architecture description', 'Interface compatibilities', 'multi-scale descriptions', 'refinement', 'SySML notation', 'System modeling languages', 'System of systems', 'Metallography', 'Computer Programming', 'Industrial Engineering and Management', 'Systems Science']","['Khlif, Ilhem', '', '', 'Kacem, Mohamed Hadj', '', '', 'Kacem, Ahmed Hadj', '', '', 'Drira, Khalil']","Research Laboratory ReDCAD, FSEGS, University of Sfax, Tunisia  2  Research Laboratory ReDCAD, ISIMS, University of Sfax, Tunisia  3  LAAS CNRS, Univ  de Toulouse, France",2014,ECSA
921,922,"Software architectures have high costs for change, are complex, and erode during evolution  We believe these problems are partially due to knowledge vaporization  Currently, almost all the knowledge and information about the design decisions the architecture is based on are implicitly embedded in the architecture, but lack a first class representation  Consequently, knowledge about these design decisions disappears into the architecture, which leads to the aforementioned problems  In this paper, a new perspective on software architecture is presented, which views software architecture as a composition of a set of explicit design decisions  This perspective makes architectural design decisions an explicit part of a software architecture  Consequently, knowledge vaporization is reduced, thereby alleviating some of the fundamental problems of software architecture    2005 IEEE   22 refs",Software architecture as a set of architectural design decisions,"['Decision theory', 'Knowledge engineering', 'Knowledge representation', 'Problem solving', 'Software design', 'Design decisions', 'First-class representation', 'Knowledge vaporization', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Mathematics', 'Systems Science']","['Jansen, Anton', '', '', 'Bosch, Jan']","Department of Computing Science, University of Groningen, PO BOX 800, 9700 AV, Netherlands  2  Software and Application Technologies Lab , Nokia Research Center, PO BOX 407, FI 00045, Finland",2005,WICSA
922,923,"Software architectures have played a significant role in determining the success of software systems  In particular, reference architectures have emerged, achieving wellrecognized understanding in a specific domain, promoting reuse of design expertise and facilitating the development of systems  In another perspective, ontologies have been widely investigated aiming at representing, communicating and reusing knowledge  In spite of their relevance on directly dealing with domain knowledge, reference architectures and ontologies have been separately treated  In this paper we investigate the impact in using ontologies to the establishment of reference architectures  We illustrate our idea using an ontology of software testing to build a reference architecture for the testing domain  Preliminary results indicate that ontologies are an important and viable mechanism aiming at building reference architectures    2009 IEEE   10 refs",Exploring ontologies to support the establishment of reference architectures  An example on software testing,"['Architecture', 'Computer software selection and evaluation', 'Ontology', 'Software testing', 'Domain knowledge', 'Reference architecture', 'Software systems', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Information Science', 'Management']","['Nakagawa, Elisa Yumi', '', '', 'Barbosa, Ellen Francine', '', '', 'Maldonado, Jos', 'Carlos']","Dept  of Computer Systems, University of S o Paulo, ICMC USP, S o Carlos, SP, Brazil",2009,ECSA
923,924,"Software architectures have played a significant role in determining the success of software systems  In particular, reference architectures have emerged, achieving wellrecognized understanding in a specific domain, promoting reuse of design expertise and facilitating the development of systems  In another perspective, ontologies have been widely investigated aiming at representing, communicating and reusing knowledge  In spite of their relevance on directly dealing with domain knowledge, reference architectures and ontologies have been separately treated  In this paper we investigate the impact in using ontologies to the establishment of reference architectures  We illustrate our idea using an ontology of software testing to build a reference architecture for the testing domain  Preliminary results indicate that ontologies are an important and viable mechanism aiming at building reference architectures    2009 IEEE   10 refs",Exploring ontologies to support the establishment of reference architectures  An example on software testing,"['Architecture', 'Computer software selection and evaluation', 'Ontology', 'Software testing', 'Domain knowledge', 'Reference architecture', 'Software systems', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Information Science', 'Management']","['Nakagawa, Elisa Yumi', '', '', 'Barbosa, Ellen Francine', '', '', 'Maldonado, Jos', 'Carlos']","Dept  of Computer Systems, University of S o Paulo, ICMC USP, S o Carlos, SP, Brazil",2009,WICSA
924,925,"Software architectures have played a significant role in determining the success of software systems  In particular, reference architectures have emerged, achieving wellrecognized understanding in a specific domain, promoting reuse of design expertise and facilitating the development of systems  In another perspective, ontologies have been widely investigated aiming at representing, communicating and reusing knowledge  In spite of their relevance on directly dealing with domain knowledge, reference architectures and ontologies have been separately treated  In this paper we investigate the impact in using ontologies to the establishment of reference architectures  We illustrate our idea using an ontology of software testing to build a reference architecture for the testing domain  Preliminary results indicate that ontologies are an important and viable mechanism aiming at building reference architectures    2009 IEEE   10 refs",Exploring ontologies to support the establishment of reference architectures  An example on software testing,"['Architecture', 'Computer software selection and evaluation', 'Ontology', 'Software testing', 'Domain knowledge', 'Reference architecture', 'Software systems', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Information Science', 'Management']","['Nakagawa, Elisa Yumi', '', '', 'Barbosa, Ellen Francine', '', '', 'Maldonado, Jos', 'Carlos']","Dept  of Computer Systems, University of S o Paulo, ICMC USP, S o Carlos, SP, Brazil",2011,WICSA
925,926,"Software architectures suffer of a serious lack of documented design decisions, but also an explicit definition of the processes needed to create and exploit such architectural knowledge  To address these issues, we focus on the specification of those activities that we believe should be implemented to support the creation and use of design rationale with tool support    Springer Verlag Berlin Heidelberg 2007   14 refs",Processes for creating and exploiting architectural design decisions with tool support,"['Computer aided design', 'Decision making', 'Architectural knowledge', 'Design rationale', 'Documented design decisions', 'Computer Programming', 'Computer Applications', 'Management']","['Nava, Francisco', '', '', 'Capilla, Rafael', '', '', 'Due as, Juan C', '', '']","Department of Computer Science, Universidad Rey Juan Carlos, c  Tulip n s n, 28933, Madrid, Spain  2  Department of Engineering of Telematic Systems, ETSI Telecomunicaci n, Ciudad Universitaria s n, 28040, Madrid, Spain",2007,ECSA
926,927,"Software architectures suffer of a serious lack of documented design decisions, but also an explicit definition of the processes needed to create and exploit such architectural knowledge  To address these issues, we focus on the specification of those activities that we believe should be implemented to support the creation and use of design rationale with tool support    Springer Verlag Berlin Heidelberg 2007   14 refs",Processes for creating and exploiting architectural design decisions with tool support,"['Computer aided design', 'Decision making', 'Architectural knowledge', 'Design rationale', 'Documented design decisions', 'Computer Programming', 'Computer Applications', 'Management']","['Nava, Francisco', '', '', 'Capilla, Rafael', '', '', 'Due as, Juan C', '', '']","Department of Computer Science, Universidad Rey Juan Carlos, c  Tulip n s n, 28933, Madrid, Spain  2  Department of Engineering of Telematic Systems, ETSI Telecomunicaci n, Ciudad Universitaria s n, 28040, Madrid, Spain",2008,ECSA
927,928,"Software architectures suffer of a serious lack of documented design decisions, but also an explicit definition of the processes needed to create and exploit such architectural knowledge  To address these issues, we focus on the specification of those activities that we believe should be implemented to support the creation and use of design rationale with tool support   14 refs",Processes for creating and exploiting architectural design decisions with tool support,"['formal specification', 'software architecture', 'software development management', 'software tools', 'architectural design decisions', 'tool support', 'architectural knowledge', 'formal specification', 'Software engineering techniques', 'Formal methods', 'Programming support', 'Software management']","['Nava, F', '', '', ' Capilla, R', '', '', ' Due as, J C', '', '']","Dept  of Comput  Sci , Univ  Rey Juan Carlos, Madrid, Spain",2007,ECSA
928,929,"Software architectures suffer of a serious lack of documented design decisions, but also an explicit definition of the processes needed to create and exploit such architectural knowledge  To address these issues, we focus on the specification of those activities that we believe should be implemented to support the creation and use of design rationale with tool support   14 refs",Processes for creating and exploiting architectural design decisions with tool support,"['formal specification', 'software architecture', 'software development management', 'software tools', 'architectural design decisions', 'tool support', 'architectural knowledge', 'formal specification', 'Software engineering techniques', 'Formal methods', 'Programming support', 'Software management']","['Nava, F', '', '', ' Capilla, R', '', '', ' Due as, J C', '', '']","Dept  of Comput  Sci , Univ  Rey Juan Carlos, Madrid, Spain",2008,ECSA
929,930,"Software companies and organizations increasingly open up their business to other software companies and as a consequence they find themselves in an ecosystem of software companies, developers and partners  These actors, and especially the software organization that is at the core of this ecosystem, are having difficulties in getting insight into this ecosystem and how their actions influence its performance  In this paper a model is presented that describes the key characteristics of a Software Ecosystem  The central hub of a Software Ecosystem can use data on these characteristics to its strategic advantage  This is demonstrated by the use of the model in a case study of a hub in a software ecosystem    2010 ACM   23 refs",Software ecosystems  A software ecosystem strategy assessment model,"['Industry', 'Software architecture', 'Technical presentations', 'Assessment models', 'Business ecosystem', 'Key characteristics', 'Software company', 'software ecosystems', 'Software organization', 'Strategic advantages', 'Ecology and Ecosystems', 'Computer Programming', 'Information Dissemination', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Van Den Berk, Ivo', '', '', 'Jansen, Slinger', '', '', 'Luinenburg, L tzen']","Utrecht University, Netherlands  2  GX Software",2010,ECSA
930,931,"Software component identification is one of the primary challenges in component base software engineering  Typically, the identification is done by analyzing existing software artefacts  Considering object oriented systems, many approaches have been proposed to deal with this issue by identifying a component as a high cohesive and loose coupled set of classes  However, this assumption leads to two main limitations  in one hand, the focus on simple metrics like high cohesion and loose coupling will not necessarily lead to good quality components  The need of high level quality characteristics for components is crucial  On the other hand, the identified components  external structure  provided and required interfaces  is missing  As a result, the identified components can hardly be reused, composed, packaged and documented  To overcome these limitations, we propose in this paper an approach for identifying components based on a fitness function to measure the quality of a component  To evaluate this function, we use quality and semantic correctness models  Also, we propose to identify the provided and required interfaces of a component    2012 IEEE   16 refs",Quality centric approach for software component identification from object oriented code,"['Image quality', 'Legacy systems', 'Reverse engineering', 'Semantics', 'Software architecture', 'Coupled set', 'Fitness functions', 'Loose couplings', 'Object oriented', 'Object-oriented code', 'Object-oriented system', 'Quality characteristic', 'Quality components', 'reuse', 'Simple metrics', 'Software artefacts', 'Software component', 'Computer Software, Data Handling and Applications', 'Light, Optics and Optical Devices', 'Information Dissemination']","['Kebir, Selim', '', '', 'Seriai, Abdelhak Djamel', '', '', 'Chardigny, Sylvain', '', '', 'Chaoui, Allaoua']","LIRMM, University of Monpellier 2, France  2  MGPS, Port Saint Louis, France  3  MISC, University of Constantine, Algeria",2012,ECSA
931,932,"Software component identification is one of the primary challenges in component base software engineering  Typically, the identification is done by analyzing existing software artefacts  Considering object oriented systems, many approaches have been proposed to deal with this issue by identifying a component as a high cohesive and loose coupled set of classes  However, this assumption leads to two main limitations  in one hand, the focus on simple metrics like high cohesion and loose coupling will not necessarily lead to good quality components  The need of high level quality characteristics for components is crucial  On the other hand, the identified components  external structure  provided and required interfaces  is missing  As a result, the identified components can hardly be reused, composed, packaged and documented  To overcome these limitations, we propose in this paper an approach for identifying components based on a fitness function to measure the quality of a component  To evaluate this function, we use quality and semantic correctness models  Also, we propose to identify the provided and required interfaces of a component    2012 IEEE   16 refs",Quality centric approach for software component identification from object oriented code,"['Image quality', 'Legacy systems', 'Reverse engineering', 'Semantics', 'Software architecture', 'Coupled set', 'Fitness functions', 'Loose couplings', 'Object oriented', 'Object-oriented code', 'Object-oriented system', 'Quality characteristic', 'Quality components', 'reuse', 'Simple metrics', 'Software artefacts', 'Software component', 'Computer Software, Data Handling and Applications', 'Light, Optics and Optical Devices', 'Information Dissemination']","['Kebir, Selim', '', '', 'Seriai, Abdelhak Djamel', '', '', 'Chardigny, Sylvain', '', '', 'Chaoui, Allaoua']","LIRMM, University of Monpellier 2, France  2  MGPS, Port Saint Louis, France  3  MISC, University of Constantine, Algeria",2012,WICSA
932,933,"Software design patterns are proven solutions for recurring design problems  Therefore, one could expect that decisions to use patterns are beneficial and well documented in practice  However, our survey showed that 90  of the software engineers have encountered problems while applying patterns, understanding applied patterns or with their documentation  We address these problems in our paper  On the Appropriate Rationale for Using Design Patterns and Pattern Documentation  published at the  Quality of Software Architecture 2013  QoSA   conference  There we present an approach based on a new type of pattern catalogue enriched with question annotations, and the results of a survey with 21 software engineers as a validation of our idea and of exemplary entries of the pattern catalogue    Gessellschaft f r Informatik, Bonn 2014   1 refs",On the appropriate rationale for Using Design Patterns and Pattern Documentation,"['Surveys', 'Design Patterns', 'Design problems', 'Quality of softwares', 'Software design patterns', 'Surveying', 'Computer Programming']","['Durdik, Zoya', '', '', 'Reussner, Ralf H', '', '']","Institute for Program Structures and Data Organization, Karlsruhe Institute of Technology  KIT , Karlsruhe, Germany",2014,QoSA
933,934,"Software designers frequentlynd the need to refactor existing code to improve the structure of their design  Typical examples include the application of design patterns or splitting large modules into smaller ones  The problem lies in the difficulty in evaluating the effect of such restructuring before developers implement their newly proposed design ideas  Such experimental implementation can be expensive because it may include potential con icts or cause unnecessary source code branching to occur  It can be even more expensive if the designer needs to compare multiple design alternatives  In this paper, we propose to demonstrate the possibility of simulating structural design changes based on Baldwin and Clark s modular operators  This simulation permits designers to explore the design space and validate ideas for software changes without having to implement them concretely    2012 IEEE   9 refs",Simulating structural design evolution of software,"['Software architecture', 'Structural design', 'Design alternatives', 'Design ideas', 'Design Patterns', 'Design rules', 'Design spaces', 'modularity assessment', 'Software change', 'Software designers', 'Source codes', 'Structural Design, General', 'Computer Software, Data Handling and Applications']","['Baelen, Warren', '', '', 'Cai, Yuanfang']","Drexel University, Philadelphia, PA, United States",2012,ECSA
934,935,"Software designers frequentlynd the need to refactor existing code to improve the structure of their design  Typical examples include the application of design patterns or splitting large modules into smaller ones  The problem lies in the difficulty in evaluating the effect of such restructuring before developers implement their newly proposed design ideas  Such experimental implementation can be expensive because it may include potential con icts or cause unnecessary source code branching to occur  It can be even more expensive if the designer needs to compare multiple design alternatives  In this paper, we propose to demonstrate the possibility of simulating structural design changes based on Baldwin and Clark s modular operators  This simulation permits designers to explore the design space and validate ideas for software changes without having to implement them concretely    2012 IEEE   9 refs",Simulating structural design evolution of software,"['Software architecture', 'Structural design', 'Design alternatives', 'Design ideas', 'Design Patterns', 'Design rules', 'Design spaces', 'modularity assessment', 'Software change', 'Software designers', 'Source codes', 'Structural Design, General', 'Computer Software, Data Handling and Applications']","['Baelen, Warren', '', '', 'Cai, Yuanfang']","Drexel University, Philadelphia, PA, United States",2012,WICSA
935,936,"Software developers are often unsure of the exact name of the method they need to use to invoke the desired behavior in a given context  This results in a process of searching for the correct method name in documentation, which can be lengthy and distracting to the developer  We can decrease the method search time by enhancing the documentation of a class with the most frequently used methods  Usage frequency data for methods is gathered by analyzing other projects from the same ecosystem   written in the same language and sharing dependencies  We implemented a proof of concept of the approach for Pharo Smalltalk and Java  In Pharo Smalltalk, methods are commonly searched for using a code browser tool called  Nautilus , and in Java using a web browser displaying HTML based documentation   Javadoc  We developed plugins for both browsers and gathered method usage data from open source projects, in order to increase developer productivity by reducing method search time  A small initial evaluation has been conducted showing promising results in improving developer productivity    2014 ACM   21 refs",Towards faster method search through static ecosystem analysis,"['Open source software', 'Productivity', 'Software architecture', 'Static analysis', 'Code browser tools', 'Ecosystem analysis', 'Frequency data', 'Method search', 'Open source projects', 'Proof of concept', 'Search time', 'Software developer', 'Ecology and Ecosystems', 'Computer Programming', 'Production Engineering']","['Spasojevic, Boris', '', '', 'Lungu, Mircea', '', '', 'Nierstrasz, Oscar']","University of Bern, Switzerland",2014,ECSA
936,937,"Software development is characterized by ongoing design decisions that must take into account numerous requirements, goals, and constraints  When changing long living and legacy systems, former decisions have to be considered  In order to minimize the risk of taking wrong or misleading decisions an explicit representation of the relevant aspects is crucial  Architectural decision modeling has proven to be an effective means to represent these aspects, the required knowledge, and properties of a potential solution  However, existing approaches do not sufficiently cover the ongoing evolution of decisions and artifacts  They fail in particular to represent relations to existing systems on a fine grained level to allow for impact analysis and a later comprehension of decisions  Furthermore, the effort for capturing and modeling of design decisions has to be reduced  In our paper we integrate existing approaches for software architectural design decision making  We extend them by fine grained traceability to elements of existing systems and explicit means for modeling the evolution of decisions  We show how relevant decisions can easily be identified and developers are supported in decision making   16 refs",Combining Architectural Design Decisions and Legacy System Evolution,"['decision making', 'risk management', 'software architecture', 'software maintenance', 'software process improvement', 'legacy system evolution', 'software development', 'risk minimization', 'explicit representation', 'architectural decision modeling', 'impact analysis', 'software architectural design decision making', 'fine-grained traceability', 'decision evolution modeling', 'Software management', 'Software engineering techniques']","['Gerdes, S', '', '', ' Lehnert, S', '', '', ' Riebisch, M', '', '']","Univ  Hamburg, Hamburg, Germany  2  Tech  Univ  Ilmenau, Ilmenau, Germany",2014,ECSA
937,938,"Software ecosystems are emerging as an alternative approach for the development of complex software systems  The potentially transformational benefits of software ecosystems stems, primarily, from two basic principles that software ecosystems have embraced  transparency, a pillar in open source development, and modular system design  Despite the benefits associated with transparency and modularity, there are also important challenges that deserve attention  In this paper, we introduce the concept of interface translucence as an architectural mechanism that seeks to overcome challenges faced by transparency and modular system design  Interface translucence leverages the important technical role that interfaces play in software architectures to bridge the technical and socio organizational dimensions of software development in ecosystems  We present an application of the concept of interface translucence in the context of architecting a software system as well as in the context of implementing it  We conclude with a discussion of future research work    2010 ACM   48 refs",Architecting in software ecosystems  Interface translucence as an enabler for scalable collaboration,"['Computer software', 'Ecosystems', 'Software design', 'Technical presentations', 'Transparency', 'awareness', 'collaboration', 'interface translucence', 'modularity', 'Software ecosystems', 'Ecology and Ecosystems', 'Computer Software, Data Handling and Applications', 'Light Optics', 'Information Dissemination']","['Cataldo, Marcelo', '', '', 'Herbsleb, James D', '', '']","Institute for Software Research, Carnegie Mellon University, Pittsburgh, PA 15213, United States",2010,ECSA
938,939,"Software ecosystems define a new class of systems where multiple organizations contribute in form of an open software system and its extensions  In this position paper, we characterize business, organizational, and in particular technical challenges, which the architect of such an open ecosystem has to address  One key challenge we identified is how to retain certain system qualities under the influence of multiple external system extensions  We provide an initial template with factors and potential values helping an architect in characterizing the open software system and its environment  Furthermore, we illustrate an open system by a fictional scenario from the agricultural domain  The discussion of the challenges, the characterization template and the example are significant steps towards a systematic engineering method establishing open ecosystems    2014 ACM   17 refs",Supporting architects in mastering the complexity of open software ecosystems,"['Computer software', 'Open systems', 'Software architecture', 'External systems', 'Multiple organizations', 'Openness', 'Position papers', 'Potential values', 'Software ecosystems', 'Systematic engineering', 'Technical challenges', 'Ecology and Ecosystems', 'Computer Software, Data Handling and Applications']","['Knodel, Jens', '', '', 'Naab, Matthias', '', '', 'Rost, Dominik']","Fraunhofer Institute for Experimental Software Engineering, Fraunhofer Platz 1, 67663 Kaiserslautern, Germany",2014,ECSA
939,940,"Software entities should be open for extension, but closed to modification  Unfortunately, unanticipated requirements emerging during software evolution makes it difficult to always enforce this principle  This situation poses a dilemma that is particularly important when considering component based systems  On the one hand, violating the open closed principle by allowing for modification compromises independent extensibility  On the other hand, trying to enforce the open closed principle by prohibiting modification precludes unanticipated dimensions of extension  Dynamic links increase the number of dimensions of extension that can be exploited without performing modification of existing types  Thus, dynamic links make it possible to enforce the open closed principle in situations where it would otherwise not be possible  We present Decouplink   a library based implementation of dynamic links for Java  We also present experience with the use of dynamic links during the evolution of a component based control system    2011 Springer Verlag   31 refs",Decouplink  Dynamic links for Java,"['Computer software', 'Object oriented programming', 'Component based systems', 'Component-based control', 'Dynamic links', 'extensibility', 'Software entities', 'Software Evolution', 'Computer Software, Data Handling and Applications', 'Computer Programming']","['Rytter, Martin', '', '', 'Jrgensen, Bo Nrregaard']","Maersk Mc Kinney Moller Institute, University of Southern Denmark, Campusvej 55, 5230 Odense M, Denmark",2011,ECSA
940,941,"Software evolution is omnipresent and only with adequate flexibility it can be mastered in time and budget  Flexibility is supported by many architectural mechanisms, but more methodological support for a life cycle phases bridging approach of flexibility is still desirable  Therefore, in this paper we contribute a life cycle phases bridging approach for flexibility  Our approach supports architects during system design to achieve flexibility and during system evolution to exploit flexibility  We build on existing flexibility analysis techniques and extend them to give architects specific guidance and tool support  For architecture design, we introduce an automated flexibility analysis with real time feedback in architecture tools  For software evolution we provide a flexibility exploitation analysis which builds up on the results of the design time analysis and enables effective utilization of provided flexibility by deriving flexibility aware work plans  We demonstrate our approach by applying it to a checkin system, report first validation results from an empirical study and propose further validation activities  Copyright   2012 ACM   15 refs",Architectural flexibility in a software system s life cycle  Systematic construction and exploitation of flexibility,"['Software architecture', 'Architecture designs', 'Check-in', 'Design time', 'Empirical studies', 'Flexibility', 'Flexibility analysis', 'Real-time feedback', 'Software Evolution', 'System evolution', 'Validation results', 'Computer Programming', 'Production Engineering']","['Naab, Matthias', '', '', 'Stammel, Johannes']","Fraunhofer IESE, Fraunhofer Platz 1, 67663 Kaiserslautern, Germany  2  Karlsruhe Institute of Technology  KIT , Am Fasanengarten 5, 76131 Karlsruhe, Germany",2012,QoSA
941,942,"Software fault tolerance mechanisms aim at improving the reliability of software systems  Their effectiveness  i e , reliability impact  is highly application specific and depends on the overall system architecture and usage profile  When examining multiple architecture configurations, such as in software product lines, it is a complex and error prone task to include fault tolerance mechanisms effectively  Existing approaches for reliability analysis of software architectures either do not support modelling fault tolerance mechanisms or are not designed for an efficient evaluation of multiple architecture variants  We present a novel approach to analyse the effect of software fault tolerance mechanisms in varying architecture configurations  We have validated the approach in multiple case studies, including a large scale industrial system, demonstrating its ability to support architecture design, and its robustness against imprecise input data    2011 ACM   27 refs",Reliability prediction for fault tolerant software architectures,"['Fault tolerance', 'Reliability analysis', 'Software reliability', 'Architecture configuration', 'Architecture designs', 'Component-based software architecture', 'Error prones', 'Fault tolerance mechanisms', 'Fault-tolerant software', 'Industrial systems', 'Input datas', 'Multiple-case study', 'Reliability impacts', 'reliability prediction', 'Software fault tolerances', 'Software Product Line', 'software product lines', 'Software systems', 'System architectures', 'Digital Computers and Systems', 'Computer Programming', 'Production Planning and Control  Manufacturing', 'Quality Assurance and Control']","['Brosch, Franz', '', '', 'Buhnova, Barbora', '', '', 'Koziolek, Heiko', '', '', 'Reussner, Ralf']","Research Center for Information Technology  FZI , Karlsruhe, Germany  2  Masaryk University, Brno, Czech Republic  3  Industrial Software Systems, ABB Corporate Research, Ladenburg, Germany  4  Karlsruhe Institute of Technology  KIT , Karlsruhe, Germany",2011,QoSA
942,943,"Software intensive systems have become increasingly large and complex and new techniques and methodologies are necessary to deal with such complexity  Model Driven Development  MDD  has been used to deal with complex scenarios, since software models, despite details, facilitate the visualization of the whole  Moreover, MDD has been widely recognized as a way to assure quality, reducing time and effort, and making possible the automatic transformation of models to generate source code  In this direction, software intensive Systems of Systems  SoS  is a class of software systems that have emerged over the iminence of large systems which have a high level of complexity  Considering the success of MDD in other areas, we decided to investigate how MDD has been used in the context of SoS  This paper presents results of a Systematic Literature Review conducted to scrutinize and bring to light the state of the art in the field of MDD for SoS  Besides that, we discuss future research directions and perspectives, aiming at contributing to the development of SoS    2014 ACM   33 refs",Investigating the model driven development for systems of systems,"['Software architecture', 'Automatic transformations', 'Future research directions', 'Model driven development', 'Software generation', 'Software intensive systems', 'System-of-systems', 'Systematic literature review', 'Systems-of-systems', 'Computer Programming', 'Industrial Engineering and Management', 'Systems Science']","['Graciano Neto, Valdemar Vicente', ' ,', '', ' Guessi, Milena', '', '', 'Oliveira, Lucas Bueno R', '', '', ' Oquendo, Flavio', '', '', 'Nakagawa, Elisa Yumi']","Federal University of Goi s, Go nia, Brazil  2  University of S o Paulo   USP, S o Carlos, Brazil  3  IRISA, Universit  de Bretagne Sud  UBS , Vannes, France",2014,ECSA
943,944,"Software models are, in most cases considered as functional abstractions of systems  They represent the backbone of transformational processes aimed at code generation  On the other end, modeling is a traditional activity in the field of non functional validation of software hardware systems, although non functional models found on different notations  such as Petri Nets  and embed additional information  such as the operational profile  with respect to software models  In this paper we widen the scope of Model Driven Architecture by introducing a Non Functional MDA framework that, beside the typical model transformations for code generation, embeds new types of model transformations that allow to generate non functional models  For an uniform integration of these practices, we define Platform Independent Specific Models in the non functional domain    2007 IEEE   11 refs",Non functional modeling and validation in model driven architecture,"['Automatic programming', 'Computer hardware', 'Functional analysis', 'Mathematical models', 'Mathematical transformations', 'Program compilers', 'Functional models', 'Hardware systems', 'Non-functional validation', 'Transformational processes', 'Computer Systems and Equipment', 'Computer Programming', 'Computer Applications', 'Mathematics', 'Mathematical Transformations']","['Cortellessa, Vittorio', '', '', 'Di Marco, Antinisca', '', '', 'Inverardi, Paola']","Dipartimento di Informatica, University of L Aquila, Via Vetoio 1, 67010 Coppito, L Aquila, Italy",2007,WICSA
944,945,"Software models are, in most cases, considered as functional abstractions of systems  They represent the backbone of transformational processes aimed at code generation  On the other end, modeling is a traditional activity in the field of non functional validation of software hardware systems, although non functional models found on different notations  such as Petri Nets  and embed additional information  such as the operational profile  with respect to software models  In this paper we widen the scope of model driven architecture by introducing a Non Functional MDA framework that, beside the typical model transformations for code generation, embeds new types of model transformations that allow to generate non functional models  For an uniform integration of these practices, we define Platform Independent Specific Models in the non functional domain   11 refs",Non functional modeling and validation in model driven architecture,"['object-oriented programming', 'program compilers', 'program verification', 'model-driven architecture', 'code generation', 'nonfunctional modeling', 'nonfunctional validation', 'functional abstraction', 'transformational process', 'Object oriented programming', 'Compilers, interpreters and other processors', 'Formal methods', 'Diagnostic, testing, debugging and evaluating systems']","['Cortellessa, V', '', '', ' Di Marco, A', '', '', ' Inverardi, P', '', '']","Dipt  di Inf , Univ  of L Aquila, L Aquila, Italy",2007,WICSA
945,946,"Software patterns are generic solutions to recurring problems  They are represented as a triplet  problem, context, solution   Several kinds of software patterns were identified, examples of which are analysis, architecture, design or implementation patterns  The current practice is to represent patterns as documents that communicate best practices  Their reuse is limited by several factors among which the lack of formalization  In the context of architecture centered software development, architectural styles are means to represent families of software systems  Several architecture description languages offer support for representing architectural styles  We believe that the use of architectural styles in the representation of architectural pattern solutions can improve the pattern reuse level  The paper details how this improvement can be achieved    2008 IEEE   26 refs",Can styles improve architectural pattern reuse,"['Architecture', 'Computer software', 'Digital signal processing', 'Software design', 'Solutions', 'Architectural patterns', 'Architectural styles', 'Architecture Description Languages', 'Best Practices', 'Generic solutions', 'Software development', 'Software patterns', 'Software systems', 'Buildings and Towers', 'Information Theory and Signal Processing', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Chemistry']","['C mpan, Sorana', '', '', 'Couturier, Vincent']","LISTIC, Universit  de Savoie, France",2008,WICSA
946,947,"Software performance engineering  SPE  enables software architects to ensure high performance standards for their applications  However, applying SPE in practice is still challenging  Most enterprise applications include a large software basis, such as middleware and legacy systems  In many cases, the software basis is the determining factor of the system s overall timing behavior, throughput, and resource utilization  To capture these influences on the overall system s performance, established performance prediction methods  model based and analytical  rely on models that describe the performance relevant aspects of the system under study  Creating such models requires detailed knowledge on the system s structure and behavior that, in most cases, is not available  In this paper, we abstract from the internal structure of the system under study  We focus on message oriented middleware  MOM  and analyze the dependency between the MOM s usage and its performance  We use statistical inference to conclude these dependencies from observations  For ActiveMQ 5 3, the resulting functions predict the performance with a relative mean square error 0 1    2010 Springer Verlag   30 refs",Statistical inference of software performance models for parametric performance completions,"['Computer software selection and evaluation', 'Legacy systems', 'Management information systems', 'Middleware', 'Software architecture', 'Standards', 'Statistical methods', 'Enterprise applications', 'Internal structure', 'Message oriented middleware', 'Model-based', 'Parametric performance', 'Performance prediction', 'Performance standards', 'Relative mean square errors', 'Resource utilizations', 'Software architects', 'Software performance engineerings', 'Software performance models', 'Statistical inference', 'System\x92s performance', 'Mathematical Statistics', 'Mathematics', 'Management', 'Codes and Standards', 'Computer Applications', 'Data Processing and Image Processing', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Systems and Equipment']","['Happe, Jens', '', '', 'Westermann, Dennis', '', '', 'Sachs, Kai', '', '', 'Kapov , Lucia']","SAP Research, CEC Karlsruhe, Germany  2  TU Darmstadt, Germany  3  Karlsruhe Institute of Technology  KIT , Germany",2010,QoSA
947,948,"Software performance engineering provides techniques to analyze and predict the performance  e g , response time or resource utilization  of software systems to avoid implementations with insufficient performance  These techniques operate on models of software, often at an architectural level, to enable early, design time predictions for evaluating design alternatives  Current software performance engineering approaches allow the prediction of performance at design time, but often provide cryptic results  e g , lengths of queues   These prediction results can be hardly mapped back to the software architecture by humans, making it hard to derive the right design decisions  In this paper, we integrate software cartography  a map technique  with software performance engineering to overcome the limited interpretability of raw performance prediction results  Our approach is based on model transformations and a general software visualization approach  It provides an intuitive mapping of prediction results to the software architecture which simplifies design decisions  We successfully evaluated our approach in a quasi experiment involving 41 participants by comparing the correctness of performance improving design decisions and participants  time effort using our novel approach to an existing software performance visualization    2009 Springer Berlin Heidelberg   33 refs",Improved feedback for architectural performance prediction using software cartography visualizations,"['Architecture', 'Computer software selection and evaluation', 'Design', 'Mapping', 'Maps', 'Visualization', 'Architectural levels', 'Design alternatives', 'Design decisions', 'Design time', 'Interpretability', 'Model transformation', 'Performance prediction', 'Quasi-experiments', 'Resource utilizations', 'Response time', 'Software performance engineerings', 'Software performance visualization', 'Software systems', 'Software visualization', 'Engineering Graphics', 'Computer Applications', 'Computer Programming', 'Management', 'Computer Software, Data Handling and Applications', 'Surveying', 'Buildings and Towers', 'Structural Design']","['Krogmann, Klaus', '', '', 'Schweda, Christian M', '', '', ' Buckl, Sabine', '', '', 'Kuperberg, Michael', '', '', 'Martens, Anne', '', '', 'Matthes, Florian']","Software Design and Quality Group, Universit t Karlsruhe  TH , Germany  2  Software Engineering for Business Information Systems, Technische Universit t M nchen, Germany",2009,QoSA
948,949,"Software performance prediction methods are typically validated by taking an appropriate software system, performing both performance predictions and performance measurements for that system, and comparing the results  The validation includes manual actions, which makes it feasible only for a small number of systems  To significantly increase the number of systems on which software performance prediction methods can be validated, and thus improve the validation, we propose an approach where the systems are generated together with their models and the validation runs without manual intervention  The approach is described in detail and initial results demonstrating both its benefits and its issues are presented    2010 Springer Verlag   33 refs",Validating model driven performance predictions on random software systems,"['Computer software selection and evaluation', 'Forecasting', 'Manual intervention', 'Model-driven', 'Performance measurements', 'Performance Modeling', 'Performance prediction', 'Software performance', 'Software systems', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management', 'Mathematics', 'Mathematical Statistics']","['Babka, Vlastimil', '', '', 'Tuma, Petr', '', '', 'Bulej, Lubom r', ' ,', '']","Department of Distributed and Dependable Systems, Faculty of Mathematics and Physics, Charles University, Malostransk  n m st  25, 118 00 Prague, Czech Republic  2  Institute of Computer Science, Academy of Sciences of the Czech Republic, Pod Vod renskou vez  2, 182 07 Prague, Czech Republic",2010,QoSA
949,950,"Software platform developers do not have insight into the consequences of architectural decisions made in regards to openness, while openness determines whether and how third party developers adopt the software platform  For mobile communication devices, however, the adoption by third party developers is essential for the growth of an ecosystem, which has proven to be a successful strategy for mobile communication device ecosystems  In this research the openness and architectures of five mobile platforms are compared, to provide further insight into successful openness strategies for software ecosystem growth    2010 ACM   29 refs",Evaluating architectural openness in mobile software platforms,"['Ecosystems', 'Mobile telecommunication systems', 'Technical presentations', 'Mobile softwares', 'openness strategy', 'platform accessibility', 'Platform architecture', 'Qualitative interviews', 'Ecology and Ecosystems', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Programming', 'Information Dissemination']","['Anvaari, Mohsen', '', '', 'Jansen, Slinger']","IT University of Gothenburg, Germany  2  Utrecht University, Netherlands",2010,ECSA
950,951,"Software product line engineering aims at increasing software quality and development productivity by mastering the variability of large software systems  Models are frequently used to define the reusable assets and the restrictions regarding asset composition in different products  However, product line engineering is challenged by evolution  Reusable assets such as software components need to be adapted to meet new customer or market requirements as well as technological needs  In this paper we present an approach that supports the maintenance of product line models by checking their consistency with the available components  We describe algorithms and heuristics for creating and updating the models defining a product line s features and components  We evaluate our approach using realistic change scenarios from a product line of time recorder applications    2012 IEEE   29 refs",Supporting model maintenance in component based product lines,"['Computer software selection and evaluation', 'Maintenance', 'Production engineering', 'Software architecture', 'Component based', 'Development productivity', 'evolution', 'Large software systems', 'Market requirements', 'Model based development', 'Model maintenance', 'Product line engineering', 'Product line model', 'Product-lines', 'Reusable assets', 'Software component', 'Software product line engineerings', 'Software Quality', 'Computer Software, Data Handling and Applications', 'Production Engineering', 'Maintenance']","['Jahn, Markus', '', '', 'Rabiser, Rick', '', '', 'Gr nbacher, Paul', '', '', 'L berbauer, Markus', '', '', 'Wolfinger, Reinhard', '', '', 'M ssenb ck, Hanspeter']","Christian Doppler Laboratory for Automated Software Engineering, Johannes Kepler University, Linz, Austria",2012,ECSA
951,952,"Software product line engineering aims at increasing software quality and development productivity by mastering the variability of large software systems  Models are frequently used to define the reusable assets and the restrictions regarding asset composition in different products  However, product line engineering is challenged by evolution  Reusable assets such as software components need to be adapted to meet new customer or market requirements as well as technological needs  In this paper we present an approach that supports the maintenance of product line models by checking their consistency with the available components  We describe algorithms and heuristics for creating and updating the models defining a product line s features and components  We evaluate our approach using realistic change scenarios from a product line of time recorder applications    2012 IEEE   29 refs",Supporting model maintenance in component based product lines,"['Computer software selection and evaluation', 'Maintenance', 'Production engineering', 'Software architecture', 'Component based', 'Development productivity', 'evolution', 'Large software systems', 'Market requirements', 'Model based development', 'Model maintenance', 'Product line engineering', 'Product line model', 'Product-lines', 'Reusable assets', 'Software component', 'Software product line engineerings', 'Software Quality', 'Computer Software, Data Handling and Applications', 'Production Engineering', 'Maintenance']","['Jahn, Markus', '', '', 'Rabiser, Rick', '', '', 'Gr nbacher, Paul', '', '', 'L berbauer, Markus', '', '', 'Wolfinger, Reinhard', '', '', 'M ssenb ck, Hanspeter']","Christian Doppler Laboratory for Automated Software Engineering, Johannes Kepler University, Linz, Austria",2012,WICSA
952,953,"Software product line engineering aims to maximize reuse by exploiting the commonality within families of related systems  Its success depend on capturing the commonality and variability, and using this to evolve a reference architecture for the product family  With embedded system families, the possibility of variability in hardware and operating system platforms is an added complication  In this paper we outline a strategy for evolving reference architectures from bi directional feature models  The proposed strategy complements information provided by the feature model with scenarios that help to elaborate feature behavior    2005 IEEE   10 refs",Feature guided architecture development for embedded system families,"['Computer hardware', 'Computer operating systems', 'Electronic equipment manufacture', 'Embedded systems', 'Information analysis', 'Software engineering', 'Feature guided architecture development', 'Feature models', 'Reference architectures', 'Software products', 'Electronic Equipment, General Purpose and Industrial', 'Computer Systems and Equipment', 'Computer Programming', 'Computer Applications', 'Information Sources and Analysis']","['Brown, T J', '', '', ' Bashroush, R', '', '', ' Gillan, C', '', '', ' Spence, I', '', '', ' Kilpatrick, P', '', '']","School of Computer Science, Queen s University of Belfast",2005,WICSA
953,954,"Software product lines  SPL  are a popular concept to represent commonalities and variability among a family of software systems  In many approaches to SPL engineering, feature modelling is used to specify which common and different features instances of an SPL can have  By mapping features to components realising that feature, the software architecture of the SPL instance can be derived from the features it requires  However, many approaches to feature modelling and mapping to implementation ignore the fact that features are often not implemented by a single component alone but by a set of components combined in a specific way  Moreover, they are often unable to capture implementation alternatives for features  In this paper, we motivate the need for a more extensive way of mapping features to alternatives of architecture fragments by an illustrative example  We discuss the challenges of composing a software architecture out of architecture fragments and outline a solution approach  Copyright   2014 ACM 978 1 4503 2523 3 14 04 15  00   14 refs",Composition of applications based on software product lines using architecture fragments and component sets,"['Architecture', 'Computer software', 'Mapping', 'Software design', 'Component based', 'Feature modelling', 'Single components', 'Software Product Line', 'Software product lines', 'Software systems', 'Solution approach', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Engineering Graphics']","['K rner, Marco', '', '', 'Herold, Sebastian', '', '', 'Rausch, Andreas']","Clausthal University of Technology, Department of Informatics, Julius Albert Str  4, 38678 Clausthal Zellerfeld, Germany",2014,WICSA
954,955,"Software product lines  SPL  are a well known concept to efficiently develop product variants  However, migrating customised product copies to a product line is still a labour intensive challenge due to the required comprehension of differences among the implementations and SPL design decisions  Most existing SPL approaches are focused on forward engineering  Only few aim to handle SPL evolution, but even those lack support of variability reverse engineering, which is necessary for migrating product copies to a product line  In this paper, we present our continued concept on using component architecture information to enhance a variability reverse engineering process  Including this information particularly improves the difference identification as well as the variation point analysis and  aggregation steps  We show how the concept can be applied by providing an illustrating example  Copyright 2013 ACM   17 refs",Improving product copy consolidation by architecture aware difference analysis,"['Computer software', 'Reverse engineering', 'Software design', 'Component architectures', 'Design decisions', 'Forward engineerings', 'Product variants', 'Reverse engineering process', 'Software Product Line', 'Software product lines', 'Variation points', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Klatt, Benjamin', '', '', 'K ster, Martin']","FZI Research Center for Information Technology, Haid und Neu Str  10 14, Karlsruhe, Germany",2013,QoSA
955,956,Software product lines engineering is a viable way to achieve the productivity gains desired by companies  Product line architecture must benefit from commonalities among products in the family and enable the variability among them  The aspect of variability in quality attributes has been neglected or ignored by most of the researchers as attention has been mainly put in functional variability  This paper describes an architecture and design process for software product lines that can properly deal with quality attribute variability  The proposed approach enhances the RiPLE DE process for software product line engineering with activities and guidelines for quality attribute variability  An initial experimental study is presented to characterize and evaluate the proposed process enhancements    2011 ACM   14 refs,Extending the RiPLE DE process with quality attribute variability realization,"['Computer software reusability', 'Network architecture', 'Production engineering', 'Productivity', 'Software design', 'Design process', 'Experimental studies', 'Product line architecture', 'Productivity gain', 'Quality attributes', 'Software Product Line', 'Software product line engineerings', 'software product lines (spl)', 'Software Re-use', 'Computer Software, Data Handling and Applications', 'Production Engineering']","['Cavalcanti, Ricardo De Oliveira', '', '', 'De Almeida, Eduardo Santana', '', '', 'Meira, Silvio R L', '', '']","Federal University of Pernambuco, P O  Box 7851, 50732 970 Recife   PE, Brazil  2  Federal University of Bahia and RiSE, Campus de Ondina, Av  Adhemar de Barros, S N, 40170 110 Salvador   BA, Brazil",2011,QoSA
956,957,"Software reference architectures have been around for quite some years  They have been designed and used with varying success  We have conducted an exploratory survey among software architects and developers to establish the extent to which SRA have penetrated among practitioners and to identify the benefits and problems practitioners face when using and designing SRA  In this article, we present our findings    2013 Springer Verlag   25 refs",Software reference architectures   Exploring their usage and design in practice,"['Surveying', 'Surveys', 'Exploratory surveys', 'Reference architecture', 'Software architects', 'Software reference architectures', 'Surveying', 'Computer Programming']","['Angelov, Samuil', '', '', 'Trienekens, Jos', '', '', 'Kusters, Rob']","Software Engineering Team, Fontys University of Applied Sciences, Eindhoven, Netherlands  2  Information Systems Group, School of Industrial Engineering, Eindhoven University of Technology, Eindhoven, Netherlands  3  Management Science Faculty, Open University, Heerlen, Netherlands",2013,ECSA
957,958,"Software security is becoming a key quality concern as software applications are increasingly being used in untrustworthy computing environments such as the internet  Software is designed with the mindset of its functionalities and cost, where the focus is on the operational behavior while security concerns are neglected or marginally considered  As a result, software engineers build the software while lacking the knowledge about security and its effect on the system  This paper presents an approach for modeling the behavior of security threats using statecharts  The proposed approach introduces modular design for representing threats through the use of components and reusability  Through the focus on the behavior of an attack, software engineers can clearly define and understand security concerns as the application is being designed and developed  In addition, modeling security threats with statecharts makes it convenient to build a consistent semantic link between functional behaviors and security concerns    2011 ACM   27 refs",Modeling security attacks with statecharts,"['Engineers', 'Reusability', 'Security systems', 'Semantics', 'Software architecture', 'Software design', 'Attack tree', 'Computing environments', 'Functional behaviors', 'Modular designs', 'Operational behavior', 'Security attacks', 'Security threats', 'Semantic link', 'Software applications', 'Software engineers', 'software security', 'Statecharts', 'Threat modeling', 'Industrial Wastes', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Personnel', 'Accidents and Accident Prevention']","['El Ariss, Omar', '', '', 'Xu, Dianxiang']","Department of Computer Science, North Dakota State University, Fargo, ND, United States  2  National Center for the Protection of the Financial Infrastructure, Dakota State University, Madison, SD, United States",2011,QoSA
958,959,"Software service emulation is an emerging technique for creating realistic executable models of server side behaviour and is particularly useful in quality assurance  replicating production like conditions for large scale enterprise software systems  This allows performance engineers to mimic very large numbers of servers and or provide a means of controlling dependencies on diverse third party systems  Previous approaches to service emulation rely on manual definition of interaction behaviour requiring significant human effort  They also rely on either a system expert or documentation of system protocol and behaviour, neither of which are necessarily available  We present a novel method of automatically building client server and server server interaction models of complex software systems directly from interaction trace data, utilising longest common subsequence matching and field substitution algorithms  We evaluate our method against two common application layer protocols  LDAP and SOAP  The results show that without explicit knowledge of the protocol specifications, our generated service models can produce well formed responses for interactions  These responses can then be used within an emulation framework for large scale enterprise system quality assurance purposes  Copyright 2013 ACM   25 refs",Generating service models by trace subsequence substitution,"['Computer software', 'Enterprise software', 'Quality assurance', 'Application-layer protocol', 'Complex software systems', 'Emulation framework', 'Enterprise software systems', 'Interaction emulation', 'Longest common subsequences', 'Protocol specifications', 'Service emulation', 'Computer Software, Data Handling and Applications', 'Quality Assurance and Control', 'Social Sciences']","['Du, Miao', '', '', 'Schneider, Jean Guy', '', '', 'Hine, Cameron', '', '', 'Grundy, John', '', '', 'Versteeg, Steve']","Faculty of Information and Communication Technologies, Swinburne University of Technology, Hawthorn, VIC 3122, Australia  2  CA Labs, 380 St  Kilda Rd , Melbourne, VIC 3004, Australia",2013,QoSA
959,960,"Software structuring techniques aim to make software systems easier to develop and maintain, increasing their quality  Aspect Oriented Software Development  AOSD  and Software Architectural Styles are examples of such techniques  In spite of all the benefits of structuring techniques, both actual and intended, it is not always easy or even advantageous to integrate two or more of these techniques  For example, the effects of combining AOSD and Layered Software Architectures are still not well understood  This might be detrimental to system quality and can be a decisive factor when deciding whether or not to employ AOSD, specially considering the pervasiveness of layered architectures  This paper presents a study aiming to assess the impact of AOSD on software architectures adopting the layered style  To better account for the influence of aspects on the layered structure of the system, we have extended existing approaches to measure dependencies and layering violations in software architectures    2010 Springer Verlag Berlin Heidelberg   10 refs",Assessing the impact of AOSD on layered software architectures,"['Computer software selection and evaluation', 'Computer systems programming', 'Software design', 'Aspect oriented software development', 'Layered architecture', 'Layered Structures', 'Layering Software Architectures', 'Layering Structuring Violations', 'Software architectural styles', 'Software systems', 'System quality', 'Computer Software, Data Handling and Applications', 'Computer Programming']","['Saraiva, Juliana', '', '', 'Soares, S rgio', '', '', 'Castor, Fernando']","Centro de Inform tica, Universidade Federal de Pernambuco  UFPE , Recife, PE, Brazil",2010,ECSA
960,961,"Software systems evolvability is more and more required in current software developments, in order to provide systems with enough flexibility to adapt to future requirements  The evolvability in the field of Software Architecture can be classified into two kinds  dynamic reconfiguration or dynamic architectural type evolution  The former enables an architecture to change its configuration at run time, by creating or destroying architectural element instances and their links dynamically  The latter enables an architecture to change entirely its specification at run time, by introducing new architectural element types and connections or by modifying the type and the running instances of its architectural elements  This paper presents an approach to address how to dynamically evolve the architectural types of a system from a platform independent view  This approach identifies the different concerns involved in the adaptation process by encapsulating them into aspects, and makes use of reflection mechanisms to perform the type updating process    2008 Springer Verlag Berlin Heidelberg   20 refs",Managing dynamic evolution of architectural types,"['Architecture', 'Dynamic models', 'Embedded systems', 'Reflection', 'Adaptation processes', 'AOSD', 'Architectural Element Types', 'Architectural elements', 'Architectural types', 'Current softwares', 'Dynamic evolution', 'Dynamic evolutions', 'Dynamic reconfigurations', 'Evolvability', 'Reflection mechanisms', 'Run-time adaptation', 'Software systems', 'Light Optics', 'Computer Applications', 'Computer Programming', 'Mathematics', 'Computer Software, Data Handling and Applications', 'Electromagnetic Waves', 'Buildings and Towers', 'Computer Systems and Equipment']","['Costa Soria, Crist bal', '', '', 'P rez, Jennifer', '', '', 'Cars , Jos', 'Angel']","ISSI, Dept  of Information Systems and Computation, Universidad Polit cnica de Valencia, Camino de Vera s n, 46022 Valencia, Spain  2  Escuela Universitaria de Inform tica, Technical University of Madrid  UPM , Ctra  Valencia km  7, 28051 Madrid, Spain",2008,ECSA
961,962,"Software systems need software architectures to improve their scalability and maintenance  However, many agile practitioners claim that the upfront design of software architectures is an investment that does not pay off, since customers can rarely appreciate the value delivered by architectures  Furthermore, conventional architectural practices may be considered unacceptable from the Agile values and principles perspective  In this paper, the development of working architectures in agile iterations is presented as an attempt to solve the problem of designing software architectures in Agile  This contribution is based on the new concept of Plastic Partial Component  PPC   PPCs are highly malleable components that can be partially described, what increases the flexibility of architecture design  PPCs based architectures let reinforce some of the agile values and principles  Our experience of putting this contribution into practice is illustrated through the agile development of a Testing Framework for Biogas Plants    2010 Springer Verlag Berlin Heidelberg   32 refs",Flexible working architectures  Agile architecting using PPCs,"['Biogas', 'Computer software maintenance', 'Software design', 'Agile development', 'Architecture designs', 'Biogas plants', 'Flexible working', 'Software systems', 'Testing framework', 'Gas Fuels', 'Computer Software, Data Handling and Applications']","['P rez, Jennifer', '', '', 'D az, Jessica', '', '', 'Garbajosa, Juan', '', '', 'Alarc n, Pedro P', '', '']","E U  Inform tica, Technical University of Madrid  UPM , Madrid, Spain",2010,ECSA
962,963,"Software systems today are composed from prefabricated commercial components and connectors that provide complex functionality and engage in complex interactions  Unfortunately, because of the distinct assumptions made by developers of these products, successfully integrating them into a software system can be complicated, often causing budget and schedule overruns  A number of integration risks can often be resolved by selecting the  right   set of COTS components and connectors that can be integrated with minimal effort  In this paper we describe a framework for selecting COTS software components and connectors ensuring their interoperability in softwareintensive systems  Our framework is built upon standard definitions of both COTS components and connectors and is intended for use by architects and developers during the design phase of a software system  We highlight the utility of our framework using a challenging example from the data intensive systems domain  Our preliminary experience in using the framework indicates an increase in interoperability assessment productivity by 50  and accuracy by 20     2007 IEEE   23 refs",A framework for the assessment and selection of software components and connectors in COTS based architectures,"['Computational complexity', 'Functional analysis', 'Interactive computer graphics', 'Interoperability', 'Large scale systems', 'Microfabrication', 'Complex interactions', 'Software components', 'Software intensive systems', 'Software systems', 'Systems Science', 'Mathematics', 'Manufacturing', 'Computer Applications', 'Computer Programming', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Telecommunication  Radar, Radio and Television']","['Bhuta, Jesal', '', '', 'Mattmann, Chris A', '', ',', '', ' Medvidovic, Nenad', '', '', 'Boehm, Barry']","Computer Science Department, University of Southern California, Los Angeles, CA 90089  2  Jet Propulsion Laboratory, California Institute of Technology, Pasadena, CA 91109",2007,WICSA
963,964,"Software systems today are composed from prefabricated commercial components and connectors that provide complex functionality and engage in complex interactions  Unfortunately, because of the distinct assumptions made by developers of these products, successfully integrating them into a software system can be complicated, often causing budget and schedule overruns  A number of integration risks can often be resolved by selecting the  right  set of COTS components and connectors that can be integrated with minimal effort  In this paper we describe a framework for selecting COTS software components and connectors ensuring their interoperability in software intensive systems  Our framework is built upon standard definitions of both COTS components and connectors and is intended for use by architects and developers during the design phase of a software system  We highlight the utility of our framework using a challenging example from the data intensive systems domain  Our preliminary experience in using the framework indicates an increase in interoperability assessment productivity by 50  and accuracy by 20    23 refs",Framework for the assessment and selection of software components and connectors in COTS based architectures,"['object-oriented programming', 'open systems', 'software architecture', 'software packages', 'software component assessment', 'software component selection', 'COTS-based architecture', 'software connector selection', 'interoperability', 'software-intensive system', 'Software engineering techniques', 'Distributed systems software', 'Object oriented programming']","['Bhuta, J', '', '', ' Mattmann, C A', '', '', ' Medvidovic, N', '', '', ' Boehm, B', '', '']","Comput  Sci  Dept , Univ  of Southern California, Los Angeles, CA, United States",2007,WICSA
964,965,"Software testing faces up several challenges  One out of these is the opposition between time to market software delivery and the excessive length of testing activities  The latter results from the growth of the application complexity along with the diversity of handheld devices  The economical competition, branding impose zero defect products, putting forward testing as an even more crucial activity  In this paper, we describe a Domain Specific Modeling Language  DSML  built upon an industrial platform  a test bed  which aims to automate mobile application checking  A key characteristic of this DSML is its ability to cope with variability in the spirit of software product line engineering  We discuss this DSML as part of a tool suite enabling the test of remote devices having variable features  Copyright   2011 ACM   17 refs",A model driven approach for automating mobile applications testing,"['Equipment testing', 'Production engineering', 'Software design', 'Software testing', 'Testing', 'Application complexity', 'Domain-specific modeling language', 'Hand held device', 'Key characteristics', 'Mobile applications', 'Mobile softwares', 'Model driven approach', 'Model-driven engineering', 'Remote devices', 'Software product line engineerings', 'Time-to-market', 'Toolsuite', 'Variability management', 'Moisture, Pressure and Temperature, and Radiation Measuring Instruments', 'Mechanical and Miscellaneous Measuring Instruments', 'Electric and Electronic Measuring Instruments', 'Acoustical and Optical Measuring Instruments', 'Production Engineering', 'Computer Applications', 'Non Mechanical Properties of Building Materials  Test Methods']","['Ridene, Youssef', '', '', 'Barbier, Franck']","LIUPPA, University of Pau, Avenue de l universit , 64013 Pau, France",2011,ECSA
965,966,"Software testing is recognized as a fundamental activity for assuring software quality  Aiming at supporting this activity, a diversity of testing tools has been developed, including tools based on SOA  Service Oriented Architecture   In another perspective, reference architectures have played a significant role in aggregating knowledge of a given domain, contributing to the success in the development of systems for that domain  However, there exists no reference architecture for the testing domain that contribute to the development of testing tools based on SOA  Thus, the main contribution of this paper is to present a service oriented reference architecture, named RefTEST SOA  Reference Architecture for Software Testing Tools based on SOA , that comprises knowledge and experience about how to structure testing tools organized as services and pursues a better integration, scalability, and reuse provided by SOA to such tools  Results of our case studies have showed that RefTEST SOA is a viable and reusable element to the development of service oriented testing tools    2011 Springer Verlag   34 refs",A service oriented reference architecture for software testing tools,"['Computer software reusability', 'Computer software selection and evaluation', 'Information services', 'Software architecture', 'Software testing', 'Knowledge and experience', 'No references', 'Reference architecture', 'Service Oriented', 'Software Quality', 'Testing tools', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Computer Applications', 'Information Services']","['Oliveira, Lucas Bueno Ruas', '', '', 'Nakagawa, Elisa Yumi']","Department of Computer Systems, University of S o Paulo   USP, PO Box 668, 13560 970, S o Carlos, SP, Brazil",2011,ECSA
966,967,"Software that cannot evolve is condemned to atrophy  it cannot accommodate the constant revision and re negotiation of its business goals nor intercept the potential of new technology  To accommodate change in software systems, we have defined an active software architecture to be  dynamic in that the structure and cardinality of the components and interactions are changeable during execution  updatable in that components can be replaced  decomposable in that an executing system may be  partially  stopped and split up into its components and interactions  and reflective in that the specification of components and interactions may be evolved during execution  Here we describe the facilities of the ArchWare architecture description language  ADL  for specifying active architectures  The contribution of the work is the unique combination of concepts including  a p calculus based communication and expression language for specifying executable architectures  hyper code as an underlying representation of system execution that can be used for introspection  a decomposition operator to incrementally break up executing systems  and structural reflection for creating new components and binding them into running systems   27 refs",Support for evolving software architectures in the ArchWare ADL,"['object-oriented programming', 'pi calculus', 'software architecture', 'software prototyping', 'specification languages', 'evolving software architectures', 'ArchWare ADL', 'software revision', 'software renegotiation', 'business goals', 'software systems', 'component specification', 'ArchWare architecture description language', 'p-calculus based communication', 'expression language', 'executable architecture specification', 'hyper-code', 'system execution', 'decomposition operator', 'structural reflection', 'Software engineering techniques', 'Programming support', 'Object oriented programming', 'Formal logic']","['Morrison, R', '', '', ' Kirby, G', '', '', ' Balasubramaniam, D', '', '', ' Mickan, K', '', '', ' Oquendo, F', ' Cimpan, S', ' Warboys, B', ' Snowdon, B', ' Greenwood, R M']","Sch  of Comput  Sci , St Andrews Univ , St  Andrews, United Kingdom",2004,WICSA
967,968,Software that cannot evolve is condemned to atrophy  it cannot accommodate the constant revision and renegotiation of its business goals nor intercept the potential of new technology  To accommodate change in software systems we have defined an active software architecture to be  dynamic in that the structure and cardinality of the components and interactions are changeable during execution  updatable in that components can be replaced  decomposable in that an executing system may be  partially  stopped and split up into its components and interactions  and reflective in that the specification of components and interactions may be evolved during execution  Here we describe the facilities of the ArchWare architecture description language  ADL  for specifying active architectures  The contribution of the work is the unique combination of concepts including  a p calculus based communication and expression language for specifying executable architectures  hyper code as an underlying representation of system execution that can be used for introspection  a decomposition operator to incrementally break up executing systems  and structural reflection for creating new components and binding them into running systems   27 refs,Support for evolving software architectures in the archware ADL,"['Automation', 'Client server computer systems', 'Computer simulation', 'Database systems', 'Formal languages', 'Graph theory', 'Image coding', 'Object oriented programming', 'Principal component analysis', 'Software engineering', 'Architecture description languages (ADL)', 'Expression languages', 'Graph represention', 'Software architecture', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory', 'Automatic Control Principles and Applications', 'Computer Applications', 'Database Systems', 'Mathematical Statistics', 'Data Processing and Image Processing', 'Digital Computers and Systems', 'Computer Systems and Equipment', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming']","['Morrison, Ron', '', '', 'Kirby, Graham', '', '', 'Balasubramaniam, Dharini', '', '', 'Mickan, Kath', '', '', 'Oquendo, Flavio', '', '', 'C mpan, Sorana', '', '', 'Warboys, Brian', '', '', 'Snowdon, Bob', '', '', 'Mark Greenwood, R', '', '']","School of Computer Science, University of St Andrews, St Andrews, Fife KY16 9SS, United Kingdom  2  ESIA, Universit  de Savoie, 5 Chemin de Bellevue, 74940 Annecy le Vieux, France  3  Department of Computer Science, University of Manchester, Manchester M13 9PL, United Kingdom",2004,WICSA
968,969,"Space and time are common high level concepts in several classes of systems, however they seldom are first class concerns at the software architecture level  In particular they have a crucial role in responsive environments, i e  technology augmented ordinary environments which are able to sense and respond to their inhabitants  The paper presents the Ph D  proposal of the author, which aims to define suitable architectural abstractions to manage space and time in responsive environments  The paper first outlines the problem, then presents the related work and finally describes the proposed solution approach, the expected results and their validation plan    2010 ACM   24 refs",Architectural abstractions for space and time awareness  The case of responsive environments,"['Abstracting', 'Technical presentations', 'Abstracting', 'Technical presentations', 'architectural abstractions', 'publish-subscribe', 'Responsive environments', 'space-awareness', 'Time-awareness', 'Computer Programming', 'Information Sources and Analysis', 'Information Dissemination']","['Bernini, Diego']","DISCo , University of Milano Bicocca, viale Sarca 336, 20126 Milan, Italy",2010,ECSA
969,970,"Start up and Shut down procedures in hydrogen fuel cell automobile industry have become an important component in deciding the long term durability and activity of fuel cell stacks  We herein report a methodology which uses an oxygen evolution reaction  OER  co catalyst, such as Ru and RuO2 together with a highly active ORR catalyst  The co catalyst is applied in the cathode layer with loadings of 0 035   0 04 mgRu cm2 and is uniformly mixed with the ORR catalyst prior to electrode preparation  Oxygen evolution catalysts  OER  like Ru C and RuO2 C mixed with ORR catalysts enhance the oxidation of water OH  to oxygen and therefore provide significant protection of other redox active species at high cathode potentials Our measurements indicate that loss in ECSA, carbon support and activity for ORR catalyst combined with OER was significantly reduced as compared to an unprotected catalyst layer   The Electrochemical Society   23 refs",Oxygen evolution co catalysts at fuel cell cathodes for degradation mitigation during simulated start up shut down cycles,"['Catalysis', 'Hydrogen fuels', 'Membranes', 'Oxygen', 'Proton exchange membrane fuel cells (PEMFC)', 'Protons', 'Redox reactions', 'Ruthenium alloys', 'Ruthenium compounds', 'Carbon support', 'Catalyst layers', 'Cathode layers', 'Cathode potential', 'Co catalysts', 'Cocatalyst', 'Electrode preparation', 'Fuel cell cathodes', 'Fuel cell stack', 'Hydrogen fuel cell automobiles', 'Long term durability', 'Oxygen evolution', 'Oxygen evolution reaction', 'Redox-active', 'Shut down', 'Start-ups', 'Materials Science', 'High Energy Physics', 'Atomic and Molecular Physics', 'Inorganic Compounds', 'Organic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Fuel Cells', 'Precious Metals', 'Gas Fuels']","['Srivastava, Ratndeep', '', '', 'Strasser, Peter', ' ,', '']","Department of Chemical and Biomolecular Engineering, University of Houston, Houston, TX 77204, United States  2  Institut fuer Chemie, Technische Universitaet Berlin, 10623 Berlin, Germany",2009,ECSA
970,971,"State of the art optimistic model versioning systems, which are critical to enable efficient team based development of architectural models, are able to detect and help resolve basic conflicts arising during the merging of model versions  However, it is often overlooked that model merging may also cause severe syntactical and semantic inconsistencies  In this paper, we propose an approach to guide the resolution of inconsistencies detected in a merged architectural model  Our approach automatically finds and presents to the software architects all solutions for resolving all inconsistencies arisen during the merging of model versions  For inconsistencies that pre exist in the model, our approach is able to suggest exactly which model elements should be changed to resolve them  Our approach is built upon a repair generation which can quickly derive resolutions for an inconsistency by examining its static and dynamic structure and forming concrete repair actions from changes in the versions to be merged  An empirical validation on a range of industrial models has demonstrated that our approach is scalable to both large models and large differences between model versions    2014 IEEE   21 refs",Inconsistency resolution in merging versions of architectural models,"['Architecture', 'Repair', 'Semantics', 'Software architecture', 'Architectural modeling', 'Architectural models', 'Empirical validation', 'Inconsistency management', 'Inconsistency resolution', 'Model merging', 'Semantic inconsistencies', 'Versioning', 'Buildings and Towers', 'Computer Programming', 'Information Dissemination', 'Maintenance']","['Dam, Hoa Khanh', '', '', 'Reder, Alexander', '', '', 'Egyed, Alexander']","University of Wollongong, NSW, Australia  2  Johannes Kepler University, Linz, Austria",2014,WICSA
971,972,"Successful software products and product lines exhibit a force of gravity that attracts external developers  The organization developing the product actively seeks to involve external developers to add functionality to the system  On the other hand, external developers flock to a successful product as it provides an established market where underserved niches provide a business opportunity for these players  The product or product line evolves into a platform for external developers  This causes several software architecture challenges for a software ecosystem, including interface stability, evolution management, guaranteeing security and reliability and composition of independently developed functionality  The paper describes these challenges, discusses practical solutions and identifies research challenges    2010 ACM   1 refs",Architecture challenges for software ecosystems,"['Ecosystems', 'Software reliability', 'Technical presentations', 'Business opportunities', 'Interface stabilities', 'Practical solutions', 'Product-lines', 'Research challenges', 'Software ecosystems', 'Software products', 'Ecology and Ecosystems', 'Computer Programming', 'Information Dissemination', 'Quality Assurance and Control']","['Bosch, Jan']","Intuit, Mountain View, CA, United States",2010,ECSA
972,973,"Successful ubiquitous systems need to integrate several underlying technologies including different operating systems, advanced middleware, several Internet protocols, sensors, actuators, I O drivers and many others elements  This scenario means that ubiquitous systems software should cope with different kinds of software hardware components, programming languages, and interaction protocols  In order to easy software development in this heterogeneous context, software architecture elements provide high abstractions that hide the details of specific platforms  However, a clear and common understanding of the elements that compose a ubiquitous system architecture and their relationship is still missing  Reference Architectures have been used to provide a common ground and to give directions for the construction of software architectures for different classes of systems  In this paper, we propose RA Ubi, a reference architecture for ubiquitous systems that was build based on PROSA SA, a process for the establishment of new reference architectures  Following PROSA SA s steps, RA Ubi defines the architectural requirements of ubiquitous systems by following the literature about this subject, applying literature systematic review technique  As main results, we present RA Ubi reference architecture detailing the role of each element and their relationships    2014 Springer International Publishing Switzerland   12 refs",RA Ubi  A reference architecture for ubiquitous computing,"['Internet protocols', 'Middleware', 'Software architecture', 'Common ground', 'Different class', 'Inter-action protocols', 'Reference architecture', 'Software/hardware', 'Still missing', 'Systematic Review', 'Ubiquitous systems', 'Computer Software, Data Handling and Applications']","['Machado, Carlos Alberto', ' ,', '', ' Silva, Eduardo', '', '', 'Batista, Thais', '', '', 'Leite, Jair', '', '', 'Nakagawa, Elisa']","Federal University of Para ba, Jo o Pessoa, PB, Brazil  2  Federal University of Rio Grande Do Norte, Natal, RN, Brazil  3  University of S o Paulo, S o Carlos, SP, Brazil",2014,ECSA
973,974,"Successful ubiquitous systems need to integrate several underlying technologies including different operating systems, advanced middleware, several Internet protocols, sensors, actuators, I O drivers and many others elements  This scenario means that ubiquitous systems software should cope with different kinds of software hardware components, programming languages, and interaction protocols  In order to easy software development in this heterogeneous context, software architecture elements provide high abstractions that hide the details of specific platforms  However, a clear and common understanding of the elements that compose a ubiquitous system architecture and their relationship is still missing  Reference Architectures have been used to provide a common ground and to give directions for the construction of software architectures for different classes of systems  In this paper, we propose RA Ubi, a reference architecture for ubiquitous systems that was build based on PROSA SA, a process for the establishment of new reference architectures  Following PROSA SA s steps, RA Ubi defines the architectural requirements of ubiquitous systems by following the literature about this subject, applying literature systematic review technique  As main results, we present RA Ubi reference architecture detailing the role of each element and their relationships   12 refs",RA Ubi  A reference architecture for ubiquitous computing,"['software architecture', 'ubiquitous computing', 'literature systematic review technique', 'PROSA-SA steps', 'reference architecture for ubiquitous systems', 'ubiquitous system architecture', 'software architecture elements', 'software development', 'interaction protocols', 'programming languages', 'software-hardware components', 'ubiquitous system software', 'I/O drivers', 'actuators', 'sensors', 'Internet protocols', 'advanced middleware', 'operating systems', 'Mobile, ubiquitous and pervasive computing', 'Software engineering techniques']","['Machado, C A', '', '', ' Silva, E', '', '', ' Batista, T', '', '', ' Leite, J', '', '', ' Nakagawa, E', '', '']","Fed  Univ  of Paraiba, Joa o Pessoa, Brazil  2  Fed  Univ  of Rio Grande do Norte, Natal, Brazil  3  Univ  of Sao Paulo, Sa o Carlos, Brazil",2014,ECSA
974,975,"Sulfonated polymers, such as sulfonated polysulfone and sulfonated polyimide, are promising candidates as a future polyelectrolyte for polymer electrolyte fuel cells  PEFCs   In PEFC cell systems, the same polyelectrolyte material is often added to the electrocatalyst layer as the ionic path  We selected partially sulfonated poly arylene thioethersulfone   SPTES  and poly 2,2  benzidinedisulfonicacid  alt  1,4,5,8  naphthalenetetracarboxylic dianhydride   BDSA NTDA  as the electrolytes and wrapped multi walled carbon nanotubes  MWNTs  with the materials to which platinum nanoparticles  Pt  were attached onto the polyelectrolyte layer to fabricate new electrocatalysts  In these electrocatalysts, the MWNT and Pt serve as the electron path and reaction site, respectively  For both polyelectrolytes, Pt nanoparticles mWNT SPTES Pt and MWNT BDSA NTDA Pt possessed electrochemically active surface areas  ECSA  of 42 3 and 35 6 m 2 g of Pt, respectively  Such a high ECSA efficiency ensures the use of these composites for the preparation of a future electrocatalyst    2013 The Society of Polymer Science, Japan  SPSJ  All rights reserved   24 refs",Effective anchoring of Pt nanoparticles onto sulfonated polyelectrolyte wrapped carbon nanotubes for use as a fuel cell electrocatalyst,"['Carbon nanotubes', 'Composite materials', 'Electrolysis', 'Fuel cells', 'Nanoparticles', 'Platinum', 'Polyelectrolytes', 'Polyimides', 'Polymers', 'Proton exchange membrane fuel cells (PEMFC)', 'Arylene', 'Cell system', 'Electrocatalyst layers', 'Electrochemical measurements', 'Electrochemically active surface areas', 'Electron path', 'Ionic paths', 'Narrow size distributions', 'Platinum nano-particles', 'Polyelectrolyte layers', 'Polymer electrolyte fuel cells', 'Reaction sites', 'Sulfonated polyimides', 'Sulfonated polymers', 'Sulfonated polysulfone', 'Solid State Physics', 'Organic Polymers', 'Polymeric Materials', 'Cellulose, Paper and Wood Products', 'Chemical Agents and Basic Industrial Chemicals', 'Materials Science', 'Nanotechnology', 'Fuel Cells', 'Electric Batteries and Fuel Cells', 'Precious Metals', 'Metals, Plastics, Wood and Other Structural Materials', 'Electric and Magnetic Materials']","['Fujigaya, Tsuyohiko', ' ,', '', ' Kim, Chaerin', '', '', 'Matsumoto, Kazuya', '', '', 'Nakashima, Naotoshi', ' ,', ',', '']","Department of Applied Chemistry, Graduate School of Engineering, Kyushu University, 744 Motooka, Nishi ku, Fukuoka 819 0395, Japan  2  International Institute for Carbon Neutral Energy Research  WPI I2CNER , Kyushu University, 744 Motooka, Nishi ku, Fukuoka, Japan  3  JST CREST, 5 Sanbancho, Chiyoda ku, Tokyo, Japan",2013,ECSA
975,976,"Summary form only given  A software architecture describes the structure of a software system on an abstract implementation independent level  In forward engineering it serves as a blueprint to prescribe the intended software structure  so called architecture model   In reverse engineering it can provide an abstract view of the actual code structure of the existing software system  so called code architecture   Architecture models and actual code architectures play a vital role for all comprehension and communication tasks during the development and evolution of large software systems  Therefore, architecture models and code architectures have to be explicitly represented and consistently maintained during the development, maintenance, and reengineering processes  The need to insure compliance of the architecture model and the actual code architecture has drawn considerable attention in recent years  In order to facilitate maintainability and enhancement of a software system the compliance of the architecture model and the actual code architecture is essential  Various tools have been developed to analyse and evaluate the deviation of code architecture and architecture model  In this tutorial we present static analysis tools that may be used for architectural analyses  We demonstrate how these tools can create useful architectural views for different evaluation tasks such as identification of reconstruction scope, critical architectural elements and potential design irregularities  If possible we will analyse a software system provided by a participant of the workshop in a life demonstration   0 refs",Software architecture analysis and evaluation,"['program diagnostics', 'software architecture', 'software maintenance', 'software architecture analysis', 'software system', 'software structure', 'code structure', 'code architecture', 'software maintainability', 'software enhancement', 'static analysis', 'Software engineering techniques', 'Diagnostic, testing, debugging and evaluating systems']","['Zullighoven, H', '', '', ' Lilienthal, C', '', '', ' Bennicke, M']","Hamburg Univ , Hamburg, Germany",2006,QoSA
976,977,"Summary form only given  Architecture has been established as a key to developing software systems that meet quality expectations of their stakeholders  Object Oriented Analysis and Design  OOAD  methodologies, however, treat architecture only indirectly or implicitly  The quality of systems developed using such methodologies, thus, depends largely on the skill level and experience of its architect  It has been suggested, therefore, that augmenting these methodologies with software architecture centric methods such as the Quality Attribute Workshop  QAW  and Attribute Driven Design  ADD  can provide explicit and methodical guidance to an architect in creating systems with desirable qualities   0 refs",Integrating architecture centric methods into object oriented analysis and design,"['object-oriented programming', 'software architecture', 'software quality', 'software architecture-centric method', 'object-oriented analysis', 'object-oriented design', 'software system development', 'software system quality', 'Software engineering techniques', 'Object oriented programming']","['Sangwan, R', ' El Houda, Z']",None,2007,WICSA
977,978,"Summary form only given  Composability itself is probably the least composable term in the theory of computer science  In this talk, I ll explore some of the troubling reasons why we have succeeded only so so when it comes to the creation of composable software   and thus software components  Architecture can often come to the rescue, but only when applied with great style   0 refs",Composing with style   components meet architecture  invited talk,"['object-oriented programming', 'software architecture', 'software composition', 'software components', 'software architecture', 'Software engineering techniques', 'Object oriented programming']","['Szyperski, C', '', '']","Microsoft Res , Redmond, WA, United States",2006,QoSA
978,979,"Summary form only given  Functional requirements refer to how a piece of a system functions or what it does given specific inputs  Nonfunctional requirements  NFRs  refer to such business and engineering needs as performance, reliability, availability, stability, usability, compatibility with interfaces, and security  They are crucial inputs for architects and system designers when performing such tasks as specifying information flows, defining deployment scenarios, choosing software platforms, sizing system configurations, determining required levels of redundancy, and identifying system measurement instrumentation  NFRs that have been clearly and succinctly written contribute to the success of a project by reducing the time required to understand them and to devise and implement procedures for ensuring and verifying that they have been met  By contrast, poorly written NFRs can lead to confusion among developers and architects, resulting in much wasted time, or to the failure and cancellation of a project, especially if the delivered system crashes often or runs too slowly  The focus of this tutorial is quantitative nonfunctional requirements relating to performance, reliability, and availability  PRA   In this tutorial, we shall look at criteria for high quality PRA NFRs, including algebraic consistency, measurability, testability, and linkage to business and engineering needs  We shall show methods for presenting and managing PRA NFRs that will improve their chances of being accepted by architects, developers, contract negotiators, and purchasers  and of their being successfully implemented and tested  Attendees will be invited to participate in exercises in which they will interpret and draft PRA NFRs and develop procedures for validating them   0 refs","Best practices for writing and managing performance, reliability, and availability requirements","['software management', 'software performance evaluation', 'software reliability', 'systems analysis', 'reliability', 'availability requirements', 'functional requirements', 'nonfunctional requirements', 'deployment scenarios', 'software platforms', 'sizing system configurations', 'performance management', 'Software engineering techniques', 'Software performance evaluation']","['Bondi, A B']",None,2007,WICSA
979,980,"Summary form only given  In this tutorial, we highlight the benefits and challenges in capturing and managing software architecture knowledge for supporting an architecture centric software development process  We discuss various approaches to characterize software architecture knowledge based on the requirements of a particular domain  We describe various concepts and approaches to manage the software architecture knowledge from both management and technical perspectives  We also demonstrate the utility of captured architecture knowledge to support software architecture activities with a case study covering the use of architecture knowledge management techniques and tools in an industrial project  The specific architecture knowledge management technology used during the tutorial is BRedB, a software tool developed in National ICT Australia  Finally, the ways in which Wikis can be used to manage architecture knowledge are discussed   0 refs","Architecture knowledge management  concepts, technologies, challenges","['knowledge management', 'software architecture', 'software development management', 'software tools', 'software architecture knowledge management technology', 'architecture-centric software development process', 'BRedB software tool', 'National ICT Australia', 'Wikis', 'Software management', 'Programming support', 'Software engineering techniques']","['Gorton, I', ' Babar, A']",None,2007,WICSA
980,981,"Summary form only given  Service oriented architecture  SAO  is latest trend in trying to bridge the gap between business strategists and IT architects  Architecting services from an enterprise perspective does not just involve identifying and fitting pieces together, but managing and addressing cross cutting concerns or non functional requirements  NFRs   With most of the discussion on SOA being around abstracting the business functions as reuse able services, IT architects have to additionally worry about the existing system qualities  So, a flat view over services has to be complimented with an approach of looking into these additional obligations, which adds a new dimension of complexity during the adoption of SOA  This tutorial is intended to provide our insights into managing this complexity throughout the different phases of SOA adoption, by minimizing the risk through calculated assumptions  We will initially set the context of the different phases of service adoption  We will then present an approach for managing the complexities of NFRs through earlier defined adoption phases  We will conclude with a discussion of the essential artifacts and tools for guiding service design   0 refs",An architectural framework for non functional requirements in enterprise SOA adoption,"['business data processing', 'software architecture', 'enterprise SOA', 'service oriented architecture', 'business strategists', 'IT architects', 'nonfunctional requirements', 'reuse-able services', 'Business and administrative computing', 'Software engineering techniques', 'Business and professional IT applications']","['Kulkarni, N', ' Padmanabhuni, S']",None,2007,WICSA
981,982,"Summary form only given  Software architecture has become a widely accepted conceptual basis for the development of non trivial software in all application areas and by organizations of all sizes  Effectively documenting an architecture is as important as crafting it  if the architecture is not understood, or worse, misunderstood, it cannot meet its goals as the unifying vision for software development  Development based architecture strategies, such as Rational s Unified Process, stop short of prescribing documentation standards  The views and beyond approach to software architecture provides practical guidance on the what, why, and how of creating IEEE 1471 2000 compliant documentation for your software architecture that will be used for years to come  The approach is based on the well known concept of views and is presented in the context of prevailing prescriptive models for architecture, including the Unified Process and UML 2 0, which has improved support for representing key architectural elements over its predecessors   0 refs",Documentation principles and practices that you can live with,"['formal specification', 'software architecture', 'system documentation', 'Unified Modeling Language', 'system documentation', 'software architecture', 'software development', 'Rational Unified Process', 'IEEE 1471-2000 compliant documentation', 'UML', 'Software engineering techniques', 'Formal methods']","['Stafford, J', '', '']","Tufts Univ , Boston, MA, United States",2006,QoSA
982,983,"Summary form only given  Software architecture has become a widely accepted conceptual basis for the development of non trivial software in all application areas and by organizations of all sizes  Effectively evaluating architecture is as important as crafting it in order to have assurance that it successfully addresses the target system qualities, which in turn, help fulfill the business goals of the system  We present the Architecture Tradeoff Analysis Method  ATAM , a practical and comprehensive approach for evaluating software architectures that is based on the principles of quality attributes and architectural tactics  We have gained experience with the approach by analyzing the architecture of several systems, and the ATAM is now a standard practice in many large companies   0 refs",An introduction to effectively evaluating software architectures,"['software architecture', 'software quality', 'software architectures', 'nontrivial software development', 'architecture tradeoff analysis method', 'quality attributes', 'architectural tactics', 'Software engineering techniques']","['Bass, L', ' Nord, R L']",None,2007,WICSA
983,984,"Summary form only given  Software product families have found broad adoption in the embedded systems industry  Product family thinking has been prevalent in this context for mechanics and hardware and adopting the same for software has been viewed as a logical approach  During recent years, however, the trends of convergence, end to end solutions, shortened innovation and R D cycles and differentiator through software engineering capabilities have lead to a development where organizations are stretching the scope of their product families far beyond the initial design  Failing to adjust the product family approach, including the architectural and process dimensions when the business strategy is changing is leading to several challenging problems that can be viewed as symptoms of this approach  The keynote discusses the key symptoms, the underlying causes for these symptoms as well as solutions for realigning the product family approach with the business strategy   0 refs",Expanding the scope of software product families  problems and alternative approaches,"['DP industry', 'embedded systems', 'software architecture', 'software product families', 'embedded systems', 'software engineering', 'software architecture', 'Software engineering techniques']","['Bosch, J', '', '']","Software   Appl  Technol  Lab , Nokia Res  Center, Helsinki, Finland",2006,QoSA
984,985,"Summary form only given  The tutorial consists of two parts  In the first part  45 min , Ralf Reussner focuses on the importance of an explicitly modelled software architecture  Besides an introduction into common architectural views, the role of the software architect is compared to  classical building  architects  As part of this, the often used comparison between building architecture and software architecture is critically reviewed  In particular, the role of an architect is discussed in model driven software projects  During the second part of the tutorial  135 min , Steffen Becker demonstrates online model driven development tools based on Eclipse  First, an introduction is given on the metamodelling tools of the Eclipse Modelling Framework  EMF  and on the Graphical Modelling Framework  GMF  used to generate a domain specific editors for user defined  meta  models  Additionally, the MDA framework of the OMG is presented and the concepts are applied to the introduced tools  A live demonstration of the capabilities of the introduced tools for model transformations shows finally how a domain specific modelling tool can be generated to a large extend automatically using an EMF model instance and the generator of GMF  As a result, an editor based on the Eclipse Graphical Editing Framework  GEF  can be deployed and run using Eclipse   0 refs",Model based software development with Eclipse,"['formal specification', 'software architecture', 'model-based software development', 'software architecture', 'software project', 'metamodelling tools', 'Eclipse Modelling Framework', 'Graphical Modelling Framework', 'model transformation', 'Eclipse Graphical Editing Framework', 'Formal methods', 'Software engineering techniques']","['Reussner, R', '', '', ' Becker, S', '', '']","Karlsruhe Univ , Karlsruhe, Germany",2006,QoSA
985,986,"Summary form only given  This tutorial will present a practical technique for managing the architecture of large software systems using Dependency Models  We will demonstrate that the matrix representation used by these models provides a unique view of the architecture and is highly scalable compared to the directed graph approaches that are common today  We will also show a variety of matrix algorithms that can be applied to analyze and organize the system into a form that reflects key architectural patterns and highlights problematic dependencies  We will illustrate our approach by applying it to real applications each consisting of hundreds or thousands of subsystems  The dependency model will be formally specified using design rules which enable architectural violations to be identified automatically  Finally, actual dependency models will be created for multiple generations of a software application to highlight how architecture evolves and how it often begins to degrade   0 refs",Lightweight dependency models to manage software architecture,"['directed graphs', 'matrix algebra', 'software architecture', 'lightweight dependency models', 'software architecture', 'large software systems', 'matrix representation', 'directed graph', 'matrix algorithms', 'architectural patterns', 'architectural violations', 'Software engineering techniques', 'Algebra', 'Combinatorial mathematics']","['Sangal, N']",None,2007,WICSA
986,987,"Summary form only given  This tutorial will provide an overview of architecture patterns, approaches, and service oriented architecture  SOA  principles  The following topics will be discussed and illustrated with sample scenarios  model driven architecture enabling  service oriented architectures  identity enabled networks   the core service building block for service oriented architectures  event driven architecture augmenting service oriented architectures  component based architecture supplementing service oriented architectures  and utility computing architecture supporting service oriented architectures   0 refs",Aligning architectural approaches towards an SOA based enterprise architecture,"['software architecture', 'SOA-based enterprise architecture', 'model driven architecture', 'service oriented architectures', 'core service building block', 'event driven architecture', 'component based architecture', 'utility computing architecture', 'Software engineering techniques']","['Radhakrishnan, R', ' Sriraman, B']",None,2007,WICSA
987,988,"Summary form only given  Video games have now existed in various forms for over 30 years, and have evolved from humble beginnings into remarkably complex software projects  The ever present emphasis on an immersive audio visual experience has put game developers in the position of being on the bleeding edge of exploring the performance of modern consumer hardware  This talk will discuss the elements that make up a contemporary video game, the software processes that are involved in development, key challenges, and look at some important design patterns that form the architectural basis   0 refs",Software architecture in game development,"['computer games', 'object-oriented methods', 'software engineering', 'software architecture', 'game development', 'video games', 'design patterns', 'Computer games', 'Software engineering techniques', 'Object oriented programming']","['Brownsword, A', ' Gorton, I']",None,2008,WICSA
988,989,"Support for capturing architectural knowledge has been identified as an important research challenge  As the basis for an approach for recovering design decisions and capturing their rationale we have performed an expert survey in practice to gain insights into the different kinds, influence factors, and sources for design decisions and also on how they are currently captured in practice  The survey has been performed with software architects, software team leads, and senior developers from six different companies in Austria with more than 10 years of experience in software development on average  The survey confirms earlier work by other authors on design decision classification and influence factors but also identifies additional kinds of decisions and influence factors not mentioned in this previous work  In addition, we gained insight into the practice of capturing, the relative importance of different decisions and influence factors, and on potential sources for recovering decisions    2013 Springer Verlag   23 refs",Classification of design decisions   An expert survey in practice,"['Design', 'Knowledge management', 'Surveys', 'Architectural knowledge', 'Design decisions', 'Expert survey', 'On potentials', 'Research challenges', 'Software architects', 'Software architecture knowledge managements', 'Software teams', 'Surveying', 'Structural Design', 'Computer Programming', 'Computer Applications']","['Miesbauer, Cornelia', '', '', 'Weinreich, Rainer']","Johannes Kepler University, Linz, Austria",2013,ECSA
989,990,"Supported chemically ordered Pt Fe intermetallic compounds have been prepared through a straightforward two stage approach  By taking advantage of this straightforward two stage synthesis, we have for the first time successfully obtained supported Pt3Fe1 and Pt 1Fe1 intermetallic nanoparticles with a mean size of less than 5 nm, a narrow size distribution and good dispersion  The nanoparticles of supported intermetallic Pt3Fe1 and Pt1Fe 1 compounds showed superior electrocatalytic activities towards the oxygen reduction reaction  ORR   The ORR enhancement in supported electrocatalysts made from Pt Fe intermetallic compounds may be attributed to their geometric and electronic structure  Accelerated durability tests  ADT  show that Pt3Fe1 C has better durability, the electrochemical surface area  ECSA  values of commercial Pt C decreased by 49  after 5000 cycles, but Pt1Fe1 C showed a reduction in the ECSA value of 3  after 5000 cycles  This journal is   The Royal Society of Chemistry 2012   36 refs",Supported sub 5nm Pt Fe intermetallic compounds for electrocatalytic application,"['Durability', 'Electrocatalysts', 'Electrolytic reduction', 'Electronic structure', 'Intermetallics', 'Nanoparticles', 'Synthesis (chemical)', 'Durability test', 'Electrocatalytic', 'Electrocatalytic activity', 'Electrochemical surface area', 'Intermetallic nanoparticles', 'Mean size', 'Narrow size distributions', 'Oxygen reduction reaction', 'Supported electrocatalysts', 'Supported Pt', 'Two stage', 'Crystal Lattice', 'Solid State Physics', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Electric and Magnetic Materials', 'Precious Metals', 'Metallurgy', 'Strength of Building Materials  Mechanical Properties']","['Li, Xiang', '', '', 'An, Li', '', '', 'Wang, Xiayan', '', '', 'Li, Fan', '', '', 'Zou, Ruqiang', '', '', 'Xia, Dingguo']","College of Environmental and Energy Engineering, Beijing University of Technology, Beijing 100124, China  2  College of Engineering, Peking University, Beijing 100871, China",2012,ECSA
990,991,"Sustaining architecture stability in incremental software development is an important aim for software engineers  Traceability mechanisms can be used to assess and predict architecture stability based on recorded information of early software artefacts  However, there is little empirical knowledge on whether traceability of stakeholders  concerns can assist the identification of architecture instabilities  This paper reports on a first exploratory study that analyses the effectiveness of concern traces for architecture stability assessment  We investigate to what extent properties of concern traces, such as their shapes, are correlated with architectural instabilities  Our analysis is based on eight releases implementing two versions of a software product line for handling mobile media    2009 IEEE   15 refs",Detecting architecture instabilities with concern traces  An exploratory study,"['Architecture', 'Computer software', 'System stability', 'Empirical knowledge', 'Exploratory studies', 'Incremental software development', 'Mobile media', 'Software artefacts', 'Software engineers', 'Software Product Line', 'Stability assessment', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'System Stability', 'Systems Science']","['Figueiredo, Eduardo', '', '', 'Galv o, Ism nia', '', '', 'Khan, Safoora Shakil', '', '', 'Garcia, Alessandro', '', '', 'Sant Anna, Claudio', '', '', 'Pimentel, Afonso', '', '', 'Medeiros, Ana Luisa', '', '', 'Fernandes, Lyrene', '', '', 'Batista, Thais', '', '', 'Ribeiro, Rita', '', '', 'Van Den Broek, Pim', '', '', 'Aksit, Mehmet', '', '', 'Zschaler, Steffen', '', '', 'Moreira, Ana']","Computing Department, Lancaster University, United Kingdom  2  Sofware Engineering Group, University of Twente, Netherlands  3  Opus Research Group, Informatics Department, PUC Rio, Brazil  4  Informatics Department, Universidade Nova de Lisboa, Portugal  5  Computer Science Department, University of Rio Grande do Norte, Brazil",2009,ECSA
991,992,"Sustaining architecture stability in incremental software development is an important aim for software engineers  Traceability mechanisms can be used to assess and predict architecture stability based on recorded information of early software artefacts  However, there is little empirical knowledge on whether traceability of stakeholders  concerns can assist the identification of architecture instabilities  This paper reports on a first exploratory study that analyses the effectiveness of concern traces for architecture stability assessment  We investigate to what extent properties of concern traces, such as their shapes, are correlated with architectural instabilities  Our analysis is based on eight releases implementing two versions of a software product line for handling mobile media    2009 IEEE   15 refs",Detecting architecture instabilities with concern traces  An exploratory study,"['Architecture', 'Computer software', 'System stability', 'Empirical knowledge', 'Exploratory studies', 'Incremental software development', 'Mobile media', 'Software artefacts', 'Software engineers', 'Software Product Line', 'Stability assessment', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'System Stability', 'Systems Science']","['Figueiredo, Eduardo', '', '', 'Galv o, Ism nia', '', '', 'Khan, Safoora Shakil', '', '', 'Garcia, Alessandro', '', '', 'Sant Anna, Claudio', '', '', 'Pimentel, Afonso', '', '', 'Medeiros, Ana Luisa', '', '', 'Fernandes, Lyrene', '', '', 'Batista, Thais', '', '', 'Ribeiro, Rita', '', '', 'Van Den Broek, Pim', '', '', 'Aksit, Mehmet', '', '', 'Zschaler, Steffen', '', '', 'Moreira, Ana']","Computing Department, Lancaster University, United Kingdom  2  Sofware Engineering Group, University of Twente, Netherlands  3  Opus Research Group, Informatics Department, PUC Rio, Brazil  4  Informatics Department, Universidade Nova de Lisboa, Portugal  5  Computer Science Department, University of Rio Grande do Norte, Brazil",2009,WICSA
992,993,"Sustaining architecture stability in incremental software development is an important aim for software engineers  Traceability mechanisms can be used to assess and predict architecture stability based on recorded information of early software artefacts  However, there is little empirical knowledge on whether traceability of stakeholders  concerns can assist the identification of architecture instabilities  This paper reports on a first exploratory study that analyses the effectiveness of concern traces for architecture stability assessment  We investigate to what extent properties of concern traces, such as their shapes, are correlated with architectural instabilities  Our analysis is based on eight releases implementing two versions of a software product line for handling mobile media    2009 IEEE   15 refs",Detecting architecture instabilities with concern traces  An exploratory study,"['Architecture', 'Computer software', 'System stability', 'Empirical knowledge', 'Exploratory studies', 'Incremental software development', 'Mobile media', 'Software artefacts', 'Software engineers', 'Software Product Line', 'Stability assessment', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'System Stability', 'Systems Science']","['Figueiredo, Eduardo', '', '', 'Galv o, Ism nia', '', '', 'Khan, Safoora Shakil', '', '', 'Garcia, Alessandro', '', '', 'Sant Anna, Claudio', '', '', 'Pimentel, Afonso', '', '', 'Medeiros, Ana Luisa', '', '', 'Fernandes, Lyrene', '', '', 'Batista, Thais', '', '', 'Ribeiro, Rita', '', '', 'Van Den Broek, Pim', '', '', 'Aksit, Mehmet', '', '', 'Zschaler, Steffen', '', '', 'Moreira, Ana']","Computing Department, Lancaster University, United Kingdom  2  Sofware Engineering Group, University of Twente, Netherlands  3  Opus Research Group, Informatics Department, PUC Rio, Brazil  4  Informatics Department, Universidade Nova de Lisboa, Portugal  5  Computer Science Department, University of Rio Grande do Norte, Brazil",2011,WICSA
993,994,"System integration effort for feature rich consumer electronic products is responsible for a significant part of the product cost  The cost of integration becomes so high that profitability of products is under pressure  Systems of subsystems is an architectural style for embedded systems that potentially decreases the effort of system integration by orders of magnitude  This is achieved by integrating software and hardware in two steps  The first integration step results in subsystems  validated, reusable modules consisting of hardware and software  In the second integration step subsystems are combined to form a system  A system of subsystems requires a software architecture that supports distribution of software over subsystems and encapsulates internal complexity of subsystems  A software architecture should also meet practical boundary conditions such as support for reuse of state of practice software  However, a large amount of state of practice software is not partitioned to be used in an environment where software is distributed over subsystems  Existing software interfaces may expose internal complexity of subsystems when software is distributed  We present an architectural analysis of a portable audio player, following a system of subsystems approach  We created a model of a portable audio player in which each subsystem is represented by a PC and is connected to a LAN representing a network on chip  To explore consequences for software reuse, we ported a software stack for media playback to this model  The software was repartitioned to support the requirements of the system architecture  Though we made some architectural changes, a large part of the selected software stack could be reused    2008 IEEE   17 refs",Media player software in a system of subsystems,"['Architecture', 'Boundary conditions', 'Boundary value problems', 'Chlorine compounds', 'Computer software reusability', 'Consumer products', 'Cost accounting', 'Electric network topology', 'Electronics industry', 'Embedded systems', 'Integrated circuits', 'Integration', 'Architectural analysis', 'Architectural changes', 'Architectural styles', 'Consumer electronic products', 'Hardware and software', 'Internal complexity', 'Media players', 'Network on Chips', 'Orders-of-magnitude', 'Portable audio', 'Practical boundary conditions', 'Product costing', 'Reusable modules', 'Software interfacing', 'Software re-use', 'Software stacks', 'System architectures', 'System integration', 'Under pressure', 'Numerical Methods', 'Calculus', 'Mathematics', 'Production Planning and Control  Manufacturing', 'Cost Accounting', 'Organic Compounds', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Systems and Equipment', 'Semiconductor Devices and Integrated Circuits', 'Electronic and Thermionic Materials', 'Electric Networks', 'Buildings and Towers']","['Goossen, Jack', '', '', 'Henriksson, Tomas']","Research NXP Semiconductors, Netherlands",2008,WICSA
994,995,"Systems of systems  SoS  are assemblies of systems working together to achieve a common goal  Each integrated system keeps its own project management and ability to work outside the SoS  Designing a SoS implies the ability to integrate design data coming from multiple sources most of the time in a heterogeneous design environment, involving a wide range of application domains, professions, methodologies and communication means  To define such systems, it is crucial to define an architecture that takes in account the functionalities required by all the stakeholders, and to enable their simulation as a mean to provide the stakeholders with a global view of a SoS before deployment  In this paper, we define some principles that drive the development of a new functional architecture simulator in the context of SoS engineering  To tame the heterogeneity of SoS components, design tools, and methodologies, we sketch a new model transformation approach that unifies parsing and model transformation    2014 ACM   15 refs",Towards a dynamic infrastructure for playing with systems of systems,"['Computer simulation', 'Design', 'Digital storage', 'Project management', 'Software architecture', 'Design environment', 'Dynamic infrastructure', 'Functional architecture', 'Integrated systems', 'Model transformation', 'Model-based system engineerings', 'Simulation', 'Systems of systems', 'Structural Design', 'Data Storage, Equipment and Techniques', 'Computer Applications', 'Industrial Engineering and Management', 'Management', 'Systems Science']","['Schneider, Jean Philippe', '', '', 'Teodorov, Ciprian', '', '', 'Senn, Eric', '', '', 'Champeau, Jo l']","ENSTA Bretagne, 2 rue Fran ois Verny, 29806 Brest Cedex 9, France  2  Universit  Bretagne Sud, Rue de Saint Maud , 56321 Lorient Cedex, France",2014,ECSA
995,996,Systems of systems  SoS  are large scale systems composed of complex systems with difficult to elicit and model emergent properties  One of the most significant challenges in the engineering of such systems is how to elicit their non functional requirements such as security  In this proposal paper we introduce a Model Driven Engineering  MDE  security requirement process for SoS  It is based on the Relax language to define invariant and relaxed security requirements  This enables taking into account security concerns early in the requirements phase of the SoS  We illustrate our process on a maritime safety and security case study    2014 ACM   18 refs,Using relax operators into an mde security requirement elicitation process for systems of systems,"['Large scale systems', 'Requirements engineering', 'Software architecture', 'MDE', 'Model-driven Engineering', 'Non-functional requirements', 'Requirement engineering', 'Requirements phase', 'Security', 'Security requirements', 'Systems of systems', 'Computer Software, Data Handling and Applications', 'Industrial Engineering and Management', 'Systems Science']","['Belloir, Nicolas', '', '', 'Chiprianov, Vanea', '', '', 'Ahmad, Manzoor', '', '', 'Munier, Manuel', '', '', 'Gallon, Laurent', '', '', 'Bruel, Jean Michel']","LIUPPA, University of Pau, BP1155, 640014 Pau, France  2  LIUPPA, University of Pau, BP 201, 40004 Mont de Marsan, France  3  CNRS IRIT, Toulouse University, F 31062 Toulouse, France",2014,ECSA
996,997,"Systems of systems  SoS  are large scale systems composed of complex systems with difficult to predict emergent properties  One of the most significant challenges in the engineering of such systems is how to predict their non functional properties such as performance, and more specifically, how to model non functional properties when the overall system functionality is not available  In this paper, we define an approach to SoS performance prediction based on the modelling of system interactions and their impacts  We adopt an Event Driven Architecture to support this modelling, as it allows for more realistic and flexible performance simulation, which enables more accurate performance prediction  We introduce a generic architecture and present its instantiation in a software architecture for the performance prediction of defence SoS  Our architecture allows for loose coupling, interoperability, and adaptability and facilitates sustainable evolution of the performance model of the SoS   18 refs",Architectural Support for Model Driven Performance Prediction of Distributed Real Time Embedded Systems of Systems,"['distributed processing', 'embedded systems', 'software architecture', 'architectural support', 'model-driven performance prediction', 'distributed real-time embedded systems of systems', 'complex systems', 'nonfunctional properties', 'defense SoS performance prediction', 'system interaction modelling', 'event driven architecture', 'Distributed systems software', 'Software engineering techniques']","['Chiprianov, V', '', '', ' Falkner, K', '', '', ' Szabo, C', '', '', ' Puddy, G', '', '']","Sch  of Comput  Sci , Univ  of Adelaide, Adelaide, SA, Australia",2014,ECSA
997,998,"Ta modified TiO2 was synthesized using a sol gel procedure and evaluated for use as an electrocatalyst support  Of the materials evaluated, Ta0  3Ti0  7O2 exhibited remarkably high stability under aggressive potential cycling tests designed to mimic harsh automotive drive cycles  The capacitance of the Ta0  3Ti 0  7O2 support changed by 12  whereas the pseudocapacitance of a carbon benchmark changed by over 100  under identical test conditions  Pt Ta0  3Ti0  7O2 electrocatalyst prepared by catalyzing this support showed high electrochemical stability which was attributed to a strong metal support interaction  SMSI   and fairly good performance  The stability of the catalyzed supports were evaluated by monitoring the evolution of the electrochemical surface area  ECSA  under potential cycling, loss in ECSA of Pt Ta0  3Ti0  7O 2 was found to be 35  compared to 46  for Pt C over 10, 000 load cycles  Pt Ta0  3Ti0  7O2 showed fairly good performance  the electrochemical surface area of this electrocatalyst was 41 m2 g, while the mass activity and areaspecific activities for the oxygen reduction reaction  ORR  were 62 mA mgPt and 151  A cm2 Pt, respectively, as ascertained from electrochemical experiments performed on a rotating disk electrode  RDE   Based on these results, we propose that Ta 0  3Ti0  7O2 is an excellent corrosion resistant alternative to carbon as an electrocatalyst support    The Electrochemical Society   37 refs",Ta modified TiO2 supports exhibit exceptional durability in polymer electrolyte fuel cells,"['Carbon', 'Electrocatalysts', 'Electrolytic reduction', 'Proton exchange membrane fuel cells (PEMFC)', 'Rotating disks', 'Sol-gels', 'Titanium dioxide', 'Electrocatalyst support', 'Electrochemical experiments', 'Electrochemical stabilities', 'Electrochemical surface area', 'Oxygen reduction reaction', 'Polymer electrolyte fuel cells', 'Rotating disk electrodes', 'Strong metal support interaction', 'Machine Components', 'Fuel Cells', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Inorganic Compounds', 'Organic Polymers']","['Kumar, Amod', '', '', 'Ramani, Vijay']","Center for Electrochemical Science and Engineering, Department of Chemical and Biological Engineering, Illinois Institute of Technology, Chicago, IL 60616, United States",2013,ECSA
998,999,"Tantalum  Ta  modified TiO2 was synthesized using a sol gel procedure and evaluated for use as an electrocatalyst support  Platinumnanoparticles were deposited on this support via the incipient wetness method  X ray diffraction  XRD , transmission electron microscopy  TEM , X ray energy dispersive spectroscopy  XEDS , X ray photoelectron spectroscopy  XPS  and nitrogen desorption were used to investigate their microstructure  Of the formulations studied, Ta0 3Ti0 7O2 possessed an adequate powder electronic conductivity of 0 2 S cm  The capacitance of this Ta0 3Ti0 7O2 support changed by only 12  whereas the pseudocapacitance of a carbon benchmark changed by over 100  over 10,000 support stability test cycles  support stability test protocol  1 0 1 5 V vs  RHE at a scan rate of 500 mV s in a 0 1MHClO4 electrolyte at 25 C  under identical test conditions  The stability of 20  Pt Ta0 3Ti 0 7O2, 20  Pt C, and 46  Pt C  commercial, TKK  catalysts were evaluated by monitoring the evolution of the electrochemical surface area  ECSA  under load cycling  load cycling protocol  0 6 0 95 V vs  RHE with a dwell time of 3 s at either potentials in a 0 1 MHClO4 electrolyte at 25 C   The loss in ECSA in 20  Pt Ta0 3Ti0 7O2 was found to be 35  compared to 44 47  for 20  Pt C and 46  Pt C over 10,000 load cycles  20  Pt Ta0 3Ti0 7O2 yielded the following performance related metrics  the ECSA of this electrocatalyst was 41 m2 g, the mass activity and area specific activities for the oxygen reduction reaction  ORR  determined at 0 9 V vs  RHE in a 0 1 M HClO4 electrolyte at 25 C were 62 mA mgPt and 151  A cm2 Pt, respectively  Koutecky Levich analysis carried out to evaluate ORR kinetics suggested that all 3 catalysts  20  Pt Ta 0 3Ti0 7O2, 20  Pt C and 46  Pt C  demonstrated similar ORR mechanisms  We propose that Ta0 3Ti0 7O 2 shows outstanding promise as a corrosion resistant alternative to carbon as an electrocatalyst support in polymer electrolyte fuel cells    2013 The Electrochemical Society   72 refs",Ta0 3Ti0 7O2 electrocatalyst supports exhibit exceptional electrochemical stability,"['Carbon', 'Electrocatalysts', 'Electrolytes', 'Electrolytic reduction', 'Energy dispersive spectroscopy', 'Photoelectrons', 'Sol-gels', 'Stability', 'Transmission electron microscopy', 'X ray diffraction', 'X ray photoelectron spectroscopy', 'Electrocatalyst support', 'Electrochemical stabilities', 'Electrochemical surface area', 'Electronic conductivity', 'Incipient wetness method', 'Oxygen reduction reaction', 'Polymer electrolyte fuel cells', 'X-ray energy dispersive spectroscopy', 'Systems Science', 'Materials Science', 'Atomic and Molecular Physics', 'Classical Physics  Quantum Theory  Relativity', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Electrochemistry', 'Chemistry', 'Optical Devices and Systems', 'Electromagnetic Waves', 'Precious Metals']","['Kumar, Amod', '', '', 'Ramani, Vijay']","Center for Electrochemical Science and Engineering, Department of Chemical and Biological Engineering, Illinois Institute of Technology, Chicago, IL 60616, United States",2013,ECSA
999,1000,"Teaching software architecture design in an academic course so that it would equip the students with industrially useful capabilities is challenging  The real software architecture design problems are less clear than what the students are used to learning  the existing mass of assets of an industrial environment is hard to bring into a classroom  and so forth  We have designed a special course into an academic software engineering curriculum, taking into account the industrial needs in teaching the problem of understanding and solving demanding software architecture design problems  The course form is similar to an industrial architecture study assigned to a team of architects  In this paper, we discuss the industrial motivation for the course, the development of the course to its current form, and the lessons learned from running the course    2008 IEEE   7 refs",Teaching software architecture design,"['Architecture', 'Curricula', 'School buildings', 'Software architecture', 'Software design', 'Software engineering', 'Students', 'Teaching', 'Technology', 'Engineering curriculums', 'Industrial architecture', 'Industrial environments', 'Lessons learned', 'Real Software', 'Software architecture design', 'Teaching software', 'Buildings and Towers', 'Public Buildings', 'Computer Programming', 'Engineering Profession', 'Education']","['M nnist , Tomi', '', '', 'Savolainen, Juha', '', '', 'Myll rniemi, Varvana']",Helsinki University of Technology  2  Nokia Research Center,2008,WICSA
1000,1001,"Techniques and tools for specific quality attribute issues are becoming a mainstream in architecture design  This approach is practical for evaluating the architecture in early stages but also for planning improvements for it  Thus, we believe that one challenge is the integration of the individual capabilities of quality attribute techniques  This paper presents our research work on a design assistant called ArchE that, based on reasoning framework technology, provides an infrastructure for third party researchers to integrate their own quality attribute models  This infrastructure aims at facilitating the experimentation and sharing of quality attribute knowledge in both research and educational contexts    2008 Springer Berlin Heidelberg   18 refs",Integrating quality attribute reasoning frameworks in the ArchE design assistant,"['Computer software selection and evaluation', 'Design', 'Integration', 'Research', 'ArchE', 'Architecture designs', 'Educational context', 'Quality attributes', 'Reasoning framework', 'Management', 'Engineering Graphics', 'Engineering Research', 'Calculus', 'Computer Applications', 'Computer Software, Data Handling and Applications', 'Structural Design', 'Computer Programming']","['Diaz Pace, Andres', '', '', 'Kim, Hyunwoo', '', '', 'Bass, Len', '', '', 'Bianco, Phil', '', '', 'Bachmann, Felix']","Software Engineering Institute, Carnegie Mellon University, 4500 Fifth Avenue, Pittsburgh, PA 15213 2612, United States",2008,QoSA
1001,1002,"Techniques and tools for specific quality attribute issues are becoming a mainstream in architecture design  This approach is practical for evaluating the architecture in early stages but also for planning improvements for it  Thus, we believe that one challenge is the integration of the individual capabilities of quality attribute techniques  This paper presents our research work on a design assistant called ArchE that, based on reasoning framework technology, provides an infrastructure for third party researchers to integrate their own quality attribute models  This infrastructure aims at facilitating the experimentation and sharing of quality attribute knowledge in both research and educational contexts   18 refs",Integrating quality attribute reasoning frameworks in the ArchE design assistant,"['knowledge based systems', 'software quality', 'quality-attribute reasoning frameworks', 'ArchE design assistant', 'quality-attribute knowledge', 'architecture design', 'Software engineering techniques', 'Expert systems and other AI software and techniques']","['Diaz Pace, A', '', '', ' Hyunwoo Kim', '', '', 'Bass, L', '', '', ' Bianco, P', '', '', ' Bachmann, F', '', '']","Software Eng  Inst , Carnegie Mellon Univ , Pittsburgh, PA, United States",2008,QoSA
1002,1003,"Telecom service development process followed at Orange consists of a sequence of interrelated tasks  We present an MDA tool which describes this process using SPEM 2 0 compatible graphical editor, and then associates a model to each defined task for its execution  These models are validated for conformance to functional rules embedded inside the tool  Task automation is achieved using MDA model transformations, which use Orange knowledge model as the basis to extract the existing reusable functional components and their interdependencies  Graphical editor and model transformations have been integrated together in an ECLIPSE environment  Finally, the validated functional design model is transformed towards a UML2 profile, so as the telecom architect can manipulate it in an environment he is familiar    2010 Springer Verlag Berlin Heidelberg   4 refs",MDA tool for telecom service functional design,"['Telecommunication', 'Telecommunication systems', 'Component reuse', 'Eclipse environment', 'Functional components', 'Functional design', 'Graphical editors', 'Knowledge model', 'Model transformation', 'Model-driven architecture', 'SPEM 2.0', 'Task automation', 'TeleCOM', 'Telecom service development', 'Telecom services', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Programming']","['Ahuja, Ankit', ' ,', '', ' Simonin, Jacques', '', '', 'Nedelec, R mi']","Orange Labs, 2 avenue P  Marzin, Lannion 22300, France  2  Institut T l com, T l com Bretagne, Lab STICC UMR CNRS 3192, UEB, Technopole Brest Iroise, Brest 29238, France",2010,ECSA
1003,1004,"Temporal and spatial variability of the Abra alba Pectinaria koreni and Macoma balthica communities was examined in the northern part of the Seine estuary  North Channel  over different space and time scales in order to assess the role that the hydrologic regime and or anthropogenic influences play in defining benthic communities over time  Sediment in the North Channel displayed strong spatial and temporal variability, sustained by intense sediment transport episodes  Total macrobenthic abundances ranged widely on the course of the year and there was no evidence of a seasonal signal for the density fluctuations, whatever the spatial scale considered  The bio sedimentary dynamics can be divided into two periods  the first corresponds to the high flow rate period  January May  during which fauna is influenced by fine silt clay deposition, and the second to the low flow rate period  June December  during which sandy deposits prevail  Despite the absence of significant correlations between sediment composition and abundance, episodes of sediment transport seem to be an important structuring mechanism in the Seine estuary  As a consequence, the faunal composition varied throughout the year  The winter and spring fauna, characterised by species living on muddy fine sands or muds, were enriched during the summer and autumn by species living in clean fine sand, such as Donax vittatus, Nephtys cirrosa or Spio decoratus, mainly represented by adult individuals  Secondary settlement of drifters may explain the rapid structuration of assemblages a few days after the sandy deposits  Our results suggest the importance of the bentho pelagic coupling, primarily induced by the sedimentary instability, on the macrobenthic fauna dynamics  The intra annual variability of assemblages at the mouth of the Seine river and the silted situation of the North Channel might simply be the result of the silting up and alteration of the inner estuary, generated by several decades of man made modifications and natural processes    2007 Springer Science Business Media B V   41 refs",The intra annual variability of soft bottom macrobenthos abundance patterns in the North Channel of the Seine estuary,"['Environmental impact', 'Estuaries', 'Hydrology', 'Microorganisms', 'Sediment transport', 'Abra alba community', 'Anthropogenic impacts', 'Bentho-pelagic coupling', 'Port 2000', 'Temporal variability', 'Waterways', 'Water Resources', 'Environmental Engineering', 'Environmental Impact and Protection', 'Biology', 'Soils and Soil Mechanics']","['Desroy, Nicolas', ' ,', '', ' Janson, Anne Laure', ' ,', '', ' Denis, Lionel', '', '', 'Charrier, Gregory', '', '', 'Lesourd, Sandric', '', '', 'Dauvin, Jean Claude']","Station Marine de Wimereux, CNRS FRE, 28163 ELICO, BP 80, Wimereux 62930, France  2  Ifremer, Laboratoire Environnement et Ressources, 2 bis Rue Grout Saint Georges, Saint Malo 35400, France  3  Laboratoire de Morphodynamique Continentale et C ti re, UMR 6143, Universit  de Rouen, 10 Boulevard De Broglie, Mont Saint Aignan Cedex 76821, France  4  Laboratoire de Ressources Halieutiques, Institut Universitaire Europ en de la Mer, Place Nicolas Copernic, Plouzane 29280, France  5  Universit  du Littoral C te d Opale, CNRS UMR, 8013 ELICO, Avenue Foch, Wimereux 62930, France",2007,ECSA
1004,1005,"Temporal and spatial variability of the Abra alba Pectinaria koreni and Macoma balthica communities was examined in the northern part of the Seine estuary  North Channel  over different space and time scales in order to assess the role that the hydrologic regime and or anthropogenic influences play in defining benthic communities over time  Sediment in the North Channel displayed strong spatial and temporal variability, sustained by intense sediment transport episodes  Total macrobenthic abundances ranged widely on the course of the year and there was no evidence of a seasonal signal for the density fluctuations, whatever the spatial scale considered  The bio sedimentary dynamics can be divided into two periods  the first corresponds to the high flow rate period  January May  during which fauna is influenced by fine silt clay deposition, and the second to the low flow rate period  June December  during which sandy deposits prevail  Despite the absence of significant correlations between sediment composition and abundance, episodes of sediment transport seem to be an important structuring mechanism in the Seine estuary  As a consequence, the faunal composition varied throughout the year  The winter and spring fauna, characterised by species living on muddy fine sands or muds, were enriched during the summer and autumn by species living in clean fine sand, such as Donax vittatus, Nephtys cirrosa or Spio decoratus, mainly represented by adult individuals  Secondary settlement of drifters may explain the rapid structuration of assemblages a few days after the sandy deposits  Our results suggest the importance of the bentho pelagic coupling, primarily induced by the sedimentary instability, on the macrobenthic fauna dynamics  The intra annual variability of assemblages at the mouth of the Seine river and the silted situation of the North Channel might simply be the result of the silting up and alteration of the inner estuary, generated by several decades of man made modifications and natural processes    2007 Springer Science Business Media B V   41 refs",The intra annual variability of soft bottom macrobenthos abundance patterns in the North Channel of the Seine estuary,"['Environmental impact', 'Estuaries', 'Hydrology', 'Microorganisms', 'Sediment transport', 'Abra alba community', 'Anthropogenic impacts', 'Bentho-pelagic coupling', 'Port 2000', 'Temporal variability', 'Waterways', 'Water Resources', 'Environmental Engineering', 'Environmental Impact and Protection', 'Biology', 'Soils and Soil Mechanics']","['Desroy, Nicolas', ' ,', '', ' Janson, Anne Laure', ' ,', '', ' Denis, Lionel', '', '', 'Charrier, Gregory', '', '', 'Lesourd, Sandric', '', '', 'Dauvin, Jean Claude']","Station Marine de Wimereux, CNRS FRE, 28163 ELICO, BP 80, Wimereux 62930, France  2  Ifremer, Laboratoire Environnement et Ressources, 2 bis Rue Grout Saint Georges, Saint Malo 35400, France  3  Laboratoire de Morphodynamique Continentale et C ti re, UMR 6143, Universit  de Rouen, 10 Boulevard De Broglie, Mont Saint Aignan Cedex 76821, France  4  Laboratoire de Ressources Halieutiques, Institut Universitaire Europ en de la Mer, Place Nicolas Copernic, Plouzane 29280, France  5  Universit  du Littoral C te d Opale, CNRS UMR, 8013 ELICO, Avenue Foch, Wimereux 62930, France",2008,ECSA
1005,1006,"Test cases are said to be successful if they do not reveal failures  With the exception of fault based testing, successful test cases are generally regarded as useless  If test cases are selected according to some testing objectives, intuitively speaking, successful test cases should still carry some information which may be useful  Hence, we are interested to see how to make use of this implicit information to help reveal failures  This paper presents a technique which is developed upon the notion of failure patterns  Once a program has been written, its failure causing inputs are defined, though unknown  Furthermore, these failure causing inputs form different patterns which may be classified as block, strip and point failure patterns   1 refs",Are successful test cases useless or not,"['failure analysis', 'program testing', 'software fault tolerance', 'test cases', 'fault-based testing', 'failure patterns', 'Diagnostic, testing, debugging and evaluating systems', 'Software engineering techniques']","['Chen, T Y', '', '']","Fac  of Inf    Commun  Technol , Swinburne Univ  of Technol , Hawthorn, Vic , Australia",2005,QoSA
1006,1007,"The  Software Architecture Documentation in Practice  working session at WICSA addressed practical issues concerning the creation, evolution, and uses of software architecture documentation  After paper presentations, discussion topics included enforcement traceability, tooling, inhibiting factors to the widespread use of documentation, uses of architecture documentation, and UML as an architecture description language    2005 IEEE",Software architecture documentation in practice session report,"['Engineering education', 'Engineering research', 'Information technology', 'Program documentation', 'Technical presentations', 'Unified Modeling Language', 'Architecture description language', 'Paper presentations', 'Software architecture documentation', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Education', 'Engineering Research', 'Information Science']","['Clements, Paul C', '', '']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA 15213, United States",2005,WICSA
1007,1008,"The 8th European Conference on Software Architecture  ECSA  held August 25 29, 2014 in Vienna Austria, organized four workshops  These workshops provide fora for exchanging ideas and theories that are still in an evolutionary stage  Workshops concretely focused on measurability of security in software architecture, software ecosystems and ecosystem architectures, domain specific architecting, and engineering of systems of systems  In addition, ECSA organized an Architecture Tool Demos track, providing an opportunity for both practitioners and researchers to present and discuss the most recent advances and experiences in the field of software architecture by means of live tool presentations  Of 43 submissions in total, 29 papers were accepted for the events  This document provides brief summaries of the different events with pointers to further information    2014 ACM",Introduction to the ECSA 2014 Workshops Proceedings,"['Ecosystems', 'Technical presentations', 'ACM proceedings', 'Austria', 'Domain specific', 'ECSA 2014', 'Evolutionary stage', 'Software ecosystems', 'Systems of systems', 'Ecology and Ecosystems', 'Computer Programming', 'Information Dissemination']","['Weyns, Danny']","AdaptWise Research Group, Linnaeus University, Sweden",2014,ECSA
1008,1009,"The Amigo project aims to develop a networked home system enabling the ambient intelligence   pervasive computing vision by effectively integrating devices and their hosted services in today s home  The Amigo system architecture poses limited technology specific restrictions, supporting interoperability among heterogeneous services    2005 IEEE   6 refs",The Amigo service architecture for the open networked home environment,"['Computer networks', 'Computer vision', 'Intelligent agents', 'Interoperability', 'Specifications', 'Telecommunication services', 'Ambient intelligence', 'Amigo service architecture', 'Open networked home environment', 'Technology specific restrictions', 'Codes and Standards', 'Vision', 'Computer Applications', 'Artificial Intelligence', 'Computer Programming', 'Computer Systems and Equipment', 'Telecommunication  Radar, Radio and Television']","['Georgantas, Nikolaos', '', '', 'Mokhtar, Sonia Ben', '', '', 'Bromberg, Y rom David', '', '', 'Issarny, Val rie', '', '', 'Kalaoja, Jarmo', '', '', 'Kantarovitch, Julia', '', '', 'G rodolle, Anne', '', '', 'Mevissen, Ron']",INRIA  2  VTT  3  France T l com  4  Microsoft,2005,WICSA
1009,1010,"The Architecting session examined the development of software architectures  Seven papers were presented, covering both the state of the practice and new architecting approaches  Based on the paper presentations and subsequent discussions, we concluded that tool support is a barrier to adoption of methods, and that architectural knowledge, including domain specific knowledge and understanding of patterns and styles is essential but difficult to communicate  A related issue, the documentation of an architecture, is similarly critical but not easy to do well, and better techniques and tools are needed  Finally, we agreed that agile methods do not bring fundamental changes to the practice of architecting    2005 IEEE",Architecting session report,"['Communication channels (information theory)', 'Information technology', 'Knowledge based systems', 'Software engineering', 'Technical presentations', 'Architectural knowledge', 'Domain specific knowledge', 'Information Theory and Signal Processing', 'Computer Programming', 'Expert Systems', 'Computer Applications', 'Education', 'Information Science']","['Hofmeister, Christine']",Lehigh University,2005,WICSA
1010,1011,"The Architecture Analysis and Design Language  AADL  is a popular language for architectural modeling and analysis of software intensive systems in application domains such as automotive, avionics, railway and medical systems  These systems often have stringent real time requirements  This paper presents an extension to AADL s behavior model using time annotations in order to improve the evaluation of timing properties in AADL  The translational semantics of this extension is based on mappings to the Timed Abstract State Machines  TASM  language  As a result, timing analysis with timed simulation or timed model checking is possible  The translation is supported by an Eclipse based plug in and the approach is validated with a case study of an industrial production cell system    2009 Springer Berlin Heidelberg   33 refs",Timed simulation of extended AADL based architecture specifications with timed abstract state machines,"['Abstracting', 'Computer software selection and evaluation', 'Contour followers', 'Linguistics', 'Model checking', 'Real time systems', 'Simulators', 'Time measurement', 'Translation (languages)', 'Abstracting', 'Computer software selection and evaluation', 'Contour followers', 'Linguistics', 'Model checking', 'Real time systems', 'Simulators', 'Time measurement', 'Translation (languages)', 'AADL', 'Abstract state machines', 'Application domains', 'Architectural modeling', 'Architecture analysis', 'Architecture specification', 'Behavior Annex', 'Behavior model', 'Industrial production', 'Medical systems', 'Plug-ins', 'Real time requirement', 'Software intensive systems', 'TASM', 'Timed model checking', 'Timing Analysis', 'Timing properties', 'Translation', 'AADL', 'Abstract state machines', 'Application domains', 'Architectural modeling', 'Architecture analysis', 'Architecture specification', 'Behavior Annex', 'Behavior model', 'Industrial production', 'Medical systems', 'Plug-ins', 'Real time requirement', 'Software intensive systems', 'TASM', 'Timed model checking', 'Timing Analysis', 'Timing properties', 'Translation', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Digital Computers and Systems', 'Information Sources and Analysis', 'Management', 'Special Purpose Instruments', 'Information Dissemination', 'Logic Elements', 'Nuclear Reactors', 'Rockets and Missiles', 'Satellites', 'Machine Tools, General', 'Solar Energy and Phenomena', 'Naval Architecture', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Automobiles']","['Bj rnander, Stefan', '', '', 'Grunske, Lars', '', '', 'Lundqvist, Kristina']","School of IDE, M lardalen University, Box 883, V ster s 72123, Sweden  2  Faculty of ICT, Swinburne University of Technology, Hawthorn VIC 3122, Australia",2009,QoSA
1011,1012,"The Bay of Seine is a potentially important nursery ground, especially for flatfish  This area, however, is also strongly anthropogenically influenced  A composite approach was chosen to compare the flatfish nursery function of the Seine estuary with other coastal and estuarine areas and to determine the impact of anthropogenic disturbances  It emerges that alteration of the nursery function in the Seine estuary is related to the loss of nursery habitat and to a lower quality of the residual surfaces  These observations stressed the importance of habitat destruction and decreased quality of remaining habitat for fish stocks renewal    2007 Springer Science Business Media B V   39 refs",Convergent signs of degradation in both the capacity and the quality of an essential fish habitat  State of the Seine estuary  France  flatfish nurseries,"['Biodiversity', 'Growth kinetics', 'Surface water resources', 'Water pollution', 'Anthropogenic disturbance', 'Essential fish habitat', 'Flatfish juvenile', 'Nursery grounds', 'Seine estuary', 'Waterways', 'Surface Water', 'Water Pollution', 'Environmental Engineering', 'Biological Materials and Tissue Engineering']","['Le Pape, O', '', '', ' Gilliers, C', '', '', ' Riou, P', '', '', ' Morin, J', '', '', ' Amara, R', '', '', ' D saunay, Y', '', '']","Lab  Ecologie Halieutique, Agrocampus Rennes, CS 4215, 65 rue de St  Brieuc, Rennes Cedex 35042, France",2007,ECSA
1012,1013,"The Bay of Seine is a potentially important nursery ground, especially for flatfish  This area, however, is also strongly anthropogenically influenced  A composite approach was chosen to compare the flatfish nursery function of the Seine estuary with other coastal and estuarine areas and to determine the impact of anthropogenic disturbances  It emerges that alteration of the nursery function in the Seine estuary is related to the loss of nursery habitat and to a lower quality of the residual surfaces  These observations stressed the importance of habitat destruction and decreased quality of remaining habitat for fish stocks renewal    2007 Springer Science Business Media B V   39 refs",Convergent signs of degradation in both the capacity and the quality of an essential fish habitat  State of the Seine estuary  France  flatfish nurseries,"['Biodiversity', 'Growth kinetics', 'Surface water resources', 'Water pollution', 'Anthropogenic disturbance', 'Essential fish habitat', 'Flatfish juvenile', 'Nursery grounds', 'Seine estuary', 'Waterways', 'Surface Water', 'Water Pollution', 'Environmental Engineering', 'Biological Materials and Tissue Engineering']","['Le Pape, O', '', '', ' Gilliers, C', '', '', ' Riou, P', '', '', ' Morin, J', '', '', ' Amara, R', '', '', ' D saunay, Y', '', '']","Lab  Ecologie Halieutique, Agrocampus Rennes, CS 4215, 65 rue de St  Brieuc, Rennes Cedex 35042, France",2008,ECSA
1013,1014,"The ECSA symposium was held in Portugal with a theme  Integrative Tools and Methods in Assessing Ecological Quality in Estuarine and Coastal Systems Worldwide   The first group consists of two papers focusing on the use of Phytoplankton as Biological Quality Element  BQE  in the scope of the implementation of the European Water Framework Directive  WFD , including classification schemes  The second group also consists of two papers, in the case focusing on the use of Macroalgae as a Biological Quality Element  BQE  in the scope of the implementation of the European Water Framework Directive, proposing an assessment tool, on one hand, and addressing the problem of reference conditions definition  The third group includes a single paper dealing with indices based on macrophytes as tools to detect anthropogenic pressures in a coastal lagoon  The fifth group includes four papers dealing with fish based ecological indicators, mainly focusing on their application in assessing the ecological condition of estuarine ecosystems   25 refs",Assessing ecological quality in estuarine and coastal systems   An introduction,"['Focusing', 'Paper', 'Anthropogenic pressures', 'Assessment tool', 'Classification scheme', 'Coastal lagoons', 'Coastal systems', 'Ecological conditions', 'Ecological indicators', 'Ecological quality', 'Estuarine ecosystems', 'European Water Framework Directive', 'Macro-algae', 'Macrophytes', 'Portugal', 'Reference condition', 'Second group', 'Tools and methods', 'Anthropogenic pressures', 'Assessment tool', 'Classification scheme', 'Coastal lagoons', 'Coastal systems', 'Ecological conditions', 'Ecological indicators', 'Ecological quality', 'Estuarine ecosystems', 'European Water Framework Directive', 'Macro-algae', 'Macrophytes', 'Portugal', 'Reference condition', 'Second group', 'Tools and methods', 'Ecology and Ecosystems', 'Electromagnetic Waves in Different Media', 'Pulp and Paper']","['Marques, Jo o Carlos', '', '', 'Costa, Maria Jos', '', '', ' M ller, Felix']","Department of Life Sciences, IMAR   Institute of Marine Research, University of Coimbra, 3004 517 Coimbra, Portugal  2  Institute of Oceanography, FCUL Campo Grande, 1749 016 Lisbon, Portugal  3  Institute for Natural Resource Conservation, Department of Ecosystem Management, Olshausenstr  75, D 24118 Kiel, Germany",2012,ECSA
1014,1015,"The Eclipse platform has played a very significant role in the evolution of software engineering research over the last few years as it has provided mature infrastructure for the development of orthogonal but interoperable prototypes in areas including model driven engineering, code analysis, data visualisation, software measurement and testing and language development  The academic community has in turn embraced Eclipse and has contributed several tools back as open source projects  such as IMP, GEF3D, Mylyn, ATL, Epsilon etc    some of which have been brought under the umbrella of the Eclipse Foundation    2013 Authors",ACadeMics tooling with Eclipse  ACME 13 workshop summmary,"['Data visualization', 'Software engineering', 'Academic community', 'Code analysis', 'Eclipse foundations', 'Language development', 'Model-driven Engineering', 'Open source projects', 'Software Measurement', 'Computer Software, Data Handling and Applications', 'Education']","['Di Ruscio, Davide', '', '', 'Kolovos, Dimitrios', '', '', 'Rose, Louis', '', '', 'Al Hilank, Samir']","Department of Computer Science and Mathematics, University of L Aquila, L Aquila, Italy  2  Department of Computer Science, University of York, York, United Kingdom  3  Develop Group Basys GmbH, Erlangen, Germany",2013,ECSA
1015,1016,"The Engineering Council of South Africa  ECSA  emphasizes the role of project management, interdisciplinary projects, and other non engineering skills that engineers inevitably will use in their careers  An excellent mechanism with which to achieve this goal is to use systems engineering and project management as teaching modules and in metacognitive fashion  This can be done in different ways, but a common thread is required over the period of the engineering course  As a result, students are exposed to engineering skills such as requirements analysis and management, specification practices, behavioral analysis, and project management  Systems engineering, when applied properly, draws together all aspects of engineering, including human, legal, economic, environmental, and other requirements, while project management draws together interpersonal skills  Ethics, entrepreneurship and other soft skills are taught under the same umbrella modules in order to show relevance that has previously been lacking   2010 IEEE   5 refs",Systems engineering training in engineering education,"['Curricula', 'Environmental regulations', 'Professional aspects', 'Project management', 'Requirements engineering', 'Systems engineering', 'Behavioral analysis', 'Curriculum designs', 'Engineering council of south africa', 'Engineering course', 'Engineering skills', 'Engineering training', 'Interdisciplinary project', 'Interpersonal skills', 'Metacognitives', 'Professional practices', 'Requirements analysis', 'Soft skills', 'Teaching module', 'Systems Science', 'Management', 'Industrial Engineering and Management', 'Education', 'Engineering Professional Aspects', 'Computer Software, Data Handling and Applications', 'Environmental Impact and Protection']","['Holm, Johann E W', '', '', ' Van Der Walt, Marthie', '', '', 'Stoker, Piet W', '', '']","Faculty of Engineering, North West University, Potchefstroom, South Africa  2  Faculty of Educational Sciences, North West University, Potchefstroom, South Africa",2010,ECSA
1016,1017,"The Engineering Profession Act, 46 of 2000 provides for the establishment of a juristic person known as the Engineering Council of South Africa  ECSA   ECSA is a statutory body responsible for the regulation of the Engineering Profession in South Africa  It promotes safety, health and interest of the public as these are affected by the engineering work and professional conduct of persons registered with ECSA  Engineering Practitioners in South Africa are registered with ECSA in the following professional categories, viz, Engineer, Engineering Technologist, Certificated Engineer and Engineering Technician  Registered Engineering Practitioners are compelled to comply with the Code of Professional Conduct when performing engineering work  The objects of the Rules of Conduct for Registered Persons are to ensure that Registered Persons apply their knowledge and skill in the interest of humanity and the environment  to execute their work with integrity and sincerity and in accordance with generally accepted norms of professional conduct  and respect the interest of their fellow being and honour the standing of the Profession  Given the large number of infrastructural projects currently taking place in South Africa, the issue of Engineering Practitioners  professional liability is topical  This is made even more important, given the large number of foreign engineering firms and professionals not registered with ECSA practicing Engineering in South Africa  This paper deals with the regulation of the engineering practice in South Africa, and also the challenges faced by Engineering Practitioners  It also deals with professional accountability and liability given the current legislation and future legislation  Copyright, American Society for Engineering Management, 2014   9 refs",Practice of engineering in South Africa   Professional liability analysis,"['Laws and legislation', 'Engineering council of south africa', 'Engineering practices', 'Engineering practitioners', 'Engineering profession', 'Engineering technologists', 'Engineering works', 'Professional conduct', 'Professional liability', 'Engineering Professional Aspects', 'Social Sciences']","['Mathe, Zwanani', '', '', 'Holdings, Eskom']","Group Technology Division, Eskom Enterprises Park, Cnr Simba and Leeuwkop Road, Sunninghill, Johannesburg, South Africa",2014,ECSA
1017,1018,"The GEAR process integrates three approaches to architectural requirements engineering  model driven requirements engineeering, quality attribute scenarios, and global analysis, within an iterative, incremental analysis process  In so doing, it shows where these methods overlap and where they complement each other  It also adds insight into the differences between product requirements and architecture requirements  GEAR incorporates experience from over a dozen diverse industrial software architecture projects    2005 IEEE   9 refs",GEAR  A good enough architectural requirements process,"['Mathematical models', 'Project management', 'Quality control', 'Requirements engineering', 'Architectural requirements engineering', 'Global analysis', 'Computer Programming', 'Management', 'Quality Assurance and Control', 'Mathematics']","['Schwanke, Robert W', '', '']","Siemens Corporate Research, Inc",2005,WICSA
1018,1019,"The ISO 26262  Functional Safety for Road Vehicles  describes a safety life cycle, that has to be considered concurrently to the life cycle of the vehicle development  Also the design of the electric electronic architecture does not specify the implementation of electronic and software based vehicle functions, it forms the basis for their realization and distribution to the vehicle s networked hardware artifacts  In this paper we present the formal and tool based approach for the propagation of ISO 26262 safety goals to artifacts of an initial electric electronic architecture  With a set of metrics, we evaluate the architecture before and after its safety refinement, respective to the high level failure modes omission and commission  The process of annotation, evaluation and refinement is exemplary shown at the electric electronic architecture for a retractable rear spoiler    2011 ACM   12 refs",A metric based safety workflow for electric electronic architectures of vehicles,"['Failure modes', 'Life cycle', 'Safety engineering', 'Vehicles', 'e/e-architecture', 'functional safety', 'iso 26262', 'Rear spoiler', 'Road vehicles', 'Safety goals', 'Software-based', 'Vehicle development', 'Vehicle functions', 'Strength of Building Materials  Mechanical Properties', 'Highway Transportation', 'Computer Programming', 'Production Engineering', 'Safety Engineering', 'Mathematics']","['Hillenbrand, Martin', '', '', 'Heinz, Matthias', '', '', 'M ller Glaser, Klaus D', '', '', ' Adler, Nico']","Institute for Information Processing Technologies  ITIV , Karlsruhe Institute of Technology  KIT , Vincenz Prienitz Strae 1, Karlsruhe, Germany  2  FZI Forschungszentrum Informatik, Haid und Neu Strae 10 14, Karlsruhe, Germany",2011,QoSA
1019,1020,"The Indian summer monsoon rainfall contributes about 75  of the total annual rainfall and exhibits considerable interannual variations  The agricultural economy of the country depends mainly on the monsoon rainfall  The long range forecast of the monsoon rainfall is, therefore of significant importance in agricultural planning and other economic activities of the country  There are various parameters which influence the amount of rainfall received during the monsoon  Some of the important parameters considered by the Indian Meteorological Department  IMD  for the study of monsoon are Outgoing Longwave Radiation  OLR , moisture content of the atmosphere, zonal wind speed, low level vorticity, pressure gradient etc  Compared to the Long Period Average  LPA  value of rain fall, the country as a whole received higher amount of rainfall in June, 2013  34  more than LPA   The same month showed considerable decrease next year as the amount of rainfall received was around 43  less compared to LPA  This drastic difference of monsoon prompted to study the behaviour of some of the monsoon relevant parameters  In this study we have considered five atmospheric parameters as the indicators of monsoon behaviour namely vertical relative humidity, OLR, aerosol optical depth  AOD , wind at 850 hPa and mean sea level pressure  MSLP   In the initial analysis of weekly OLR difference for year 2013 and 2014 shows positive values in the month of May over north western parts of India  region of heat low   This should result in a weaker monsoon in 2014  This is substantiated by the rainfall data received for various stations over India  Inference made based on the analysis of RH profiles coupled with AOD values is in agreement with the rainfall over the corresponding stations   13 refs",Observational analysis of two contrasting monsoon years,"['Agriculture', 'Atmospheric aerosols', 'Atmospheric humidity', 'Atmospheric thermodynamics', 'Economics', 'Precipitation (meteorology)', 'Sea level', 'Wind', 'Aerosol optical depths', 'Atmospheric parameters', 'Indian summer monsoon', 'Indian summer monsoon rainfall', 'Mean sea level pressures', 'Observational analysis', 'OLR and AOD', 'Outgoing longwave radiation', 'Atmospheric Properties', 'Precipitation', 'Oceanography, General', 'Agricultural Equipment and Methods  Vegetation and Pest Control', 'Social Sciences']","['Karri, Srinivasarao', '', '', 'Ahmad, Ramiz', '', '', 'Sujata, P', '', '', ' Jose, Subin', '', '', 'Sreenivas, G', '', '', ' Maurya, Devesh Kumar']","Atmospheric and Climate Sciences Group  ACSG , Earth and Climate Science Area  ECSA , NRSC, Hyderabad, India",2014,ECSA
1020,1021,"The Industry Track provides a forum for practitioners and industrial and academic researchers describing methods, techniques, and practices as well as other results of direct relevance and applicability to practicing software architects  Contributions take the form of extended abstracts and full papers and focus on practical lessons that drawn from experience and encourage interactive discussion on the presented topic    2010 ACM",ECSA 2010 Industry Track,"['Industry', 'Research', 'Technical presentations', 'Extended abstracts', 'Industry practices', 'research challenges', 'Software architects', 'Computer Programming', 'Education', 'Engineering Research', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Kolb, Ronny', '', '', 'Naedele, Martin']","Honeywell International Sarl, Z A  La Piece 16, CH 1180 Rolle, Switzerland  2  ABB Schweiz AG, Corporate Research, Segelhofstr  1K, 5405, Baden 5 D ttwil, Switzerland",2010,ECSA
1021,1022,"The International Workshop on DSL Architecting and DSL based Architectures  DADA 14  aims at exploring current perspectives on DSL architecting and on DSL based architectures in research and industry  The workshop is co located with the 8th European Conference on Software Architecture  ECSA 14  in Vienna, Austria    2014 ACM   7 refs",DSL based architecting and DSL based architectures,"['Computer programming languages', 'DSL', 'Industrial research', 'Co-located', 'Design decisions', 'Design documentation', 'Domain specific languages', 'International workshops', 'Vienna , Austria', 'Telecommunication  Radar, Radio and Television', 'Computer Software, Data Handling and Applications', 'Engineering Research']","['Sobernig, Stefan', '', '', 'Strembeck, Mark']","Institute for Information Systems and New Media, WU Vienna, Austria",2014,ECSA
1022,1023,"The Ir V C catalyst was successfully synthesized by EG method as novel, suitable cathode catalyst for PEMFCs  The XRD showed that the interatomic Ir Ir distances in the Ir V C catalyst were decreased, which can result in more facile O2 adsorption and reduction due to the modified surface and electronic properties  EDS and ICP MS results indicated that the catalyst contained negligible V content, indicating a beneficial dealloying effect resulting from HCl addition during catalyst synthesis  With a loading of 0 4 mgIr cm 2 Ir V C, it achieved a maximum power density of 517 2 mW cm 2, which is higher than the maximum power density of 367 2 mW cm 2 obtained for pure Ir C  In situ CV results indicated that the loss of the transition metal effectively improved the overall ECSA of Ir V C and particle surface roughness of Ir  This provides a higher density of active sites that can adsorb and subsequently reduce oxygen molecules during fuel cell operation    The Electrochemical Society   10 refs",The mechanism of the improvement in catalytic activity of Ir modified by V compared to pure Ir C,"['Catalysts', 'Electronic properties', 'Inductively coupled plasma mass spectrometry', 'Polyelectrolytes', 'Proton exchange membrane fuel cells (PEMFC)', 'Surface roughness', 'Adsorption and reduction', 'Catalyst synthesis', 'Cathode catalyst', 'Fuel cell operation', 'Maximum power density', 'Modified surfaces', 'Oxygen molecule', 'Particle surface roughness', 'Physical Properties of Gases, Liquids and Solids', 'Organic Polymers', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemistry', 'Fuel Cells', 'Precious Metals']","['Li, Bing', ' ,', '', ' Yang, Daijun', '', '', 'Lin, Rui', '', '', 'Yu, Zhuoping', '', '', 'Ma, Jianxin']","School of Mechanical Engineering, Tongji University, 4800 Caoan Road, Shanghai 201804, China  2  School of Automotive Studies, Tongji University, 4800 Caoan Road, Shanghai 201804, China",2012,ECSA
1023,1024,"The MID ARCH method is a software design method for exploring software architecture alternatives that use different middleware platforms  First, candidate architectures are modelled based on different architectural styles that are induced by the respective middleware platforms  Candidate styles are chosen using a taxonomy of such styles  The goal is the evaluation of candidate architectures with respect to a goal question metric quality model  We illustrate the modelling approach using the Apache Cocoon Web component framework and related technologies, and a taxonomy of their associated styles   10 refs",Middleware induced architectural style modelling for architecture exploration,"['middleware', 'software architecture', 'software quality', 'middleware-induced architectural style modelling', 'architecture exploration', 'software design', 'software architecture', 'Apache Cocoon Web', 'Software engineering techniques', 'Distributed systems software']","['Giesecke, S', '', '', ' Bornhold, J', '', '', ' Hasselbring, W', '', '']","Software Eng  Group, Carl von Ossietzky Univ  of Oldenburg, Oldenburg, Germany",2007,WICSA
1024,1025,"The MIDARCH Method is a software design method for exploring software architecture alternatives that use different middleware platforms  First, candidate architectures are modelled based on different architectural styles that are induced by the respective middleware platforms  Candidate styles are chosen using a taxonomy of such styles  The goal is the evaluation of candidate architectures with respect to a goal question metric quality model  We illustrate the modelling approach using the Apache Cocoon Web component framework and related technologies, and a taxonomy of their associated styles    2007 IEEE   10 refs",Middleware induced architectural style modelling for architecture exploration,"['Information use', 'Mathematical models', 'Middleware', 'Taxonomies', 'World Wide Web', 'Architectural styles', 'Architecture exploration', 'Metric quality models', 'Middleware platforms', 'Telecommunication  Radar, Radio and Television', 'Computer Programming', 'Computer Applications', 'Information Science', 'Information Retrieval and Use', 'Mathematics']","['Giesecke, Simon', '', '', 'Bornhold, Johannes', '', '', 'Hasselbring, Wilhelm']","Carl von Ossietzky University of Oldenburg, Software Engineering Group, 26111 Oldenburg, Germany",2007,WICSA
1025,1026,"The Nordic Symposium on Cloud Computing and Internet Technologies  NordiCloud  has been found with the key aim of promoting and supporting Cloud computing and Internet Technologies research and practice in Nordic and Baltic regions  It would provide a bridge between researchers and practitioners from Nordic Baltic countries and Cloud computing communities in other parts of the World  The first symposium was organized as a collocated event with WICSA ECSA 2012 in Helsinki, Finland  This report summarizes the key points from the symposium based on the presented talks and discussions  It highlights some of the areas that the participants considered worth pursuing in order to help organizations to not only exploit the opportunities that cloud computing offers but also to deal with the challenges when adopting cloud computing  This report points out some of the key challenges and potential solutions that are likely to interest researcher and practitioners in Nordic Baltic regions and beyond    2013 ACM   20 refs",Perspectives and reflections on cloud computing and internet technologies from NordiCloud 2012,"['Internet', 'Research', 'Software engineering', 'Technology', 'Empirical Software Engineering', 'IaaS', 'Internet of Things (IOT)', 'PaaS', 'SaaS', 'Software services', 'Utility computing', 'Engineering Profession', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Engineering Research', 'Digital Computers and Systems', 'Optical Communication', 'Telecommunication  Radar, Radio and Television', 'Telephone Systems and Related Technologies  Line Communications']","['Babar, Muhammad Ali', ' ,', '']","Lancaster University, United Kingdom  2  IT University of Copenhagen, Copenhagen, Denmark",2013,ECSA
1026,1027,"The Nordic Workshop on Model Driven Software Engineering brings together industry practitioners and academic researchers to share experiences and latest research on model driven software engineering and development  The workshop is a forum to present experiences and ongoing research in software engineering and model driven engineering in particular, but also functions as an event for establishing co operative research projects between the participants and working on joint research papers  The workshop provides an open forum, reserving ample time for discussions  The workshop has 7 editions of past history  Prior instances were held in Reykjavik  Island , Ronneby  Sweden , Grimstad  Norway , Tampere  Finland , and Turku  Finland     2010 ACM   8 refs",8th Nordic Workshop on Model Driven Software Engineering  NW MODE 2010,"['Industry', 'Research', 'Software architecture', 'Finland', 'Model driven software engineering', 'Model-driven', 'Model-driven Engineering', 'Research papers', 'Reykjavik', 'Tampere', 'Computer Programming', 'Education', 'Engineering Research', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Wasowski, Andrzej', '', '', 'Truscan, Dragos', '', '', 'Kuzniarz, Ludwik']","IT University, Copenhagen, Denmark  2   bo Akademi University, Turku, Finland  3  Blekinge Institute of Technology, Sweden",2010,ECSA
1027,1028,"The Seine estuary  France  is currently one of the world s most contaminated estuaries, due in particular to its high cadmium and lead content  Proper understanding of contaminant transfer, transformation and retention mechanisms throughout the estuary and up to the adjacent marine zone require a range of studies involving data collections, experiments, and modeling tool  A multivariable transport model  SiAM 3D  was used to simulate dissolved and particulate transport and it is applied to several calculation grids  a speciation model  MOCO  was used to select key species and obtain a schematic system representation  The coupled model for Cd and Pb was compared with field measurements  The complementary character of various tools  model applied to annual time scale, in situ measurements and experiments  allowed to explore and quantify various hypotheses on the high dissolved cadmium concentrations observed during low river flow  The target is to achieve a compromise between acceptable computing times and adequate result accuracy  Although particle and contaminant behaviour is globally well reproduced by the coarse grid, calculation errors relating to bayward fluxes and stocks deposited inside the estuary were highlighted after comparison with the fine grid    2007 Springer Science Business Media B V   62 refs",Modelling Pb and Cd dynamics in the Seine estuary,"['Computer simulation', 'Data reduction', 'Hydrodynamics', 'Impurities', 'Lead', 'Mineral resources', '3D-modeling', 'Seine estuary', 'Materials Science', 'Computer Applications', 'Data Processing and Image Processing', 'Liquid Dynamics', 'Lead and Alloys', 'Exploration and Prospecting', 'Waterways']","['Thouvenin, B', '', '', ' Gonzalez, J L', '', '', ' Chiffoleau, J F', '', '', ' Boutier, B', '', '', ' Le Hir, P', '', '']","IFREMER BE CM Centre de Toulon, Zone Portuaire de Bregaillon, BP 330, 83507 La Seyne sur Mer Cedex, France  2  IFREMER BE CM Centre de Nantes, Nantes Cedex, France  3  IFREMER DYNECO PHYSED Centre de Brest, Plouzane, France",2007,ECSA
1028,1029,"The Seine estuary  France  is currently one of the world s most contaminated estuaries, due in particular to its high cadmium and lead content  Proper understanding of contaminant transfer, transformation and retention mechanisms throughout the estuary and up to the adjacent marine zone require a range of studies involving data collections, experiments, and modeling tool  A multivariable transport model  SiAM 3D  was used to simulate dissolved and particulate transport and it is applied to several calculation grids  a speciation model  MOCO  was used to select key species and obtain a schematic system representation  The coupled model for Cd and Pb was compared with field measurements  The complementary character of various tools  model applied to annual time scale, in situ measurements and experiments  allowed to explore and quantify various hypotheses on the high dissolved cadmium concentrations observed during low river flow  The target is to achieve a compromise between acceptable computing times and adequate result accuracy  Although particle and contaminant behaviour is globally well reproduced by the coarse grid, calculation errors relating to bayward fluxes and stocks deposited inside the estuary were highlighted after comparison with the fine grid    2007 Springer Science Business Media B V   62 refs",Modelling Pb and Cd dynamics in the Seine estuary,"['Computer simulation', 'Data reduction', 'Hydrodynamics', 'Impurities', 'Lead', 'Mineral resources', '3D-modeling', 'Seine estuary', 'Materials Science', 'Computer Applications', 'Data Processing and Image Processing', 'Liquid Dynamics', 'Lead and Alloys', 'Exploration and Prospecting', 'Waterways']","['Thouvenin, B', '', '', ' Gonzalez, J L', '', '', ' Chiffoleau, J F', '', '', ' Boutier, B', '', '', ' Le Hir, P', '', '']","IFREMER BE CM Centre de Toulon, Zone Portuaire de Bregaillon, BP 330, 83507 La Seyne sur Mer Cedex, France  2  IFREMER BE CM Centre de Nantes, Nantes Cedex, France  3  IFREMER DYNECO PHYSED Centre de Brest, Plouzane, France",2008,ECSA
1029,1030,"The Service Oriented Architecture paradigm  SOA  is commonly applied for the implementation of complex, distributed business processes  The service oriented approach promises higher flexibility, interoperability and reusability of the IT infrastructure  However, evaluating the quality attribute security of large and complex SOA configurations is not sufficiently mastered yet  To tackle this complex problem, we developed a method for evaluating the security of existing service oriented systems on the architectural level  The method is based on recovering security relevant facts about the system by using reverse engineering techniques and subsequently providing automated support for further interactive security analysis at the structural level  By using generic, system independent indicators and a knowledge base, the method is not limited to a specific programming language or technology  Therefore, we are able to apply the method to various systems and adapt it to specific evaluation needs  The paper describes the general structure of the method, and presents an instantiation aligned to the Service Component Architecture  SCA  specification    2010 ACM   17 refs",Indicator based architecture level security evaluation in a service oriented environment,"['Computer software selection and evaluation', 'Information services', 'Interoperability', 'Knowledge based systems', 'Reusability', 'Reverse engineering', 'Software architecture', 'Technical presentations', 'Architectural levels', 'Automated support', 'Business Process', 'Complex problems', 'Engineering techniques', 'Evaluation Method', 'indicator', 'IT infrastructures', 'Knowledge base', 'Programming language', 'Quality attributes', 'security', 'Security analysis', 'Security evaluation', 'Service component architecture', 'Service Oriented', 'Service Oriented Systems', 'Service-oriented environment', 'Industrial Wastes', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Information Services']","['Antonino, Pablo', '', '', 'Duszynski, Slawomir', '', '', 'Jung, Christian', '', '', 'Rudolph, Manuel']","Fraunhofer IESE, Fraunhofer Platz 1, 67663 Kaiserslautern, Germany",2010,ECSA
1030,1031,"The Session Initiation Protocol  SIP  is an Internet protocol for establishing sessions between two or more parties  It is becoming ubiquitous in uses such as Voice over IP, instant messaging, Internet TV, and others  Performance is a chief concern with SIP because Quality of Service is important and SIP has internal timers that need to be honored or network efficiency suffers  The Java community has even provided a standardized API so that SIP applications can now be built using Java application servers  These new capabilities also bring with them new performance engineering methods, tools, and benchmarking needs  This paper describes the experiences and processes for the performance engineering of SIP applications in a Java environment  In this paper, a Java 2 Enterprise Edition  J2EE  SIP application server s performance is analyzed in a standalone and cluster environment, with network traces used to build a performance model of each environment  This included gathering data from test runs and extracting performance parameters from packet traces to construct the performance models  The models are then calibrated to match the model prediction with real system test data  Using the calibrated models, some bottlenecks were identified and suggestions to improve the overall maximum throughput were developed and were subsequently implemented in the system    2011 ACM   16 refs",Performance measurements and modeling of a java based Session Initiation Protocol  SIP  application server,"['Application programming interfaces (API)', 'Computer software', 'Ethers', 'Internet', 'Internet telephony', 'Java programming language', 'Network architecture', 'Network layers', 'Quality of service', 'Software architecture', 'Telecommunication networks', 'Voice/data communication systems', 'Application Servers', 'Calibrated model', 'Cluster environments', 'Instant messaging', 'Java 2 Enterprise Edition', 'Java application servers', 'Layered queueing networks', 'Maximum through-put', 'Model prediction', 'OR-networks', 'performance analysis', 'Performance engineering', 'Performance measurements', 'Performance Model', 'Performance parameters', 'Real systems', 'Session initiation protocol', 'Session Initiation Protocols', 'SIP application', 'Test runs', 'two-phase server', 'Voice over IP', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Telephone Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Organic Compounds']","['Franks, Greg', '', '', 'Lau, Danny', '', '', 'Hrischuk, Curtis']","Department of Systems and Computer Engineering, Carleton University, Ottawa, ON K1S 5B6, Canada  2  GTS Architecture and Technical Solution Design, IBM, Durham, NC 27703, United States",2011,QoSA
1031,1032,"The Software Product Lines  SPL  paradigm has arisen for taking advantage of existing common aspects between different products, while also considering product specific features  The architecture of a SPL comprises a model that will result in product architectures, and may include solutions leading to bad  architectural  design  One way to assess such design decisions is through the identification of architectural bad smells, which are properties that prejudice the overall software quality, but are not necessarily faulty or errant Inthis paper, we conduct an exploratory study that aims at characterizing bad smells in the context of product line architectures  We analyzed an open source SPL project and extracted its architecture to investigate the occurrence or absence of four smells initially studied in single systems  In addition, we propose a smell specific to the SPL context and discuss possible causes and implications of having those smells in the architecture of a product line  The results indicate that the granularity of the SPL features may influence on the occurrence of smells  Copyright   2014 ACM 978 1 4503 2523 3 14 04  15 00   14 refs",Architectural bad smells in Software Product Lines  An exploratory study,"['Computer software selection and evaluation', 'Odors', 'Open source software', 'Open systems', 'Product design', 'Software architecture', 'Bad smells', 'Design decisions', 'Exploratory studies', 'Product architecture', 'Product line architecture', 'Software Product Line', 'Software product lines', 'Software Quality', 'Buildings and Towers', 'Air Pollution Sources', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Production Engineering']","['De Andrade, Hugo Sica', ' ,', '', ' Almeida, Eduardo', '', '', 'Crnkovic, Ivica']","Federal University of Bahia, Av  Adhemar de Barros, Salvador, Brazil  2  M lardalen University, H gskoleplan 1, 721 23 V ster s, Sweden",2014,WICSA
1032,1033,"The Views and Beyond  V B  approach to software architecture provides practical guidance on the what, why, and how of creating IEEE 1471 2000 compliant documentation for your software architecture that will be used for years to come  The approach is based on the well known concept of views and is presented in the context of prevailing prescriptive models for architecture, including the unified process and UML 2 0, which has improved support for representing key architectural elements over its predecessors  In this paper, students will be introduced to the views and beyond approach and will gain hands on experience creating a new architectural style using the V B style guide and learn how to document an architectural view in that style using the V B view template  This paper concludes with a discussion of tool support for architectural documentation and a demo of a Web based documentation system   0 refs",Producing software architecture documentation to suit your needs,"['IEEE standards', 'Internet', 'software architecture', 'system documentation', 'Unified Modeling Language', 'Views and Beyond approach', 'software architecture documentation', 'IEEE 1471-2000', 'UML 2.0', 'architectural view', 'V&B view template', 'Web-based documentation system', 'Software engineering techniques', 'Distributed systems software', 'Formal methods']","['Stafford, J', ' Clements, P']",None,2007,WICSA
1033,1034,"The Web has emerged as a viable platform for building distributed systems beyond its traditional scope as a scalable means of sharing and disseminating information  In this paper I present observations from recent industrial development projects where commodity Web infrastructure and common patterns have been used to create large, scalable, and dependable computer systems    2010 Springer Verlag Berlin Heidelberg",REST in practice,"['Information dissemination', 'Network security', 'Scalability', 'Dependability', 'Distributed systems', 'ESB', 'Industrial development', 'REST', 'SOA', 'Web infrastructure', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Webber, Jim']","ThoughtWorks, 168 173 High Holborn, London WC1V 7AA, United Kingdom",2010,ECSA
1034,1035,"The ability of systems to adapt is increasingly seen as a necessary underlying capability for modern software systems  The resulting self adaptive systems are not only supposed to cope with changes, but must also preserve their consistency  To deal with such challenges in a systematic way, the design of self adaptive systems needs to be put on a formal basis  In this paper, we argue for the benefits of a formal yet extensible approach to behavioural adaptations of component based system architectures  This approach provides the usage of alternative adaptation processes rather than being limited to a single one  The application of Coloured Petri Nets for modelling and analysing the adaptation processes proves to be useful to trust consistency preservation    2010 Springer Verlag Berlin Heidelberg   14 refs",A formal approach to enforcing consistency in self adaptive systems,"['Adaptive systems', 'Petri nets', 'Adaptation process', 'Coloured Petri Nets', 'Component based systems', 'Consistency preservation', 'Formal approach', 'Self-adaptive system', 'Software systems', 'Computer Programming', 'Control Systems', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory']","['Kacem, Najla Hadj', '', '', 'Kacem, Ahmed Hadj', '', '', 'Drira, Khalil', ' ,', '']","ReDCAD Laboratory, University of Sfax, B P 1088, Sfax 3018, Tunisia  2  CNRS, LAAS, 7 Avenue du Colonel Roche, Toulouse F 31077, France  3  UPS, INSA, INP, ISAE, LAAS, Universit  de Toulouse, Toulouse F 31077, France",2010,ECSA
1035,1036,"The accreditation systems of engineering education programs governed by the Washington Accord have evolved in order to respond to modern technological and scientific development  The principal purpose of the paper is to indicate that the process re engineering model commonly employed in business environments can also be used in an educational system  In particular, the paper describes the process of re engineering used for the transformation of the BEng  Mech  program in order to align it with the accreditation requirements  The study adopts a Business Re engineering Process  BRP  in which engineering education is considered as a process  A modified McKinsey s re engineering model was chosen as a tool to re engineer the educational system  The model involves five broad phases, namely, identification, review analysis, re design, test   implementation and continuous improvement  The paper concentrates on the first two phases  The existing curriculum is mapped according to the graduate attributes, competency profiles and the Exit Level Outcomes of the Engineering Council of South Africa  ECSA   From the list of identified deficiencies it can be concluded that the major shortcoming of the program is not its content but its delivery  It is recommended that innovative flexible delivery methods should be used as teaching styles    2013 TEMPUS Publications   37 refs",Aligning an engineering education program to the Washington Accord requirements  Example of the University of Botswana,"['Accreditation', 'Curricula', 'Engineering education', 'Business environments', 'Continuous improvements', 'Educational systems', 'Engineering council of south africa', 'Mechanical engineering program', 'Process reengineering', 'Scientific development', 'University of Botswana', 'Education', 'Quality Assurance and Control']","['Oladiran, M', 'Tunde', '', '', 'Pezzota, Giuditta', '', '', 'Uziak, Jacek', '', '', 'Gizejowski, Marian']","Department of Mining, Energy and Geological Engineering, Botswana International University of Science and Technology, P Bag BO 041 Bontleng, Gaborone, Botswana  2  CELS   Research Center on Logistics and after Sales Service, University of Bergamo, Italy  3  Department of Mechanical Engineering, University of Botswana, P Bag UB0061, Gaborone, Botswana  4  Institute of Building Engineering, Warsaw University of Technology, Warsaw, Poland",2013,ECSA
1036,1037,"The activity and the durability of Pt based electrocatalysts constitute the major challenges in the current fuel cell technology  Motivated by the improved activity and ameliorated durability for Pt based cathode catalysts achieved from the compositional and morphological control, respectively, in this paper, a rationally designed, PtCu based, 1 dimensional electrocatalyst was prepared via a facile and scalable procedure  The detailed materials characterization revealed that the as prepared nanotubes  NTs  were composed of a PtCu alloy bulk and a Pt enriched surface with downshifted d band center position  Towards the electrocatalysis of oxygen reduction reaction, PtCu NTs have displayed a distinguished specific activity with more than a 10 fold improvement relative to the commercial catalysts and more than a 3 fold improvement relative to the 2015 DOE technical target  0 72 mA cmPt 2   0 9 V   Meanwhile, PtCu NTs have shown greatly ameliorated durability in the aspects of both ECSA and mass activity compared to Pt C  40   and Pt black after a 6000 cycle accelerated durability test    2013 The Royal Society of Chemistry   54 refs",Platinum copper nanotube electrocatalyst with enhanced activity and durability for oxygen reduction reactions,"['Electrocatalysis', 'Electrocatalysts', 'Electrolytic reduction', 'Nanotubes', 'Platinum', 'Platinum alloys', 'Accelerated durability tests', 'Commercial catalyst', 'Fuel cell technologies', 'Improved activities', 'Materials characterization', 'Morphological control', 'Oxygen reduction reaction', 'Pt-based electrocatalyst', 'Strength of Building Materials  Mechanical Properties', 'Precious Metals', 'Nanotechnology', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals']","['Su, Liang', '', '', 'Shrestha, Sujan', '', '', 'Zhang, Zhonghua', '', '', 'Mustain, William', '', '', 'Lei, Yu']","Department of Chemical and Biomolecular Engineering, University of Connecticut, Storrs, CT 06269, United States  2  Department of Materials Science and Engineering, University of Connecticut, Storrs, CT 06269, United States",2013,ECSA
1037,1038,"The amount of architecting effort is a factor in a software development project s efficiency  Before steps can be taken to optimize this factor, its current position must be know  We have measured the amount of architecting done in two industrial cases relating to the development of medical imaging systems  We discuss these cases and some of the problems that we encountered    2005 IEEE   5 refs",Measuring architecting effort,"['Medical imaging', 'Optimization', 'Project management', 'Software engineering', 'Sustainable development', 'Medical imaging systems', 'Project efficiency', 'Software development efficiency', 'Optimization Techniques', 'Management', 'Impact of Technology on Society', 'Imaging Techniques', 'Computer Applications', 'Computer Programming', 'Biomedical Engineering']","['Rommes, Eelco', '', '', 'Postma, Andr', '', '', ' America, Pierre']","Philips Research, Eindhoven, Netherlands  2  Philips Medical Systems, Best, Netherlands",2005,WICSA
1038,1039,"The amount of software in the automotive domain is steadily increasing  Existing functions are adapted or enhanced on a regular basis  Often, such adaptations do not allow to keep the interfaces of the concerned components stable, leading to incompatibilities with former systems  In this contribution, we propose an optimized adaptation software architecture to deal with mismatching interfaces  We extend existing middleware solutions with transparent adapter loading capabilities  This enables for seamless adapter integration on those systems  As adapter model we use a finite state machine aside with a domain specific language  By extracting static adaptations from the state machine we achieve state reduction and performance gain  The approach is evaluated using an automotive case study    2013 Springer Verlag   16 refs",Towards an optimized software architecture for component adaptation at middleware level,"['Loading', 'Middleware', 'Optimization', 'Software architecture', 'Automotive domains', 'Behavioral adaptation', 'Component adaptation', 'Domain specific languages', 'Performance Gain', 'Software component', 'Software composition', 'Static adaptation', 'Naval Vessels', 'Computer Programming', 'Optimization Techniques', 'Social Sciences']","['Pramsohler, Thomas', '', '', 'Schenk, Simon', '', '', 'Baumgarten, Uwe']","BMW Forschung und Technik GmbH, M nchen, Germany  2  Technische Universit t M nchen, Lehrstuhl f r Betriebssysteme, Garching bei M nchen, Germany",2013,ECSA
1039,1040,"The architecture description of a software product line  SPL  is essential to make it clear how the architecture realizes the feature model and to represent both the domain and application engineering architectural artefacts  However, most architecture description languages  ADLs  for SPL have limited support regarding variability management and they do not express the relationship between features and the architecture, besides the lack of tools for graphical and textual modelling and a non clear separation between the domain and application engineering activities  In order to overcome these deficiencies, this paper presents LightPL ACME, an ADL whose main goal is to be a simple, lightweight language for the SPL architecture description, and enable the association between the architectural specification and the artefacts involved in the SPL development process, including the relationship with the feature model and the representation of both domain and application engineering elements    2013 Springer Verlag   13 refs",A lightweight language for software product lines architecture description,"['Computer software', 'Professional aspects', 'Software architecture', 'Software design', 'ACME', 'Application engineering', 'Architectural specifications', 'Architecture description', 'Architecture description languages', 'LightPL-ACME', 'Software Product Line', 'Software product lines', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Engineering Professional Aspects']","['Silva, Eduardo', '', '', 'Medeiros, Ana Luisa', '', '', 'Cavalcante, Everton', '', '', 'Batista, Thais']","DIMAp   Department of Informatics and Applied Mathematics, UFRN   Federal University of Rio Grande Do Norte, Natal, Brazil",2013,ECSA
1040,1041,"The architecture of a software intensive system is the composition of architectural design decisions  These decisions are an important part of Architectural Knowledge  AK   Failure to document architectural design decisions can lead to AK vaporization and higher maintenance costs  To reduce AK vaporization, we propose to apply the Repertory Grid Technique  RGT  to make tacit knowledge about architecture decisions explicit  An architect can use the RGT to elicit decision alternatives and concerns, and to rank each alternative against concerns  To validate our approach, we conducted a survey with graduate students  In the survey, participants documented decisions using the RGT  We compared these decisions with decisions documented using a basic decision template  Our results suggest that RGT leads to less AK vaporization, compared to conventional ways of documenting decisions    2011 Springer Verlag   10 refs",Reducing architectural knowledge vaporization by applying the repertory grid technique,"['Architectural design', 'Computer software maintenance', 'Students', 'Surveys', 'Vaporization', 'Architectural design decisions', 'Architectural knowledge', 'Architecture decisions', 'Decision template', 'Graduate students', 'Maintenance cost', 'Repertory grid technique', 'Repertory grids', 'Software intensive systems', 'Tacit knowledge', 'Buildings and Towers', 'Surveying', 'Computer Software, Data Handling and Applications', 'Chemical Operations', 'Education']","['Tofan, Dan', '', '', 'Galster, Matthias', '', '', 'Avgeriou, Paris']","Department of Mathematics and Computing Science, University of Groningen, Netherlands",2011,ECSA
1041,1042,"The architecture of a software system is a key asset for a software business  While there are several architecting and evaluation methods, literature and practice are devoid of architecture centric concern analysis  ACCA  methods analogous to causal analysis methods for software defects  A concern is any aspect of an architecture considered undesirable  This paper describes an ACCA method which uses at its core a Concern Traceability map  CT map  that captures architectural design decisions starting from software requirements and links them to identified architectural concerns  The CT map essentially forms a net of design decisions, sandwiched between requirements and architectural concerns  Analysis of the root causes of a concern is then conducted on the CT map  The ACCA method is empirically validated through a case study on a sizeable architecture of a banking application    2005 IEEE   20 refs",ACCA  An architecture centric concern analysis method,"['Computer software', 'Decision theory', 'Numerical methods', 'Requirements engineering', 'Concern Traceability (CT) map', 'Software business', 'Software defects', 'Computer Programming', 'Computer Applications', 'Numerical Methods', 'Systems Science']","['Wang, Zhenyu', '', '', 'Sherdil, Khalid', '', '', 'Madhavji, Nazim H', '', '']","Univ  of Western Ontario, London, Ont  N6A 5B7, Canada",2005,WICSA
1042,1043,"The architecture of a software system is both a success and a failure factor  Taking the wrong architectural decisions may break a project, since such errors are often systematic and affect cross cutting aspects of the system to be built  Moreover, software projects get more and more challenging due to the rising complexity and dynamics of business processes, large team size and distributed development  As the software architecture is the common platform for many project activities, it constitutes a critical success factor  Thus, a comprehensive method for evaluating a software architecture and propagating important properties of it downstream to code is needed  At sd m, we designed a comprehensive architecture evaluation and management framework in order to satisfy these needs  In this paper, we derive a list of requirements, such a framework should fulfill  We then present the components of our architecture evaluation method and demonstrate, how it fulfills these requirements    2008 Springer Berlin Heidelberg   20 refs",Comprehensive architecture evaluation and management in large software systems,"['Architecture', 'Computer software selection and evaluation', 'Systematic errors', 'Architectural decision', 'Architecture evaluation', 'Business Process', 'Common platform', 'Comprehensive method', 'Critical success factor', 'Cross-cutting', 'Distributed development', 'Failure factors', 'Management frameworks', 'Project activities', 'Software project', 'Software-systems', 'Team size', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management', 'Statistical Methods']","['Salger, Frank', '', '', 'Bennicke, Marcel', '', '', 'Engels, Gregor', ' ,', '', ' Lewerentz, Claus']","Sdandm AG, Carl Wery Strae 42, 81739 M nchen, Germany  2  Brandenburg University of Technology, Postbox 101344, 03013 Cottbus, Germany  3  University of Paderborn, S lab, Warburger Str  100, 33098 Paderborn, Germany",2008,QoSA
1043,1044,"The architecture of a software system is both a success and a failure factor  Taking the wrong architectural decisions may break a project, since such errors are often systematic and affect cross cutting aspects of the system to be built  Moreover, software projects get more and more challenging due to the rising complexity and dynamics of business processes, large team size and distributed development  As the software architecture is the common platform for many project activities, it constitutes a critical success factor  Thus, a comprehensive method for evaluating a software architecture and propagating important properties of it downstream to code is needed  At sd m, we designed a comprehensive architecture evaluation and management framework in order to satisfy these needs  In this paper, we derive a list of requirements, such a framework should fulfill  We then present the components of our architecture evaluation method and demonstrate, how it fulfills these requirements   20 refs",Comprehensive architecture evaluation and management in large software systems,"['software architecture', 'software management', 'large software-system management', 'software projects', 'business processes', 'software architecture evaluation', 'sd&m', 'comprehensive architecture evaluation', 'management framework', 'Software engineering techniques']","['Salger, F', '', '', ' Bennicke, M', ' Engels, G', ' Lewerentz, C']","sd m AG, Munich, Germany",2008,QoSA
1044,1045,"The architecture of a software system is typically defined as the organization of the system, the relationships among its components and the principles governing their design  By including artifacts coresponding to software engineering processes, the definition gets naturally extended into the architecture of a software system and process  In this paper we propose a holistic model to organize knowledge of such architectures  This model is graph based  It collects architectural artifacts as vertices and their relationships as edges  It allows operations like metric calculation, refactoring, bad smell detection and pattern discovery as algorithmic transformations on graphs  It is independent of development languages  It can be applied for both formal and adaptive projects  We have implemented prototype tools supporting this model  The artifacts are stored in a graph database  The operations are defined in a graph query language  They have short formulation and are efficiently executed by the graph database engine    2011 Springer Verlag   15 refs",Software is a directed multigraph,"['Architecture', 'Computer software', 'Models', 'Query languages', 'Algorithmic transformation', 'Architectural artifacts', 'graph', 'Graph database', 'Graph query language', 'Graph-based', 'Holistic model', 'metric', 'Metric calculation', 'Multigraphs', 'Pattern discovery', 'Prototype tools', 'Refactorings', 'Software engineering process', 'Software systems', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Engineering Graphics']","['Dabrowski, Robert', '', '', 'Stencel, Krzysztof', '', '', 'Timoszuk, Grzegorz']","Institute of Informatics, Warsaw University, Banacha 2, 02 097 Warsaw, Poland",2011,ECSA
1045,1046,"The architecture of a software system plays a crucial role during evolution and maintenance, as it provides the means to cope with the inherent system complexity by abstracting from implementation and design details  Architectural component models represent high level designs and are frequently used as a central view of architectural descriptions of software systems  Hence, understandability of those models is crucial as they play a key role in supporting the architectural understanding of a software system  In this paper we present the results from a study we carried out to examine to which extent the software architecture could be conveyed through architectural component diagrams  The statistical evaluation of the results shows that metrics such as the number of components, number of connectors, number of elements, and number of symbols used in the diagrams can significantly decrease architectural understandability when they are above and below a certain, roughly predicted threshold  Also, our results indicate that architectural understandability is linearly correlated with the perceived precision and general understandability of the diagrams  Copyright   2014 ACM 978 1 4503 2523 3 14  04 15 00   17 refs",Empirical evaluation of the understandability of architectural component diagrams,"['Computer software', 'Graphic methods', 'Software architecture', 'Architectural components', 'Architectural descriptions', 'Empirical evaluations', 'High-level design', 'Number of components', 'Statistical evaluation', 'System complexity', 'Understandability', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Stevanetic, Srdjan', '', '', 'Javed, Muhammad Atif', '', '', 'Zdun, Uwe']","Software Architecture Research Group, University of Vienna, Austria",2014,WICSA
1046,1047,"The architecture of an IT system is of crucial importance for its success  In order to assess architecture s fitness, a number of standardized architecture evaluation methods have been proposed  Most of them are intended for the evaluation of a single architecture at a certain point in time  Furthermore, the results are often highly dependent on the person performing the evaluation  Thus, such methods cannot be used to compare and rate different architectures  The DoSAM method instead provides an evaluation framework for comparing different software architectures in a certain domain  After adapting this framework to the application domain at hand once, it can then be used repeatedly for all future evaluations in a methodical and reproducible way   12 refs",DoSAM   domain specific software architecture comparison model,"['software architecture', 'software performance evaluation', 'domain-specific software architecture comparison model', 'architecture evaluation methods', 'Software engineering techniques', 'Software performance evaluation']","['Bergner, K', '', '', ' Rausch, A', ' Sibling, M', ' Ternite, T']","4Soft GmbH, Munich, Germany",2005,QoSA
1047,1048,"The architecture of cloud applications differs from traditional software architectures mainly regarding their basic architectural elements, the services, the metadata about the services for expressing information related to quality parameters and pricing models, and the constraints over the applications and the used services  This paper presents Cloud ADL, a seamless extension of the ACME ADL to support the architectural representation of cloud applications by relying on the existing ACME abstractions  In addition, it defines contracts to modularly encapsulate typical contract information of cloud applications, such as quality parameters, pricing model of the services, and constraints  Finally, Cloud ADL also supports the dynamic reconfiguration of cloud applications through programmed changes, which can be foreseen at design time and specified at the ADL level    2013 Springer Verlag   9 refs",Describing cloud applications architectures,"['Dynamic models', 'Architectural element', 'Architectural representation', 'Cloud applications', 'Design time', 'Dynamic re-configuration', 'Pricing models', 'Quality parameters', 'Computer Programming', 'Mathematics']","['Cavalcante, Everton', '', '', 'Medeiros, Ana Luisa', '', '', 'Batista, Thais']","DIMAp   Department of Informatics and Applied Mathematics, UFRN   Federal University of Rio Grande Do Norte, Natal, Brazil",2013,ECSA
1048,1049,"The challenge of model checking of isolated software components becomes more and more relevant with the boom of component oriented technologies  20   An important issue here is how to verify an open model representing an isolated software component  also referred as the missing environment problem in  7    In this paper, we propose on the fly simulation of the component environment to address the issue  We employ behavior protocols  18  and a system coordinating two model checkers  Java PathFinder  4  and BPChecker  15   This approach allows us to enclose the model representing the behavior of a given component and consequently to exhaustively verify the model  Our solution was implemented as the Carmen tool  1   We demonstrate scalability of our approach on real life examples and show that, in comparison with the COMBAT model checker  17 , we bring better performance, and also exhaustive and correct verification    2008 Springer Berlin Heidelberg   21 refs",Carmen  Software component model checker,"['Computer software selection and evaluation', 'Mathematical models', 'Simulators', 'Software architecture', 'Component-oriented', 'Java PathFinder', 'Model checker', 'On-the-fly', 'Software component', 'Mathematics', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Logic Elements', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Naval Architecture', 'Automobiles', 'Solar Energy and Phenomena', 'Satellites', 'Rockets and Missiles', 'Nuclear Reactors']","['Plek, Ale', '', '', 'Ad mek, Jir', '', ',', '']","INRIA Lille, Nord Europe, UMR 8022, France  2  Distributed Systems Research Group, Charles University in Prague, Czech Republic  3  Institute of Computer Science, Academy of Sciences of the Czech Republic",2008,QoSA
1049,1050,"The challenge of model checking of isolated software components becomes more and more relevant with the boom of component oriented technologies  An important issue here is how to verify an open model representing an isolated software component  also referred as the missing environment problem in  17    In this paper, we propose on the fly simulation of the component environment to address the issue  We employ behavior protocols and a system coordinating two model checkers  Java PathFinder and BPChecker  This approach allows us to enclose the model representing the behavior of a given component and consequently to exhaustively verify the model  Our solution was implemented as the Carmen tool  We demonstrate scalability of our approach on real life examples and show that, in comparison with the COMBAT model checker, we bring better performance, and also exhaustive and correct verification   21 refs",Carmen  software component model checker,"['digital simulation', 'Java', 'object-oriented programming', 'program verification', 'protocols', 'software component model checker', 'Carmen tool', 'on-the-fly simulation', 'behavior protocol checker', 'Java PathFinder', 'Diagnostic, testing, debugging and evaluating systems', 'Object oriented programming', 'Formal methods']","['Plsek, A', '', '', ' Adamek, J']","INRIA Lille, Project ADAM USTL LIFL CNRS UMR 8022, Lille, France",2008,QoSA
1050,1051,"The complex distributed systems of nowadays require the dynamic composition of multiple components, which are autonomous and so complex that they can be considered as systems in themselves  These components often use different application protocols and are implemented on top of heterogeneous middleware, which hamper their successful interaction  The explicit and rigorous description and analysis of components interaction is essential in order to enable the dynamic composition of these components  In this paper, we propose a formal approach to represent and reason about interactions between components using layered connectors  Layered connectors describe components interaction at both the application and middleware layers and make explicit the role of middleware in the realisation of this interaction  We provide formal semantics of layered connectors and present an approach for the synthesis of layered connectors in order to enable the dynamic composition of highly heterogeneous components  We validate our approach through a case study in the area of collaborative emergency management    2014 Springer International Publishing Switzerland   26 refs",Layered connectors revisiting the formal basis of architectural connection for complex distributed systems,"['Risk management', 'Semantics', 'Software architecture', 'Application protocols', 'Architectural mismatches', 'Complex distributed system', 'Component interaction', 'Components interaction', 'Dynamic composition', 'Emergency management', 'Heterogeneous component', 'Computer Programming', 'Information Dissemination', 'Probability Theory']","['Bennaceur, Amel', '', '', 'Issarny, Val rie']","Open University, Milton Keynes, United Kingdom  2  Inria Paris Rocquencourt, France",2014,ECSA
1051,1052,"The complex distributed systems of nowadays require the dynamic composition of multiple components, which are autonomous and so complex that they can be considered as systems in themselves  These components often use different application protocols and are implemented on top of heterogeneous middleware, which hamper their successful interaction  The explicit and rigorous description and analysis of components interaction is essential in order to enable the dynamic composition of these components  In this paper, we propose a formal approach to represent and reason about interactions between components using layered connectors  Layered connectors describe components interaction at both the application and middleware layers and make explicit the role of middleware in the realisation of this interaction  We provide formal semantics of layered connectors and present an approach for the synthesis of layered connectors in order to enable the dynamic composition of highly heterogeneous components  We validate our approach through a case study in the area of collaborative emergency management   26 refs",Layered Connectors  Revisiting the Formal Basis of Architectural Connection for Complex Distributed Systems,"['distributed processing', 'middleware', 'software architecture', 'architectural connection', 'complex distributed systems', 'layered connector synthesis', 'heterogeneous middleware', 'application protocols', 'component interaction analysis', 'formal approach', 'formal semantics', 'heterogeneous components', 'collaborative emergency management', 'Other distributed systems software', 'Software engineering techniques', 'Formal methods']","['Bennaceur, A', '', '', ' Issarny, V', '', '']","Open Univ , Milton Keynes, United Kingdom  2  Inria Paris Rocquencourt, Alpines, France",2014,ECSA
1052,1053,"The composition of software components can be used to fit specific application needs  Finding feasible and, moreover, optimal compositions demands extensive domain knowledge from the developer   with respect to both application requirements and used components  Frameworks can provide support for the composition selection based on requirements, component properties, and their dependencies  Their description, however, becomes complex in practice  In this paper, we propose the ProDesc framework  It contains a property description language with a bespoke type system for describing properties of software components and their operations  ProDesc can express compositional variability, including dependencies of properties on the environment and on other components  A UML like graphical notation and transformations to feature diagrams support the software developer  The most suitable component composition is selected based on a utility function, which is evaluated during runtime  Our approach raises the abstraction level, leads to a clear separation of concerns, reduces the development time, and facilitates optimized software    2014 Springer International Publishing Switzerland   23 refs",A property description framework for composable software,"['Artificial intelligence', 'Computer science', 'Computers', 'Application requirements', 'Component composition', 'Component properties', 'Compositional variability', 'Description languages', 'Optimal composition', 'Separation of concerns', 'Software developer', 'Computer Circuits and Logic Elements', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Fr mmgen, Alexander', '', '', 'Lehn, Max', '', '', 'Buchmann, Alejandro']","Databases and Distributed Systems Group  DVS , TU Darmstadt, Germany",2014,ECSA
1053,1054,"The composition of software components can be used to fit specific application needs  Finding feasible and, moreover, optimal compositions demands extensive domain knowledge from the developer with respect to both application requirements and used components  Frameworks can provide support for the composition selection based on requirements, component properties, and their dependencies  Their description, however, becomes complex in practice  In this paper, we propose the ProDesc framework  It contains a property description language with a bespoke type system for describing properties of software components and their operations  ProDesc can express compositional variability, including dependencies of properties on the environment and on other components  A UML like graphical notation and transformations to feature diagrams support the software developer  The most suitable component composition is selected based on a utility function, which is evaluated during runtime  Our approach raises the abstraction level, leads to a clear separation of concerns, reduces the development time, and facilitates optimized software   23 refs",A Property Description Framework for Composable Software,"['graph grammars', 'object-oriented programming', 'software engineering', 'specification languages', 'property description framework', 'composable software', 'software component composition', 'optimal composition demands', 'application requirements', 'composition selection', 'ProDesc framework', 'property description language', 'bespoke type system', 'compositional variability', 'UML-like graphical notation', 'UML-like graphical transformations', 'software developer', 'utility function', 'development time reduction', 'Object oriented programming', 'Software management', 'Formal methods', 'Software engineering techniques']","['Fro mmgen, A', '', '', ' Lehn, M', '', '', ' Buchmann, A', '', '']","Databases   Distrib  Syst  Group  DVS , Tech  Univ  Darmstadt, Darmstadt, Germany",2014,ECSA
1054,1055,"The concept of a Software ecosystem is gaining in popularity amongst large organizations and inherently relies on the adoption of common architectural development for multiple product development  The adoption of these approaches represents a significant shift in traditional software development style and process methodology  Currently several organizations are in practice with this new process model which embraces business, third party involvement and open architecture as its central pillars and these institutions have thrived as a result  The advent of software ecosystems have caused major players in the software industry to rethink their operating practices and engage with third parties, opening their platforms to external entities to attain business objectives  In this paper we present a three dimensional view of the software ecosystem model examine the role played by each of the three central pillars  business  architecture  and social aspects  We further highlight their relationships and conclude that this study will help in further aiding understanding of the overall engineering process of ecosystem software    2010 ACM   10 refs",A three dimensional view of software ecosystems,"['Ecosystems', 'Industry', 'Product development', 'Social aspects', 'Societies and institutions', 'Software design', 'Technical presentations', 'Three dimensional', 'Business objectives', 'Engineering process', 'Large organizations', 'New process', 'Open architecture', 'Operating practices', 'Software development styles', 'Software ecosystems', 'Software industry', 'Software Product Line', 'Third parties', 'Production Planning and Control  Manufacturing', 'Industrial Engineering and Management', 'Cost and Value Engineering  Industrial Economics', 'Engineering Graphics', 'Engineering Profession', 'Computer Programming', 'Ecology and Ecosystems']","['Campbell, P R J', '', '', ' Ahmed, Faheem']","United Arab Emirates University, P O  Box 17551, Al Ain, United Arab Emirates",2010,ECSA
1055,1056,"The concept of resource architecture has been introduced to describe the association of operations with resources, and interactions between these operations  This paper explains resource architecture with examples, and how it can be used in performance engineering throughout the life of a project    2008 Springer Verlag Berlin Heidelberg   17 refs",Resource architecture and continuous performance engineering,"['Architecture', 'Association reactions', 'Computer software selection and evaluation', 'Technology', 'International conferences', 'Performance engineering', 'Quality of softwares', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Chemical Reactions', 'Engineering Profession']","['Woodside, Murray']","Dept  of Systems and Computer Engineering, Carleton University, Ottawa, Canada",2007,QoSA
1056,1057,"The concept of resource architecture has been introduced to describe the association of operations with resources, and interactions between these operations  This paper explains resource architecture with examples, and how it can be used in performance engineering throughout the life of a project   17 refs",Resource architecture and continuous performance engineering,"['software engineering', 'resource architecture', 'continuous performance engineering', 'software engineering', 'Software engineering techniques']","['Woodside, M', '', '']","Dept  of Syst    Comput  Eng , Carleton Univ , Ottawa, ON, Canada",2008,QoSA
1057,1058,"The concept of software ecosystems encourages external developers to use an organizations  software platform and contribute in product development  This establishes a community that further accelerates the sharing of knowledge, content, issues, expertise, and skills  A number of major international software development organizations including Amazon, Nokia, and Apple are pioneering the development of software ecosystems and the area is currently gaining significant momentum in the software field, making it an essential area for research  This workshop aims to enhance current understanding and knowledge in this field by providing a forum for leading scientists and software professionals to exchange ideas and discuss current results  Such a forum will help to foster a mutual understanding of the current and future issues that face professionals involved in the development of software  Furthermore as software ecosystems are novel area of research this forum will provide an essential platform in which current work can be presented and discussed and future research directions identified    2010 ACM   12 refs",2nd International Workshop on Software Ecosystems  EcoSys,"['Ecosystems', 'Knowledge management', 'Product development', 'Research', 'Software architecture', 'Technical presentations', 'Future research directions', 'International workshops', 'Mutual understanding', 'Software development organizations', 'Software ecosystems', 'Software platforms', 'Ecology and Ecosystems', 'Computer Programming', 'Computer Applications', 'Education', 'Engineering Research', 'Production Engineering']","['Campbell, P R J', '', '', ' Ahmed, Faheem', '', '', 'Bosch, Jan', '', '', 'Jansen, Slinger']","UAE University, P O  Box 17551, Al Ain, United Arab Emirates  2  Intuit, Mountain View, CA, United States  3  Utrecht University, Utrecht, Netherlands",2010,ECSA
1058,1059,"The concept of variability is fundamental in software product lines and a successful implementation of a product line largely depends on how well domain requirements and their variability are specified, managed, and realized  While developing an educational software product line, we identified a lack of support to specify variability in quality concerns  To address this problem we propose an approach to model variability in quality concerns, which is an extension of quality attribute scenarios  In particular, we propose domain quality attribute scenarios, which extend standard quality attribute scenarios with additional information to support specification of variability and deriving product specific scenarios  We demonstrate the approach with scenarios for robustness and upgradability requirements in the educational software product line  Copyright 2012 ACM   14 refs",Modeling variability in product lines using domain quality attribute scenarios,"['Computer software reusability', 'Network architecture', 'Software architecture', 'Domain requirements', 'Educational software', 'Modeling variability', 'Product-lines', 'Quality attributes', 'Scenarios', 'Software Product Line', 'Variability', 'Computer Software, Data Handling and Applications']","['Abbas, Nadeem', '', '', 'Andersson, Jesper', '', '', 'Weyns, Danny']","Linnaeus University, Software Technology Group, V xj , Sweden",2012,ECSA
1059,1060,"The concept of variability is fundamental in software product lines and a successful implementation of a product line largely depends on how well domain requirements and their variability are specified, managed, and realized  While developing an educational software product line, we identified a lack of support to specify variability in quality concerns  To address this problem we propose an approach to model variability in quality concerns, which is an extension of quality attribute scenarios  In particular, we propose domain quality attribute scenarios, which extend standard quality attribute scenarios with additional information to support specification of variability and deriving product specific scenarios  We demonstrate the approach with scenarios for robustness and upgradability requirements in the educational software product line  Copyright 2012 ACM   14 refs",Modeling variability in product lines using domain quality attribute scenarios,"['Computer software reusability', 'Network architecture', 'Software architecture', 'Domain requirements', 'Educational software', 'Modeling variability', 'Product-lines', 'Quality attributes', 'Scenarios', 'Software Product Line', 'Variability', 'Computer Software, Data Handling and Applications']","['Abbas, Nadeem', '', '', 'Andersson, Jesper', '', '', 'Weyns, Danny']","Linnaeus University, Software Technology Group, V xj , Sweden",2012,WICSA
1060,1061,"The conceptual modelling of software architectures is of central importance for the quality of a software system  A rich modelling language is required to integrate the different aspects of architecture modelling, such as architectural styles, structural and behavioural modelling, into a coherent framework  We propose an ontological approach for architectural style modelling based on description logic as an abstract, meta level modelling instrument  Architectural styles are often neglected in software architectures  We introduce a framework for style definition and style combination  The link between quality requirements and conceptual modelling of architectural styles is investigated  The application of the ontological framework in the form of an integration into existing architectural description notations such as ACME and UML based approaches, and also service ontologies is illustrated    Springer Verlag Berlin Heidelberg 2007   30 refs",An ontology based approach for modelling architectural styles,"['Mathematical models', 'Ontology', 'Quality control', 'Architecture ontology', 'Description logics', 'Software architecture modeling', 'Computer Programming', 'Computer Applications', 'Information Science', 'Quality Assurance and Control', 'Mathematics']","['Pahl, Claus', '', '', 'Giesecke, Simon', '', '', 'Hasselbring, Wilhelm']","Dublin City University, School of Computing, Dublin 9, Ireland  2  University of Oldenburg, Software Engineering Group, D 26111 Oldenburg, Germany",2007,ECSA
1061,1062,"The conceptual modelling of software architectures is of central importance for the quality of a software system  A rich modelling language is required to integrate the different aspects of architecture modelling, such as architectural styles, structural and behavioural modelling, into a coherent framework  We propose an ontological approach for architectural style modelling based on description logic as an abstract, meta level modelling instrument  Architectural styles are often neglected in software architectures  We introduce a framework for style definition and style combination  The link between quality requirements and conceptual modelling of architectural styles is investigated  The application of the ontological framework in the form of an integration into existing architectural description notations such as ACME and UML based approaches, and also service ontologies is illustrated    Springer Verlag Berlin Heidelberg 2007   30 refs",An ontology based approach for modelling architectural styles,"['Mathematical models', 'Ontology', 'Quality control', 'Architecture ontology', 'Description logics', 'Software architecture modeling', 'Computer Programming', 'Computer Applications', 'Information Science', 'Quality Assurance and Control', 'Mathematics']","['Pahl, Claus', '', '', 'Giesecke, Simon', '', '', 'Hasselbring, Wilhelm']","Dublin City University, School of Computing, Dublin 9, Ireland  2  University of Oldenburg, Software Engineering Group, D 26111 Oldenburg, Germany",2008,ECSA
1062,1063,"The conceptual modelling of software architectures is of central importance for the quality of a software system  A rich modelling language is required to integrate the different aspects of architecture modelling, such as architectural styles, structural and behavioural modelling, into a coherent framework  We propose an ontological approach for architectural style modelling based on description logic as an abstract, meta level modelling instrument  Architectural styles are often neglected in software architectures  We introduce a framework for style definition and style combination  The link between quality requirements and conceptual modelling of architectural styles is investigated  The application of the ontological framework in the form of an integration into existing architectural description notations such as ACME and UML based approaches, and also service ontologies is illustrated   30 refs",An ontology based approach for modelling architectural styles,"['ontologies (artificial intelligence)', 'software architecture', 'software quality', 'Unified Modeling Language', 'ontology-based approach', 'software architecture', 'software quality', 'architectural style model', 'description logic', 'ACME', 'UML-based approach', 'Software engineering techniques', 'Knowledge engineering techniques', 'Formal methods']","['Pahl, C', '', '', ' Giesecke, S', ' Hasselbring, W']","Sch  of Comput , Dublin City Univ , Dublin, Ireland",2007,ECSA
1063,1064,"The conceptual modelling of software architectures is of central importance for the quality of a software system  A rich modelling language is required to integrate the different aspects of architecture modelling, such as architectural styles, structural and behavioural modelling, into a coherent framework  We propose an ontological approach for architectural style modelling based on description logic as an abstract, meta level modelling instrument  Architectural styles are often neglected in software architectures  We introduce a framework for style definition and style combination  The link between quality requirements and conceptual modelling of architectural styles is investigated  The application of the ontological framework in the form of an integration into existing architectural description notations such as ACME and UML based approaches, and also service ontologies is illustrated   30 refs",An ontology based approach for modelling architectural styles,"['ontologies (artificial intelligence)', 'software architecture', 'software quality', 'Unified Modeling Language', 'ontology-based approach', 'software architecture', 'software quality', 'architectural style model', 'description logic', 'ACME', 'UML-based approach', 'Software engineering techniques', 'Knowledge engineering techniques', 'Formal methods']","['Pahl, C', '', '', ' Giesecke, S', ' Hasselbring, W']","Sch  of Comput , Dublin City Univ , Dublin, Ireland",2008,ECSA
1064,1065,"The content of this paper addresses the issue of how to perform analysis of a cross domain reference architecture  The cross domain reference architecture is designed based on the domains requirements and features modeling  The definition of a cross domain reference architecture is based on well known concepts from software architecture description, service orientation and product line  We apply a method based on change scenarios to analyze variability at the architectural level  In order to handle complexity in analysis we propose categories of change scenarios to be derived from each problem domain and we provide informal guidelines for each step of the analysis method  Copyright   2011 ACM   26 refs",Analysis of a cross domain reference architecture using change scenarios,"['Image quality', 'Analysis method', 'Cross-domain', 'Scenarios', 'Service', 'Variability', 'Computer Programming', 'Light, Optics and Optical Devices']","['Dobrica, Liliana', '', '', 'Ovaska, Eila']","University Politehnica of Bucharest, Bucharest, Romania  2  Technical Research Centre of Finland, Oulu, Finland",2011,ECSA
1065,1066,"The context of software architecting increasingly reflects webs of IT companies pooling resources together for software development  What results is a networked organization, populated by heterogeneous development communities connected via internet  How does this scenario change the process of software architecting  Pivoting around this research question, this paper presents architecture concerns relevant in such networked development scenarios  Supporting these concerns is critical to understand the impact of architecture on organizational change and vice versa  To this aim, we introduce a viewpoint, its supporting tool and evaluate both through a case study    2014 IEEE   16 refs",Architecting in networked organizations,"['Development community', 'Development scenarios', 'IT companies', 'Networked organizations', 'Organizational change', 'Research questions', 'Software architecting', 'Supporting tool', 'Computer Programming']","['Tamburri, Damian A', '', '', ' Lago, Patricia', '', '', 'Dorn, Christoph', '', '', 'Hilliard, Rich']","VU University Amsterdam, Netherlands  2  Vienna University of Technology, Distributed Systems Group, Austria  3  Consulting Software Systems Architect, United States",2014,WICSA
1066,1067,"The core of the design of software architecture is all about architectural decision making  A high quality design outcome sets high requirements, not only on the skills and knowledge of the design team members, but also on the management of the decision making process  We claim that in order to deliver high quality decisions, the design team needs to obtain a high level of situational awareness  To address this, we present an analysis of the problem of team situational awareness in design workshops and propose a model on how stakeholder positions help to build consensus within the argumentation viewpoint of architectural decisions  We show how the Software Architecture Warehouse tool has been extended to support the argumentation viewpoint within its live design document metaphor to provide support for co located and distributed design workshops    2013 Springer Verlag   22 refs",Team situational awareness and architectural decision making with the software architecture warehouse,"['Decision making', 'Design', 'Warehouses', 'Architectural decision', 'Architectural decision makings', 'Decision making process', 'Design documents', 'Design outcomes', 'Design workshops', 'Distributed design', 'Situational awareness', 'Industrial and Agricultural Buildings', 'Structural Design', 'Computer Programming', 'Management']","['Nowak, Marcin', '', '', 'Pautasso, Cesare']","Faculty of Informatics, University of Lugano, Switzerland",2013,ECSA
1067,1068,"The corrosion of carbon black  CB  support materials for polymer electrolyte fuel cells was investigated by use of two standard accelerated testing protocols, square wave cycling  E   0 9 1 3 V vs  RHE, holding 30 s at each E  and triangular wave cycling  E   1 0 1 5 V vs  RHE, at a scan rate of 0 5 V s 1  protocols, which were operated with H2  anode  and N2  cathode  atmospheres at 80  C and 100  RH  Severe decreases of the electrochemically active surface area  ECSA , mass activity  MA 0 85 V  and cell performance resulting from the simulated start up shutdown cycling are ascribed to the detachment of Pt particles from the CB support due to carbon corrosion and structural collapse, as well as Ostwald ripening  First, the simulated start up shutdown cycling brings about the surface corrosion of the CB particles, and thereafter it transforms the crystalline carbon into amorphous carbon, which subsequently undergoes corrosion  This continual corrosion process of the CB support leads to a significant thickness reduction of the Pt CB cathode catalyst layer and the severe detachment of Pt particles from the CB  On the CB particles, the slower square wave cycling brings about their overall corrosion, including the surface defects and anchoring centers where Pt particles are well attached and dispersed, whereas the faster triangular wave cycling brings about corrosion locally at more unstable surface defects on the CB particles  This is why the estimated cycle half life N1 2  at which ECSA is estimated to decrease to ca  1 2 of the initial value  for the Pt CB cathode catalyst was 10 times shorter with the square wave cycling compared to that with the triangular wave cycling  The effect of overall cycling time vs  cycle number is also discussed    2013 Elsevier Ltd  All rights reserved   54 refs",Investigation of the corrosion of carbon supports in polymer electrolyte fuel cells using simulated start up shutdown cycling,"['Amorphous carbon', 'Carbon black', 'Catalysts', 'Cathodes', 'Durability', 'Electrolytic reduction', 'Fuel cells', 'Materials testing', 'Ostwald ripening', 'Platinum', 'Polyelectrolytes', 'Polymers', 'Accelerated testing', 'Carbon corrosion', 'Carbon support', 'Cathode catalyst', 'Cathode catalyst layers', 'Cell performance', 'Corrosion process', 'Cycle number', 'Cycling time', 'Electrochemically active surface areas', 'Initial values', 'Mass activity', 'Polymer electrolyte fuel cells', 'Pt cathode', 'Pt particle', 'Scan rates', 'Square waves', 'Start-ups', 'Structural collapse', 'Support materials', 'Surface corrosion', 'Thickness reduction', 'Triangular wave', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Materials Science', 'Polymeric Materials', 'Solid State Physics', 'Amorphous Solids', 'Organic Polymers', 'Electric Components', 'Fuel Cells', 'Strength of Building Materials  Mechanical Properties', 'Strength of Building Materials  Test Equipment and Methods', 'Non Mechanical Properties and Tests of Building Materials', 'Mineralogy', 'Metals Corrosion', 'Precious Metals']","['Park, Young Chul', '', '', 'Kakinuma, Katsuyoshi', '', '', 'Uchida, Makoto', '', '', 'Tryk, Donald A', '', '', ' Kamino, Takeo', '', '', 'Uchida, Hiroyuki', '', '', 'Watanabe, Masahiro']","Fuel Cell Nanomaterials Center, University of Yamanashi, 6 43 Miyamae, Kofu 400 0021, Japan  2  Clean Energy Research Center, University of Yamanashi, 4 Takeda, Kofu 400 8511, Japan",2013,ECSA
1068,1069,"The creation and adoption of a software ecosystem is becoming increasingly pervasive, leading to new research and management challenges  Several companies are platformizing successful products and opening these products up for outside innovation where customers expect to be actively involved in the shaping of the technology they use  This also leads to new opportunities and challenges regarding new business models, open innovation, collaborative development, strategic planning, and coordination of multiple platforms  IWSECO and WEA aim to further increase the body of knowledge in software ecosystems by providing a forum to exchange ideas and discuss the most recent innovations, trends and experiences in the field  It aims to build and shape the community of leading practitioners and research experts by providing a forum for the exchange of research results and industrial practice in software ecosystems  By co locating both, IWSECO and WEA we aim at attracting and involving interested participants from the larger European software engineering community in an early stage of shaping software ecosystem research and community building  The co located workshops will be a venue for practitioners and researchers to share experience and lessons learned  with a particular focus on architecture, as the ecosystem architecture can actually determine the success or failure of software ecosystems as a whole    2014 Authors",Welcome from the IWSECO WEA chairs,"['Industrial research', 'Knowledge management', 'Software architecture', 'Collaborative development', 'Community buildings', 'Engineering community', 'Industrial practices', 'Management challenges', 'Multiple platforms', 'New business models', 'Software ecosystems', 'Ecology and Ecosystems', 'Computer Programming', 'Computer Applications', 'Engineering Research']","['Alves, Carina Frota', '', '', 'Bosch, Jan', '', '', 'Hansen, Geir', '', '', 'Knauber, Peter', '', '', 'Knodel, Jens', '', '', 'Lungu, Mircea']","Center of Informatics, Federal University of Pernambuco, Recife, Brazil  2  Chalmers University Technology, Gothenburg, Sweden  3  SINTEF ICT, Norway  4  Mannheim University of Applied Sciences, Mannheim, Germany  5  Fraunhofer Institute for Experimental Software Engineering  IESE , Kaiserslautern, Germany  6  Software Composition Group, University of Berne, Berne, Switzerland",2014,ECSA
1069,1070,"The current draft revision of ISO IEC 42010  IEEE Std 1471  proposes a formalization of architecture framework within the ontology of the standard  This paper discusses the origin of the concept, motivates its standardization in ISO IEC 42010, and argues that a well defined architecture framework should be a key component of any architecture description  The paper describes the application of the proposed construct to several well known architecture frameworks    2009 IEEE   23 refs",Every architecture description needs a framework  Expressing architecture frameworks using ISO IEC 42010,"['Architecture', 'Computer software', 'Ontology', 'Standardization', 'Architecture description', 'Architecture framework', 'Architecture frameworks', 'ISO/IEC 42010', 'Key component', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Codes and Standards', 'Information Science']","['Emery, David', '', '', 'Hilliard, Rich']","DSCI, Inc",2009,ECSA
1070,1071,"The current draft revision of ISO IEC 42010  IEEE Std 1471  proposes a formalization of architecture framework within the ontology of the standard  This paper discusses the origin of the concept, motivates its standardization in ISO IEC 42010, and argues that a well defined architecture framework should be a key component of any architecture description  The paper describes the application of the proposed construct to several well known architecture frameworks    2009 IEEE   23 refs",Every architecture description needs a framework  Expressing architecture frameworks using ISO IEC 42010,"['Architecture', 'Computer software', 'Ontology', 'Standardization', 'Architecture description', 'Architecture framework', 'Architecture frameworks', 'ISO/IEC 42010', 'Key component', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Codes and Standards', 'Information Science']","['Emery, David', '', '', 'Hilliard, Rich']","DSCI, Inc",2009,WICSA
1071,1072,"The current draft revision of ISO IEC 42010  IEEE Std 1471  proposes a formalization of architecture framework within the ontology of the standard  This paper discusses the origin of the concept, motivates its standardization in ISO IEC 42010, and argues that a well defined architecture framework should be a key component of any architecture description  The paper describes the application of the proposed construct to several well known architecture frameworks    2009 IEEE   23 refs",Every architecture description needs a framework  Expressing architecture frameworks using ISO IEC 42010,"['Architecture', 'Computer software', 'Ontology', 'Standardization', 'Architecture description', 'Architecture framework', 'Architecture frameworks', 'ISO/IEC 42010', 'Key component', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Codes and Standards', 'Information Science']","['Emery, David', '', '', 'Hilliard, Rich']","DSCI, Inc",2011,WICSA
1072,1073,"The decay of software architecture   the divergent evolution of architecture models and the derived code   is one of the reasons for a decreasing maintainability of software systems  Several approaches for architecture to code consistency checking exist that stop the decay by detecting a divergence after evolution steps of either the architecture or the corresponding code  Known approaches have two main insufficiencies  First, the effort to derive and maintain the consistency checks is higher than necessary or they cannot be applied a posteriori  Second, they are not well integrated into UML based model driven engineering  In the paper we present ReflexML  A UML embedded mapping of architecture models to code plus a rich set of predefined consistency checks based on that mapping  The mapping is described with a UML profile that allows to attach AOP type patterns to an UML component model to define its reflexion on code elements  This abolishes the two insufficiencies of current approaches  We apply ReflexML to an industry project to demonstrate its effectiveness and its capability of a seamless integration into a pre existing UML architecture model    2011 Springer Verlag   17 refs",ReflexML  UML based architecture to code traceability and consistency checking,"['Maintainability', 'Mapping', 'Model checking', 'AOP', 'Architecture models', 'Consistency checking', 'Consistency checks', 'Divergent evolution', 'Industry project', 'Model-driven Engineering', 'Posteriori', 'Seamless integration', 'Software systems', 'traceability', 'UML', 'UML components', 'UML profiles', 'Computer Programming', 'Engineering Graphics', 'Maintenance']","['Adersberger, Josef', '', '', 'Philippsen, Michael']","QAware GmbH, Aschauer Str  32, 81549 Munich, Germany  2  University of Erlangen Nuremberg, Computer Science Department, Programming Systems Group, Martensstr  3, 91058 Erlangen, Germany",2011,ECSA
1073,1074,"The decomposition of software architecture into modular units is driven by both functional and quality concerns  Dependability and security are among quality concerns that require a software to be decomposed into separate units isolated from each other  However, it appears that this decomposition is usually not aligned with the decomposition based on functional concerns  As a result, introducing module isolation forced by quality attributes, while preserving the existing decomposition, is not trivial and requires a substantial refactoring effort  In this work, we introduce an approach and a toolset to predict this effort prior to refactoring activities  As such, a selection can be made among potential decomposition alternatives based on quantitative estimations  These estimations are obtained from scalable analysis of module dependencies based on a graph database and reusable query templates  We discuss our experiences and evaluate our approach on a code base used in a commercial Digital TV and Set top Box software    2014 Springer International Publishing Switzerland   15 refs",Effort estimation for architectural refactoring to introduce module isolation,"['Digital television', 'Reverse engineering', 'dependability', 'Effort Estimation', 'module isolation', 'Refactorings', 'security', 'Television Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Ozt rk, Fatih', '', '', 'SarIlI, Erdem', '', '', 'S zer, Hasan', '', '', 'Aktemur, Baris']","Vestel Electronics, Manisa, Turkey  2  Department of Computer Science, Ozyegin University, Istanbul, Turkey",2014,ECSA
1074,1075,"The decomposition of software architecture into modular units is driven by both functional and quality concerns  Dependability and security are among quality concerns that require a software to be decomposed into separate units isolated from each other  However, it appears that this decomposition is usually not aligned with the decomposition based on functional concerns  As a result, introducing module isolation forced by quality attributes, while preserving the existing decomposition, is not trivial and requires a substantial refactoring effort  In this work, we introduce an approach and a toolset to predict this effort prior to refactoring activities  As such, a selection can be made among potential decomposition alternatives based on quantitative estimations  These estimations are obtained from scalable analysis of module dependencies based on a graph database and reusable query templates  We discuss our experiences and evaluate our approach on a code base used in a commercial Digital TV and Set top Box software   15 refs",Effort estimation for architectural refactoring to introduce module isolation,"['digital television', 'graph theory', 'program diagnostics', 'query processing', 'set-top boxes', 'software architecture', 'software maintenance', 'software quality', 'software reusability', 'architectural refactoring', 'effort estimation', 'module isolation', 'software architecture decomposition', 'modular units', 'quality concerns', 'functional concerns', 'quality attributes', 'quantitative estimations', 'scalable analysis', 'module dependency', 'graph database', 'reusable query templates', 'code base', 'commercial digital TV software', 'set-top box software', 'Software engineering techniques', 'Diagnostic, testing, debugging and evaluating systems', 'Communications computing']","['O ztu rk, F', '', '', ' Sarili, E', '', '', ' So zer, H', '', '', ' Aktemur, B', '', '']","Vestel Electron , Manisa, Turkey  2  Dept  of Comput  Sci , Ozyegin Univ , Istanbul, Turkey",2014,ECSA
1075,1076,"The demographics of the western world is changing  people are getting older and as a partial consequence get an increasing number of chronic diseases such as diabetes, chronic obstructive pulmonary disease  COPD , and coronary disease  At the same time, healthcare systems are stressed for resources, health centers are getting larger and more distributed, and the number of healthcare professionals does not follow the trend in chronic diseases  All of this leads to a need for telemedical and mobile health applications  In a Danish context, these applications are often developed through local  innovative  initiatives with little regards for national and global  standardization  initiatives  A reason for this discrepancy is that the software architecture for national  and global  systems and standards are hard to understand, hard to develop systems based on, and hard to deploy  To counter this, we propose a software ecosystem approach for telemedicine applications, providing a framework, Net4Care, encapsulating national global design decisions with respect to standardization while allowing for local innovation  This paper presents an analysis of existing systems, of requirements for a software ecosystem for telemedicine, and a summary of initial design decisions for the Net4Care framework    2012 IEEE   15 refs",Net4Care  Towards a mission critical software ecosystem,"['Design', 'Health care', 'Pulmonary diseases', 'Software architecture', 'Standardization', 'Telemedicine', 'Chronic disease', 'Chronic obstructive pulmonary disease', 'Coronary disease', 'Design decisions', 'Existing systems', 'Health care professionals', 'Health centers', 'Health-care system', 'Initial design', 'Mission critical softwares', 'Mobile health application', 'Software ecosystems', 'Telemedicine application', 'Occupational Diseases', 'Codes and Standards', 'Computer Programming', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television', 'Health Care', 'Ecology and Ecosystems', 'Structural Design']","['Christensen, Henrik Brbak', '', '', 'Hansen, Klaus Marius']","Computer Science, Aarhus University, Aarhus, Denmark  2  Computer Science  DIKU , University of Copenhagen, Copenhagen, Denmark",2012,ECSA
1076,1077,"The demographics of the western world is changing  people are getting older and as a partial consequence get an increasing number of chronic diseases such as diabetes, chronic obstructive pulmonary disease  COPD , and coronary disease  At the same time, healthcare systems are stressed for resources, health centers are getting larger and more distributed, and the number of healthcare professionals does not follow the trend in chronic diseases  All of this leads to a need for telemedical and mobile health applications  In a Danish context, these applications are often developed through local  innovative  initiatives with little regards for national and global  standardization  initiatives  A reason for this discrepancy is that the software architecture for national  and global  systems and standards are hard to understand, hard to develop systems based on, and hard to deploy  To counter this, we propose a software ecosystem approach for telemedicine applications, providing a framework, Net4Care, encapsulating national global design decisions with respect to standardization while allowing for local innovation  This paper presents an analysis of existing systems, of requirements for a software ecosystem for telemedicine, and a summary of initial design decisions for the Net4Care framework    2012 IEEE   15 refs",Net4Care  Towards a mission critical software ecosystem,"['Design', 'Health care', 'Pulmonary diseases', 'Software architecture', 'Standardization', 'Telemedicine', 'Chronic disease', 'Chronic obstructive pulmonary disease', 'Coronary disease', 'Design decisions', 'Existing systems', 'Health care professionals', 'Health centers', 'Health-care system', 'Initial design', 'Mission critical softwares', 'Mobile health application', 'Software ecosystems', 'Telemedicine application', 'Occupational Diseases', 'Codes and Standards', 'Computer Programming', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television', 'Health Care', 'Ecology and Ecosystems', 'Structural Design']","['Christensen, Henrik Brbak', '', '', 'Hansen, Klaus Marius']","Computer Science, Aarhus University, Aarhus, Denmark  2  Computer Science  DIKU , University of Copenhagen, Copenhagen, Denmark",2012,WICSA
1077,1078,"The development of a single software product is inefficient when groups of product are related since the development cost could be high  In addition, some products need to be self adaptive in order to take into account the execution context changes  In this case, the implementation and management of the adaptation mechanisms variability is challenging especially for distributed systems due to the distribution issues  We address in this paper such issues by proposing a method for the software engineering of distributed adaptation systems  We propose an architectural model for distributed management of dynamic adaptation  We define also a graph grammar based approach to automate the tasks needed to construct and configure the adaptation system    2013 Springer Verlag   3 refs",Towards automated deployment of distributed adaptation systems,"['Context sensitive grammars', 'Graph theory', 'Software architecture', 'Adaptation mechanism', 'Architectural models', 'Automated deployment', 'Distributed adaptation', 'Distributed management', 'Dynamic adaptations', 'Graph grammar', 'Software architectural', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory']","['Zouari, Mohamed', ' ,', '', ' Bouassida Rodriguez, Ismael', ' ,', ',', '']","CNRS, LAAS, 7 Avenue du Colonel Roche, F 31400 Toulouse, France  2  Univ  de Toulouse, LAAS, F 31400 Toulouse, France  3  ReDCAD, University of Sfax, B P  1173, 3038 Sfax, Tunisia",2013,ECSA
1078,1079,"The development of adaptive user interfaces has traditionally been restricted to research prototypes and few commercial products  Although there have been relevant achievements in the architectural support for self adaptive context aware systems  3,19 , the notion of context commonly supported is restricted and does not explicitly contemplate the facets of context related to user application interaction  Furthermore, applications need to comply with the proposed architectures, making the incorporation of adaptivity more difficult  or not possible at all  in the case of already existing applications  This work addresses key issues for the incorporation of self adaptive behaviour in GUI Based applications, and proposes an aspect based framework in order to overcome current limitations    Springer Verlag Berlin Heidelberg 2007   21 refs",Enabling adaptivity in user interfaces,"['Adaptive systems', 'Human computer interaction', 'Software architecture', 'Software prototyping', 'Adaptive user interfaces', 'Research prototypes', 'Computer Peripheral Equipment', 'Computer Programming', 'Computer Applications', 'Control Systems']","['C mara, Javier', '', '', 'Canal, Carlos', '', '', 'Cubo, Javier', '', '', 'Murillo, Juan Manuel']","Department of Computer Science, University of M laga, Campus de Teatinos, 29071  M laga, Spain  2  Dept  of Computer Science, University of Extremadura, Avda  de la Universidad s n, 10071  C ceres, Spain",2007,ECSA
1079,1080,"The development of adaptive user interfaces has traditionally been restricted to research prototypes and few commercial products  Although there have been relevant achievements in the architectural support for self adaptive context aware systems  3,19 , the notion of context commonly supported is restricted and does not explicitly contemplate the facets of context related to user application interaction  Furthermore, applications need to comply with the proposed architectures, making the incorporation of adaptivity more difficult  or not possible at all  in the case of already existing applications  This work addresses key issues for the incorporation of self adaptive behaviour in GUI Based applications, and proposes an aspect based framework in order to overcome current limitations    Springer Verlag Berlin Heidelberg 2007   21 refs",Enabling adaptivity in user interfaces,"['Adaptive systems', 'Human computer interaction', 'Software architecture', 'Software prototyping', 'Adaptive user interfaces', 'Research prototypes', 'Computer Peripheral Equipment', 'Computer Programming', 'Computer Applications', 'Control Systems']","['C mara, Javier', '', '', 'Canal, Carlos', '', '', 'Cubo, Javier', '', '', 'Murillo, Juan Manuel']","Department of Computer Science, University of M laga, Campus de Teatinos, 29071  M laga, Spain  2  Dept  of Computer Science, University of Extremadura, Avda  de la Universidad s n, 10071  C ceres, Spain",2008,ECSA
1080,1081,"The development of adaptive user interfaces has traditionally been restricted to research prototypes and few commercial products  Although there have been relevant achievements in the architectural support for self adaptive context aware systems  3,19 , the notion of context commonly supported is restricted and does not explicitly contemplate the facets of context related to user application interaction  Furthermore, applications need to comply with the proposed architectures, making the incorporation of adaptivity more difficult  or not possible at all  in the case of already existing applications  This work addresses key issues for the incorporation of self adaptive behaviour in GUI based applications, and proposes an aspect based framework in order to overcome current limitations   21 refs",Enabling adaptivity in user interfaces,"['graphical user interfaces', 'adaptive user interfaces', 'self-adaptive context-aware systems', 'user-application interaction', 'GUI-based applications', 'Graphical user interfaces']","['Camara, J', '', '', ' Canal, C', '', '', ' Cube, J', '', '', ' Murillo, J M']","Dept  of Comput  Sci , Univ  of Malaga, Malaga, Spain",2007,ECSA
1081,1082,"The development of adaptive user interfaces has traditionally been restricted to research prototypes and few commercial products  Although there have been relevant achievements in the architectural support for self adaptive context aware systems  3,19 , the notion of context commonly supported is restricted and does not explicitly contemplate the facets of context related to user application interaction  Furthermore, applications need to comply with the proposed architectures, making the incorporation of adaptivity more difficult  or not possible at all  in the case of already existing applications  This work addresses key issues for the incorporation of self adaptive behaviour in GUI based applications, and proposes an aspect based framework in order to overcome current limitations   21 refs",Enabling adaptivity in user interfaces,"['graphical user interfaces', 'adaptive user interfaces', 'self-adaptive context-aware systems', 'user-application interaction', 'GUI-based applications', 'Graphical user interfaces']","['Camara, J', '', '', ' Canal, C', '', '', ' Cube, J', '', '', ' Murillo, J M']","Dept  of Comput  Sci , Univ  of Malaga, Malaga, Spain",2008,ECSA
1082,1083,"The documentation of architecture and design decisions lies at the backbone of building a comprehensive architectural knowledge basis within a company  As a consequence, a plethora of supporting frameworks has been lately proposed by the research community  The existing frameworks focus on capturing the rationale that lies behind a certain decision, but less on sustaining the collaborative process that architects employ when making decisions  In this paper, we propose an innovative architectural decision making process that sustains the collaboration of architects, the timely notification of involved stakeholders, the inclusion of feedback cycles to improve the overall quality of the architecting process and a tag based traceability system that leverages informal learning  The analysis of the current state of the practice in the industry has been conducted within various workshops and interviews with our industry cooperation partner   the software provider of one of the biggest insurance trusts worldwide  Based on these results, we have identified various improvement potentials that are still not addressed by existing research in the field    2014 IEEE   23 refs","Systematic architectural decision management, a process based approach","['Software architecture', 'Architectural decision', 'Architecture decisions', 'collaboration', 'Feedback cycle', 'Process-based', 'Computer Programming', 'Management']","['Dragomir, Ana', '', '', 'Lichter, Horst', '', '', 'Budau, Tiberiu']","RWTH Aachen University, Research Group Software Construction, Aachen, Germany",2014,WICSA
1083,1084,"The durability of truncated octahedral Pt3Ni  t,o Pt3Ni  electrocatalysts in the oxygen reduction reaction  ORR  was investigated by using an accelerated durability testing procedure  The Pt3Ni C catalyst lost 21  of its initial electrochemical surface area  ECSA  and 40  of the mass current density  0 55 to 0 33AmgPt 1  after 30000 potential cycles under acidic conditions  In comparison, the reference commercial Pt C catalyst lost 44  of its initial ECSA and had a final mass specific activity of only 0 09AmgPt 1 under identical testing conditions  This study shows the potentials of this class of Pt3Ni C nanostructures as highly active and durable ORR catalysts    2012 WILEY VCH Verlag GmbH   Co  KGaA, Weinheim   47 refs",Study of the Durability of Faceted Pt3Ni Oxygen Reduction Electrocatalysts,"['Durability', 'Electrocatalysis', 'Electrocatalysts', 'Fuel cells', 'Nickel', 'Oxygen', 'Reduction', 'Acidic conditions', 'Electrochemical surface area', 'Oxygen reduction reaction', 'Oxygen reductions', 'Potential cycles', 'Testing conditions', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Fuel Cells', 'Nickel', 'Precious Metals', 'Strength of Building Materials  Mechanical Properties']","['Wu, Jianbo', ' ,', '', ' Yang, Hong', ' ,', '']","University of Rochester, Department of Chemical Engineering, Gavett Hall 206, Rochester, NY 14627, United States  2  University of Illinois at Urbana Champaign, Department of Chemical and Biomolecular Engineering, 600 S  Mathews Ave, Urbana, IL 61801, United States",2012,ECSA
1084,1085,"The dynamic generation of context aware applications for the ubiquitous Web is very time consuming and causes significant server load  Therefore, optimizing the efficiency of the publishing process and reducing server load by dynamically configuring system components are key factors for the commercial success of context aware Web applications  To meet this challenge, this paper presents a framework that dynamically adjusts the architecture of pipeline based context aware Web systems either by adapting or omitting server tasks, distributing load within server clusters, or migrating load to client devices  The system adaptation and distribution are performed according to varying load rates and system context states that are monitored permanently  Furthermore, the paper also presents experiences gained by the implementation of prototypes and illustrates several useful application scenarios that are supported by the proposed mechanisms    2007 IEEE   21 refs",Adaptation and distribution of pipeline based context aware web architectures,"['Adaptive systems', 'Context sensitive languages', 'Distribution functions', 'Optimization', 'Ubiquitous computing', 'World Wide Web', 'Context-aware Web systems', 'Dynamically configuring system', 'Ubiquitous Web', 'Web architectures', 'Probability Theory', 'Optimization Techniques', 'Computer Applications', 'Artificial Intelligence', 'Computer Programming Languages', 'Computer Programming', 'Telecommunication  Radar, Radio and Television']","['Hinz, Michael', '', '', 'Pietschmann, Stefan', '', '', 'Umbach, Matthias', '', '', 'Meiner, Klaus']","Dresden University of Technology, Department of Computer Science, D 01062 Dresden, Germany",2007,WICSA
1085,1086,"The dynamic generation of context aware applications for the ubiquitous Web is very time consuming and causes significant server load  Therefore, optimizing the efficiency of the publishing process and reducing server load by dynamically configuring system components are key factors for the commercial success of context aware Web applications  To meet this challenge, this paper presents a framework that dynamically adjusts the architecture of pipeline based context aware Web systems either by adapting or omitting server tasks, distributing load within server clusters, or migrating load to client devices  The system adaptation and distribution are performed according to varying load rates and system context states that are monitored permanently  Furthermore, the paper also presents experiences gained by the implementation of prototypes and illustrates several useful application scenarios that are supported by the proposed mechanisms   21 refs",Adaptation and distribution of pipeline based context aware Web architectures,"['Internet', 'ubiquitous computing', 'pipeline-based context-aware Web architectures', 'ubiquitous Web', 'server tasks', 'server clusters', 'Distributed systems software', 'Information networks']","['Hinz, M', '', '', ' Pietschmann, S', '', '', ' Umbach, M', '', '', ' Meissner, K', '', '']","Dept  of Comput  Sci , Dresden Univ  of Technol , Dresden, Germany",2007,WICSA
1086,1087,"The ecosystem for a software product line includes all of the entities with which the software product line organization interacts  Information, artifacts, customers, money and products move among these entities as a part of the planning, development, and deployment processes  In this paper we present an analysis technique that uses the economic notion of a transaction to examine the transfers between the entities  The result of the analysis is data that is used to evaluate and structure the organization  We illustrate with an example    2010 ACM   10 refs",A method for analyzing software product line ecosystems,"['Ecosystems', 'Technical presentations', 'Analysis techniques', 'Deployment process', 'Software ecosystems', 'Software Product Line', 'Ecology and Ecosystems', 'Computer Programming', 'Information Dissemination']","['McGregor, John D', '', '']","School of Computing, Clemson University, Clemson, SC 29634, United States",2010,ECSA
1087,1088,"The effect of ppm levels of chloride ions on a carbon supported platinum catalyst was examined using an ex situ electrochemical quartz crystal microbalance  EQCM  method  The dissolution of Pt as chloride complexes and the adsorption of chloride ions resulted in a loss of electrochemical surface area  ECSA  by 4 , 7  and 13  for the respective chloride concentrations of 500 ppm, 1000 ppm and 2000 ppm  Catalyst durability was examined by cyclic voltammetry  CV  and scanning electron microscopy  SEM  in the presence of 1000 ppm chloride  The beginning of life  BOL  ECSA of 8 1 cm2 cm 2 was significantly reduced to an end of life  EOL  ECSA of 3 2 cm2 cm 2 after cycling in the presence of 1000 ppm chloride  Crown Copyright   2012 Published by Elsevier B V  All rights reserved   11 refs",Ex situ study of chloride contamination on carbon supported Pt catalyst,"['Adsorption', 'Catalysts', 'Cyclic voltammetry', 'Fuel cells', 'Platinum', 'Platinum compounds', 'Quartz crystal microbalances', 'Scanning electron microscopy', 'A-carbon', 'Beginning of lives', 'Chloride complexes', 'Chloride concentrations', 'Chloride contamination', 'Chloride ions', 'Electrochemical quartz crystal microbalance', 'Electrochemical surface area', 'End of lives', 'Ex situ', 'Polymer electrolyte membrane', 'Supported Pt', 'Electric Variables Measurements', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Special Purpose Instruments', 'Chemical Operations', 'Fuel Cells', 'Precious Metals', 'Light Optics']","['Lam, Alfred', ' ,', '', ' Li, Hui', '', '', 'Zhang, Shengsheng', '', '', 'Wang, Haijiang', '', '', 'Wilkinson, David P', '', ',', '', ' Wessel, Silvia', '', '', 'Cheng, Tommy T H', '', '']","Chemical and Biological Engineering and Clean Energy Research Centre, University of British Columbia, 2360 East Mall, Vancouver, BC, V6T 1Z3, Canada  2  National Research Council of Canada, 4250 Wesbrook Mall, Institute for Fuel Cell Innovation, Vancouver, BC, V6T 1W5, Canada  3  Ballard Power Systems, Inc , 9000 Glenlyon Parkway, Burnaby, BC, V5J 5J8, Canada",2012,ECSA
1088,1089,"The effect of the ionomer content in the catalyst layers of both the anode and the cathode with the black catalyst on the performance of a passive DMFC was investigated in order to increase the power output of the passive DMFC  In situ cyclic voltammetry has been carried out to evaluate the electrochemically active surface area, ECSA and the catalyst utilization  Under the passive conditions, ionomer content had a significant effect on both the mass transport and the ECSA  The optimum ionomer content was affected by the operating current density whether at anode or at cathode  Under low current density region, i e , activation over voltage region, 20 wt   showed the highest performance at the anode and the cathode, and the cell performance in this region was varied in accordance with the results of the ECSA  Under high current density region, i e , mass transport over voltage region, lower ionomer content, 10 and 15 wt  , had the highest cell performance at the anode and the cathode, respectively  The decrease in the optimum ionomer content at high current density was related to the low mass transport of methanol at the anode, and the flooding at the cathode at the high ionomer contents  The optimum ionomer content whether at anode or at cathode was 20 wt  , from the power density point of view  The catalyst utilization was 10  and 25  at optimum conditions at the cathode and the anode respectively    2010 Elsevier B V  All rights reserved   44 refs",Effect of black catalyst ionomer content on the performance of passive DMFC,"['Current density', 'Cyclic voltammetry', 'Mass transfer', 'Methanol', 'Catalyst layers', 'Catalyst utilization', 'Cell performance', 'Electrochemically active surface areas', 'High current densities', 'In-situ', 'Low current density', 'Low mass', 'Mass transport', 'Nafion ionomer content', 'Nafion ionomers', 'Operating currents', 'Optimum conditions', 'Over-voltages', 'Passive DMFC', 'Power densities', 'Power out put', 'Electric Variables Measurements', 'Organic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Electrochemistry', 'Electricity  Basic Concepts and Phenomena', 'Mass Transfer']","['Abdelkareem, Mohammad Ali', '', '', 'Tsujiguchi, Takuya', '', '', 'Nakagawa, Nobuyoshi']","Advanced Technology Centre  ATEC , Gunma University, 1 5 1 Tenjin, Kiryu, Gunma, 375 8515, Japan  2  Department of Chemical and Environmental Engineering, Gunma University, 1 5 1 Tenjin, Kiryu, Gunma, 375 8515, Japan",2010,ECSA
1089,1090,"The effects of cathode GDL variation on segmented cell performance were investigated using polarization analysis, AC impedance, and cyclic voltammetry  Three different SGL SIGRACET reg materials were used with markedly different PTFE treatments operating under 100  100  and 50  50   anode cathode  relative humidity  RH  conditions  The total cell performance varied little under both wet and dry operating conditions for three different GDL types, but performance differences were observed for individual segments based on polarization and AC impedance data  When the different GDL types were arranged in a mixed configuration, an improvement over the base case GDL 24BC  5 23 wt  PTFE substrate MPL  of 11  and 8  in current density at 0 6 V was seen for wet and dry conditions, respectively  When the three different GDL types were compared for ECSA loss after 300 operating hours, the GDL 24BC5  5 5 wt  PTFE substrate MPL  exhibited the largest decline, which was attributed to increased Pt particle agglomeration  The cell with the mixed configuration showed an ECSA decline comparable to GDL 24BC  5 23 wt  PTFE substrate MPL  and GDL 24DI  20 10 wt  PTFE substrate MPL   Therefore, it was demonstrated that moderate performance improvements can be realized by varying the in plane GDL type in relation to its flow field position without sacrificing durability   The Electrochemical Society   4 refs",In plane mass transport studies of GDL variation using the segmented cell approach,"['Agglomeration', 'Atmospheric humidity', 'Cyclic voltammetry', 'Electric impedance', 'Membranes', 'Platinum', 'Polarization', 'Proton exchange membrane fuel cells (PEMFC)', 'Protons', 'AC-impedance', 'Cell performance', 'In-plane', 'Operating condition', 'Operating hours', 'Performance improvements', 'Polarization analysis', 'Pt particle', 'Relative humidities', 'Segmented cell', 'Wet and dry', 'Materials Science', 'Electric Variables Measurements', 'High Energy Physics', 'Atomic and Molecular Physics', 'Physical Properties of Gases, Liquids and Solids', 'Chemical Operations', 'Electrochemistry', 'Light Optics', 'Electromagnetic Waves in Different Media', 'Fuel Cells', 'Electricity  Basic Concepts and Phenomena', 'Precious Metals', 'Atmospheric Properties']","['Wood, David', '', '', 'Mukundan, Rangachary', '', '', 'Borup, Rodney']","Los Alamos National Laboratory, Materials Physics and Applications, MPA 11, Los Alamos, NM 87545, United States",2009,ECSA
1090,1091,"The electro oxidation of methanol was studied in alkaline solution on Pd nanoparticles supported on carbon black  XC 72R, C  and TiO2 C composite  The materials were prepared via organic colloid route at 170 C with 5 wt  of Pd  X ray diffraction  XRD , PdO monolayer reduction  PdOred  and CO stripping was employed to characterize both structure and electrochemical properties  According to this, the lattice parameter decreases from 0 3991 to 0 3905 nm due to a possible formation of Pd Ti alloy  This modification is linked with the electrochemical active surface area  ECSA  decreasing from 22 to 18 m2 g 1  On the other hand, studies as a function of temperature and alcohol concentration indicated that the current for methanol electro oxidation is higher and more stable at Pd TiO2 C, with Ea   44 042 kJ mol 1  Then, it is highly possible that at Pd TiO2 C, the OH  OH ads couple is adsorbed at the TiO2 sites, increasing the kinetic of methanol oxidation reaction at the catalyst surface    2013 Published by Elsevier Ltd   31 refs",TiO2 C composite as a support for Pd nanoparticles toward the electrocatalytic oxidation of methanol in alkaline media,"['Electrocatalysis', 'Electrooxidation', 'Fuel cells', 'Nanoparticles', 'Titanium dioxide', 'X ray diffraction', 'Alcohol concentrations', 'Alkaline media', 'Alkaline solutions', 'Electro-catalytic oxidation', 'Electrochemical active surface areas', 'Methanol electrooxidation', 'Methanol Oxidation', 'Methanol oxidation reactions', 'Solid State Physics', 'Inorganic Compounds', 'Organic Compounds', 'Crystal Lattice', 'Chemical Reactions', 'Electric and Magnetic Materials', 'Fuel Cells', 'Nanotechnology']","['Estudillo Wong, L A', '', ',', '', ' Vargas G mez, A M', '', '', ' Arce Estrada, E M', '', '', ' Manzo Robledo, A', '', '']","Escuela Superior de Ingenier a Qu mica e Industrias Extractivas, Laboratorio de Electroqu mica y Corrosi n, ESIQIE IPN, Mexico, D F , Mexico  2  Departamento de Ingenier a Metal rgica, Escuela Superior de Ingenier a Qu mica e Industrias Extractivas, ESIQIE IPN, Mexico, D F , Mexico",2013,ECSA
1091,1092,"The electrochemical activity towards hydrogen oxidation reaction  HOR  of a high performance carbon supported Pt Ru electrocatalyst  HP 20 wt   1 1 Pt Ru alloy on Vulcan XC 72 carbon black  has been studied using the thin film rotating disk electrode  RDE  technique  The physical properties of the Pt Ru nanoparticles in the electrocatalyst were previously determined by transmission electron microscopy  TEM , high resolution TEM, fast Fourier transform  FFT , electron diffraction and X ray diffraction  XRD   The corresponding compositional and size shape analyses indicated that nanoparticles generally presented a 3D cubo octahedral morphology with about 26 at   Ru in the lattice positions of the face centred cubic structure of Pt  The kinetics for HOR was studied in a hydrogen saturated 0 5 M H2SO4 solution using thin film electrodes prepared by depositing an ink of the electrocatalyst with different Nafion contents in a one step process on a glassy carbon electrode  A maximum electrochemically active surface area  ECSA  of 119 m2 g Pt 1 was found for an optimum Nafion composition of the film of about 35 wt    The kinetic current density in the absence of mass transfer effects was 21 mA cm 2  A Tafel slope of 26 mV dec 1, independent of the rotation rate and Nafion content, was always obtained, evidencing that HOR behaves reversibly  The exchange current density referred to the ECSA of the Pt Ru nanoparticles was 0 17 mA cm 2, a similar value to that previously found for analogous inks containing pure Pt nanoparticles    2009 Elsevier B V  All rights reserved   53 refs",Structure of carbon supported Pt Ru nanoparticles and their electrocatalytic behavior for hydrogen oxidation reaction,"['Carbon black', 'Diffraction', 'Electrocatalysis', 'Electrocatalysts', 'Electrodes', 'Fast Fourier transforms', 'Glass membrane electrodes', 'High resolution transmission electron microscopy', 'Hydrogen', 'Ink', 'Kinetic parameters', 'Nanoparticles', 'Oxidation', 'Platinum', 'Rotating disks', 'Rotation', 'Ruthenium alloys', 'Thin film devices', 'Three dimensional', 'X ray diffraction', 'Cubo-octahedral morphology', 'Electrocatalytic behavior', 'Electrochemical activities', 'Electrochemically active surface areas', 'Exchange current densities', 'Face-centred cubic', 'Glassy carbon electrodes', 'High-resolution TEM', 'Hydrogen oxidation reaction', 'Kinetic currents', 'Lattice positions', 'Mass transfer effects', 'Nafion contents', 'One-step process', 'Pt nanoparticles', 'Pt-Ru nanoparticles', 'PtRu alloy', 'Rotating disk electrodes', 'Rotation rate', 'Shape analysis', 'Supported Pt', 'Tafel slopes', 'TEM', 'Thin-film electrode', 'Vulcan XC72', 'Electrochemistry', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Glass', 'Processing Agents', 'Engineering Graphics', 'Mathematical Transformations', 'Classical Physics  Quantum Theory  Relativity', 'Mechanics', 'Atomic and Molecular Physics', 'Solid State Physics', 'Crystal Lattice', 'Nanotechnology', 'Precious Metals', 'Mechanical Devices', 'Machine Components', 'Fluid Flow, General', 'Electric Components', 'Electric and Magnetic Materials', 'Electromagnetic Waves in Different Media', 'Thermionic Materials', 'Electron Tubes', 'Semiconductor Devices and Integrated Circuits', 'Computer Applications', 'Light Optics', 'Optical Devices and Systems']","['Vel zquez, Amado', '', '', 'Centellas, Francesc', '', '', 'Garrido, Jos', 'Antonio', '', '', 'Arias, Conchita', '', '', 'Rodr guez, Rosa Mar a', '', '', 'Brillas, Enric', '', '', 'Cabot, Pere Llu s']","Laboratori d Electroqu mica dels Materials i del Medi Ambient, Departament de Qu mica F sica, Universitat de Barcelona, Mart  i Franqu s 1 11, 08028 Barcelona, Spain",2010,ECSA
1092,1093,"The energy consumption of large IT infrastructures is becoming a major concern, since it represents one of the principal operation costs  While modern devices  e g , processors, disks  have the capability of reducing their power consumption by running at lower speed, this feature must be used with Care, as slowing down devices may increase the execution time of the applications beyond acceptable limits  In this paper we propose the qoS AWare energY managER  SAWYER , a framework for dynamically reducing the energy requirement of large scale applications subject to response time constraints  SAWYER identifies the optimal performance power consumption tradeoff such that the overall energy requirement is minimized and the application response time is kept below a pre defined maximum value  This is achieved using a control loop based on a greedy optimization strategy which uses a Queueing Network performance model to quickly evaluate different power settings, ensuring that the expected system response time is kept below the threshold  SAWYER is completely transparent and does not require any modification of the application itself  Copyright   2012 ACM   34 refs",Optimizing the energy consumption of large scale applications,"['Energy utilization', 'Network performance', 'Acceptable limit', 'Control loop', 'Energy managers', 'Energy requirements', 'Execution time', 'Greedy optimization', 'Green computing', 'IT infrastructures', 'Large-scale applications', 'Maximum values', 'Operation cost', 'Optimal performance', 'Power settings', 'QOS management', 'Response-time constraint', 'System response time', 'Energy Utilization', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Software, Data Handling and Applications', 'Optimization Techniques']","['Marzolla, Moreno']","Department of Computer Science, University of Bologna, Mura A  Zamboni 7, I 40126 Bologna, Italy",2012,QoSA
1093,1094,"The energy use is becoming a key design consideration in computing infrastructures and services  In this paper we focus on service based applications and we propose an adaptation process that can be used to reduce power consumption  This adaptation process is materialized in an adaptation plan which fits into a software architecture specifically designed for self adaptive systems  The adaptation plan guarantees a trade off between energy consumption and QoS offered, while maintaining suitable revenues for the service provider  The proposed approach is based on the principle of proportional energy consumption obtained by scaling down energy for unused resources, considering both the number of servers switched on and the operating frequencies of that servers    2011 ACM   13 refs",Enhancing a QoS based self adaptive framework with energy management capabilities,"['Adaptive systems', 'Energy utilization', 'Petri nets', 'Adaptation process', 'Computing infrastructures', 'Design considerations', 'energy', 'Energy use', 'Operating frequency', 'performance', 'Scaling down', 'Self-adaptive', 'Self-adaptive system', 'Service provider', 'Service-based', 'Stochastic Petri Nets', 'Energy Utilization', 'Computer Programming', 'Control Systems', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory']","['Perez Palacin, Diego', '', '', 'Mirandola, Raffaela', '', '', 'Merseguer, Jos', '', '']","Dpto  de Inform tica e Ingenier a de Sistemas, Universidad de Zaragoza, Zaragoza, Spain  2  Dip  di Elettronica e Informazione, Politecnico di Milano, Milano, Italy",2011,QoSA
1094,1095,"The execution context in which pervasive systems or mobile computing run changes continuously  Hence, applications for these systems should be adapted at run time according to the current context  In order to implement a context aware dynamic reconfiguration service, most approaches usually require to model at design time both the list of all possible configurations and the plans to switch among them  In this paper we present an alternative approach for the automatic run time generation of application configurations and the reconfiguration plans  The generated configurations are optimal regarding different criteria, such as functionality or resource consumption  e g  battery or memory   This is achieved by   1  modelling architectural variability at design time using Common Variability Language  CVL , and  2  using a genetic algorithm that finds at run time nearly optimal configurations using the information provided by the variability model  We also specify a case study and we use it to evaluate our approach, showing that it is efficient and suitable for devices with scarce resources    2013 Springer Verlag   22 refs",Run time support to manage architectural variability specified with CVL,"['Dynamic models', 'Software architecture', 'Ubiquitous computing', 'Architectural variability', 'Context', 'CVL', 'Dynamic re-configuration', 'Pervasive systems', 'Computer Programming', 'Computer Applications', 'Mathematics']","['Pascual, Gustavo G', '', ',', '', ' Pinto, M nica', ' ,', '', ' Fuentes, Lidia', ' ,', '']","Departamento de Lenguajes Y Ciencias de la Computaci n, University of M laga, M laga, Spain  2  CAOSD Group, Spain",2013,ECSA
1095,1096,"The explicit documentation of the rationale of design decisions is a practice generally encouraged, but rarely implemented in industry because of a variety of inhibitors  Methods proposed in the past for Design Decisions Rationale Documentation  DDRD  aimed to maximize benefits for the DDRD consumer by imposing on the producer of DDRD the burden to document all the potentially useful information  We propose here a compromise which consists in tailoring DDRD, based on its intended use or purpose  In our view, the adoption of a tailored DDRD, consisting only of the required set of information, would mitigate the effects of DDRD inhibitors  The aim of this paper is twofold  i  to discuss the application of Value Based Software Engineering principles to DDRD, ii  to describe a controlled experiment to empirically analyze the feasibility of the proposed method  Results show that the level of utility related to the same category of DDRD information significantly changes depending on its purpose  such result is novel and it demonstrates the feasibility of the proposed valuebased DDRD    2008 IEEE   17 refs",Value Based Design Decision Rationale Documentation  Principles and empirical feasibility study,"['Data structures', 'Decision making', 'Planning', 'Resource allocation', 'Software engineering', 'Technology', 'Controlled experiments', 'Design decisions', 'Feasibility studies', 'Software engineering principles', 'Value-based', 'Computer Programming', 'Data Processing and Image Processing', 'Engineering Profession', 'Management']","['Falessi, Davide', '', '', 'Cantone, Giovanni', '', '', 'Kruchten, Philippe']","University of Roma Tor Vergata, DISP, Rome, Italy  2  University of British Columbia, ECE, Vancouver, Canada",2008,WICSA
1096,1097,"The exploration of online social ecosystems whose members share mutual recommendations and interactions is a time dependent and contextual based process which aims to predict the social status among them  To address the difficulties associated with the process, this article presents the integration of the predictive recommender, social networks, and interaction components into a single methodology  The originality of the proposed framework stems from developing each model based on   1  a time history and decay algorithm to consider temporal recommendations and interactions   2  a predictive aggregating function for different types of social contexts  and,  3  a homophily algorithm to evaluate people s interconnections proximity  Details of the framework are described, a recommender search strategy methodology integrating all of the above is devised, and a case study is used to demonstrate its capabilities  Possible extensions are then outlined    2010 ACM   15 refs",Integrating recommender information in social ecosystems decisions,"['Ecosystems', 'Integration', 'Network architecture', 'Social networking (online)', 'Technical presentations', 'Homophily', 'Model-based', 'Recommender systems', 'Search strategies', 'Social context', 'Social ecosystems', 'Social Networks', 'Social status', 'Time history', 'Time-dependent', 'Ecology and Ecosystems', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Calculus']","['Capuru o, Renato A', 'C', '', '', ' Capretz, Luiz F', '', '']","University of Western Ontario, Dept  of Electrical and Computer Engineering, London, ON N6A 5B9, Canada",2010,ECSA
1097,1098,"The first European Conference on Software Architecture  ECSA  2007  held in Aranjuez, Spain received 62 paper submissions, where finally the research of only five papers were presented  These papers were exhibited during sessions as architecture description and evolution, architecture analysis, architecture based approaches and applications, challenges in software architecture, and service oriented architectures  Professor David Garlan, from Carneige Mellon University in his keynote exposed the need to use high level architectural descriptions to achieve task oriented computing  Some sessions presented showed the inspiration by aspect oriented concepts, while others were directly supported by model driven techniques  The conference also presented sixteen posters devoted to different topics, with a variety of approaches, their nature, as well as their intertwining of their topics  The ECSA series of conference is expected to be continued for years to build on the cooperation in the industry   1 refs",A report on the first european conference on software architecture  ECSA 2007,"['Architecture', 'Information services', 'Paper', 'Architectural descriptions', 'Architecture analysis', 'Architecture descriptions', 'Aspect-oriented concepts', 'Model-driven techniques', 'Service-oriented architectures', 'Buildings and Towers', 'Computer Programming', 'Computer Applications', 'Pulp and Paper', 'Information Services']","['Cuesta, Carlos E', '', '', ' Marcos, Esperanza']","Kybele, Dept  Comp  Lang  and Syst  II, Rey Juan Carlos University, M stoles 28933 Madrid, Spain",2008,ECSA
1098,1099,The following topic is dealt with  software architecture,"Software Architecture  Second European Conference, ECSA 2008","['software architecture', 'software architecture', 'General and management topics', 'Software engineering techniques']","['Springer Verlag,', '', '', ' ISBN', '', '', '', '', '', '', '', '', '', '', '', 'Conference', 'Software Architecture', 'Second European Conference, ECSA', '', ' ,', '', 'Sept', '', 'Oct', '', '', ', Paphos, Cyprus', 'Publisher', 'Springer Verlag, Berlin, Germany']",None,2008,ECSA
1099,1100,The following topics are dealt with  architecture description languages  ontologies  architectural models  architecture transformation  model driven architecture  requirements engineering  software architectures  service oriented architecture  Web services  product line architecture  and enterprise systems,2009 Joint Working IEEE IFIP Conference on Software Architecture  WICSA    3rd European Conference on Software Architecture  ECSA,"['ontologies (artificial intelligence)', 'software architecture', 'Web services', 'architecture description languages', 'ontologies', 'architectural models', 'architecture transformation', 'model-driven architecture', 'requirements engineering', 'software architectures', 'service-oriented architecture', 'Web services', 'product-line architecture', 'enterprise systems', 'General and management topics', 'Software engineering techniques', 'Distributed systems software', 'Knowledge engineering techniques', 'Business and administrative computing']","['IEEE,', '', ' pp,', '', '', ' ISBN', '', '', '', '', '', '', '', '', '', '', '', 'Conference', '', '', ' Joint Working IEEE IFIP Conference on Software Architecture', 'WICSA', '', ' rd European Conference on Software Architecture', 'ECSA ,', '', '', ' Sept', '', '', ', Cambridge, UK', 'Publisher', 'IEEE, Piscataway, NJ, USA']",None,2009,ECSA
1100,1101,The following topics are dealt with  software architecture  architectural patterns  design patterns  ADL  architectural metamodels  architectural design decision making  software architecture conformance  software architecture quality  architectural repair  and architectural adaptation,"Software Architecture  7th European Conference, ECSA 2013  Proceedings  LNCS 7957","['decision making', 'object-oriented methods', 'software architecture', 'software maintenance', 'software quality', 'architectural adaptation', 'architectural repair', 'software architecture quality', 'software architecture conformance', 'architectural design decision-making', 'architectural metamodels', 'ADL', 'design patterns', 'architectural patterns', 'software architecture', 'General and management topics', 'Software engineering techniques', 'Object oriented programming']","['Editors', 'Drira, K', '', '']",None,2013,ECSA
1101,1102,The following topics are dealt with  software architecture  architecture decisions and knowledge  architecture patterns and anti patterns  architecture description languages  enterprise architecture  SOA  cloud computing  component software  connector software  quality attributes  and architecture analysis and verification,Software Architecture  8th European Conference  ECSA 2014   Proceedings  LNCS 8627,"['cloud computing', 'object-oriented programming', 'program verification', 'service-oriented architecture', 'software quality', 'software architecture', 'architecture decisions', 'architecture knowledge', 'architecture patterns', 'architecture anti-patterns', 'architecture description languages', 'enterprise architecture', 'SOA', 'cloud computing', 'component software', 'connector software', 'quality attributes', 'architecture analysis', 'architecture verification', 'General and management topics', 'Software engineering techniques', 'Business and administrative computing', 'Diagnostic, testing, debugging and evaluating systems', 'Information networks', 'Internet software', 'Object oriented programming']","['Editors', 'Avgeriou, P', '', '', ' Zdun, U', '', '']",None,2014,ECSA
1102,1103,The following topics are dealt with  software architecture  product lines  nonfunctional attributes  service oriented architecture  architectural decision  software architecture documentation  architectural model  architectural knowledge  decision making  enterprise  software evolution  software variability  and software requirement   0 refs,2012 Joint Working IEEE IFIP Conference on Software Architecture  WICSA 2012    European Conference on Software Architecture  ECSA 2012,"['business data processing', 'decision making', 'formal specification', 'product development', 'software architecture', 'software maintenance', 'software reusability', 'system documentation', 'product lines', 'nonfunctional attributes', 'service-oriented architecture', 'architectural decision', 'software architecture documentation', 'architectural model', 'architectural knowledge', 'decision making', 'enterprise', 'software evolution', 'software variability', 'software requirement', 'General and management topics', 'Software engineering techniques', 'Business and administrative computing', 'Formal methods', 'Software management']","['IEEE Computer Society, viii', '', ' pp,', '', '', ' ISBN', '', '', '', '', '', '', '', '', '', '', '', 'Conference', '', '', ' Joint Working IEEE IFIP Conference on Software Architecture', 'WICSA', '', '', '', ' European Conference on Software Architecture', 'ECSA', '', '', ',', '', '', ' Aug', '', '', ', Helsinki, Finland', 'Sponsor', 'Comput', 'Soc', ' Publisher', 'IEEE Computer Society, Los Alamitos, CA, USA']",None,2012,WICSA
1103,1104,The following topics are dealt with  software architecture  software development  requirements modeling  software refactoring  service oriented architecture and product line architecture,2007 Working IEEE IFIP Conference on Software Architecture  WICSA 07,"['software architecture', 'software architecture', 'software development', 'requirements modeling', 'software refactoring', 'service-oriented architecture', 'product line architecture', 'General and management topics', 'Software engineering techniques']","['IEEE,', '', '', ' ISBN', '', '', '', '', '', '', '', '', '', 'Conference', '', '', ' Working IEEE IFIP Conference on Software Architecture', 'WICSA', '', ',', '', ' Jan', '', '', ', Mumbai, India', 'Publisher', 'IEEE, Piscataway, NJ, USA']",None,2007,WICSA
1104,1105,The following topics are dealt with  software architecture  software patterns and styles  system requirements analysis and design  architecture and organisational management  architecture documentation framework  generation and transformation  architecture and adaptation   0 refs,2008 7th Working IEEE IFIP Conference on Software Architecture  WICSA  08,"['object-oriented programming', 'software architecture', 'software development management', 'system documentation', 'software architecture', 'software patterns', 'requirements analysis', 'system design', 'architecture documentation framework', 'organisational management', 'General and management topics', 'Software engineering techniques', 'Object oriented programming', 'Software management']","['IEEE,', '', '', ' ISBN', '', '', '', '', '', '', '', '', '', '', '', 'Conference', '', '', '', 'th Working IEEE IFIP Conference on Software Architecture', 'WICSA', '', ' ,', '', '', ' Feb', '', '', ', Vancouver, BC, Canada', 'Publisher', 'IEEE, Piscataway, NJ, USA']",None,2008,WICSA
1105,1106,The following topics are dealt with  software architecture  task oriented computing  software engineering   0 refs,"Software Architecture  First European Conference, ECSA 2007","['software architecture', 'software architecture', 'task-oriented computing', 'software engineering', 'General and management topics', 'Software engineering techniques']","['Editors', 'Oquendo, F']",None,2007,ECSA
1106,1107,The following topics are dealt with  software architecture  task oriented computing  software engineering   0 refs,"Software Architecture  First European Conference, ECSA 2007","['software architecture', 'software architecture', 'task-oriented computing', 'software engineering', 'General and management topics', 'Software engineering techniques']","['Editors', 'Oquendo, F']",None,2008,ECSA
1107,1108,The following topics are dealt with  software architecture conformance  software design patterns  software model  architectural metamodels  ADL  architectural design decision making  software quality  and software architectural repair,"Software Architecture  7th European Conference, ECSA 2013  Proceedings  LNCS 7584","['decision making', 'software architecture', 'software quality', 'software design patterns', 'software model', 'architectural metamodels', 'ADL', 'architectural design decision-making', 'software quality', 'software architectural repair', 'software architecture conformance', 'General and management topics', 'Software engineering techniques']","['Editors', 'Drira, K', '', '']",None,2013,ECSA
1108,1109,The following topics are discussed  software quality  software architecture  and performance prediction,"Quality of Software Architectures  Second International Conference on Quality of Software Architectures, QoSA 2006  Revised Papers  Lecture Notes in Computer Science Vol 4214","['software architecture', 'software performance evaluation', 'software quality', 'software quality', 'software architecture', 'performance prediction', 'General and management topics', 'Systems analysis and programming']","['Editors', 'Hofmeister, C', ' Crnkovic, I', ' Reussner, R']",None,2006,QoSA
1109,1110,"The generation of performance models from architectural models has been tackled with well founded approaches in the last decade, whereas there is a clear lack of automation in the backward path that brings the analysis results back to the software architecture  It is common to iteratively modify a  generated  performance model until performance indices meet the requirements  However, propagating the performance model modifications back to the original architectural model is a complex problem  In this paper we make a first step in this direction, in that we use the JTL language for specifying a bidirectional model transformation between UML models and Queueing Networks, so working towards an automated round trip process between software architectural models and performance models1  Copyright   2012 ACM   21 refs",Performance driven architectural refactoring through bidirectional model transformations,"['Software architecture', 'Unified Modeling Language', 'Architectural models', 'Bidirectional model transformation', 'Bidirectional transformation', 'Complex problems', 'Performance indices', 'Performance Model', 'Performance Modeling', 'Performance-driven', 'Refactorings', 'Software architectural', 'UML Model', 'Computer Software, Data Handling and Applications', 'Mathematics']","['Cortellessa, Vittorio', '', '', 'Eramo, Romina', '', '', 'Pierantonio, Alfonso', '', '', 'Tucci, Michele']","Dipartimento di Informatica, Universit  degli Studi dell Aquila, Via Vetoio, Coppito, 67010, L Aquila, Italy",2012,QoSA
1110,1111,"The global convergence of elitist clonal selection algorithm  ECSA  in additive noisy environment is studied by using stochastic process  The Markov chain that models ECSA in noisy environment is constructed by a new state representation method named ordered pair  The evolutionary sequence best fitness functions is described as a submartingale, and the global convergence of the best fitness functions is derived based on martingale theory  The transition probability characteristics of the clonal selection algorithm in additive noisy environment are analyzed  by this property we conclude that ECSA is eventually globally convergent with probability 1 in additive noisy environment   16 refs",Convergence analysis of elitist clonal selection algorithm in noisy environment,"['Markov processes', 'Probability', 'Best fitness function', 'Clonal selection algorithms', 'Convergence analysis', 'Elitist strategies', 'Globally convergent', 'Martingale theory', 'State representation', 'Transition probabilities', 'Computer Software, Data Handling and Applications', 'Mathematics', 'Probability Theory']","['Hong, Lu', '', '', 'Gong, Cheng Long', '', '', 'Wang, Jing Zhuo', '', '', 'Ji, Zhi Cheng']","School of Electronic Engineering, Huaihai Institute of Technology, Lianyungang Jiangsu 222005, China  2  Institute of Internet of Things Engineering, Jiangnan University, Wuxi Jiangsu 214122, China",2013,ECSA
1111,1112,"The goal of the Doctoral Symposium is to provide PhD students working in the area of software architecture the opportunity to present their research and to receive immediate and expert feedback for the successful completion of their dissertation research  Therefore, the ECSA 2010 Doctoral Symposium enables participants to sustain and discuss their ideas, methods, and preliminary results with senior researchers of the software architecture community in a constructive, friendly, and professional context  The PhD students receive guidance and feedback on various aspects of their research both from experienced researches and from their PhD colleagues  It is an opportunity for students to meet and know each other in order to establish new contacts for possible common research topics and projects    2010 ACM",Doctoral Symposium of the European Conference on Software Architecture 2010,"['Research', 'Students', 'Technical presentations', 'Architecture community', 'Doctoral symposium', 'Expert feedback', 'Research topics', 'Computer Programming', 'Education', 'Engineering Research']","['Ovaska, Eila', '', '', 'Raibulet, Claudia']","VTT Technical Research Centre of Finland, Kaitov yl  1, 90570, Oulu, Finland  2  University of Milano Bicocca, Edificio U14, Viale Sarca, 336, 20126, Milan, Italy",2010,ECSA
1112,1113,The goal of this research is to understand the various dimensions along which the architectures in an ecosystem should scale to support successful software intensive products  We used a case study approach in which we first identified characteristics of scalability from the research literature and then examined ecosystems to determine the extent to which their primary architectures possessed these characteristics  We also examined the architectures of the platform extensions  We found that each architecture exhibited those characteristics although through different mechanisms and to different degrees    2014 IEEE   17 refs,Scalability of ecosystem architectures,"['Research', 'Scalability', 'Software architecture', 'Case study approach', 'Different mechanisms', 'Platform', 'Software ecosystems', 'Ecology and Ecosystems', 'Telephone Systems and Related Technologies  Line Communications', 'Computer Software, Data Handling and Applications', 'Engineering Research', 'Systems Science']","['Da Silva Amorim, Simone', '', '', 'De Almeida, Eduardo Santana', '', '', 'McGregor, John D', '', '']","Computer Science Department, UFBA, RiSE Labs, Salvador, Brazil  2  Computer Science Department, UFBA, FPC UFBA, Salvador, Brazil  3  School of Computing, Clemson University, Clemson, United States",2014,WICSA
1113,1114,"The graphene supported Pt nanoparticles are prepared by ethylene glycol reduction method  The obtained Pt graphene  Pt G  nanocomposites are characterized by transmission electron microscopy  TEM , X ray diffraction  XRD , and thermogravimetric analysis  TGA   TEM images show that the spherical Pt nanoparticles with sizes of 3 1 nm disperse uniformly on the surface of the graphene, which is consistent with the XRD date of 2 97 nm  The Pt G nanocomposites show electrochemically active surface area  ECSA  of 62 7 m 2 g  It has been found by electrochemical measurements  i e , cyclic voltammetry, chronoamperometry  that the Pt G nanocomposites exhibit good electrocatalytic activity and stability toward borohydride oxidation  Besides, the Pt G nanocomposites are used as anode electrocatalyst in a direct borohydride fuel cell at 298 K, and the maximum power density is 42 mW cm 2, which is apparently higher than Vulcan XC 72R supported Pt  Pt C  nanoparticles  34 mW cm2   Copyright   2012, Hydrogen Energy Publications, LLC  Published by Elsevier Ltd  All rights reserved   47 refs",Graphene supported platinum nanoparticles as anode electrocatalyst for direct borohydride fuel cell,"['Chronoamperometry', 'Cyclic voltammetry', 'Direct borohydride fuel cells (DBFC)', 'Electrocatalysts', 'Ethylene glycol', 'Graphene', 'Nanocomposites', 'Nanoparticles', 'Thermogravimetric analysis', 'Transmission electron microscopy', 'X ray diffraction', 'Anode electrocatalyst', 'Borohydride oxidation', 'Electrocatalytic activity and stability', 'Electrochemical measurements', 'Electrochemically active surface areas', 'Maximum power density', 'Platinum nanoparticles', 'Pt nanoparticles', 'Reduction method', 'Supported Pt', 'TEM images', 'Transmission electron microscopy tem', 'XRD', 'Crystal Lattice', 'Solid State Physics', 'Organic Compounds', 'Chemical Products Generally', 'Electrochemistry', 'Chemistry', 'Nanotechnology', 'Optical Devices and Systems', 'Electric and Magnetic Materials', 'Fuel Cells', 'Precious Metals']","['Liu, Xue', '', '', 'Yi, Lanhua', '', '', 'Wang, Xianyou', '', '', 'Su, Jincang', '', '', 'Song, Yunfeng', '', '', 'Liu, Jing']","Key Laboratory of Environmentally Friendly Chemistry and Applications, Ministry of Education, Xiangtan University, Xiangtan, Hunan 411105, China",2012,ECSA
1114,1115,"The grid model driven engineering  gMDE  approach and environment are currently in use to evaluate potential advantages in the development process of various grid applications  There are clearly identified challenges in the development of systems such as MammoGrid  S R  Amendolia et al , 2005 , which can be addressed by using gMDE  From these case studies, preliminary conclusions are encouraging and highlight the approach relevance   8 refs",Managing separation of concerns in grid applications through architectural model transformations,"['grid computing', 'software architecture', 'architectural model transformations', 'grid model-driven engineering', 'MammoGrid', 'Distributed systems software', 'Software engineering techniques']","['Manset, D', '', '', ' Verjus, H', '', '', ' McClatchey, R']","Univ  of Savoie, Annecy Le Vieux, France",2007,ECSA
1115,1116,"The grid model driven engineering  gMDE  approach and environment are currently in use to evaluate potential advantages in the development process of various grid applications  There are clearly identified challenges in the development of systems such as MammoGrid  S R  Amendolia et al , 2005 , which can be addressed by using gMDE  From these case studies, preliminary conclusions are encouraging and highlight the approach relevance   8 refs",Managing separation of concerns in grid applications through architectural model transformations,"['grid computing', 'software architecture', 'architectural model transformations', 'grid model-driven engineering', 'MammoGrid', 'Distributed systems software', 'Software engineering techniques']","['Manset, D', '', '', ' Verjus, H', '', '', ' McClatchey, R']","Univ  of Savoie, Annecy Le Vieux, France",2008,ECSA
1116,1117,"The growing complexity of safety critical embedded systems is leading to an increased complexity of safety analysis models  Often used fault tolerance mechanisms have complex failure behavior and produce overhead compared to systems without such mechanisms  The question arises whether the overhead for fault tolerance is acceptable for the increased safety of a system  Manually modeling the timing behavior is cost intensive and error prone  Current approaches of safety analysis and execution time analysis are not able to reflect the timing behavior of complex mechanisms according to failures  In this paper, we describe an approach that combines safety analysis models with execution times to extract different execution times for different failure conditions  This provides a detailed view on the safety behavior in combination with the produced overhead and allows to find and certify appropriate fault tolerance mechanisms    2011 ACM   28 refs",Failure dependent execution time analysis,"['Embedded systems', 'Models', 'Safety engineering', 'Security systems', 'Software architecture', 'Complex failure', 'Complex mechanisms', 'Error prones', 'Execution time', 'Failure conditions', 'Fault tolerance mechanisms', 'Fault-trees', 'Hard real-time', 'Increased safety', 'IS costs', 'Safety analysis', 'Safety behavior', 'Safety critical software', 'Safety-critical embedded systems', 'Worst-case execution time', 'Computer Systems and Equipment', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Engineering Graphics', 'Safety Engineering', 'Accidents and Accident Prevention']","['H fig, Kai', '', '', 'Domis, Dominik']","University of Kaiserslautern, AG Software Engineering  Dependability, 67653 Kaiserslautern, Germany",2011,QoSA
1117,1118,"The growing complexity of service centric systems has increased the need for pertinent and reliable software security and trusted system solutions  Systematic approaches to measuring security in software architectures are needed in order to obtain sufficient and credible proactive evidence of the security level or performance of a system, service or product  The systematic definition of security metrics and security assurance metrics is a young field that still lacks widely accepted definitions of metrics and applicable measuring techniques for design time and run time security monitoring  MeSSa 2010 workshop contributes on the following issues   bull Security, trust and privacy metrics   bull Security assurance metrics   bull Security, trust and privacy measurement systems and associated data gathering   bull Metrics for adaptive security systems   bull Taxonomical and ontological research on security metrics   bull Experimental results from security measurements   bull Security measurability increasing mechanisms for software architectures  bull The relationship and differences between security metrics and security assurance metrics   bull Trade off analysis and decision making at design time and at run time    2010 ACM",First International Workshop on Measurability of Security in Software Architectures   MeSSa 2010,"['Computer software selection and evaluation', 'Decision making', 'Technical presentations', 'assessment', 'assurance', 'evaluation', 'metrics', 'privacy', 'security', 'trust', 'Computer Programming', 'Information Dissemination', 'Management']","['Savola, Reijo M', '', '', ' Kanstr n, Teemu', '', '', 'Evesti, Antti']","VTT Technical Research Centre of Finland, Kaitov yl  1, P O  Box 1100, 90571 Oulu, Finland",2010,ECSA
1118,1119,"The growing request for high quality applications for wireless sensor network  wsn  demands model driven approaches that facilitate the design and the early validation of extra functional properties by combining design and analysis models  for this purpose, uml and several analysis specific languages can be chosen and weaved through translational approaches  however, the complexity brought by the underlying technological spaces may hinder the adoption of uml based approaches in the wsn domain  the recently introduced foundational uml  fuml  standard provides a formal semantics to a strict uml subset, enabling the execution of uml models  Leveraging fUML, we realize the Agilla Modeling Framework, an executable fUML model library, to conveniently design agent based software applications for WSN and analyze their performance through the execution of the corresponding fUML model  A running case study is provided to show our framework at work    2014 Springer International Publishing Switzerland   23 refs",FUML Driven design and performance analysis of software agents for wireless sensor network,"['Application programs', 'Design', 'Semantics', 'Software architecture', 'Unified Modeling Language', 'Agent-based softwares', 'Extra-functional properties', 'fUML', 'Model driven approach', 'Model-driven', 'Performance analysis', 'Tool support', 'WSN', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Control Devices', 'Information Dissemination']","['Berardinelli, Luca', '', '', 'Di Marco, Antinisca', '', '', 'Pace, Stefano']","Dept  of Information Engineering, Computer Science and Mathematics, University of l Aquila, 67100 L Aquila, Italy",2014,ECSA
1119,1120,"The growing request for high quality applications for wireless sensor network  wsn  demands model driven approaches that facilitate the design and the early validation of extra functional properties by combining design and analysis models  for this purpose, uml and several analysis specific languages can be chosen and weaved through translational approaches  however, the complexity brought by the underlying technological spaces may hinder the adoption of uml based approaches in the wsn domain  the recently introduced foundational uml  fuml  standard provides a formal semantics to a strict uml subset, enabling the execution of uml models Leveraging fUML, we realize the Agilla Modeling Framework, an executable fUML model library, to conveniently design agent based software applications for WSN and analyze their performance through the execution of the corresponding fUML model  A running case study is provided to show our framework at work   23 refs",fUML driven design and performance analysis of software agents for wireless sensor network,"['program diagnostics', 'program verification', 'programming language semantics', 'software agents', 'software performance evaluation', 'Unified Modeling Language', 'wireless sensor networks', 'fUML-driven design', 'performance analysis', 'software agents', 'wireless sensor networks', 'high-quality applications', 'WSN', 'model-driven approach', 'extra-functional property validation', 'analysis model', 'design model', 'analysis-specific language', 'translational approach', 'fUML standard', 'formal semantics', 'UML subset', 'UML model execution', 'Agilla modeling framework', 'executable fUML model library', 'agent-based software application design', 'Sensing devices and transducers', 'Computerised instrumentation', 'Software engineering techniques', 'Expert systems and other AI software and techniques', 'Formal methods', 'Software performance evaluation', 'Diagnostic, testing, debugging and evaluating systems']","['Berardinelli, L', '', '', ' Marco, A', '', '', ' Pace, S', '', '']","Dept  of Inf  Eng , Comput  Sci    Math , Univ  of L Aquila, L Aquila, Italy",2014,ECSA
1120,1121,"The heterogeneous solutions provided by different cloud vendors have led to application interoperability and migratability issues  Companies that consume cloud services are tied to a single cloud provider due to the high costs of migrating software in the cloud  However, depending on the nature, size and interests of each company, different motivations can lead them to change their cloud provider or to have multiple providers  Several approaches have been proposed to deal with this problem, mainly based on the adoption of standards or the use of middlewares for creating an abstraction between the software and the clouds  However neither of these approaches have yet been consolidated  In this paper an alternate approach is presented for modeling and developing cloud applications, based on MDE and software adaptation techniques  The proposed solution is both cloud vendor and user friendly as it allows the former to freely define their own cloud policies, whilst users continue to be free to choose a cloud provider, even after the application has been developed  Copyright is held by the author owner s    16 refs","Enough about standardization, let s build cloud applications","['Clouds', 'Industry', 'Software architecture', 'Adaptation', 'Component', 'Lock-in', 'MDE', 'Service', 'Industrial Engineering and Management', 'Cost and Value Engineering  Industrial Economics', 'Computer Software, Data Handling and Applications', 'Production Planning and Control  Manufacturing', 'Telephone Systems and Related Technologies  Line Communications', 'Telecommunication  Radar, Radio and Television', 'Meteorology', 'Optical Communication']","['Miranda, Javier', '', '', 'Guill n, Joaqu n', '', '', 'Murillo, Juan Manuel', '', '', 'Canal, Carlos']","Gloin, Calle de las Ocas 2, C ceres, Spain  2  Department of Computer Science, University of M laga, Spain",2012,ECSA
1121,1122,"The heterogeneous solutions provided by different cloud vendors have led to application interoperability and migratability issues  Companies that consume cloud services are tied to a single cloud provider due to the high costs of migrating software in the cloud  However, depending on the nature, size and interests of each company, different motivations can lead them to change their cloud provider or to have multiple providers  Several approaches have been proposed to deal with this problem, mainly based on the adoption of standards or the use of middlewares for creating an abstraction between the software and the clouds  However neither of these approaches have yet been consolidated  In this paper an alternate approach is presented for modeling and developing cloud applications, based on MDE and software adaptation techniques  The proposed solution is both cloud vendor and user friendly as it allows the former to freely define their own cloud policies, whilst users continue to be free to choose a cloud provider, even after the application has been developed  Copyright is held by the author owner s    16 refs","Enough about standardization, let s build cloud applications","['Clouds', 'Industry', 'Software architecture', 'Adaptation', 'Component', 'Lock-in', 'MDE', 'Service', 'Industrial Engineering and Management', 'Cost and Value Engineering  Industrial Economics', 'Computer Software, Data Handling and Applications', 'Production Planning and Control  Manufacturing', 'Telephone Systems and Related Technologies  Line Communications', 'Telecommunication  Radar, Radio and Television', 'Meteorology', 'Optical Communication']","['Miranda, Javier', '', '', 'Guill n, Joaqu n', '', '', 'Murillo, Juan Manuel', '', '', 'Canal, Carlos']","Gloin, Calle de las Ocas 2, C ceres, Spain  2  Department of Computer Science, University of M laga, Spain",2012,WICSA
1122,1123,"The high cost of platinum electrocatalysts for the oxygen reduction reaction  ORR  has hindered the commercialization of fuel cells  An effective support can reduce the usage of Pt and improve the reactivity of Pt through synergistic effects  Herein, the vanadium nitride graphitic carbon  VN GC  nanocomposites, which act as an enhanced carrier of Pt nanoparticles  NPs  towards ORR, have been synthesized for the first time  In the synthesis, the VN GC composite could be obtained by introducing VO3  and  Fe CN 6 4  ions into the polyacrylic weak acid anion exchanged resin  PWAR  through an in situ anion exchanged route, followed by carbonization and a subsequent nitridation process  After loading only 10   Pt NPs, the resulting Pt VN GC catalyst demonstrates a more positive onset potential  1 01 V , higher mass activity  137 2 mA mg 1 , and better cyclic stability  99   electrochemical active surface area  ECSA  retention after 2000 cycles  towards ORR than the commercial 20   Pt C  Importantly, the Pt VN GC catalyst mainly exhibits a 4 e  transfer mechanism and a low yield of peroxide species, suggesting its potential application as a low cost and highly efficient ORR catalyst in fuel cells  Low Pt is the key  Vanadium nitride graphitic carbon  VN GC  composites have been synthesized by an anion exchange route  After loading only 10 wt   Pt on VN GC, the obtained Pt VN GC catalyst exhibits enhanced activity and stability towards the oxygen reduction reaction  ORR  compared with the commercial 20 wt   Pt C  see figure   The mechanism of ORR is mainly through a four electron pathway  Copyright   2013 WILEY VCH Verlag GmbH   Co  KGaA, Weinheim   55 refs",Low Pt loaded on a vanadium nitride graphitic carbon composite as an efficient electrocatalyst for the oxygen reduction reaction,"['Carbon', 'Carbonization', 'Catalyst activity', 'Electrocatalysts', 'Electrolytic reduction', 'Fuel cells', 'Ions', 'Platinum alloys', 'Synthesis (chemical)', 'Vanadium', 'anion-exchanged route', 'Electrochemical active surface areas', 'Graphitic carbons', 'Nitridation Process', 'Oxygen Reduction', 'Oxygen reduction reaction', 'Platinum electrocatalysts', 'Vanadium nitrides', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Chemistry', 'Fuel Cells', 'Precious Metals', 'Vanadium and Alloys']","['Yin, Jie', '', '', 'Wang, Lei', '', '', 'Tian, Chungui', '', '', 'Tan, Taixing', '', '', 'Mu, Guang', '', '', 'Zhao, Lu', '', '', 'Fu, Honggang']","Key Laboratory of Functional Inorganic Material Chemistry, Ministry of Education of the People s Republic of China, Heilongjiang University, Harbin 150080, China",2013,ECSA
1123,1124,"The importance of modelling the dynamic architectural characteristics of software systems has long been recognised  However, the nature of the dynamic architectural characteristics of service oriented applications goes beyond what is currently addressed by existing architecture description languages  ADLs   At the heart of the service oriented approach is the logical separation of service need from the need fulfillment mechanism, i e , the service provider  the binding between the two is deferred to runtime and established at the instance level, i e  each time the need for the service emerges  In this paper we present an architecture oriented model for dynamic reconfiguration that paves the way for the definition of ADLs that are able to address the specification of dynamic architectural characteristics of service oriented applications    2010 Springer Verlag Berlin Heidelberg   33 refs",A model for dynamic reconfiguration in service oriented architectures,"['Dynamic models', 'Information services', 'Architecture description languages', 'Dynamic re-configuration', 'Runtimes', 'Service Oriented', 'Service provider', 'Software systems', 'Computer Programming', 'Information Services', 'Mathematics']","['Fiadeiro, Jos', 'Luiz', '', '', 'Lopes, Ant nia']","Department of Computer Science, University of Leicester, University Road, Leicester LE1 7RH, United Kingdom  2  Faculty of Sciences, University of Lisbon, Campo Grande, Lisboa 1749 016, Portugal",2010,ECSA
1124,1125,"The incorporation of fault tolerance into systems normally increases their complexity, which consequently makes their analysis more difficult  This paper discusses how architectural abstractions can be effective in developing fault tolerant software systems  Depending on the fault model and the resources available, different abstractions can be employed for representing issues that are related to fault tolerance, such as error detection, and error and fault handling  These architectural abstractions, and their internal views, can be instantiated into concrete components and connectors for designing fault tolerant software architectures  Since structural and behavioural properties associated with these abstractions are formally specified, the process of verifying and validating software architectures can be automated  In this paper, we show how appropriate architectural abstractions and a recursive process can facilitate the architectural modelling and analysis of fault tolerant software systems  The feasibility of the proposed approach is demonstrated in the context of a critical real time application    2008 Springer Verlag Berlin Heidelberg   20 refs",Development of fault tolerant software systems based on architectural abstractions,"['Abstracting', 'Computer software', 'Error detection', 'Errors', 'Fault detection', 'Fault tolerance', 'Fault tolerant computer systems', 'Quality assurance', 'Reliability', 'Abstracting', 'Computer software', 'Error detection', 'Errors', 'Fault detection', 'Fault tolerance', 'Fault tolerant computer systems', 'Quality assurance', 'Reliability', 'Architectural abstractions', 'Concrete components', 'Fault handlings', 'Fault models', 'Fault-tolerant', 'Real-time applications', 'Recursive processes', 'Software systems', 'Mechanical Variables Measurements', 'Computer Applications', 'Automatic Control Principles and Applications', 'Information Sources and Analysis', 'Quality Assurance and Control', 'Mathematics', 'Mathematical Statistics', 'Computer Programming', 'Digital Computers and Systems', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Electric Power Lines and Equipment', 'Strength of Building Materials  Test Equipment and Methods', 'Strength of Building Materials  Mechanical Properties', 'Computer Software, Data Handling and Applications']","['Brito, Patrick H', 'S', '', '', ' De Lemos, Rog rio', '', '', 'Rubira, Cec lia M', 'F', '', '']","Institute of Computing, State University of Campinas  Unicamp   2  Computing Laboratory, University of Kent",2008,ECSA
1125,1126,"The increasing interest to consider design decisions and its rationale as an inherent part of the software architecture development process has led to a number of research works that promote the capturing and use of the architecturally significant decisions  Hence, the stakeholders can keep track of the reasons of changes  This paper explores a variety of initiatives from previous works and advocates for an  embedded use of design rationale  in software architecting activities with tool support    2009 IEEE   22 refs",Embedded design rationale in software architecture,"['Architecture', 'Embedded software', 'Design decisions', 'Design rationale', 'Embedded designs', 'Software architecting', 'Tool support', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Capilla, Rafael']","Universidad Rey Juan Carlos, Madrid, Spain",2009,ECSA
1126,1127,"The increasing interest to consider design decisions and its rationale as an inherent part of the software architecture development process has led to a number of research works that promote the capturing and use of the architecturally significant decisions  Hence, the stakeholders can keep track of the reasons of changes  This paper explores a variety of initiatives from previous works and advocates for an  embedded use of design rationale  in software architecting activities with tool support    2009 IEEE   22 refs",Embedded design rationale in software architecture,"['Architecture', 'Embedded software', 'Design decisions', 'Design rationale', 'Embedded designs', 'Software architecting', 'Tool support', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Capilla, Rafael']","Universidad Rey Juan Carlos, Madrid, Spain",2009,WICSA
1127,1128,"The increasing interest to consider design decisions and its rationale as an inherent part of the software architecture development process has led to a number of research works that promote the capturing and use of the architecturally significant decisions  Hence, the stakeholders can keep track of the reasons of changes  This paper explores a variety of initiatives from previous works and advocates for an  embedded use of design rationale  in software architecting activities with tool support    2009 IEEE   22 refs",Embedded design rationale in software architecture,"['Architecture', 'Embedded software', 'Design decisions', 'Design rationale', 'Embedded designs', 'Software architecting', 'Tool support', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Capilla, Rafael']","Universidad Rey Juan Carlos, Madrid, Spain",2011,WICSA
1128,1129,"The increasing number of devices that surround us in everyday life requires additional means to handle the information overload they cause  In addition to the heterogeneity of devices, the smart environment is challenging because of user mobility, fluctuating resources and changing user needs  In this kind of dynamic environment, the applications need to be adaptive in order to maintain the user perceived quality at the required level  This work proposes a solution for runtime performance management in a smart environment, where devices exchange information using semantic information brokers    2011 Springer Verlag   6 refs",Runtime performance management of information broker based adaptive applications,"['Management', 'Ontology', 'Semantics', 'Adaptive application', 'Dynamic environments', 'Information overloads', 'Runtime performance', 'Self management', 'Semantic information', 'Smart environment', 'User mobility', 'User need', 'Computer Software, Data Handling and Applications', 'Information Science', 'Information Dissemination', 'Management']","['Purhonen, Anu', '', '', 'Stenudd, Sakari']","VTT Technical Research Centre of Finland, Oulu, Finland",2011,ECSA
1129,1130,The interaction between software architecture  SA  and requirements engineering  RE  processes is generating interest within the research community  We explored the role of SA documentation in requirements decision making  This paper describes the findings from this study    2007 IEEE   7 refs,The architecture requirements interaction,"['Decision making', 'Engineering research', 'Program documentation', 'Requirements engineering', 'Software architecture', 'Architecture-requirements interactions', 'Documentation in requirements', 'Research community', 'Digital Computers and Systems', 'Computer Programming', 'Computer Applications', 'Engineering Research', 'Management']","['Miller, James A', '', '', ' Madhavji, Nazim H', '', '']","Department of Computer Science, University of Western Ontario, London, Ont  N6A 5B7, Canada",2007,WICSA
1130,1131,The interaction between software architecture  SA  and requirements engineering  RE  processes is generating interest within the research community  We explored the role of SA documentation in requirements decision making  This paper describes the findings from this study   7 refs,The architecture requirements interaction,"['decision making', 'software architecture', 'systems analysis', 'architecture-requirements interaction', 'software architecture', 'requirements engineering processes', 'requirements decision-making', 'Software engineering techniques']","['Miller, J A', '', '', ' Madhavji, N H', '', '']","Dept  of Comput  Sci , Univ  of Western Ontario, London, ON, Canada",2007,WICSA
1131,1132,"The introduction of the  app store  concept has challenged the way software is distributed and marketed  developers have easier access to customers, while customers have easy access to innovative applications  Apps today are increasingly focusing on more  mission critical  areas like healthcare with the Apple AppStore counting more than 40,000 apps under the category  health   fitness   This rapid development of healthcare apps increases the necessity of governance as, currently, healthcare apps are not thoroughly governed  The U S  Food and Drug Administration and the European Commission only have policies for apps that are medical devices  In this paper, we approach the problem of how to govern healthcare and medical apps by addressing the risks the use of these apps pose, while at the same time inviting for development of new apps  To do so we  i  analyze four cases of healthcare app governance regulation,  ii  propose the analysis of the app governance from three perspectives  aim, impact, and revenues,  iii  apply the proposed analysis in the app of the healthcare domain, and  iv  identify the governing actors and propose governance policies    2014 ACM   24 refs",Governance mechanisms for healthcare apps,"['Biomedical equipment', 'Health care', 'Software architecture', 'App stores', 'European Commission', 'Food and Drug Administration', 'Governance mechanisms', 'Healthcare domains', 'Medical Devices', 'Health Care', 'Biomedical Equipment, General', 'Computer Software, Data Handling and Applications']","['Manikas, Konstantinos', '', '', 'Hansen, Klaus Marius', '', '', 'Kyng, Morten']","Department of Computer Science  DIKU , University of Copenhagen, Denmark  2  Department of Computer Science, Aarhus University, Alexandra Institute, Denmark",2014,ECSA
1132,1133,"The introduction of the Higher Education Qualifications Framework  HEQF  and the updated Higher Education Qualifications Sub Framework  HEQSF  has caused many South African university departments to rethink their programme qualification mixes  PQMs   In addition to the requirements stated in the HEQSF, a number of other factors have to be taken into consideration by a university department  These factors include, for example, the standards generated by the Engineering Standards Generating Body  ESGB  and subsequently approved by the Engineering Council of SA  ECSA  and the need to prepare students for various categories of professional registration with ECSA  This means that a university department has to choose the correct mix of Learning Programmes  LPs  from the HEQSF menu  which consists of 13 types of LPs   Preparing students for ECSA registration is aligned with the mission of universities, which is to teach and undertake research  However, research and the LPs associated with research go beyond the requirements for current ECSA registration  Assuming that universities offering engineering LPs would elect to prepare students for both ECSA registration and teach them to produce research outputs, which is mostly done at Master and Doctorate levels  NQF Levels 9 and 10 , then it follows that academics are more interested in NQF Level 5 to 10 pathways  abbreviated as  L5 10   rather than the shorter pathways required towards professional registration   For example, ECSA requires an NQF L5 L7 pathway for registration as a candidate professional technologist  This specific pathway may consist, for example, of two LPs, namely the 360 credit Diploma and the Advanced Diploma   A L5 L10 pathway is a combination of LPs that will prepare the learner with a NSC  or equivalent qualification at level 4  to Doctoral level  level 10   Universities may choose at least four major pathways from the HEQSF menu in order to educate and develop students from NQF Level 5 to 10  However, various pathways towards registration in the category of candidate with ECSA are also embedded into these four NQF L5 L10 pathways, where each consist of a unique combination of LPs  Each of these pathways has an opportunity cost, and economic reality means that smaller departments may have to choose between the four pathways  Of all the many factors involved in PQM decision making, the focus of this paper is on the HEQSF requirements, ECSA standards, and ECSA registration and how these, together with the various qualifications and educational LPs provided for by the HEQSF may impact on the PQM decision taken by engineering departments and schools at South African universities  The proposed four NQF L5 L10  pathway tool  for PQM decision making may be useful for pointing out the advantages, disadvantages, and applications of the various pathways and combinations of pathways  Rather than deciding from a menu of thirteen qualifications and associated LPs, this article proposes that decision making be undertaken on the basis of a menu of four main articulated  NQF L5 L10  pathways  which also include one or more of the ECSA s pathways for professional registration   The proposed  NQF L5 L10 pathway  tool is an attempt to move one step closer to the aim of achieving a structured decision making approach for designing a PQM at departmental level   The Southern African Institute of Mining and Metallurgy, 2014   6 refs",Universities and decision making  Programme and qualification mix   Four learning pathways,"['Decision making', 'Research', 'Societies and institutions', 'Speech', 'Standards', 'Teaching', 'Educational learning programmes (LPs)', 'Educational pathways', 'Higher education', 'Pqm decision-making', 'Programme and qualification mix (PQM)', 'Speech', 'Engineering Profession', 'Codes and Standards', 'Management']","['Nel, W P', '', '']","University of South Africa  UNISA , South Africa",2014,ECSA
1133,1134,"The last 10 years have seen a rise of approaches for Software Architecture Knowledge Management  SAKM , with a focus on codification of architecture knowledge  Still there is no common meta model for describing architectural knowledge nor is there a common terminology for the main concepts of such a model  While this might lead to the question whether such a common meta model is even possible, it is certainly desirable  We decided to tackle this question based on the results of 10 years of research in this area  As part of a systematic literature survey we analyzed and compared model based approaches for SAKM  Specifically we analyzed the models of SAKM approaches with the highest rated evidence for different knowledge management activities like capturing, maintaining, reuse, sharing, and using  As a result we identified important aims and elements of proven SAKM approaches, which could be used as a driver for the next generation of AK codification approaches    2014 Springer International Publishing Switzerland   31 refs",A fresh look at codification approaches for SAKM  A systematic literature review,"['Knowledge management', 'AKM Activities', 'AKM Codification Approaches', 'Architectural knowledge', 'Architecture knowledge managements', 'Knowledge management activities', 'Model based approach', 'Software architecture knowledge managements', 'Systematic literature review', 'Computer Programming', 'Computer Applications']","['Weinreich, Rainer', '', '', 'Groher, Iris']","Johannes Kepler University Linz, Austria",2014,ECSA
1134,1135,"The last 10 years have seen a rise of approaches for Software Architecture Knowledge Management  SAKM , with a focus on codification of architecture knowledge  Still there is no common meta model for describing architectural knowledge nor is there a common terminology for the main concepts of such a model  While this might lead to the question whether such a common meta model is even possible, it is certainly desirable  We decided to tackle this question based on the results of 10 years of research in this area  As part of a systematic literature survey we analyzed and compared model based approaches for SAKM  Specifically we analyzed the models of SAKM approaches with the highest rated evidence for different knowledge management activities like capturing, maintaining, reuse, sharing, and using  As a result we identified important aims and elements of proven SAKM approaches, which could be used as a driver for the next generation of AK codification approaches   31 refs",A fresh look at codification approaches for SAKM  A systematic literature review,"['knowledge management', 'software architecture', 'software management', 'codification approaches', 'software architecture knowledge management', 'systematic literature review', 'model-based approaches', 'SAKM approaches', 'knowledge management activities', 'capturing activities', 'maintaining activities', 'reuse activities', 'sharing activities', 'using activities', 'Software management', 'Software engineering techniques']","['Weinreich, R', '', '', ' Groher, I', '', '']","Johannes Kepler Univ  Linz, Linz, Austria",2014,ECSA
1135,1136,"The life of a software architect is a long and rapid succession of suboptimal design decisions taken partly in the dark    1  The purpose of this paper is to shed some light on the darkness, by discussing a key characteristic of successful software architectures   the use of reusable assets  Reusable assets provide a valuable vehicle for capitalizing on the work of other successful architects, from fine grained programming idioms to largegrained off the shelf packaged solutions  However, consideration of reusable assets can itself be a minefield  There are many different types of asset to consider, and it is not always clear what is meant by each of them, and the value they provide  What is the difference between an architectural style and a reference architecture  How does a mechanism differ from a framework  The purpose of this paper is to discuss the different types of reusable asset available to the architect, their characteristics, and their usage    2008 IEEE   6 refs",Understanding architectural assets,"['Architecture', 'Computer software reusability', 'Software design', 'Architectural styles', 'Packaged solutions', 'Programming idioms', 'Reference architecture', 'Reusable assets', 'Sub-optimal designs', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming']","['Eeles, Peter']","IBM Rational Software, IBM Hursley Park, Hursley, Winchester, United Kingdom",2008,WICSA
1136,1137,"The loose coupling notion associated with the service composition is a key concept which defines the Service Oriented Architectures  SOA  paradigm  Given that this notion is intuitively understood, its definition lacks formalism  Moreover, the existing evaluation metrics are limited and cannot take into account all the specificities of the SOA s composition mechanism  In this paper, we present a set of metrics based on a clear definition of the loose coupling  We combine these metrics in a formula which calculates a weight  This weight allows for clear measurements of a composite s coupling    2010 Springer Verlag Berlin Heidelberg   21 refs",Specifying loose coupling from existing service composition approaches,"['Information services', 'Quality of service', 'Service oriented architecture (SOA)', 'Composite services', 'Composition mechanisms', 'Evaluation metrics', 'Loose couplings', 'Metrics', 'Service compositions', 'SOA', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Information Services']","['Hock Koon, Anthony', '', '', 'Oussalah, Mourad']","LINA Laboratory, University of Nantes, 2 rue de la Houssiniere, NANTES 44322, France",2010,ECSA
1137,1138,"The loss of electrochemically active surface area  ECSA  causes severe performance degradation over relevant lifetimes of polymer electrolyte fuel cells  Using a simple physical model, we analyze the interrelations between kinetics of platinum nanoparticle dissolution, evolution of the particle size distribution, and ECSA loss with time  The model incorporates the initial particle radius distribution, and it accounts for kinetic processes involving Pt dissolution, Pt O formation, and Pt O dissolution  Employing reasonable simplifying assumptions to the governing equations, a full analytical solution was found under potentiostatic conditions  The simplified model predicts the evolution of the particle radius distribution as well as ECSA loss with time, in close agreement with experimental ex situ and in situ studies  The study indicates that the rates of chemical Pt O dissolution, driven by the particle size dependence of the cohesive energy, may dominate over electrochemical dissolution  Fitting of the model to experimental data provides an effective surface tension and an effective rate constant of Pt O dissolution  Implications of the model for the development of strategies to reduce ECSA loss are discussed    2010 American Chemical Society   60 refs",Physical theory of platinum nanoparticle dissolution in polymer electrolyte fuel cells,"['Electrolytic reduction', 'Fuel cells', 'Nanoparticles', 'Particle size', 'Particle size analysis', 'Platinum', 'Polyelectrolytes', 'Rate constants', 'Strategic planning', 'Surface tension', 'Analytical solutions', 'Cohesive energies', 'Electrochemical dissolution', 'Electrochemically active surface areas', 'Ex situ', 'Experimental data', 'Governing equations', 'In-Situ Study', 'Kinetic process', 'Particle radii', 'Particle size dependence', 'Performance degradation', 'Physical theory', 'Platinum nanoparticles', 'Polymer electrolyte fuel cells', 'Potentiostatic conditions', 'Simple Physical Models', 'Simplified models', 'Simplifying assumptions', 'Materials Science', 'Chemical Operations', 'Organic Polymers', 'Polymer Products', 'Management', 'Physical Properties of Gases, Liquids and Solids', 'Solid State Physics', 'Mechanical Variables Measurements', 'Special Purpose Instruments', 'Chemical Reactions', 'Ore Treatment', 'Precious Metals', 'Fuel Cells', 'Electrochemistry', 'Electric and Magnetic Materials', 'Nanotechnology', 'Physical Chemistry', 'Thermionic Materials']","['Rinaldo, Steven G', '', '', ' Stumper, J rgen', '', '', 'Eikerling, Michael']","Department of Chemistry, Simon Fraser University, 8888 University Drive, Burnaby, BC, Canada  2  Automotive Fuel Cell Cooperation Corporation, 9000 Glenlyon Parkway, Burnaby, BC, Canada",2010,ECSA
1138,1139,"The main challenge of software engineering has always been to bring software complexity under control  Different kinds of abstractions have been devised and applied for that purpose at different levels of software design  Some of them have proven successful, such as function hierarchies, layers, API s, abstract classes, encapsulation, interfaces etc  and are widely used in practice  Concepts from the genre of software architecture should also help to manage software complexity  We argue that, before architecture decisions and architecture decision making become a common industrial practice, they have to support software complexity management much more efficiently than at present  Despite the substantial progress already made, it is still a major challenge both in theory  architecture decisions representation and architecture decision making methods  and practice  tool support     2010 Springer Verlag Berlin Heidelberg   11 refs",Architecture decision making in support of complexity control,"['Abstracting', 'Architecture', 'Decision making', 'Decision theory', 'Software design', 'Abstracting', 'Architecture', 'Decision making', 'Decision theory', 'Software design', 'Abstract class', 'Architectural style', 'Architecture decision-making', 'Architecture decisions', 'Industrial practices', 'Software complexity', 'Tool support', 'Abstract class', 'Architectural style', 'Architecture decision-making', 'Architecture decisions', 'Industrial practices', 'Software complexity', 'Tool support', 'Buildings and Towers', 'Computer Programming', 'Information Sources and Analysis', 'Management', 'Mathematics', 'Systems Science']","['Zalewski, Andrzej', '', '', 'Kijas, Szymon']","Institute of Automatic Control and Computational Engineering, Warsaw University of Technology, Poland",2010,ECSA
1139,1140,"The management of variability in software product lines goes beyond the definition of variations, traceability and configurations  It involves a lot of assumptions about the variability and related models, which are made by the stakeholders all over the product line but almost never handled explicitly  In order to better manage the design with variability, we must consider the rationale behind its specification  In this paper we present a model for the specification of variability design rationale and its application to the modelling of architectural variability in software product lines    2010 ACM   17 refs",A model for variability design rationale in SPL,"['Design', 'Network architecture', 'Software design', 'Specifications', 'Technical presentations', 'Architectural variability', 'Design rationale', 'Product-lines', 'Software Product Line', 'variability', 'Structural Design', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Codes and Standards', 'Information Dissemination']","['Galv o, Ism nia', '', '', 'Van Den Broek, Pim', '', '', 'Aksit, Mehmet']","Department of Computer Science, University of Twente, P O  Box 217, 7500 AE Enschede, Netherlands",2010,ECSA
1140,1141,"The mass activity is intensively used as characterization parameters for evaluation of the effectiveness of the cathode catalyst in polymer electrolyte membrane  PEM  fuel cells  In this work, the dependence of mass activity on platinum loading was studied at the cathode  The results indicated that the mass activity and the utilized electrochemical surface area of the catalyst are not independent of the catalyst loading  The electrochemical specific surface area  ECSA  and the mass activity increase as the loading is decreased  The increase of the ECSA is attributed to the increase of the utilization of the catalyst  The commonly applied Tafel approximation cannot be used to fit the result because the mass activity is controlled not only by RO and the ORR kinetics, but also the utilization of the catalyst, which in turn depends on catalyst loading, the structure of the catalyst layer, the degree of agglomeration, and screening of the catalyst particles  A detailed and more precise definition of mass activity  MA  is given to elucidate the variation of MA with catalyst loading    2013 Elsevier B V  All rights reserved   39 refs",Effect of ultra low Pt loading on mass activity of polymer electrolyte membrane fuel cells,"['Cathodes', 'Electrolytes', 'Fuel cells', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Catalyst particles', 'Degree of agglomeration', 'Electrochemical active surface areas', 'Electrochemical surface area', 'Mass activity', 'Polymer electrolyte membranes', 'Precise definition', 'Pt loading', 'Precious Metals', 'Electric Batteries and Fuel Cells', 'Fuel Cells', 'Electric Components', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally']","['Kriston,', 'kos', '', '', 'Xie, Tianyuan', '', '', 'Gamliel, David', '', '', 'Ganesan, Prabhu', '', '', 'Popov, Branko N', '', '']","University of South Carolina, Center for Electrochemical Engineering, Dept  of Chemical Engineering, Columbia, SC 29208, United States  2  University of Massachusetts Amherst, Dept  of Chemical Engineering, Amherst, MA 01003, United States",2013,ECSA
1141,1142,"The mouth of the Seine River estuary  France  has undergone marked morphological evolution over several decades mainly due to engineering works aimed at improving access to Rouen and Le Havre harbours  The intertidal areas are decreasing in size and the lower estuary is accumulating sediment and prograding  In order to understand and better describe the major morphological behaviours of the estuary, a morphodynamic numerical model was developed within the Seine Aval program  At the end of the 1st part of the research program, a validated fine sediment transport model  3D  was available  Le Hir et al , 2001b   As the present morphological study addresses medium term issues  a few decades , and because of the need to investigate impacts of local structures or events, we chose to use the so called  process based approach  starting from the existing model  First, the existing model was upgraded to account for  suspended  sand transport, and to achieve coupling between morphological changes and sediment transport  Erodability of the sediment accounts for the respective proportions of mud and sand  Simulations starting from an arbitrary surficial sediment cover show that the model is able to reproduce realistic sediment patterns  For example, it is able to change the sediment nature on the intertidal flat near Le Havre from sand to mud  Observed structures of suspended sediment are also reproduced  fine particles mainly follow the turbidity maximum whereas significant concentrations of sand grains in suspension are found where the hydrodynamic stresses are intense  Concerning morphodynamics, simulations with real forcing over one year are discussed  The effect of waves on the bathymetric evolution of the mouth is shown and the sensitivity of morphodynamics to the coupling procedure is tested    2007 Springer Science Business Media B V   31 refs",Modelling sand mud transport and morphodynamics in the Seine river mouth  France   An attempt using a process based approach,"['Mathematical models', 'Numerical methods', 'Rivers', 'Surface morphology', 'Surface water resources', 'Morphodynamics', 'Sediment transport modeling', 'Waterways', 'Surface Water', 'Soils and Soil Mechanics', 'Numerical Methods']","['Waeles, B', '', ',', ',', '', ' Le Hir, P', '', '', ' Lesueur, P', '', '', ' Delsinne, N', '', '']","IFREMER Laboratoire, DYNECO PHYSED Centre de Brest, BP 70, Plouzane 29280, France  2  Laboratoire de Morphodynamique Continentale et C ti re, Universit  de Caen, Caen, France  3  Creocean, Zone Technocean, La Rochelle, France",2007,ECSA
1142,1143,"The mouth of the Seine River estuary  France  has undergone marked morphological evolution over several decades mainly due to engineering works aimed at improving access to Rouen and Le Havre harbours  The intertidal areas are decreasing in size and the lower estuary is accumulating sediment and prograding  In order to understand and better describe the major morphological behaviours of the estuary, a morphodynamic numerical model was developed within the Seine Aval program  At the end of the 1st part of the research program, a validated fine sediment transport model  3D  was available  Le Hir et al , 2001b   As the present morphological study addresses medium term issues  a few decades , and because of the need to investigate impacts of local structures or events, we chose to use the so called  process based approach  starting from the existing model  First, the existing model was upgraded to account for  suspended  sand transport, and to achieve coupling between morphological changes and sediment transport  Erodability of the sediment accounts for the respective proportions of mud and sand  Simulations starting from an arbitrary surficial sediment cover show that the model is able to reproduce realistic sediment patterns  For example, it is able to change the sediment nature on the intertidal flat near Le Havre from sand to mud  Observed structures of suspended sediment are also reproduced  fine particles mainly follow the turbidity maximum whereas significant concentrations of sand grains in suspension are found where the hydrodynamic stresses are intense  Concerning morphodynamics, simulations with real forcing over one year are discussed  The effect of waves on the bathymetric evolution of the mouth is shown and the sensitivity of morphodynamics to the coupling procedure is tested    2007 Springer Science Business Media B V   31 refs",Modelling sand mud transport and morphodynamics in the Seine river mouth  France   An attempt using a process based approach,"['Mathematical models', 'Numerical methods', 'Rivers', 'Surface morphology', 'Surface water resources', 'Morphodynamics', 'Sediment transport modeling', 'Waterways', 'Surface Water', 'Soils and Soil Mechanics', 'Numerical Methods']","['Waeles, B', '', ',', ',', '', ' Le Hir, P', '', '', ' Lesueur, P', '', '', ' Delsinne, N', '', '']","IFREMER Laboratoire, DYNECO PHYSED Centre de Brest, BP 70, Plouzane 29280, France  2  Laboratoire de Morphodynamique Continentale et C ti re, Universit  de Caen, Caen, France  3  Creocean, Zone Technocean, La Rochelle, France",2008,ECSA
1143,1144,"The nature of software engineering is changing  Whereas building systems was the predominant activity, more recently the focus has shifted toward composing systems from open source, commercial and proprietary components and to only build the functionality that truly is competitively differentiating  In addition, the way software is developed has changed as well, especially focusing on short development cycles and frequent, or even continuous, deployment  Because of these requirements, often teams are organized around features, rather than components, and can change all components in the system, including their interfaces  A third trend is the increasing adoption of software ecosystems, where significant development of functionality relevant for customers occurs outside the platform organization  Obviously, however, the quality attributes that are necessary for system success remain important as well as the ability to easily incorporate new requirements in the system in a cost effective fashion  Because of the above, the role of software architecture and in particular the software architects is more important in this new world, but there is significant evolution in the implementation of the role  The paper starts by characterizing the new approach to software engineering and the role of compositionality  It then explores the implications for software architecture and the role of the software architect, Finally, it defines a number of research challenges for the ECSA community to explore    2010 Springer Verlag Berlin Heidelberg",Architecture in the age of compositionality,"['Ecology', 'Building systems', 'Compositionality', 'Cost effective', 'Development cycle', 'New approaches', 'Open-source', 'Quality attributes', 'Research challenges', 'Software architects', 'Software ecosystems', 'System success', 'Ecology and Ecosystems', 'Computer Programming']","['Bosch, Jan']","Intuit, Mountain View, CA, United States",2010,ECSA
1144,1145,"The notion of service is becoming increasingly popular as a means for implementing large scale distributed, reactive systems  Systematic development approaches and modeling notations for services are sill largely missing from the literature  We introduce an Architecture Definition Language for serviceoriented software architectures  It provides modeling elements for interaction patterns defining services, as well as for mapping sets of services to target component configurations  We also present a comprehensive software development process that considers services as first class modeling elements  By decoupling the modeling of services from their implementation on target component configurations this process enables exploration of multiple architectures implementing the same set of services  We substantiate our view of services as cross cutting architectural aspects by providing a mapping from services to aspects in AspectJ  We illustrate applicability of our approach by modeling service oriented architectures for portions of the Center TRACON Automation System as a running example   35 refs",Systematic development and exploration of service oriented software architectures,"['Algebra', 'Computer programming languages', 'Embedded systems', 'Mathematical models', 'Specifications', 'Syntactics', 'Telecommunication services', 'Automation systems', 'Service specifications', 'Software architecture', 'Software development process', 'Telecommunication  Radar, Radio and Television', 'Computer Systems and Equipment', 'Computer Programming', 'Computer Programming Languages', 'Information Dissemination', 'Algebra']","['Kr ger, Ingolf H', '', '', ' Mathew, Reena']","Comp  Sci  and Eng  Department, University of California, San Diego, 9500 Gilman Drive, San Diego, CA 92093 0114, United States",2004,WICSA
1145,1146,"The notion of service is becoming increasingly popular as a means for implementing large scale distributed, reactive systems  Systematic development approaches and modeling notations for services are still largely missing from the literature  We introduce an architecture definition language for service oriented software architectures  It provides modeling elements for interaction patterns defining services, as well as for mapping sets of services to target component configurations  We also present a comprehensive software development process that considers services as first class modeling elements  By decoupling the modeling of services from their implementation on target component configurations this process enables exploration of multiple architectures implementing the same set of services  We substantiate our view of services as cross cutting architectural aspects by providing a mapping from services to aspects in AspectJ  We illustrate applicability of our approach by modeling service oriented architectures for portions of the Center TRACON automation system as a running example   35 refs",Systematic development and exploration of service oriented software architectures,"['object-oriented languages', 'object-oriented programming', 'software architecture', 'specification languages', 'service-oriented software architectures', 'distributed reactive systems', 'architecture definition language', 'target component configurations', 'software development', 'AspectJ', 'Center TRACON automation system', 'modeling notations', 'Software engineering techniques', 'Formal methods', 'Object oriented programming']","['Kruger, I H', '', '', ' Mathew, R', '', '']","Dept  of Comput  Sci    Eng , Univ  of California, La Jolla, La Jolla, CA, United States",2004,WICSA
1146,1147,"The notion of software as a service promises agile, flexible and low maintenance system development through a dynamic runtime architecture that allows third party functionality and capability to be added on demand  There is growing research interest in how service orientation can be adopted a means for enhancing agility and flexibility in product line engineering  However, integrating service orientation in product line engineering poses a number of challenges  These include difficulty in identifying services, ensuring services reflect user needs, and determining configurations of services that are relevant in different user contexts  This paper describes an approach for service oriented product line development that integrates feature oriented engineering with a self managing consumer centred negotiation process to address these challenges    2009 IEEE   22 refs",A consumer centred approach for service oriented product line development,"['Architecture', 'Computer software', 'Computer software maintenance', 'Production engineering', 'Web services', 'Feature-oriented', 'Low maintenance', 'Negotiation process', 'On-Demand', 'Product line development', 'Product line engineering', 'Runtime architecture', 'Self-managing', 'Service orientation', 'Service Oriented', 'Software as a service', 'User context', 'User need', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Information Services', 'Production Engineering']","['Kotonya, Gerald', '', '', 'Lee, Jaejoon', '', '', 'Robinson, Daniel']","Computing Department, Lancaster University, United Kingdom",2009,ECSA
1147,1148,"The notion of software as a service promises agile, flexible and low maintenance system development through a dynamic runtime architecture that allows third party functionality and capability to be added on demand  There is growing research interest in how service orientation can be adopted a means for enhancing agility and flexibility in product line engineering  However, integrating service orientation in product line engineering poses a number of challenges  These include difficulty in identifying services, ensuring services reflect user needs, and determining configurations of services that are relevant in different user contexts  This paper describes an approach for service oriented product line development that integrates feature oriented engineering with a self managing consumer centred negotiation process to address these challenges    2009 IEEE   22 refs",A consumer centred approach for service oriented product line development,"['Architecture', 'Computer software', 'Computer software maintenance', 'Production engineering', 'Web services', 'Feature-oriented', 'Low maintenance', 'Negotiation process', 'On-Demand', 'Product line development', 'Product line engineering', 'Runtime architecture', 'Self-managing', 'Service orientation', 'Service Oriented', 'Software as a service', 'User context', 'User need', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Information Services', 'Production Engineering']","['Kotonya, Gerald', '', '', 'Lee, Jaejoon', '', '', 'Robinson, Daniel']","Computing Department, Lancaster University, United Kingdom",2009,WICSA
1148,1149,"The notion of software as a service promises agile, flexible and low maintenance system development through a dynamic runtime architecture that allows third party functionality and capability to be added on demand  There is growing research interest in how service orientation can be adopted a means for enhancing agility and flexibility in product line engineering  However, integrating service orientation in product line engineering poses a number of challenges  These include difficulty in identifying services, ensuring services reflect user needs, and determining configurations of services that are relevant in different user contexts  This paper describes an approach for service oriented product line development that integrates feature oriented engineering with a self managing consumer centred negotiation process to address these challenges    2009 IEEE   22 refs",A consumer centred approach for service oriented product line development,"['Architecture', 'Computer software', 'Computer software maintenance', 'Production engineering', 'Web services', 'Feature-oriented', 'Low maintenance', 'Negotiation process', 'On-Demand', 'Product line development', 'Product line engineering', 'Runtime architecture', 'Self-managing', 'Service orientation', 'Service Oriented', 'Software as a service', 'User context', 'User need', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Information Services', 'Production Engineering']","['Kotonya, Gerald', '', '', 'Lee, Jaejoon', '', '', 'Robinson, Daniel']","Computing Department, Lancaster University, United Kingdom",2011,WICSA
1149,1150,"The notion of technical debt attracts significant attention, especially in the context of reconciling architecture and agile development  However, most work on technical debt is still largely informal and if it provides a formalization it is often ad hoc  In this paper, we provide a detailed, formal analysis of decision making on technical debt in development  Using this formalization, we show that optimal decision making is not effectively computable in real world situations and provide several well defined approximations that allow to handle the problem nevertheless in practical situations  Combining these approximations in a single method leads to a light weight approach that can be effectively applied in iterative software development, including agile approaches  Copyright 2013 ACM   16 refs",A formal approach to technical debt decision making,"['Formal methods', 'Iterative methods', 'Cost estimations', 'Formal model', 'Incremental development', 'Software systems', 'Technical debts', 'Computer Programming', 'Management', 'Numerical Methods']","['Schmid, Klaus']","Software Systems Engineering, University of Hildesheim, Germany",2013,QoSA
1150,1151,"The number of available cloud services has recently grown considerably  Therefore, consumers demand new methods for choosing the appropriate cloud services for their needs, whereas providers require dedicated ways to correctly elicit requirements from very heterogeneous consumers  In this poster, we present the StakeCloud community platform  This will act as a cloud resources marketplace, allowing consumers to input their needs and providing them with matching cloud services  Moreover, in case the needs are not met, they can be communicated as new requirements to cloud providers  Our solution will enable easier resource identification and requirements communication in cloud systems, thus supporting both consumers and providers Copyright is held by the author owner s    5 refs",Towards bridging the communication gap between consumers and providers in the cloud,"['Cloud computing', 'Communication', 'Requirements engineering', 'Software architecture', 'Web services', 'Cloud providers', 'Cloud services', 'Cloud systems', 'Communication gaps', 'Stakeholder', 'Telecommunication  Radar, Radio and Television', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications']","['Todoran, Irina', '', '', 'Glinz, Martin']","Department of Informatics, University of Zurich, Zurich, Switzerland",2012,ECSA
1151,1152,"The number of available cloud services has recently grown considerably  Therefore, consumers demand new methods for choosing the appropriate cloud services for their needs, whereas providers require dedicated ways to correctly elicit requirements from very heterogeneous consumers  In this poster, we present the StakeCloud community platform  This will act as a cloud resources marketplace, allowing consumers to input their needs and providing them with matching cloud services  Moreover, in case the needs are not met, they can be communicated as new requirements to cloud providers  Our solution will enable easier resource identification and requirements communication in cloud systems, thus supporting both consumers and providers Copyright is held by the author owner s    5 refs",Towards bridging the communication gap between consumers and providers in the cloud,"['Cloud computing', 'Communication', 'Requirements engineering', 'Software architecture', 'Web services', 'Cloud providers', 'Cloud services', 'Cloud systems', 'Communication gaps', 'Stakeholder', 'Telecommunication  Radar, Radio and Television', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications']","['Todoran, Irina', '', '', 'Glinz, Martin']","Department of Informatics, University of Zurich, Zurich, Switzerland",2012,WICSA
1152,1153,"The objective of this paper is to address the design of an architecture for scientific applications utilizing sensor data  The proposed architecture models applications as services in a service oriented architecture  This architecture is, mapped to a heterogeneous architecture that contains high performance, data driven components and SOA style components, and a superimposed on a service architecture that provides dynamism    2005 IEEE   2 refs",DMDA   A dynamic service architecture for scientific computing,"['Computer aided design', 'Data reduction', 'Dynamic programming', 'Smart sensors', 'Telecommunication services', 'Dynamic service architecture', 'Sensor data', 'Service oriented architecture', 'Telecommunication  Radar, Radio and Television', 'Information Theory and Signal Processing', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Optimization Techniques']","['Andersson, Jesper', '', '', 'Ericsson, Morgan', '', '', 'L we, Welf']","Software Technology, Department of Computer Science, V xj  Universitet",2005,WICSA
1153,1154,The objective of this workshop is to bring together researchers from the software product line community and software architecture community to identify critical challenges and progress the state of the art on variability in software product line architectures    2010 ACM,Workshop on Variability in Software Product Line Architectures  VARI ARCH 2010,"['Technical presentations', 'assets', 'concern', 'Product line architecture', 'Product-lines', 'variability', 'view', 'viewpoint', 'Computer Programming', 'Information Dissemination']","['Helleboogh, Alexander', '', '', 'Avgeriou, Paris', '', '', 'Bouck , Nelis', '', '', 'Heymans, Patrick']","Catholic University of Leuven, Celestijnenlaan 200A, 3000 Leuven, Belgium  2  University of Groningen, PO Box 407, 9700 AK Groningen, Netherlands  3  University of Namur, rue de Bruxelles 61, 5000 Namur, Belgium",2010,ECSA
1154,1155,The output of 18 software architecture evaluations are analyzed to find patterns in the risk themes identified in the evaluations  The major results are  A categorization of risk themes The observation that twice as many risk themes are risks of  omission  as are risks of  commission   A failure to find a relationship between the business and mission goals of a system and the risk themes from an evaluation of that system  A failure to find a relationship between the domain of a system being evaluated and the risk themes associated with the development of that system  The results of this investigation have application to practitioners by suggesting activities on which developers should put greater focus  They also have application to researchers by suggesting further areas of investigation    2007 IEEE   11 refs,Risk themes discovered through architecture evaluations,"['Engineering research', 'Failure analysis', 'Pattern recognition', 'Risk assessment', 'Systems engineering', 'Mission goals', 'Risk themes', 'Risks omission', 'Systems Science', 'Mathematics', 'Accidents and Accident Prevention', 'Engineering Research', 'Computer Applications', 'Computer Programming', 'Telecommunication  Radar, Radio and Television']","['Bass, Len', '', '', 'Nord, Robert', '', '', 'Wood, William', '', '', 'Zubrow, David']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA 15213, United States",2007,WICSA
1155,1156,The output of 18 software architecture evaluations are analyzed to find patterns in the risk themes identified in the evaluations  The major results are  i  A categorization of risk themes ii  The observation that twice as many risk themes are risks of  omission   as are risks of  commission    iii  A failure to find a relationship between the business and mission goals of a system and the risk themes from an evaluation of that system  iv  A failure to find a relationship between the domain of a system being evaluated and the risk themes associated with the development of that system  The results of this investigation have application to practitioners by suggesting activities on which developers should put greater focus  They also have application to researchers by suggesting further areas of investigation   11 refs,Risk themes discovered through architecture evaluations,"['software architecture', 'risk themes', 'software architecture evaluations', 'system development', 'Software engineering techniques']","['Bass, L', '', '', ' Nord, R', '', '', ' Wood, W', '', '', ' Zubrow, D', '', '']","Software Eng  Inst , Carnegie Mellon Univ , Pittsburgh, PA, United States",2007,WICSA
1156,1157,"The paper presents a document template for reference architectures for the domain of software intensive embedded systems  The template addresses the somewhat conflicting needs when documenting a reference architecture of readability, overview, details, evolution and different background of the stakeholders  The first novel idea is the template prescribes two separate documents describing a reference architecture beside the product architecture documentation  The information in the two documents concern different stakeholders and evolve at different paces  The other novelty in describing reference architectures is to introduce a perspective of time, in the form of horizons, rather than focusing on a snapshot a release date  In addition, a case is presented giving an example of how a reference architecture was documented according to the template, how stakeholder needs were captured, and how the different types of information was identified or recovered from existing product architectures  Copyright 2012 ACM   10 refs",A reference architecture template for software intensive embedded systems,"['Embedded systems', 'System program documentation', 'Document templates', 'Product architecture', 'Reference architecture', 'Release date', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming']","['Eklund, Ulrik', '', '', 'Jonsson, Niklas', '', '', 'Eriksson, Anders', '', '', 'Bosch, Jan']","Dept  Computer Sc  and Eng , Chalmers Univ  of Technology, G teborg, Sweden  2  Dept  94121, PVD2 1, Volvo Car Corporation, G teborg, Sweden",2012,ECSA
1157,1158,"The paper presents a document template for reference architectures for the domain of software intensive embedded systems  The template addresses the somewhat conflicting needs when documenting a reference architecture of readability, overview, details, evolution and different background of the stakeholders  The first novel idea is the template prescribes two separate documents describing a reference architecture beside the product architecture documentation  The information in the two documents concern different stakeholders and evolve at different paces  The other novelty in describing reference architectures is to introduce a perspective of time, in the form of horizons, rather than focusing on a snapshot a release date  In addition, a case is presented giving an example of how a reference architecture was documented according to the template, how stakeholder needs were captured, and how the different types of information was identified or recovered from existing product architectures  Copyright 2012 ACM   10 refs",A reference architecture template for software intensive embedded systems,"['Embedded systems', 'System program documentation', 'Document templates', 'Product architecture', 'Reference architecture', 'Release date', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming']","['Eklund, Ulrik', '', '', 'Jonsson, Niklas', '', '', 'Eriksson, Anders', '', '', 'Bosch, Jan']","Dept  Computer Sc  and Eng , Chalmers Univ  of Technology, G teborg, Sweden  2  Dept  94121, PVD2 1, Volvo Car Corporation, G teborg, Sweden",2012,WICSA
1158,1159,"The paper presents a novel ecosystem for software intensive embedded systems as an alternative to integration centric software development  A set of necessary qualities is identified for the embedded platform enabling the ecosystem, i e  deployability of new functions, maintainability over time, and configurability according to hardware within the product family  The embedded platform must support composability of software from different development stakeholders, such as the original equipment manufacturer, strategic and 3rd party developers  The paper presents some key mechanisms for implementing the necessary certification in the platform that facilitates composability while still preserving dependability  A theoretical example of how this would look like in the automotive domain is presented, and an actual case of an in vehicle platform implementing some of the mechanisms is shown  Copyright   2012 ACM   13 refs",Using architecture for multiple levels of access to an ecosystem platform,"['Ecosystems', 'Software architecture', 'Automotive domains', 'Composability', 'Configurability', 'Deployability', 'Embedded platforms', 'In-vehicle', 'Multiple levels', 'Original equipment manufacturers', 'Product families', 'Software ecosystems', 'Ecology and Ecosystems', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Eklund, Ulrik', '', '', 'Bosch, Jan']","Chalmers University of Technology Software, Engineering Div , Dept  of Computer Science and Engineering, SE 412 96 G teborg, Sweden",2012,QoSA
1159,1160,"The paper proposes an Efficient Cluster based Self organisation Algorithm  ECSA  for partitioning Wireless Sensor Networks  WSNs  into clusters, thus giving at the network a hierarchical organisation  Each sensor uses its weight based on its k density and its residual energy to elect a cluster head in its 2 hop neighbourhood  ECSA operates without a centralised controller, and does not require that the location of sensors be known  Firstly, we estimate the number of clusters formed with ECSA according to transmission range, then we evaluate the amount of packets sent to the sink per energy dissipation by using the same model presented by Heinzelman et al   2002 , and the number of nodes alive per number of packets received at the sink  Simulation results illustrate that ECSA can evenly distribute energy consumption of sensors and consequently maximise network lifetime when compared to LEACH and LEACH C   22 refs",An efficient cluster based self organisation algorithm for wireless sensor networks,"['sensor placement', 'statistical analysis', 'wireless sensor networks', 'wireless sensor networks', 'WSN', 'ECSA', 'efficient cluster-based self-organisation algorithm', '2-hop neighbourhood', 'sensor location', 'energy dissipation', 'energy consumption', 'Wireless sensor networks', 'Other topics in statistics']","['Lehsaini, M', '', '', ' Guyennet, H', '', '', ' Feham, M', '', '']","LIFC Lab  of Comput  Eng , Franche Comte Univ , Besancon, France  2  Fac  of Eng  Sci , Tlemcen Univ , Tlemcen, Algeria",2010,ECSA
1160,1161,"The past 20 years has seen significant investments in the theory and practice of software architecture  However, architectural deficiencies are frequently cited as a key factor in the shortcomings and failures that lead to unpredictable delivery of complex operational systems  Here, we consider the art and science of software architecture  we explore the current state of software architecture, identify key architectural trends and directions in academia and industry, and highlight some of the architectural research challenges which need to be addressed  The paper proposes an agenda of research activities to be carried out by a partnership between academia and industry  While challenges exist in many domains, for this paper we draw examples from one area of particular concern  safety critical systems    Springer Verlag Berlin Heidelberg 2007   44 refs",The art and science of software architecture,"['Failure analysis', 'Systems engineering', 'Operational systems', 'Safety-critical systems', 'Computer Programming', 'Computer Applications', 'Mathematics', 'Systems Science']","['Brown, Alan W', '', '', ' McDermid, John A', '', '']","IBM Software Group, Raleigh, NC, United States  2  University of York, Heslington, York, United Kingdom",2007,ECSA
1161,1162,"The past 20 years has seen significant investments in the theory and practice of software architecture  However, architectural deficiencies are frequently cited as a key factor in the shortcomings and failures that lead to unpredictable delivery of complex operational systems  Here, we consider the art and science of software architecture  we explore the current state of software architecture, identify key architectural trends and directions in academia and industry, and highlight some of the architectural research challenges which need to be addressed  The paper proposes an agenda of research activities to be carried out by a partnership between academia and industry  While challenges exist in many domains, for this paper we draw examples from one area of particular concern  safety critical systems    Springer Verlag Berlin Heidelberg 2007   44 refs",The art and science of software architecture,"['Failure analysis', 'Systems engineering', 'Operational systems', 'Safety-critical systems', 'Computer Programming', 'Computer Applications', 'Mathematics', 'Systems Science']","['Brown, Alan W', '', '', ' McDermid, John A', '', '']","IBM Software Group, Raleigh, NC, United States  2  University of York, Heslington, York, United Kingdom",2008,ECSA
1162,1163,"The past 20 years has seen significant investments in the theory and practice of software architecture  However, architectural deficiencies are frequently cited as a key factor in the shortcomings and failures that lead to unpredictable delivery of complex operational systems  Here, we consider the art and science of software architecture  we explore the current state of software architecture, identify key architectural trends and directions in academia and industry, and highlight some of the architectural research challenges which need to be addressed  The paper proposes an agenda of research activities to be carried out by a partnership between academia and industry  While challenges exist in many domains, for this paper we draw examples from one area of particular concern  safety critical systems   44 refs",The art and science of software architecture,"['safety-critical software', 'software architecture', 'software architecture', 'complex operational systems', 'safety-critical systems', 'Software engineering techniques', 'Data security']","['Brown, A W', '', '', ' McDermid, J A']","Software Group, IBM, Raleigh, NC, United States",2007,ECSA
1163,1164,"The past 20 years has seen significant investments in the theory and practice of software architecture  However, architectural deficiencies are frequently cited as a key factor in the shortcomings and failures that lead to unpredictable delivery of complex operational systems  Here, we consider the art and science of software architecture  we explore the current state of software architecture, identify key architectural trends and directions in academia and industry, and highlight some of the architectural research challenges which need to be addressed  The paper proposes an agenda of research activities to be carried out by a partnership between academia and industry  While challenges exist in many domains, for this paper we draw examples from one area of particular concern  safety critical systems   44 refs",The art and science of software architecture,"['safety-critical software', 'software architecture', 'software architecture', 'complex operational systems', 'safety-critical systems', 'Software engineering techniques', 'Data security']","['Brown, A W', '', '', ' McDermid, J A']","Software Group, IBM, Raleigh, NC, United States",2008,ECSA
1164,1165,"The performance and long term stability of a direct methanol fuel cell  DMFC  employing PtRu supported on nitrogen modified carbon is compared with that of PtRu C  Hi spec 5000   The long term stability test is carried by means of accelerated degradation testing  ADT  at an anodic potential of 0 8 V vs  DHE for 640h  The initial DMFC performance of the MEA containing PtRu C  N  doped  is slightly lower than that of the PtRu C  Hi SPEC  because of the lower ECSA of the former  After 640h ADT, the anode ECSA loss is found to be 21  and 26  for the PtRu C  N doped  and PtRu C  Hi SPEC , respectively  Electrochemical analyzes reveal that cathode of the MEA with PtRu C  N doped  is less contaminated with Ru  It is further corroborated by post mortem analysis done by scanning electron microscopy  SEM  associated with EDS, which indicates 4 8 and 8 2 at   Ru accumulation, respectively, in the cathodes of the PtRu C  N doped  and PtRu C  Hi SPEC  MEAs after 640h ADT  Although both MEAs sustain anode and cathode ECSA losses, the performance for the PtRu C  N  doped  MEA is improved by 28  and 8  after initial and long term ADT, while the performance for the PtRu C  Hi SPEC  MEA is improved by 20  after initial and decreased by 3  after long term ADT",Enhanced Stability of PtRu Supported on N Doped Carbon for the Anode of a DMFC,"['Anodes', 'Carbon', 'Degradation', 'Direct methanol fuel cells', 'Platinum alloys', 'Accelerated testing', 'Carbon nanotubes', 'Catalysis', 'Catalysts', 'Doping', 'Electrochemistry', 'Electrodes', 'Nitrogen', 'Ruthenium', 'Scanning electron microscopy', 'Stability', 'Thermogravimetric analysis', 'Voltammetry', nan]","['Joghee, P', ' Pylypenko, S', ' Olson, T', ' Dameron, A', ' Corpuz, A', ' National Renewable Energy Lab , Golden, CO']",None,2012,ECSA
1165,1166,"The performance and long term stability of a direct methanol fuel cell  DMFC  employing PtRu supported on nitrogen modified carbon is compared with that of PtRu C  Hi spec 5000   The long term stability test is carried by means of accelerated degradation testing  ADT  at an anodic potential of 0 8 V vs  DHE for 640h  The initial DMFC performance of the MEA containing PtRu C  N doped  is slightly lower than that of the PtRu C  Hi SPEC  because of the lower ECSA of the former  After 640h ADT, the anode ECSA loss is found to be  21  and  26  for the PtRu C  N doped  and PtRu C  Hi SPEC , respectively  Electrochemical analyzes reveal that cathode of the MEA with PtRu C  N doped  is less contaminated with Ru  It is further corroborated by post mortem analysis done by scanning electron microscopy  SEM  associated with EDS, which indicates 4 8 and 8 2 at   Ru accumulation, respectively, in the cathodes of the PtRu C  N doped  and PtRu C  Hi SPEC  MEAs after 640h ADT  Although both MEAs sustain anode and cathode ECSA losses, the performance for the PtRu C  N doped  MEA is improved by  28  and  8  after initial and long term ADT, while the performance for the PtRu C  Hi SPEC  MEA is improved by  20  after initial and decreased by  3  after long term ADT  Copyright   2012 The Electrochemical Society   70 refs",Enhanced stability of PtRu supported on N doped carbon for the anode of a DMFC,"['Carbon', 'Cathodes', 'Direct methanol fuel cells (DMFC)', 'Methanol fuels', 'Platinum alloys', 'Scanning electron microscopy', 'Accelerated degradation testing (ADT)', 'Anodic potentials', 'Dmfc performance', 'Enhanced stability', 'Long term stability', 'Long-term stability test', 'N-doped', 'Postmortem analysis', 'Chemical Products Generally', 'Chemistry', 'Light Optics', 'Electric Components', 'Fuel Cells', 'Precious Metals', 'Liquid Fuels']","['Joghee, Prabhuram', '', '', 'Pylypenko, Svitlana', ' ,', '', ' Olson, Tim', '', '', 'Dameron, Arrelaine', '', '', 'Corpuz, April', '', '', 'Dinh, Huyen N', '', '', ' Wood, Kevin', '', '', 'Kevin O Neill', '', '', 'Hurst, Katherine', '', '', 'Bender, Guido', '', '', 'Gennett, Thomas', '', '', 'Pivovar, Bryan', '', '', 'O Hayre, Ryan']","Department of Metallurgical and Materials Engineering, Colorado School of Mines, Golden, CO 80401, United States  2  National Renewable Energy Laboratory, Golden, CO 80401, United States  3  Department of Chemistry, Colorado School of Mines, Golden, CO 80401, United States",2012,ECSA
1166,1167,"The performance of a ten cell 50 cm2 100 W polymer electrolyte membrane fuel cell  PEMFC  stack was evaluated under dynamic load cycling conditions utilizing the 2005 United States Department of Energy durability test protocol for PEFCs  An enhancement of performance was observed during the first 240 h, while an irreversible degradation of stack performance was observed after 480 h   4700 cycles   In particular, the stack voltage at 100 mA cm 2was decreased by 2 8  after 480 h and individual cell voltage was decreased up to 8   An analysis of cell overpotentials for activation, Ohmic, and mass transport losses revealed that the predominant source of performance degradation was due to kinetic losses  The loss of catalyst utilization was estimated to be 39  based on the electrochemically active surface area  ECSA  measurements  Electron microscopic images of some of the cells showed growth in cathode Pt particle size from 5 3 to 6 2 nm  However, these microscopic images did not show any membrane damage or electrode thinning  Severe degradation of both the anode and cathode silicone gasket seals was observed during the durability test    2013 Elsevier Ltd  All rights reserved   33 refs",Performance of individual cells in polymer electrolyte membrane fuel cell stack under load cycling conditions,"['Activation analysis', 'Cathodes', 'Durability', 'Dynamic loads', 'Electrolytes', 'Polymers', 'Silicones', 'Catalyst utilization', 'Electrochemically active surface areas', 'Irreversible degradation', 'Mass transport loss', 'Performance degradation', 'Polymer electrolyte fuel cells', 'Polymer electrolyte membranes', 'United states department of energies', 'Plastics and Other Polymers  Products and Applications', 'Plastics and Other Polymers  Processing and Machinery', 'Polymeric Materials', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemistry', 'Electric Components', 'Fuel Cells', 'Electric Batteries and Fuel Cells', 'Strength of Building Materials  Mechanical Properties', 'Structural Design, General']","['Bose, A', '', '', ' Babburi, P', '', '', ' Kumar, R', '', '', ' Myers, D', '', '', ' Mawdsley, J', '', '', ' Milhuff, J', '', '']","Department of Engineering Technology, Texas Center for Superconductivity, University of Houston, Houston, TX 77204, United States  2  Unit 1J, 1500 Harbour Dr, Wheeling, IL 60090, United States  3  Chemical Sciences and Engineering Division, Argonne National Laboratory, 9700S Cass Avenue, Argonne, IL 60439, United States",2013,ECSA
1167,1168,The performance of polymer electrolyte membrane fuel cells  PEMFCs  was reduced due to the degradation of the catalyst layer when reverse potential was generated by fuel starvation in PEMFCs  Detailed analysis was performed through accelerated reversal potential tests  The electrochemical impedance spectroscopy  EIS  measurement results showed that the charge transfer resistance increased and the electrochemical active surface area  ECSA  reduction was confirmed through the cyclic voltammetry  CV  measurements  Corrosion of the carbon used as the catalyst support was detected by confirming the CO peak in the 1st cyclic voltammogram in the CV measurements  Growth of the Pt catalyst due to the agglomeration and sintering of Pt was confirmed during increasing cycles of the accelerated reversal potential through X ray diffraction  XRD  and transmission electron microscopy  TEM  analyses    2010 Professor T  Nejat Veziroglu   21 refs,Accelerated test analysis of reversal potential caused by fuel starvation during PEMFCs operation,"['Agglomeration', 'Catalyst supports', 'Charge transfer', 'Cyclic voltammetry', 'Electrochemical corrosion', 'Electrochemical impedance spectroscopy', 'Ion exchange', 'Photodegradation', 'Platinum', 'Scanning electron microscopy', 'Sintering', 'Transmission electron microscopy', 'X ray diffraction', 'X ray diffraction analysis', 'Accelerated tests', 'C-V measurement', 'Carbon corrosion', 'Catalyst layers', 'Charge transfer resistance', 'Cyclic voltammograms', 'Electrochemical active surface areas', 'Electrochemical impedance spectroscopy measurements', 'Polymer electrolyte membrane fuel cells', 'Pt catalysts', 'TEM', 'Electric Variables Measurements', 'Chemical Reactions', 'Chemical Operations', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Refractories', 'Physical Properties of Gases, Liquids and Solids', 'Atomic and Molecular Physics', 'Crystal Lattice', 'Electrochemistry', 'Ore Treatment', 'Powder Metallurgy Operations', 'Metals Corrosion', 'Chemistry', 'Precious Metals', 'Light Optics', 'Optical Devices and Systems', 'Fuel Cells']","['Kang, Jungtak', '', '', 'Jung, Dong Won', '', '', 'Park, Soon', '', '', 'Lee, Jong Hyun', '', '', 'Ko, Jaejoon', '', '', 'Kim, Junbom']","School of Chemical Engineering and Bioengineering, University of Ulsan, Ulsan, 680 749, Korea, Republic of  2  School of Materials Science and Engineering, University of Ulsan, Ulsan, 680 749, Korea, Republic of  3  Hyundai Motor Company, Fuel Cell Vehicle Team 1, 104 Mabuk dong, Giheung Gu, Yongin Si, Gyeonggi Do 446 912, Korea, Republic of",2010,ECSA
1168,1169,"The performances of anode Pd catalysts modified with metal oxides in CO contaminated H2 were investigated for polymer electrolyte fuel cell  PEFC   The catalysts were prepared by facile impregnation method and characterized by X ray diffraction  XRD , Scanning Transmission Electron Microscope  STEM  and CO stripping voltammetry  Comparison of both modified Pd anode with pure Pd C and state of the art Pt C shows an improvement in the cell performance when 500 ppm CO H2 mixture is fed  The improvement was due to much smaller Pd particle size, which significantly increases the electrochemical surface area  ECSA   In principle, carbon supported Pd modified with metal oxides catalyst has shown a possibility to replace the used of Pt as anode electrode for PEFC   The Electrochemical Society   9 refs",Prospective of Pd MOx as alternative Pt anode catalyst for polymer electrolyte fuel cell,"['Catalysts', 'Palladium', 'Platinum', 'Polyelectrolytes', 'Transmission electron microscopy', 'X ray diffraction', 'Anode electrodes', 'Cell performance', 'Electrochemical surface area', 'Impregnation methods', 'Metal oxides', 'Pd catalyst', 'Pd particle size', 'Polymer electrolyte fuel cells', 'Pt anodes', 'Scanning transmission electron microscopes', 'Atomic and Molecular Physics', 'Organic Polymers', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Optical Devices and Systems', 'Fuel Cells', 'Precious Metals']","['Muhamad, Ernee Noryana', ' ,', '', ' Takeguchi, Tatsuya', '', '', 'Wang, Guoxiong', '', '', 'Yamanaka, Toshiro', '', '', 'Ueda, Wataru']","Catalysis Research Center, Hokkaido University, Sapporo 001 0021, Japan  2  Chemistry Department, Faculty of Science, Universiti Putra Malaysia, 43400 Serdang, Selangor, Malaysia",2010,ECSA
1169,1170,"The platinum  Pt  particle electrocatalysts supported on the indium tin oxide  ITO  substrate were prepared by the pulsed electrodeposition for the methanol oxidation  The effect of the lower potential pulse duration  t l  of the electrodeposition on the surface morphology and structure of the Pt particles was investigated by the X ray diffraction and scanning electron microscopy  The amount of the Pt loading was determined by an inductively coupled plasma method, and the electrocatalytic activity of the prepared Pt electrocatalysts on the ITO for the methanol oxidation was characterized by cyclic voltammetry  The results showed that the tl has a significant influence on the surface morphology of the Pt particles on the ITO substrate  As the tl decreases from 1 to 0 01 s, the deposited Pt particles on the ITO exhibit flower , nanosheet , prickly and smooth spherical like morphology in turn  Furthermore, there is a remarkable effect of the surface morphology of the Pt particles on the electrocatalytic activity for the methanol oxidation  Among all these morphologies, the flower  and nanosheet like Pt particles on the ITO have a much higher mass specific activity  MA  for the methanol oxidation, and the Pt particles with prickly surface followed while the smooth spherical Pt particles have the lowest MA  In particular, the dispersed Pt nanosheets prepared at tl of 0 5 s has the highest MA  The much improved MA of the dispersed Pt nanosheets is attributed not only to the large electrochemically active surface area  ECSA  achieved, but also to the high electrocatalytic activity per unit ECSA related to its special morphology    2013 Elsevier Ltd   50 refs",Pulsed electrodeposition of Pt particles on indium tin oxide substrates and their electrocatalytic properties for methanol oxidation,"['Cyclic voltammetry', 'Electrocatalysts', 'Electrodeposition', 'Electrolysis', 'Inductively coupled plasma', 'Methanol', 'Morphology', 'Nanosheets', 'Oxidation', 'Scanning electron microscopy', 'Substrates', 'Surface morphology', 'Tin', 'Tin oxides', 'X ray diffraction', 'Electrocatalytic activity', 'Electrocatalytic properties', 'Electrochemically active surface areas', 'Indium tin oxide', 'Indium tin oxide substrates', 'Methanol Oxidation', 'Pt catalysts', 'Pulsed electrodeposition', 'Chemical Agents and Basic Industrial Chemicals', 'Organic Compounds', 'Inorganic Compounds', 'Materials Science', 'Coating Techniques', 'Solid State Physics', 'Crystal Lattice', 'Plasma Physics', 'Chemical Reactions', 'Electrochemistry', 'Bioengineering and Biology', 'Tin and Alloys', 'Precious Metals', 'Light Optics', 'Nanotechnology', 'Chemistry']","['Liu, Jie', '', '', 'Zhong, Cheng', '', '', 'Du, Xintong', '', '', 'Wu, Yating', '', '', 'Xu, Peizhi', '', '', 'Liu, Jinbo', ' ,', '', ' Hu, Wenbin']","State Key Laboratory of Metal Matrix Composites, Shanghai Jiao Tong University, Shanghai 200240, China  2  Department of Chemistry, Texas AandM University Kingsville, MSC 161, Kingsville, TX 78363 8012, United States  3  Advanced Light Source, ALS Lawrence Berkeley National Laboratory, Berkeley, CA 94720, United States",2013,ECSA
1170,1171,"The platinum  Pt  particle electrocatalysts were fabricated by a surfactant free, electro deposition technique in the cyclic voltammetric mode for electro oxidation of ammonia in aqueous solutions  The hierarchical Pt nanoparticles with various morphologies, including sheet , flower , prickly sphere  and cauliflower like shapes, were obtained by controlling the electrodepositing parameters  The amount of Pt loading was determined by an inductively coupled plasma method, and the electrocatalytic activity of the prepared nano Pt electrocatalysts for the ammonia oxidation was characterized by cyclic voltammetry  The results showed that there is a remarkable effect of the surface morphology of Pt particles on the electrocatalytic activity  In particular, the hierarchical Pt particles have a much higher electrocatalytic activity for the ammonia oxidation than the smooth, spherical Pt particles  The improved electrocatalytic activity is attributed not only to the large electrochemically active surface area  ECSA  achieved, but also to the high electrocatalytic activity per unit ECSA  Electro deposition technique provides a promising alternative to fabricate high performance electrocatalysts for oxidation of ammonia in aqueous solutions    2012 Elsevier B V  All rights reserved   45 refs",Surfactant free electrochemical synthesis of hierarchical platinum particle electrocatalysts for oxidation of ammonia,"['Ammonia', 'Cyclic voltammetry', 'Electrocatalysts', 'Electrolysis', 'Inductively coupled plasma', 'Nanoparticles', 'Oxidation', 'Solutions', 'Surface morphology', 'Ammonia oxidation', 'Electrocatalytic activity', 'Electrochemical synthesis', 'Electrochemically active surface areas', 'Inductively-coupled', 'Per unit', 'Platinum nanoparticles', 'Platinum particles', 'Pt loading', 'Pt nanoparticles', 'Pt particle', 'Surfactant-free', 'Voltammetric', 'Solid State Physics', 'Plasma Physics', 'Inorganic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Materials Science', 'Chemical Reactions', 'Chemistry', 'Nanotechnology', 'Electric and Magnetic Materials', 'Precious Metals', 'Electrochemistry']","['Liu, Jie', '', '', 'Hu, Wenbin', '', '', 'Zhong, Cheng', '', '', 'Cheng, Y', 'Frank']","State Key Laboratory of Metal Matrix Composites, Shanghai Jiao Tong University, Shanghai 200240, China  2  Department of Mechanical and Manufacturing Engineering, University of Calgary, 2500 University Drive NW, Calgary, AB T2N 1N4, Canada",2013,ECSA
1171,1172,"The price of the electrical energy produced by state of the art PEMFC is high, which hampers their full commercialization  One of the most expensive components is the catalyst material directly followed by its production method  Here we report on a high yield and relatively cheap synthesis of monodisperse platinum nanoparticles using bicontinuous microemulsion  Small nanoparticles of 2 4 nm in size have been synthesized  Process rate is controlled by the reducing agent and surfactants control the size of the resulting nanoparticles  The catalyst produced in the sodium AOT water heptane microemulsion showed higher durability compared to commercial catalysts  In addition, all nanoparticles produced by this procedure had a higher electrochemical surface area  ECSA  compared to commercial catalyst  Copyright   2013 Delta Energy and Environment   2 refs",High yield synthesis of a durable platinum catalyst in bicontinuous microemulsion for PEMFC applications,"['Durability', 'Microemulsions', 'Nanoparticles', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Synthesis (chemical)', 'Bicontinuous microemulsion', 'Catalyst material', 'Commercial catalyst', 'Electrochemical surface area', 'High yield synthesis', 'Platinum catalysts', 'Platinum nano-particles', 'Production methods', 'Strength of Building Materials  Mechanical Properties', 'Precious Metals', 'Fuel Cells', 'Electric and Magnetic Materials', 'Nanotechnology', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Solid State Physics']","['Latsuzbaia, R', '', '', ' Negro, E', '', '', ' Koper, G J M', '', '']","Chemical Engineering, TU Delft, Julianalaan 136, BL Delft, Netherlands",2013,ECSA
1172,1173,"The problem of composing services to deliver integrated business solutions has been widely studied in the last years  Besides addressing functional requirements, services compositions should also provide agreed service levels  Our goal is to support model based analysis of service compositions, with a focus on the assessment of non functional quality attributes, namely performance and reliability  We propose a model driven approach, which automatically transforms a design model of service composition into an analysis model, which then feeds a probabilistic model checker for quality prediction  To bring this approach to fruition, we developed a prototype tool called ATOP, and we demonstrate its use on a simple case study    2008 Springer Berlin Heidelberg   39 refs",Quality prediction of service compositions through probabilistic model checking,"['Computer software selection and evaluation', 'Model checking', 'Reliability analysis', 'Analysis models', 'Design models', 'Functional requirement', 'Integrated business', 'Model driven approach', 'Model-based analysis', 'Non-functional', 'Probabilistic model checking', 'Probabilistic models', 'Prototype tools', 'Quality attributes', 'Quality prediction', 'Service compositions', 'Service levels', 'Services composition', 'Management', 'Computer Applications', 'Computer Programming', 'Production Planning and Control  Manufacturing', 'Computer Software, Data Handling and Applications', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Strength of Building Materials', 'Methods', 'Logic Elements']","['Gallotti, Stefano', '', '', 'Ghezzi, Carlo', '', '', 'Mirandola, Raffaela', '', '', 'Tamburrelli, Giordano']","DeepSe Group Dipartimento di Elettronica e Informazione, Politecnico di Milano, Piazza Leonardo Da Vinci, 32, 20133 Milano, Italy",2008,QoSA
1173,1174,"The problem of composing services to deliver integrated business solutions has been widely studied in the last years  Besides addressing functional requirements, services compositions should also provide agreed service levels  Our goal is to support model based analysis of service compositions, with a focus on the assessment of non functional quality attributes, namely performance and reliability  We propose a model driven approach, which automatically transforms a design model of service composition into an analysis model, which then feeds a probabilistic model checker for quality prediction  To bring this approach to fruition, we developed a prototype tool called ATOP, and we demonstrate its use on a simple case study   39 refs",Quality prediction of service compositions through probabilistic model checking,"['probability', 'software architecture', 'quality prediction', 'service compositions', 'probabilistic model checking', 'integrated business solutions', 'model-based analysis', 'nonfunctional quality attributes', 'ATOP', 'Software engineering techniques', 'Other topics in statistics']","['Gallotti, S', '', '', ' Ghezzi, C', '', '', ' Mirandola, R', '', '', ' Tainburrelli, G', '', '']","DeepSE Group Dipt  di Elettron  e Inf , Politec  di Milano, Milan, Italy",2008,QoSA
1174,1175,The proceedings contain 12 papers  The topics discussed include  expanding the scope of software product families  problems and alternative approaches  composing with style   components meet architecture  documentation principles and practices that you can live with  model based software development with eclipse  software architecture analysis and evaluation  MEMS  a method for evaluating middleware architectures  evaluating alternative COTS assemblies from imperfect component information  building up and reasoning about architectural knowledge  managing architectural design decisions for safety critical software systems  runtime prediction of queued behaviour  model transformation in software performance engineering  a practical architecture centric analysis process  embedded systems architecture  evaluation and analysis  parameter dependent performance specifications of software components  and towards an integration of standard component based safety evaluation techniques with SaveCCM,"Quality of Software Architectures   Second International Conference on Quality of Software Architectures, QoSA 2006, Revised Papers",[nan],"['Source', 'Lecture Notes in Computer Science', 'including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics , v', '', '', 'LNCS,', '', ' , Quality of Software Architectures', ' Second International Conference on Quality of Software Architectures, QoSA', '', ' , Revised Papers', 'ISSN', '', '', '', '', ', E ISSN', '', '', '', '', '', 'ISBN', '', '', '', '', '', '', ' , ISBN', '', '', '', '', '', '', '', '', '', 'Conference', ' nd International Conference on Quality of Software Architectures, QoSA', '', ' , June', ' ,', '', '', '', 'June', ' ,', '', '', ' Sponsor', 'University of Karlsruhe', 'Malardalen University', 'Vasteras City', 'Publisher', 'Springer Verlag']",None,2006,QoSA
1175,1176,"The proceedings contain 30 papers  The topics discussed include  risk themes discovered through architecture evaluations  assessing the architectonics of large, software intensive systems using a knowledge based approach  inside architecture evaluation  analysis and representation of optimization potential  tool support for architectural decisions  a framework for the assessment and selection of software components and connectors in cots based architectures  a model driven approach to extract views from an architecture description language  architecture assessment model for system evolution  assessing a multi site development organization for architectural compliance  constructing a reading guide for software product audits  a comparison of static architecture compliance checking approaches  training initiative for new software enterprise architects  an ontological approach  and the duties, skills, and knowledge of software architects","2007 Working IEEE IFIP Conference on Software Architecture, WICSA  07","['Decision support systems', 'Mathematical models', 'Ontology', 'Optimization', 'Systems engineering', 'Architectonics', 'Architectural decisions', 'Cots-based architectures', 'Software-intensive systems', 'Computer Programming', 'Computer Applications', 'Management', 'Optimization Techniques', 'Systems Science']","['Source', '', '', ' Working IEEE IFIP Conference on Software Architecture', 'WICSA', '', ',', '', ' ,', '', '', 'Working IEEE IFIP Conference on Software Architecture, WICSA', '', ' ISBN', '', '', '', '', '', '', ' , ISBN', '', '', '', '', '', '', '', '', '', 'Conference', '', '', ' Working IEEE IFIP Conference on Software Architecture, WICSA', ' , January', ',', '', '', '', 'January', ',', '', '', ' Publisher', 'Inst', 'of Elec', 'and Elec', 'Eng', 'Computer Society']",None,2007,WICSA
1176,1177,The proceedings contain 34 papers  The topics discussed include  a fresh look at codification approaches for SAKM  a systematic literature review  suitability of software architecture decision making methods for group decisions  modeling the interactions between decisions within software architecture knowledge  combining architectural design decisions and legacy system evolution  ontology driven pattern selection and matching in software design  towards an improved stakeholder management for software reference architectures  towards a coordination centric architecture metamodel for social web applications  using policies for handling complexity of event driven architectures  architecture strategies for cyber foraging  preliminary results from a systematic literature review  and adapting enterprise architecture at a software development company and the resultant benefits,"Software Architecture   8th European Conference, ECSA 2014, Proceedings",[nan],"['Source', 'Lecture Notes in Computer Science', 'including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics , v', '', '', 'LNCS,', '', ' , Software Architecture', '', 'th European Conference, ECSA', '', ' , Proceedings', 'ISSN', '', '', '', '', ', E ISSN', '', '', '', '', '', 'ISBN', '', '', '', '', '', '', '', '', '', 'Conference', ' th European Conference on Software Architecture, ECSA', '', ' , August', ' ,', '', '', '', 'August', ' ,', '', '', ' Publisher', 'Springer Verlag']",None,2014,ECSA
1177,1178,"The proceedings contain 35 papers  The topics discussed include  elements for a Cloud based development environment  online collaboration, revision control, and continuous integration  an architecture framework for application managed scaling of Cloud hosted relational databases  framework for monitoring and testing web application scalability on the Cloud  a first account on stigmergic information systems and their impact on platform development  towards bridging the communication gap between consumers and providers in the Cloud  VULCAN  architecture model based software development workbench  aligning architecture knowledge management with scrum  a case study on co evolution of software artifacts using integrated views  modeling variability in product lines using domain quality attribute scenarios  and configurator as a service  tool support for deriving software architectures at runtime","Joint 10th Working Conference on Software Architecture, WICSA 2012 and 6th European Conference on Software Architecture, ECSA 2012   Proceedings Companion Volume",[nan],"['Source', 'ACM International Conference Proceeding Series,', '', ' , Joint', ' th Working Conference on Software Architecture, WICSA', '', '', 'and', 'th European Conference on Software Architecture, ECSA', '', '', '', 'Proceedings Companion Volume', 'ISBN', '', '', '', '', '', '', '', '', '', 'Conference', '', '', ' Joint', ' th Working IEEE IFIP Conference on Software Architecture, WICSA', '', '', 'and the', 'th European Conference on Software Architecture, ECSA', '', ' , August', ' ,', '', '', '', 'August', ' ,', '', '', ' Publisher', 'Association for Computing Machinery']",None,2012,WICSA
1178,1179,"The proceedings contain 36 papers  The topics discussed include  software architecture for task oriented computing  an active architecture approach to dynamic systems co evolution  pattern based evolution of software architectures, formal design of structural and dynamic features of publish subscribe architectural styles  an ontology based approach for modelling architectural styles  enabling adaptivity in user interfaces  architecture migration driven by code categorization  effective tool support for architectural knowledge sharing  a goal oriented approach for the generation and evaluation of alternative architectures  first class connectors for prototyping service oriented architectures  wireless sensor network application development  an architecture centric MDE approach  and a distributed stage architecture for multimodal applications","Software Architecture First European Conference, ECSA 2007 Proceedings","['Ontology', 'Requirements engineering', 'Software prototyping', 'User interfaces', 'Wireless sensor networks', 'Architectural styles', 'Knowledge sharing', 'MDE approach', 'Pattern based evolution', 'Radio Systems and Equipment', 'Computer Peripheral Equipment', 'Computer Programming', 'Computer Applications']","['Source', 'Lecture Notes in Computer Science', 'including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics , v', '', '', 'LNCS,', '', ' , Software Architecture', ' First European Conference, ECSA', '', ' , Proceedings', 'ISSN', '', '', '', '', ', E ISSN', '', '', '', '', '', 'ISBN', '', '', '', '', '', '', '', '', '', 'Conference', ' st European Conference on Software Architecture, ECSA', '', ' , September', ' ,', '', '', '', 'September', ' ,', '', '', ' Publisher', 'Springer Verlag']",None,2007,ECSA
1179,1180,"The proceedings contain 36 papers  The topics discussed include  software architecture for task oriented computing  an active architecture approach to dynamic systems co evolution  pattern based evolution of software architectures, formal design of structural and dynamic features of publish subscribe architectural styles  an ontology based approach for modelling architectural styles  enabling adaptivity in user interfaces  architecture migration driven by code categorization  effective tool support for architectural knowledge sharing  a goal oriented approach for the generation and evaluation of alternative architectures  first class connectors for prototyping service oriented architectures  wireless sensor network application development  an architecture centric MDE approach  and a distributed stage architecture for multimodal applications","Software Architecture First European Conference, ECSA 2007 Proceedings","['Ontology', 'Requirements engineering', 'Software prototyping', 'User interfaces', 'Wireless sensor networks', 'Architectural styles', 'Knowledge sharing', 'MDE approach', 'Pattern based evolution', 'Radio Systems and Equipment', 'Computer Peripheral Equipment', 'Computer Programming', 'Computer Applications']","['Source', 'Lecture Notes in Computer Science', 'including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics , v', '', '', 'LNCS,', '', ' , Software Architecture', ' First European Conference, ECSA', '', ' , Proceedings', 'ISSN', '', '', '', '', ', E ISSN', '', '', '', '', '', 'ISBN', '', '', '', '', '', '', '', '', '', 'Conference', ' st European Conference on Software Architecture, ECSA', '', ' , September', ' ,', '', '', '', 'September', ' ,', '', '', ' Publisher', 'Springer Verlag']",None,2008,ECSA
1180,1181,"The proceedings contain 4 papers  The topics discussed include  Subclack  feature oriented programming with behavioral feature interfaces  wyvern  a simple, typed, and pure object oriented language  what shall we tell the children  about inheritance   and inheritance versus parameterization","Proceedings of MASPEGHI 2013  MechAnisms for SPEcialization, Generalization and InHerItance Workshop   In Conjunction with the Colocated Conferences, ECOOP, ECMFA and ECSA 2013",[nan],"['Source', 'Proceedings of MASPEGHI', '', '', ' MechAnisms for SPEcialization, Generalization and InHerItance Workshop', ' In Conjunction with the Colocated Conferences, ECOOP, ECMFA and ECSA', '', ' ,', '', ' , Proceedings of MASPEGHI', '', '', ' MechAnisms for SPEcialization, Generalization and InHerItance Workshop', ' In Conjunction with the Colocated Conferences, ECOOP, ECMFA and ECSA', '', '', ' ISBN', '', '', '', '', '', '', ' , ISBN', '', '', '', '', '', '', '', '', '', 'Conference', ' th Workshop on MechAnisms for SPEcialization, Generalization and inHerItance, MASPEGHI', '', '', '', 'In Conjunction with the Colocated Conferences, ECOOP, ECMFA and ECSA', '', ' , July', ',', '', '', '', 'July', ',', '', '', ' Sponsor', 'Association Internationale pour les Technologies Objets', 'AITO', ' Centre National de la Rechercue Scientifique', 'CNRS', ' University Montpellier', '', 'UM', '', 'Publisher', 'Association for Computing Machinery']",None,2013,ECSA
1181,1182,"The proceedings contain 43 papers  The topics discussed include  an economics driven approach for valuing scalability in distributed architectures  efficient quality impact analyses for iterative architecture construction  media player software in a system of subsystems  interplay of architecture, business goals, and current technology in the evolution of call center systems  coordination implications of software architecture in a global software development project  a just in time architectural knowledge sharing portal  combining pattern languages and reusable architectural decision models into a comprehensive and comprehensible design method  introducing recovery style for modeling and analyzing system recovery  supporting the evolution of product line architectures with variability model fragments  and towards a formal model for reconfigurable software architectures by bigraphs","7th IEEE IFIP Working Conference on Software Architecture, WICSA 2008",[nan],"['Editors', 'Anon']",None,2008,WICSA
1182,1183,The proceedings contain 48 papers  The topics discussed include  a case study on the evolution of a component based product line  supporting model maintenance in component based product lines  workload aware system monitoring using performance predictions applied to a large scale e mail system  SecArch  architecture level evaluation and testing for security  a runtime resource aware architecture for service oriented embedded systems  COAST  an architectural style for decentralized on demand tailored services  in search of a metric for managing architectural technical debt  architectural decision making for service based platform integration  a qualitative multi method study  on the composition and reuse of viewpoints across architecture frameworks  a study of architectural information foraging in software architecture documents  and semantic analysis of component aspect dynamism for connector based architecture styles,"Proceedings of the 2012 Joint Working Conference on Software Architecture and 6th European Conference on Software Architecture, WICSA ECSA 2012",[nan],"['Source', 'Proceedings of the', '', '', 'Joint Working Conference on Software Architecture and', 'th European Conference on Software Architecture, WICSA ECSA', '', ' ,', '', ' , Proceedings of the', '', '', 'Joint Working Conference on Software Architecture and', 'th European Conference on Software Architecture, WICSA ECSA', '', '', ' ISBN', '', '', '', '', '', '', '', '', '', 'Conference', 'Joint', ' th Working IEEE IFIP Conference on Software Architecture, WICSA', '', '', 'and', 'th European Conference on Software, ECSA', '', ' , August', ' ,', '', '', '', 'August', ' ,', '', '', ' Publisher', 'IEEE Computer Society']",None,2012,WICSA
1183,1184,The proceedings contain 56 papers  The topics discussed include  quantitative observation and theoretical construction in software architecture  what architects should know about reverse engineering and reengineering  sparking research ideas from the friction between doctrine and reality  on the meeting of software architecture and reverse engineering  using architectural perspectives  customized benchmark generation using MDA  extending the ATAM architecture evaluation to product line architectures  predicting change impact in architecture design with Bayesian belief networks  a survey of the use and documentation of architectural design rationale  a declarative approach to architectural reflection  architecting session report  measuring architecting effort  architecture description languages in practice session report  components and services session report  architectural design decision session report  an architecture and its rationale  and position on ontology based architecture,"Software Architecture, 2005  WICSA 2005  5th Working IEEE IFIP Conference on 2005","['Bayesian networks', 'Benchmarking', 'Ontology', 'Reverse engineering', 'Architectural design rationale', 'Architecture description languages', 'Product line architectures', 'Computer Programming', 'Industrial Engineering and Management', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory']","['Source', 'Proceedings', '', 'th Working IEEE IFIP Conference on Software Architecture, WICSA', '', ' , v', '', ' ,', '', ' , Proceedings', '', 'th Working IEEE IFIP Conference on Software Architecture, WICSA', '', '', ' ISBN', '', '', '', '', '', '', ' , ISBN', '', '', '', '', '', '', '', '', '', 'Conference', ' th Working IEEE IFIP Conference on Software Architecture, WICSA', '', ' , November', ',', '', '', '', 'November', ' ,', '', '', ' Sponsor', 'IEEE CS Technical Council on Software Engineering', 'IFIP WG', '', '', 'Software Architecture', 'IEEE Computer Society', 'Reengineering Forum', 'REF', ' Publisher', 'Inst', 'of Elec', 'and Elec', 'Eng', 'Computer Society']",None,2005,WICSA
1184,1185,"The proceedings contain 6 papers  The topics discussed include  model based tool support for consistent three way merging of EMF models  Fokus MBT   a multi paradigmatic test modeling environment  an EMF based toolkit for reasoning on web services evolution  GraCoT, a tool for co creation of models and metamodels in specific domains  towards tool support for pattern based secure and dependable systems development  and MTC Flow  a tool to design, develop and deploy model transformation chains","ACadeMics Tooling with Eclipse, ACME 2013   A Joint ECMFA ECSA ECOOP Workshop",[nan],"['Source', 'ACadeMics Tooling with Eclipse, ACME', '', '', '', 'A Joint ECMFA ECSA ECOOP Workshop,', '', ' , ACadeMics Tooling with Eclipse, ACME', '', '', '', 'A Joint ECMFA ECSA ECOOP Workshop', 'ISBN', '', '', '', '', '', '', '', '', '', 'Conference', 'Workshop on ACadeMics Tooling with Eclipse, ACME', '', '', '', 'A Joint ECMFA ECSA ECOOP Workshop, July', ',', '', '', '', 'July', ',', '', '', ' Sponsor', 'ACM Special Interest Group on Software Engineering', 'SIGSOFT', ' Centre National De La Recherche Scientifique', 'CNRS', ' ACM Special Interest Group on Programming Languages', 'SIGPLAN', ' University Montpellier', '', 'UM', '', 'Association Internationale pour les Technologies Objects', 'AITO', ' Publisher', 'Association for Computing Machinery']",None,2013,ECSA
1185,1186,"The process of web service composition involves different partner web services that are published over the internet  The Representational State Transfer  REST  web services adopt different architectural style compared to Remote Procedure Call  RPC  web services  In this paper, we address these differences in the context of web service compositions and motivate the need for new designing techniques that lead to RESTful interfaces  We provide a UML based modeling approach for the composition of RESTful web services that models the composition for its static and behavioral features  These models provide RESTful compositions by construction, serve as a part of specification document, have mapping to several web implementation languages and can also be used to validate a RESTful composition  We illustrate the applicability of the approach with a sample Hotel and Flight booking RESTful composite web service    2010 ACM   19 refs",Modeling a composite RESTful web service with UML,"['Query languages', 'Security of data', 'Software architecture', 'Technical presentations', 'Architectural style', 'Behavioral features', 'Composite Web services', 'Designing techniques', 'Modeling approach', 'Remote procedure calls', 'RESTful Web services', 'State transfer', 'Web implementation', 'Web service composition', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Rauf, Irum', '', '', 'Ruokonen, Anna', '', '', 'Systa, Tarja', '', '', 'Porres, Ivan']","Dept  of Information Technologies, Abo Akademi University, Turku, Finland  2  Dept  of Software Systems, Tampere University of Technology, Tampere, Finland",2010,ECSA
1186,1187,"The proponents of Agile software development approaches claim that software architecture emerges from continuous small refactoring, hence, there is not much value in spending upfront effort on architecture related issues  Based on a large scale empirical study involving 102 practitioners who had worked with agile and architecture approaches, we have found that whether or not architecture emerges through continuous refactoring depends upon several contextual factors  Our study has identified 20 factors that have been categorized into four elements  project, team, practices, and organization  These empirically identified contextual factors are expected to help practitioners to make informed decisions about their architecture practices in agile software development    2014 IEEE   261 refs",Towards an evidence based understanding of emergence of architecture through continuous refactoring in agile software development,"['Software architecture', 'Software design', 'Agile software development', 'Architecture practice', 'Contextual factors', 'Empirical studies', 'Evidence-based', 'Informed decision', 'Refactorings', 'Buildings and Towers', 'Computer Programming']","['Chen, Lianping', '', '', 'Babar, Muhammad Ali', ' ,', '']","Lero   the Irish Software Engineering Research Center, University of Limerick, Limerick, Ireland  2  Paddy Power PLC Dublin, Ireland  3  University of Adelaide, Adelaide, Australia",2014,WICSA
1187,1188,"The publish subscribe paradigm is a common concept for delivering events from information producers to consumers in a decoupled manner  Some approaches allow durable subscriptions or the transportation of events even to mobile subscribers in a dynamic network infrastructure  However, in the safety critical telematics durable delivery of events is not sufficient enough  Short network connectivity time and small bandwidth limit the number and size of events to be transmitted hence relevant information needed for safety critical decision making may not be timely delivered  In this paper we propose the integration of publish subscribe systems and Aspect oriented Space Containers  ASC  distributed via Distributed Hash Tables  DHT  in the network  The approach allows storage, manipulation, pre processing, and prioritization of messages sent to mobile peers during bursts of connectivity  The benefits of the proposed approach are a  less complex application logic due to the processing capabilities of Space Containers, and b  increased efficiency due to delivery of essential messages only aggregated and processed while mobile peers are not connected  We describe the architecture of the proposed approach and explain its benefits by means of an industry use case    2009 IEEE   18 refs",Introducing aspect oriented space containers for efficient publish subscribe scenarios in intelligent transportation systems,"['Architecture', 'Computer software', 'Containers', 'Intelligent vehicle highway systems', 'Wireless networks', 'Aspect-oriented', 'Bandwidth limit', 'Complex applications', 'Distributed hash tables', 'Dynamic network', 'Industry use-cases', 'Intelligent transportation systems', 'Mobile subscribers', 'Network connectivity', 'Number and size', 'Pre-processing', 'Prioritization', 'Processing capability', 'Publish/subscribe', 'Publish/Subscribe system', 'Safety-critical', 'Telematics', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Data Communication, Equipment and Techniques', 'Computer Applications', 'Radio Systems and Equipment', 'Bulk Handling and Unit Loads', 'Highway Systems', 'Buildings and Towers', 'Packaging']","['K hn, Eva', '', '', 'Mordinyi, Richard', '', '', 'Keszthelyi, Laszlo', '', '', 'Schreiber, Christian', '', '', 'Bessler, Sandford', '', '', 'Tomic, Slobodanka']","Space based Computing Group, Vienna University of Technology, Favoritenstr  9 11, 1040 Vienna, Austria  2  Telecommunications Research Centre Vienna  FTW , Donau City 1, 1210 Vienna, Austria",2009,ECSA
1188,1189,"The publish subscribe paradigm is a common concept for delivering events from information producers to consumers in a decoupled manner  Some approaches allow durable subscriptions or the transportation of events even to mobile subscribers in a dynamic network infrastructure  However, in the safety critical telematics durable delivery of events is not sufficient enough  Short network connectivity time and small bandwidth limit the number and size of events to be transmitted hence relevant information needed for safety critical decision making may not be timely delivered  In this paper we propose the integration of publish subscribe systems and Aspect oriented Space Containers  ASC  distributed via Distributed Hash Tables  DHT  in the network  The approach allows storage, manipulation, pre processing, and prioritization of messages sent to mobile peers during bursts of connectivity  The benefits of the proposed approach are a  less complex application logic due to the processing capabilities of Space Containers, and b  increased efficiency due to delivery of essential messages only aggregated and processed while mobile peers are not connected  We describe the architecture of the proposed approach and explain its benefits by means of an industry use case    2009 IEEE   18 refs",Introducing aspect oriented space containers for efficient publish subscribe scenarios in intelligent transportation systems,"['Architecture', 'Computer software', 'Containers', 'Intelligent vehicle highway systems', 'Wireless networks', 'Aspect-oriented', 'Bandwidth limit', 'Complex applications', 'Distributed hash tables', 'Dynamic network', 'Industry use-cases', 'Intelligent transportation systems', 'Mobile subscribers', 'Network connectivity', 'Number and size', 'Pre-processing', 'Prioritization', 'Processing capability', 'Publish/subscribe', 'Publish/Subscribe system', 'Safety-critical', 'Telematics', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Data Communication, Equipment and Techniques', 'Computer Applications', 'Radio Systems and Equipment', 'Bulk Handling and Unit Loads', 'Highway Systems', 'Buildings and Towers', 'Packaging']","['K hn, Eva', '', '', 'Mordinyi, Richard', '', '', 'Keszthelyi, Laszlo', '', '', 'Schreiber, Christian', '', '', 'Bessler, Sandford', '', '', 'Tomic, Slobodanka']","Space based Computing Group, Vienna University of Technology, Favoritenstr  9 11, 1040 Vienna, Austria  2  Telecommunications Research Centre Vienna  FTW , Donau City 1, 1210 Vienna, Austria",2009,WICSA
1189,1190,"The publish subscribe paradigm is a common concept for delivering events from information producers to consumers in a decoupled manner  Some approaches allow durable subscriptions or the transportation of events even to mobile subscribers in a dynamic network infrastructure  However, in the safety critical telematics durable delivery of events is not sufficient enough  Short network connectivity time and small bandwidth limit the number and size of events to be transmitted hence relevant information needed for safety critical decision making may not be timely delivered  In this paper we propose the integration of publish subscribe systems and Aspect oriented Space Containers  ASC  distributed via Distributed Hash Tables  DHT  in the network  The approach allows storage, manipulation, pre processing, and prioritization of messages sent to mobile peers during bursts of connectivity  The benefits of the proposed approach are a  less complex application logic due to the processing capabilities of Space Containers, and b  increased efficiency due to delivery of essential messages only aggregated and processed while mobile peers are not connected  We describe the architecture of the proposed approach and explain its benefits by means of an industry use case    2009 IEEE   18 refs",Introducing aspect oriented space containers for efficient publish subscribe scenarios in intelligent transportation systems,"['Architecture', 'Computer software', 'Containers', 'Intelligent vehicle highway systems', 'Wireless networks', 'Aspect-oriented', 'Bandwidth limit', 'Complex applications', 'Distributed hash tables', 'Dynamic network', 'Industry use-cases', 'Intelligent transportation systems', 'Mobile subscribers', 'Network connectivity', 'Number and size', 'Pre-processing', 'Prioritization', 'Processing capability', 'Publish/subscribe', 'Publish/Subscribe system', 'Safety-critical', 'Telematics', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Data Communication, Equipment and Techniques', 'Computer Applications', 'Radio Systems and Equipment', 'Bulk Handling and Unit Loads', 'Highway Systems', 'Buildings and Towers', 'Packaging']","['K hn, Eva', '', '', 'Mordinyi, Richard', '', '', 'Keszthelyi, Laszlo', '', '', 'Schreiber, Christian', '', '', 'Bessler, Sandford', '', '', 'Tomic, Slobodanka']","Space based Computing Group, Vienna University of Technology, Favoritenstr  9 11, 1040 Vienna, Austria  2  Telecommunications Research Centre Vienna  FTW , Donau City 1, 1210 Vienna, Austria",2011,WICSA
1190,1191,"The purpose of this working session is to solicit feedback from the software architecture community for the revision of IEEE Std 1471  now also ISO IEC 42010 , to identify topics ripe for standardization and to get reactions on current proposals under consideration for the revision  This paper briefly outlines some of the revision proposals under consideration and provides some detail about one major area  architecture frameworks  The WICSA Wiki will be used to solicit participation, capture discussions and insights, and organize the working session  Findings and results from the session will then be recorded there    2008 IEEE   8 refs",Updating IEEE 1471  Architecture frameworks and other topics,"['Architecture', 'Industrial engineering', 'Labeling', 'Labels', 'Standardization', 'Architecture community', 'Architecture frameworks', 'ISO/IEC', 'ON currents', 'Working sessions', 'Buildings and Towers', 'Packaging, General', 'Packaging Materials', 'Computer Programming', 'Codes and Standards', 'Industrial Engineering']","['Emery, David', '', '', 'Hilliard, Rich']","DSCI, Inc",2008,WICSA
1191,1192,"The quality attributes of a system are determined, to a large extend, by the decisions taken early on in the development process, noticeably ae cting the specification of its software architecture  This is especially true for attributes such as security, usability, context awareness, etc , that have strong functional implications   i e  they require the incorporation of specific functionality to the application architecture in order to satisfy them  Our approach models functional quality attributes considering that   1  they are complex enough so as to be modeled by a large set of related concerns and the compositions among them  For instance, security includes authentication, access control, privacy, encryption, auditing, etc   2  the same quality attributes are required by several applications, and thus should be modeled as separate, readyto  use  re usable architectural solutions that final applications can incorporate without   being previously prepared  for it  and  3  not all the concerns that are part of a quality attribute need to be instantiated for a particular application  e g  only the authentication and access control concerns of security are required   In order to consider all the above requirements, in this paper we present a software product line approach that permits modeling the variability of quality attributes using feature models, and generating die rent configurations of their software architecture depending on the particular concerns required by each application  Copyright   2011 ACM   17 refs",Quality attributes and variability in AO ADL software architectures,"['Authentication', 'Computer software selection and evaluation', 'Software design', 'AOADL', 'Architectural templates', 'Hydra', 'Quality attributes', 'Variability', 'VML', 'Computer Software, Data Handling and Applications']","['Lence, Ram n', '', '', 'Fuentes, Lidia', '', '', 'Pinto, M nica']","Dpto  Lenguajes y Ciencias de la Computaci n, University of M laga, Spain",2011,ECSA
1192,1193,"The quality of a software architecture for component based distributed systems is defined not just by its source code but also by other systemic artifacts, such as the assembly, deployment, and configuration of the application components and their component middleware  In the context of distributed, real time, and embedded  DRE  component based systems, bin packing algorithms and schedulability analysis have been used to make deployment and configuration decisions  However, these algorithms make only coarse grained node assignments but do not indicate how components are allocated to different middleware containers on the node, which are known to impact runtime system performance and resource consumption  This paper presents a model transformation based algorithm that combines user specified quality of service  QoS  requirements with the node assignments to provide a finer level of granularity and precision in the deployment and configuration decisions  A beneficial side effect of our work lies in how these decisions can be leveraged by additional backend performance optimization techniques  We evaluate our approach and compare it against the existing state of the art in the context of a representative DRE system    2009 Springer Berlin Heidelberg   27 refs",Applying model transformations to optimizing real time QoS configurations in DRE systems,"['Computer software selection and evaluation', 'Embedded systems', 'Middleware', 'Quality of service', 'Real time systems', 'Application components', 'Bin packing algorithm', 'Coarse-grained', 'Component based', 'Component middleware', 'Component-based systems', 'Deployment and configuration', 'Distributed systems', 'DRE systems', 'Graph/model transformations', 'Model transformation', 'Model-driven engineering', 'Performance optimizations', 'Resource consumption', 'Runtime systems', 'Schedulability analysis', 'Side effect', 'Source codes', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Computer Systems and Equipment', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television']","['Kavimandan, Amogh', '', '', 'Gokhale, Aniruddha']","ISIS, Dept  of EECS, Vanderbilt University, Nashville, TN, United States",2009,QoSA
1193,1194,"The question of the  manner in which an existing software architecture affects requirements decisionmaking  is recognised as important in the research community  however, to our knowledge, this issue has not been scientifically explored  This paper describes an exploratory study on this question  Specific types of architectural effects on requirements decisions are identified, as are different aspects of the architecture together with the extent of their effects  This paper gives quantitative measures and qualitative interpretation of the findings  The understanding gained from this study has several implications in the areas of  project planning and risk management, requirements engineering and software architecture technology, architecture evolution, tighter integration of Requirements Engineering and Software Architecting processes, and middleware in architectures  The study involved six requirements engineering teams  of university students , whose task was to elicit new requirements for upgrading a preexisting banking software infrastructure  The data collected was based on a new meta model for requirements decisions, which is a bi product of this study    2008 IEEE   25 refs",Architectural effects on requirements decisions  An exploratory study,"['Architecture', 'Computer software', 'Finance', 'Insurance', 'Middleware', 'Occupational risks', 'Planning', 'Requirements engineering', 'Risk analysis', 'Risk assessment', 'Risk management', 'Technology', 'Architecture technology', 'Engineering teams', 'Exploratory studies', 'Meta modelling', 'Project planning', 'Quantitative measures', 'Research communities', 'Software architecting', 'Software infrastructures', 'University students', 'Statistical Methods', 'Accidents and Accident Prevention', 'Personnel', 'Management', 'Cost Accounting', 'Engineering Profession', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Buildings and Towers']","['Miller, James A', '', '', ' Ferrari, Remo', '', '', 'Madhavji, Nazim H', '', '']","Department of Computer Science, University of Western Ontario, London, ON N6A 5B7, Canada",2008,WICSA
1194,1195,"The right software architecture is critical to achieving essential quality attributes, but these qualities are only realized if the program as implemented conforms to its intended architecture  Previous techniques for enforcing architecture are either unsound or place significant limitations on either architectural design or on implementation techniques  This paper presents the first system to statically enforce complete structural conformance between a rich, dynamic architectural description and object oriented implementation code  We extend previous work to  1  explain what full structural conformance means in an object oriented setting, and  2  enforce architectural structure in the presence of shared data  We show that the resulting system can express and enforce important structural constraints of an architecture, while still supporting key object oriented implementation techniques  As a result of our conformance property, developers can be assured that their intended architecture is realized in code, so the system will exhibit the desired quality attributes    2008 IEEE   29 refs",Using types to enforce architectural structure,"['Architectural design', 'Architecture', 'Codes (standards)', 'Codes (symbols)', 'Computer software selection and evaluation', 'Design', 'Architectural descriptions', 'Implementation techniques', 'Key object', 'Object-oriented', 'Object-oriented implementation', 'Quality attributes', 'Shared data', 'Structural conformance', 'Structural constraints', 'Buildings and Towers', 'Structural Design', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Data Processing and Image Processing', 'Codes and Standards']","['Aldrich, Jonathan']",Carnegie Mellon University,2008,WICSA
1195,1196,"The rising energy and hardware demand is a growing concern in enterprise data centers  It is therefore desirable to limit the hardware resources that need to be added for new enterprise applications  EA   Detailed capacity planning is required to achieve this goal  Otherwise, performance requirements  i e  response time, throughput, resource utilization  might not be met  This paper introduces resource profiles to support capacity planning  These profiles can be created by EA vendors and allow evaluating energy consumption and performance of EAs for different workloads and hardware environments  Resource profiles are based on architecture level performance models  These models allow to represent performance relevant aspects of an EA architecture separately from the hardware environment and workload  The target hardware environment and the expected workload can only be specified by EA hosts and users respectively  To account for these distinct responsibilities, an approach is introduced to adapt resource profiles created by EA vendors to different hardware environments  A case study validates this concept by creating a resource profile for the SPECjEnterprise2010 benchmark application  Predictions using this profile for two hardware environments match energy consumption and performance measurements with an error of mostly below 15    Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   25 refs",Using architecture level performance models as resource profiles for enterprise applications,"['Energy utilization', 'Hardware', 'Industry', 'Benchmark applications', 'Capacity planning', 'Component model', 'Enterprise applications', 'Performance measurements', 'Performance Model', 'Performance requirements', 'Resource profile', 'Energy Utilization', 'Small Tools and Hardware', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Brunnert, Andreas', '', '', 'Wischer, Kilian', '', '', 'Krcmar, Helmut']","Fortiss GmbH, Guerickestr  25, 80805 M nchen, Germany  2  Technische Universit t M nchen, Boltzmannstr  3, 85748 Garching, Germany",2014,QoSA
1196,1197,"The security policies of an application can change at runtime due to several reasons, as for example the changes on the user preferences, the lack of enough resources in mobile environments or the negotiation of security levels between the interacting parties  As these security policies change, the application code that copes with the security functionalities should be adapted in order to enforce at runtime the changing security policies  In this paper we present the design, implementation and evaluation of a runtime security adaptation service  This service is based on the combination of autonomic computing and aspect oriented programming, where the security functionalities are implemented as aspects that are dynamically configured, deployed or un deployed by generating and executing a security adaptation plan  This service is part of the INTER TRUST framework, a complete solution for the definition, negotiation and run time enforcement of security policies    2014 Springer International Publishing Switzerland   28 refs",Runtime enforcement of dynamic security policies,"['Aspect oriented programming', 'Software architecture', 'Adaptation services', 'Autonomic Computing', 'Complete solutions', 'Dynamicity', 'Mobile environments', 'Runtime enforcements', 'Security enforcement', 'Security policy', 'Computer Programming', 'Accidents and Accident Prevention']","['Horcas, Jose Miguel', '', '', 'Pinto, M nica', '', '', 'Fuentes, Lidia']","Andaluc a Tech, Universidad de M laga, Spain",2014,ECSA
1197,1198,"The security policies of an application can change at runtime due to several reasons, as for example the changes on the user preferences, the lack of enough resources in mobile environments or the negotiation of security levels between the interacting parties  As these security policies change, the application code that copes with the security functionalities should be adapted in order to enforce at runtime the changing security policies  In this paper we present the design, implementation and evaluation of a runtime security adaptation service  This service is based on the combination of autonomic computing and aspect oriented programming, where the security functionalities are implemented as aspects that are dynamically configured, deployed or un deployed by generating and executing a security adaptation plan  This service is part of the INTER TRUST framework, a complete solution for the definition, negotiation and run time enforcement of security policies   28 refs",Runtime Enforcement of Dynamic Security Policies,"['aspect-oriented programming', 'security of data', 'software fault tolerance', 'runtime enforcement', 'dynamic security policies', 'user preferences', 'mobile environments', 'security level negotiation', 'application code', 'security functionality', 'runtime security adaptation service', 'autonomic computing', 'aspect-oriented programming', 'inter-trust framework', 'Data security', 'Object oriented programming', 'Software engineering techniques']","['Horcas, J', 'M', '', '', ' Pinto, M', '', '', ' Fuentes, L', '', '']","Andalucia Tech, Univ  de Malaga, Ma laga, Spain",2014,ECSA
1198,1199,"The selection of an architectural style for a given software system is an important factor in satisfying its quality requirements  In battery powered environments, such as mobile and pervasive systems, efficiency with respect to energy consumption has increasingly been recognized as an important quality attribute  In this paper, we present a framework that  1  facilitates early estimation of the energy consumption induced by an architectural style in a distributed software system, and  2  consequently enables an engineer to use energy consumption estimates along with other quality attributes in determining the most appropriate style for a given distributed application  We have applied the framework on five distributed systems styles to date, and have evaluated it for precision and accuracy using a particular middleware platform that supports the implementation of those styles  In a large number of application scenarios, our framework exhibited excellent precision, in that it was consistently able to correctly rank the five styles and estimate the relative differences in their energy consumptions  Moreover, the framework has also proven to be accurate  its estimates were within 7  of the different style implementations  actually measured energy consumptions    2008 IEEE   13 refs",A framework for estimating the impact of a distributed software system s architectural style on its energy consumption,"['Computer software', 'Computer software selection and evaluation', 'Energy efficiency', 'Energy policy', 'Energy utilization', 'Estimation', 'Middleware', 'Ubiquitous computing', 'Application scenarios', 'Architectural styles', 'Distributed applications', 'Distributed software', 'Distributed systems', 'Energy consumption', 'Middleware platforms', 'Pervasive systems', 'Quality attributes', 'Quality requirements', 'Software systems', 'Mathematics', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Energy Policy', 'Energy Utilization', 'Energy Conservation', 'Ergonomics and Human Factors Engineering']","['Seo, Chiyoung', '', '', 'Edwards, George', '', '', 'Malek, Sam', '', '', 'Medvidovic, Nenad']","Computer Science Department, University of Southern California, Los Angeles, CA 90089 0781, United States  2  Department of Computer Science, George Mason University, Fairfax, VA 22030 4444, United States",2008,WICSA
1199,1200,"The share of software in embedded systems has been growing permanently in the recent years  Thus, software architecture as well as its evaluation has become an important part of embedded systems design to define, assess, and assure architecture and system quality  Furthermore, design space exploration can be based on architecture evaluation  To achieve an efficient exploration process, architectural decisions need to be well considered  In this paper, analysis of architecture evaluation is performed to uncover dependencies of the quality attributes which are the first class citizens of architecture evaluation  With an explicit representation of such dependencies, valuable changes of an architecture can be calculated  Next to the exploration support, the analysis results help to document architecture knowledge and make architectural decisions explicit and traceable  The development process can now be based on dependable and well documented architectural decisions  Effects of changes become more predictable  Time and costs can be saved by avoiding suboptimal changes    2007 IEEE   15 refs",Inside architecture evaluation  Analysis and representation of optimization potential,"['Computer aided design', 'Costs', 'Decision theory', 'Knowledge based systems', 'Optimization', 'Architectural decisions', 'Architecture evaluation', 'Architecture knowledge', 'Optimization potential', 'Computer Programming', 'Expert Systems', 'Computer Applications', 'Cost and Value Engineering  Industrial Economics', 'Optimization Techniques', 'Systems Science']","['Florentz, Bastian']","Institute for Programming and Reactive Systems, Technical University Braunschweig, P O  Box 3329, 38023, Germany",2007,WICSA
1200,1201,"The share of software in embedded systems has been growing permanently in the recent years  Thus, software architecture as well as its evaluation has become an important part of embedded systems design to define, assess, and assure architecture and system quality  Furthermore, design space exploration can be based on architecture evaluation  To achieve an efficient exploration process, architectural decisions need to be well considered  In this paper, analysis of architecture evaluation is performed to uncover dependencies of the quality attributes which are the first class citizens of architecture evaluation  With an explicit representation of such dependencies, valuable changes of an architecture can be calculated  Next to the exploration support, the analysis results help to document architecture knowledge and make architectural decisions explicit and traceable  The development process can now be based on dependable and well documented architectural decisions  Effects of changes become more predictable  Time and costs can be saved by avoiding suboptimal changes   15 refs",Inside architecture evaluation  analysis and representation of optimization potential,"['embedded systems', 'optimisation', 'software architecture', 'software performance evaluation', 'software quality', 'software architecture evaluation analysis', 'optimization potential representation', 'embedded system design', 'software system quality attribute', 'design space exploration', 'architectural decision documentation', 'Software engineering techniques', 'Software performance evaluation', 'Optimisation techniques']","['Florentz, B', '', '']","Inst  for Programming   Reactive Syst , Tech  Univ  Braunschweig, Braunschweig, Germany",2007,WICSA
1201,1202,"The sheer amount of data produced by modern science research has created a need for the construction and understanding of  data intensive systems , large scale, distributed systems which integrate information  The formal nature of constructing such software systems  however, is relatively unstudied, and has been a large focus of the super computing and distributed computing communicates, rather than the software engineering communities  These data intensive systems exhibit characteristics which appear fruitful for research from a software engineering, and software architectural focus  From our experience, the methodologies and notations for design and implementation of data intensive systems look to be a good starting point for this important research area  This paper presents our experience with OODT  object oriented data technology , a software architectural style, and middleware based implementation for data intensive systems developed and maintained at the Jet Propulsion Laboratory  To date, OODT has been successfully evaluated in several different science domains including Planetary Science with NASA s Planetary Data System  PDS  and Cancer Research with the National Cancer Institute  NCI    27 refs","Software architecture for large scale, distributed, data intensive systems","['object-oriented programming', 'software architecture', 'software engineering', 'software architecture', 'large-scale systems', 'distributed systems', 'data-intensive systems', 'modern science research', 'information integration', 'software systems', 'super-computing', 'distributed computing', 'software engineering', 'OODT', 'middleware-based implementation', 'Jet Propulsion Laboratory', 'Planetary Science', 'NASA', 'Planetary Data System', 'Cancer Research', 'National Cancer Institute', 'object-oriented data technology', 'Software engineering techniques', 'Object oriented programming']","['Mattmann, C A', '', '', ' Crichton, D J', '', '', ' Hughes, S J', '', '', ' Kelly, S C', ' Paul, M']","Jet Propulsion Lab , California Inst  of Technol , Pasadena, CA, United States",2004,WICSA
1202,1203,"The sheer amount of data produced by modern science research has created a need for the construction and understanding of  data intensive systems , large scale, distributed systems which integrate information  The formal nature of constructing such software systems  however, is relatively unstudied, and has been a large focus of the super computing and distributed computing communities, rather than the software engineering communities  These data intensive systems exhibit characteristics which appear fruitful for research from a software engineering, and software architectural focus  From our experience, the methodologies and notations for design and implementation of data intensive systems look to be a good starting point for this important research area  This paper presents our experience with OODT, a software architectural style, and middleware based implementation for data intensive systems developed and maintained at the Jet Propulsion Laboratory  To date, OODT has been successfully evaluated in several different science domains including Planetary Science with NASA s Planetary Data System  PDS  and Cancer Research with the National Cancer Institute  NCI    27 refs","Software architecture for large scale, distributed, data intensive systems","['Computer hardware', 'Distributed database systems', 'Interoperability', 'Java programming language', 'Mathematical models', 'Metadata', 'Middleware', 'Servers', 'Data elements', 'Data products', 'Data-intensive systems', 'Grid-based systems', 'Telecommunication  Radar, Radio and Television', 'Computer Systems and Equipment', 'Computer Programming', 'Computer Programming Languages', 'Database Systems', 'Mathematics']","['Mattmann, Chris A', '', ',', '', ' Crichton, Daniel J', '', '', ' Hughes, J', 'Steven', '', '', 'Kelly, Sean C', '', '', ' Ramirez, Paul M', '', ',', '']","Jet Propulsion Laboratory, California Institute of Technology, Pasadena, CA 91109, United States  2  Computer Science Department, University of Southern California, Los Angeles, CA 90089, United States",2004,WICSA
1203,1204,"The simplest and purest practical object oriented language designs today are seen in dynamically typed languages, such as Smalltalk and Self  Static types, however, have potential benefits for productivity, security, and reasoning about programs  In this paper, we describe the design ofWyvern, a statically typed, pure object oriented language that attempts to retain much of the simplicity and expressiveness of these iconic designs  Our goals lead us to combine pure object oriented and functional abstractions in a simple, typed setting  We present a foundational object based language that we believe to be as close as one can get to simple typed lambda calculus while keeping objectorientation  We show how this foundational language can be translated to the typed lambda calculus via standard encodings We then define a simple extension to this language that introduces classes and show that classes are no more than sugar for the foundational object based language  Our future intention is to demonstrate that modules and other object oriented features can be added to our language as not more than such syntactical extensions while keeping the object oriented core as pure as possible  The design of Wyvern closely follows both historical and modern ideas about the essence of object orientation, suggesting a new way to think about a minimal, practical, typed core language for objects  Copyright   2013 ACM 978 1 4503 2046 7 13 07       15 00   24 refs","Wyvern  A simple, typed, and pure object oriented language","['Computational mechanics', 'Differentiation (calculus)', 'First-class classes', 'Functional abstractions', 'Object oriented', 'Object-based languages', 'Object-oriented features', 'Object-oriented languages', 'Reasoning about programs', 'Static type checking', 'Structural Design', 'Mathematics', 'Calculus']","['Nistor, Ligia', '', '', 'Kurilova, Darya', '', '', 'Balzer, Stephanie', '', '', 'Chung, Benjamin', '', '', 'Potanin, Alex', '', '', 'Aldrich, Jonathan']","Carnegie Mellon University, United States",2013,ECSA
1204,1205,"The software architecture community is shifting its attention to architectural design decisions as a key element of architectural knowledge  Although there has been much work dealing with the representation of design decisions as formal structures within architecture, there still remains a need to investigate the exploratory nature of the design decisions themselves  We present in this paper a tool that should help improve the quality of software architecture by enabling design decision exploration and analysis through decision visualization  Unlike many other design decision tools which acquire, list, and perform queries on decisions, our tool provides visualization components to help with decision exploration and analysis  Our tool has four main aspects  1  the decision and relationship lists  2  decision structure visualization view  3  decision chronology view  and 4  decision impact view  Together, these four aspects provide an effective and powerful means for decision exploration and analysis    2008 Springer Berlin Heidelberg   24 refs",A tool to visualize architectural design decisions,"['Architectural design', 'Computer software selection and evaluation', 'Visualization', 'Architectural knowledge', 'Decision impacts', 'Design decisions', 'Design-decision tools', 'Key elements', 'Quality of softwares', 'Management', 'Engineering Graphics', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Structural Design, General', 'Buildings and Towers']","['Lee, Larix', '', '', 'Kruchten, Philippe']",University of British Columbia,2008,QoSA
1205,1206,"The software architecture is one of the most crucial artifacts within the lifecycle of a software system  Decisions made at the architectural level directly enable, facilitate, hamper, or interfere with the achievement of business goals as well as meeting functional and quality requirements  Software architectures are also essential for the success of product line engineering  In this work, we summarize how, from our practical experience, static architecture evaluation contributes to architecture development  We also describe the different purposes of architectural evaluations    2005 IEEE   6 refs",Static evaluation of software architectures   A short summary,"['Computer software selection and evaluation', 'Decision making', 'Electronic equipment', 'Industrial engineering', 'Quality management', 'Software engineering', 'Product line architecture', 'Product line engineering', 'Quality requirements', 'Static architecture evaluation', 'Electronic Equipment, General Purpose and Industrial', 'Computer Programming', 'Computer Applications', 'Industrial Engineering', 'Management']","['Knodel, Jens', '', '', 'Lindvall, Mikael', '', '', 'Muthig, Dirk']","Fraunhofer Institute for Experimental Software Engineering  IESE , Fraunhofer Platz 1, D 67663 Kaiserslautern, Germany  2  Fraunhofer USA Center for Experimental Software Engineering Maryland FC MD , 4321 Hartwick Road, College Park, MD, United States",2005,WICSA
1206,1207,"The software architecture is one of the most important artifacts created in the lifecycle of a software system  It enables, facilitates, hampers, or interferes directly the achievement of business goals, functional and quality requirements  One instrument to determine how adequate the architecture is for its intended usage is architecture compliance checking  This paper compares three static architecture compliance checking approaches  reflexion models, relation conformance rules, and component access rules  by assessing their applicability in 13 distinct dimensions  The results give guidance on when to use which approach    2007 IEEE   21 refs",A comparison of static architecture compliance checking approaches,"['Codes (symbols)', 'Conformal mapping', 'Logic programming', 'Model checking', 'Static analysis', 'Access rules', 'Architecture compliance checking', 'Architecture evaluation', 'Conformance rules', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Mathematics']","['Knodel, Jens', '', '', 'Popescu, Daniel']","Fraunhofer Institute for Experimental Software Engineering  IESE , Fraunhofer Platz 1, 67663 Kaiserslautern, Germany  2  Computer Science Department, University of Southern California, Los Angeles, CA 90089, United States",2007,WICSA
1207,1208,"The software architecture is one of the most important artifacts created in the lifecycle of a software system  It enables, facilitates, hampers, or interferes directly the achievement of business goals, functional and quality requirements  One instrument to determine how adequate the architecture is for its intended usage is architecture compliance checking  This paper compares three static architecture compliance checking approaches  reflexion models, relation conformance rules, and component access rules  by assessing their applicability in 13 distinct dimensions  The results give guidance on when to use which approach   21 refs",A comparison of static architecture compliance checking approaches,"['program verification', 'software architecture', 'software quality', 'static architecture compliance checking', 'software architecture', 'software system', 'business goals', 'functional requirements', 'quality requirements', 'Diagnostic, testing, debugging and evaluating systems', 'Formal methods', 'Software engineering techniques']","['Knodel, J', '', '', ' Popescu, D']","Fraunhofer Inst  for Exp  Software Eng   IESE , Kaiserslautern, Germany",2007,WICSA
1208,1209,"The software architecture of a system is often used to guide and constrain its implementation  While the code structure of an initial implementation is likely to conform to its intended architecture, its dynamic properties cannot be fully checked until deployment  Routine maintenance and changing requirements can also lead to a deployed system deviating from this architecture over time  Both static and dynamic checks are thus required to ensure that an implementation conforms to its prescriptive architecture throughout its lifespan  However, runtime conformance checking strategies typically alter the implementation of an application, increasing its size and affecting its performance and maintainability  In this paper, we describe the design of a novel dynamic conformance checking framework that is pluggable and non intrusive, thereby limiting any overheads to those periods when checking is activated  An implementation of this framework with Java as the target language and its early evaluation are also presented    2013 Springer Verlag   14 refs",PANDArch  A pluggable automated non intrusive dynamic architecture conformance checker,"['Software architecture', 'Code structure', 'Conformance checking', 'Deployed systems', 'Dynamic architecture', 'Dynamic property', 'Early evaluation', 'Routine maintenance', 'Target language', 'Buildings and Towers', 'Computer Programming']","['De Silva, Lakshitha', '', '', 'Balasubramaniam, Dharini']","School of Computer Science, University of St  Andrews, St Andrews, KY16 9SX, United Kingdom",2013,ECSA
1209,1210,"The study of software architectures is gaining importance due to its role in various aspects of software engineering such as product line engineering, component based software engineering and other emerging paradigms  With the increasing emphasis on design patterns, the traditional practice of ad hoc software construction is slowly shifting towards pattern oriented development  Various architectural attributes like error propagation, change propagation, and requirements propagation, provide a wealth of information about software architectures  In this paper, we show that change propagation probability  CP  is helpful and effective in assessing the design quality of software architectures  We study two different architectures  one that employs patterns versus one that does not  for the same application, We also analyze and compare change propagation metric with respect to other coupling based metrics    2005 IEEE   5 refs",Change propagation for assessing design quality of software architectures,"['Ad hoc networks', 'Computer aided design', 'Computer software selection and evaluation', 'Information analysis', 'Software engineering', 'Verification', 'Ad hoc software construction', 'Change propagation probability (CP)', 'Quality of software architectures', 'Software architectural attributes', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Data Communication, Equipment and Techniques', 'Computer Programming', 'Computer Applications', 'Information Sources and Analysis']","['Shaik, I', '', '', ' Abdelmoez, W', '', '', ' Gunnalan, R', '', '', ' Shereshevsky, M', '', '', ' Zeid, A', '', '', ' Ammar, H H', '', '', ' Mili, A', '', '', ' Fuhrman, C', '', '']","Lane Department of Computer Science, West Virginia University, Morgantown, WV 26506  2  College of Computer Science, New Jersey Institute of Technology, Newark, NJ 07102  3  Department of Software and IT Engineering, Ecole de Technologie Sup rieure, Montreal, H3C 1K3, Canada",2005,WICSA
1210,1211,"The success of software ecosystems highly depends on the variety and quality of end user applications  Therefore, attracting third party developers and facilitating application development is crucial  Platform boundary resources enable third party developers to create the applications  Thus, the platform boundary resources expose and extend the platform architecture  We conducted an industrial case study on third party developer experience, particularly on the role of platform boundary resources in exposing the platform architecture and facilitating development  The studied ecosystem is centered on managing end users  content across devices, the ecosystem was in its pre commercial phase  The results identify the platform boundary resources in the case study and propose a model for classifying the resources  Further, designing the platform boundary resources is not only about opening up the platform architecture  Instead, the platform boundary resources need to account for a rich variety of applications, or at least not limit too much the creativity of third party developers, while still aiming at the ease of development  We conclude that the platform boundary resources need to be created for the third party developers, rather than from the platform architecture    2014 IEEE   31 refs",The role of platform boundary resources in software ecosystems  A case study,"['Application programs', 'Industrial applications', 'Research', 'Software architecture', 'Application development', 'End-user applications', 'End-users', 'Industrial case study', 'plaform boundar resources', 'Platform architecture', 'Platform boundaries', 'Software ecosystems', 'Ecology and Ecosystems', 'Computer Software, Data Handling and Applications', 'Engineering Research', 'Production Planning and Control  Manufacturing']","['Bianco, Vittorio Dal', '', '', 'Myllarniemi, Varvana', '', '', 'Komssi, Marko', '', '', 'Raatikainen, Mikko']","Aalto University, School of Science, Finland  2  F Secure Corporation, Finland",2014,WICSA
1211,1212,"The suitability of a nanoscale graphite as a catalyst support for use in polymer electrolyte membrane fuel cells  PEMFCs  was evaluated and compared with that of most popular commercial catalysts on Vulcan XC72 carbon black  It is observed that the distribution and structure of Pt nanopartcles for the synthesized catalyst and commercial catalysts are similar  The synthesized Pt catalysts show a better electrochemical surface area  ECSA   The accelerated degradation tests were performed using a glassy carbon rotating disk electrode  The results show that the ECSA loss after 1500th cycling for the synthesized catalyst and commercial catalyst was 46 92  and 62 2 , while mass activity loss was 59 2  and 79 9 , respectively  The temperature programmed oxidation results also show that the synthesized catalysts have better resistance against the corrosion  The results show that nanoscale graphite can be a promising alternative electrocatalyst support to the traditionally  used Vulcan XC72 carbon black   The Electrochemical Society   32 refs",Preparation and characterization of graphitic particles as alternative support for oxygen reduction reaction catalysts in fuel cells,"['Carbon black', 'Electrocatalysts', 'Electrolytic reduction', 'Gas fuel purification', 'Glassy carbon', 'Graphite', 'Nanostructured materials', 'Oxygen', 'Platinum', 'Polyelectrolytes', 'Polymers', 'Proton exchange membrane fuel cells (PEMFC)', 'Rotating disks', 'Accelerated degradation tests', 'Commercial catalyst', 'Electrocatalyst support', 'Electrochemical surface area', 'Graphitic particles', 'Mass activity', 'Nano scale', 'Oxygen reduction reaction', 'Polymer electrolyte membrane fuel cells', 'Pt catalysts', 'Rotating disk electrodes', 'Temperature programmed oxidation', 'Vulcan XC72', 'Materials Science', 'Organic Polymers', 'Polymeric Materials', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Fuel Cells', 'Machine Components', 'Precious Metals', 'Gas Fuels']","['Wang, Mei Xian', '', '', 'Xu, Fan', '', '', 'Sun, Hong Fang', '', '', 'Liu, Qi', '', '', 'Artyushkova, Kateryna', '', '', 'Stach, Eric A', '', '', ' Xie, Jian']","Department of Mechanical Engineering, Purdue School of Engineering and Technology, Indiana University Purdue University, Indianapolis, IN 46202, United States  2  School of Materials Engineering, Birck Nanotechnology Center, Purdue University, West Lafayette, IN 47907, United States  3  Department of Chemical and Nuclear Engineering, University of New Mexico, Albuquerque, NM 87131, United States",2010,ECSA
1212,1213,"The swap mechanism allows an operating system to work with more memory than available RAM space, by temporarily flushing some data to disk  However, the system sometimes ends up spending more time swapping data in and out of disk than performing actual computation  This state is called thrashing  Classical strategies against thrashing rely on reducing system load, so as to decrease memory pressure and increase global throughput  Those approaches may however be counterproductive when tricked into advantaging malicious or long standing processes  This is particularily true in the context of shared hosting or virtualization, where multiple users run uncoordinated and selfish workloads  To address this challenge, we propose an accounting layer that forces swap fairness among processes competing for main memory  It ensures that a process cannot monopolize the swap subsystem by delaying the swap operations of abusive processes, reducing the number of system wide page faults while maximizing memory utilization    2013 Springer Verlag   15 refs",Swap fairness for thrashing mitigation,"['Software architecture', 'Main memory', 'Memory pressure', 'Memory utilization', 'Multiple user', 'Reducing systems', 'Shared hosting', 'Virtualizations', 'Data Storage, Equipment and Techniques', 'Computer Programming']","['Goichon, Fran ois', '', '', 'Salagnac, Guillaume', '', '', 'Fr not, St phane']","University of Lyon, INSA Lyon, CITI INRIA, F 69621, Villeurbanne, France",2013,ECSA
1213,1214,"The term co evolution describes the symbiotic relationship between dynamically changing business environments and the software that supports them  Business changes create pressures on the software to evolve, and at the same time technology changes create pressures on the business to evolve  More generally, we are concerned with systems where it is neither economically nor technologically feasible to suspend the operation of the system while it is being evolved  Typically these are long lived systems in which dynamic co evolution, whereby a system evolves as part of its own execution in reaction to both predicted and emergent events, is the only feasible option for change  Examples of such systems include continuously running business process models, sensor nets, grid applications, self adapting tuning systems, routing systems, control systems, autonomic systems, and pervasive computing applications  Active architectures address both the structural and behavioural requirements of dynamic co evolving software by modelling software architecture as part of the on going computation, thereby allowing evolution during execution and formal checking that desired system properties are preserved through evolution  This invited paper presents results on active architectures from the Compliant System Architecture and ArchWare projects  We have designed and constructed the ArchWare ADL, a formal, well founded architecture description language, based on the higher order typed p calculus, which consists of a set of layers to address the requirements of active architectures  The ArchWare ADL design principles, concepts and formal notations are presented together with its sophisticated reflective technologies for supporting active architectures and thereby dynamic co evolution    Springer Verlag Berlin Heidelberg 2007   35 refs",An active architecture approach to dynamic systems co evolution,"['Dynamical systems', 'Grid computing', 'Sensor networks', 'Technology transfer', 'Business environments', 'Symbiotic relationship', 'Digital Computers and Systems', 'Computer Programming', 'Computer Applications', 'Control Systems', 'Impact of Technology on Society', 'Mathematics']","['Morrison, Ron', '', '', 'Balasubramaniam, Dharini', '', '', 'Oquendo, Flavio', '', '', 'Warboys, Brian', '', '', 'Greenwood, R', 'Mark']","University of St Andrews, St Andrews, KY16 9SX, United Kingdom  2  University of South Brittany   Valoria, BP 573, 56017 Vannes Cedex, France  3  University of Manchester, Manchester, M13 9PL, United Kingdom",2007,ECSA
1214,1215,"The term co evolution describes the symbiotic relationship between dynamically changing business environments and the software that supports them  Business changes create pressures on the software to evolve, and at the same time technology changes create pressures on the business to evolve  More generally, we are concerned with systems where it is neither economically nor technologically feasible to suspend the operation of the system while it is being evolved  Typically these are long lived systems in which dynamic co evolution, whereby a system evolves as part of its own execution in reaction to both predicted and emergent events, is the only feasible option for change  Examples of such systems include continuously running business process models, sensor nets, grid applications, self adapting tuning systems, routing systems, control systems, autonomic systems, and pervasive computing applications  Active architectures address both the structural and behavioural requirements of dynamic co evolving software by modelling software architecture as part of the on going computation, thereby allowing evolution during execution and formal checking that desired system properties are preserved through evolution  This invited paper presents results on active architectures from the Compliant System Architecture and ArchWare projects  We have designed and constructed the ArchWare ADL, a formal, well founded architecture description language, based on the higher order typed p calculus, which consists of a set of layers to address the requirements of active architectures  The ArchWare ADL design principles, concepts and formal notations are presented together with its sophisticated reflective technologies for supporting active architectures and thereby dynamic co evolution    Springer Verlag Berlin Heidelberg 2007   35 refs",An active architecture approach to dynamic systems co evolution,"['Dynamical systems', 'Grid computing', 'Sensor networks', 'Technology transfer', 'Business environments', 'Symbiotic relationship', 'Digital Computers and Systems', 'Computer Programming', 'Computer Applications', 'Control Systems', 'Impact of Technology on Society', 'Mathematics']","['Morrison, Ron', '', '', 'Balasubramaniam, Dharini', '', '', 'Oquendo, Flavio', '', '', 'Warboys, Brian', '', '', 'Greenwood, R', 'Mark']","University of St Andrews, St Andrews, KY16 9SX, United Kingdom  2  University of South Brittany   Valoria, BP 573, 56017 Vannes Cedex, France  3  University of Manchester, Manchester, M13 9PL, United Kingdom",2008,ECSA
1215,1216,"The term co evolution describes the symbiotic relationship between dynamically changing business environments and the software that supports them  Business changes create pressures on the software to evolve, and at the same time technology changes create pressures on the business to evolve  More generally, we are concerned with systems where it is neither economically nor technologically feasible to suspend the operation of the system while it is being evolved  Typically these are long lived systems in which dynamic co evolution, whereby a system evolves as part of its own execution in reaction to both predicted and emergent events, is the only feasible option for change  Examples of such systems include continuously running business process models, sensor nets, grid applications, self adapting tuning systems, routing systems, control systems, autonomic systems, and pervasive computing applications  Active architectures address both the structural and behavioural requirements of dynamic co evolving software by modelling software architecture as part of the on going computation, thereby allowing evolution during execution and formal checking that desired system properties are preserved through evolution  This invited paper presents results on active architectures from the Compliant System Architecture and ArchWare projects  We have designed and constructed the ArchWare ADL, a formal, well founded architecture description language, based on the higher order typed p calculus, which consists of a set of layers to address the requirements of active architectures  The ArchWare ADL design principles, concepts and formal notations are presented together with its sophisticated reflective technologies for supporting active architectures and thereby dynamic co evolution   35 refs",An active architecture approach to dynamic systems co evolution,"['business data processing', 'software architecture', 'specification languages', 'active architecture approach', 'dynamic system coevolution', 'software architecture', 'ArchWare-ADL', 'Business and administrative computing', 'High level languages', 'Software engineering techniques', 'Formal methods']","['Morrison, R', '', '', ' Balasubramaniam, D', '', '', ' Oquendo, F', ' Warboys, B', ' Greenwood, R M']","Univ  of St Andrews, St  Andrews, United Kingdom",2007,ECSA
1216,1217,"The term co evolution describes the symbiotic relationship between dynamically changing business environments and the software that supports them  Business changes create pressures on the software to evolve, and at the same time technology changes create pressures on the business to evolve  More generally, we are concerned with systems where it is neither economically nor technologically feasible to suspend the operation of the system while it is being evolved  Typically these are long lived systems in which dynamic co evolution, whereby a system evolves as part of its own execution in reaction to both predicted and emergent events, is the only feasible option for change  Examples of such systems include continuously running business process models, sensor nets, grid applications, self adapting tuning systems, routing systems, control systems, autonomic systems, and pervasive computing applications  Active architectures address both the structural and behavioural requirements of dynamic co evolving software by modelling software architecture as part of the on going computation, thereby allowing evolution during execution and formal checking that desired system properties are preserved through evolution  This invited paper presents results on active architectures from the Compliant System Architecture and ArchWare projects  We have designed and constructed the ArchWare ADL, a formal, well founded architecture description language, based on the higher order typed p calculus, which consists of a set of layers to address the requirements of active architectures  The ArchWare ADL design principles, concepts and formal notations are presented together with its sophisticated reflective technologies for supporting active architectures and thereby dynamic co evolution   35 refs",An active architecture approach to dynamic systems co evolution,"['business data processing', 'software architecture', 'specification languages', 'active architecture approach', 'dynamic system coevolution', 'software architecture', 'ArchWare-ADL', 'Business and administrative computing', 'High level languages', 'Software engineering techniques', 'Formal methods']","['Morrison, R', '', '', ' Balasubramaniam, D', '', '', ' Oquendo, F', ' Warboys, B', ' Greenwood, R M']","Univ  of St Andrews, St  Andrews, United Kingdom",2008,ECSA
1217,1218,"The timing of properties is an essential consideration in the design, implementation and maintenance of embedded software development  In this paper, we present an approach to the prediction of timed and probabilistic nonfunctional properties of process control architectures  Our approach involves a novel compositional approach to model checking of statements in Probabilistic Computational Tree Logic  PCTL     2009 Springer Berlin Heidelberg   9 refs",Compositional prediction of timed behaviour for process control architecture,"['Computer software maintenance', 'Computer software selection and evaluation', 'Embedded software', 'Model checking', 'Probabilistic logics', 'Process control', 'Computational tree logic', 'Embedded software development', 'Essential considerations', 'Non functional properties', 'Management', 'Automatic Control Principles and Applications', 'Computer Applications', 'Probability Theory', 'Computer Programming', 'Logic Elements', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Software, Data Handling and Applications']","['Chan, Kenneth', '', '', 'Poernomo, Iman']","Department of Computer Science, King s College London Strand, London WC2R 2LS, United Kingdom",2009,QoSA
1218,1219,"The treatment of economic and social issues in Software Engineering  SE  was pointed out as a challenge for the next years, since SE needs to treat issues beyond the technical side, which requires observing it in another perspective  In this sense, this paper revisits the concept of components in SE through a sociotechnical construction  Based on a ranking of its critical elements, a study shows that components are assets in a set of collaborative local environments more than in global corporate markets  So, an approach called Brecho  VCM was proposed to treat some of these elements, providing an environment to discuss the future of Software Reuse on a software ecosystem perspective  These analyses, as well as their results, reinforce that SE community needs to learn with the components case and effectively looks at SE future in a sociotechnical way    2010 ACM   37 refs",Revisiting the concept of components in software engineering from a software ecosystem perspective,"['Commerce', 'Ecosystems', 'Software architecture', 'Technical presentations', 'component market', 'Socio-technical approach', 'Software ecosystems', 'Software Re-use', 'Value-based', 'Ecology and Ecosystems', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Industrial Economics']","['Dos Santos, Rodrigo Pereira', '', '', 'Werner, Cl udia Maria Lima']","System Engineering and Computer Science, COPPE UFRJ, Federal University of Rio de Janeiro, Brazil",2010,ECSA
1219,1220,"The use of Representational State Transfer  REST  as an architectural style for integrating services and applications brings several benefits, but also poses new challenges and risks  Particularly important among those risks are failures to effectively address quality attribute requirements such as security, reliability, and performance  An architecture evaluation early in the software life cycle can identify and help mitigate those risks  In this paper we present guidelines to assist architecture evaluation activities in REST based systems  These guidelines can be systematically used in conjunction with scenario based evaluation methods to reason about design considerations and trade offs  This paper also presents a proof of concept to describe how to use the guidelines in the context of an Architecture Trade off Analysis Method  ATAM  evaluation    2014 IEEE   22 refs",Evaluating a Representational State Transfer  REST  architecture  What is the impact of REST in my architecture,"['Economic and social effects', 'Architecture evaluation', 'Design considerations', 'Representational state transfer', 'REST', 'Scenario-based evaluation', 'Services and applications', 'Software architecture evaluation', 'Software life cycles', 'Computer Programming', 'Social Sciences']","['Costa, Bruno', '', '', 'Pires, Paulo F', '', '', ' Delicato, Flavia C', '', '', ' Merson, Paulo']","Department of Computer Science, Federal University of Rio de Janeiro, Rio de Janeiro, Brazil  2  Software Engineering Institute, Pittsburgh, PA, United States",2014,WICSA
1220,1221,"The use of a 2 D carbon nanostructure, graphene, as a support material for the dispersion of Pt nanoparticles provides new ways to develop advanced electrocatalyst materials for fuel cells  Platinum nanoparticles are deposited onto graphene sheets by means of borohydride reduction of H2PtCl 6 in a graphene oxide  GO  suspension  The partially reduced GO Pt catalyst is deposited as films onto glassy carbon and carbon Toray paper by drop cast or electrophoretic deposition methods  Nearly 80  enhancement in the electrochemically active surface area  ECSA  can be achieved by exposing partially reduced GO Pt films with hydrazine followed by heat treatment  300  C, 8 h   The electrocatalyst performance as evaluated from the hydrogen fuel cell demonstrates the role of graphene as an effective support material in the development of an electrocatalyst    2009 American Chemical Society   36 refs",Electrocatalytically active graphene platinum nanocomposites  role of 2 D carbon support in pem fuel cells,"['Carbon nanotubes', 'Cell membranes', 'Electrocatalysis', 'Electrocatalysts', 'Electrophoresis', 'Fuel cells', 'Hydrogen', 'Hydrogen fuels', 'Nanoparticles', 'Platinum', 'Two dimensional', 'Borohydride reductions', 'Carbon Nanostructures', 'Carbon support', 'Drop-cast', 'Electrochemically active surface areas', 'Electrophoretic deposition methods', 'Glassy carbon', 'Graphene', 'Graphene sheets', 'PEM fuel cell', 'Platinum nanoparticles', 'Pt catalysts', 'Pt films', 'Pt nanoparticles', 'Support materials', 'Colloid Chemistry', 'Electrochemistry', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Coating Materials', 'Engineering Graphics', 'Solid State Physics', 'Crystalline Solids', 'Nanotechnology', 'Biological Materials and Tissue Engineering', 'Gas Fuels', 'Precious Metals', 'Electricity  Basic Concepts and Phenomena', 'Fuel Cells', 'Electric and Magnetic Materials', 'Electronic and Thermionic Materials', 'Thermionic Materials', 'Computer Applications']","['Seger, Brian', '', '', 'Kamat, Prashant V', '', '']","Radiation Laboratory, Departments of Chemistry and Biochemistry and Chemical and Biomolecular Engineering, University of Notre Dame, Notre Dame, IN 46556 0579",2009,ECSA
1221,1222,"The use of agents is spreading as a means to develop different kinds of software systems, among which we can find Intelligent Virtual Environments for Training  The agent community has already started to pay attention to software engineering issues to develop agent oriented systems, but they are mainly focused on methodologies and, to some extent, design patterns  However, not much attention has been paid to software architecture for the moment  We compare two agent based software architectures for Intelligent Virtual Environments for Training that are intended to be easily extended and modified  The first one was designed using an organizational approach recommended by some agent oriented methodologies  The second one is a redesign of the first architecture using more formal principles and methods of software architecture design  A comparison between both architectures highlights the need to pay more attention to software architecture design in this field    2008 Springer Verlag Berlin Heidelberg   35 refs",How do agents affect modifiability  A comparison between two architectures for intelligent virtual environments for training,"['Agents', 'Architectural design', 'Architecture', 'Intelligent agents', 'Software agents', 'Software design', 'Software engineering', 'Virtual reality', 'Agent communities', 'Design patterns', 'Intelligent Virtual Environments', 'Modifiability', 'Software architecture designs', 'Software systems', 'Inorganic Compounds', 'Organic Compounds', 'Chemical Agents and Basic Industrial Chemicals', 'Computer Applications', 'Artificial Intelligence', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Structural Design, General', 'Buildings and Towers']","['M ndez, Gonzalo', '', '', 'De Antonio, Ang lica']","Computer Science School, Technical University of Madrid",2008,ECSA
1222,1223,"The use of redundant computational nodes is a widely used design tactic to improve the reliability of complex embedded systems  However, this redundancy allocation has also an effect on other quality attributes, including energy consumption, as each of the redundant computational nodes requires additional energy  As a result, the two quality objectives are conflicting  The approach presented in this paper applies a multi objective optimization strategy to find optimal redundancy levels for different architectural elements  It is implemented in the ArcheOpterix tool and illustrated on a realistic case study from the automotive domain    2010 Springer Verlag   34 refs",Architecture driven reliability and energy optimization for complex embedded systems,"['Computer software', 'Embedded systems', 'Multiobjective optimization', 'Quality assurance', 'Redundancy', 'Architectural element', 'Automotive domains', 'Computational nodes', 'Energy consumption', 'Energy optimization', 'Optimal redundancy', 'Quality attributes', 'Redundancy allocation', 'Optimization Techniques', 'Safety Engineering', 'Quality Assurance and Control', 'Information Science', 'Control Systems', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Systems and Equipment']","['Meedeniya, Indika', '', '', 'Buhnova, Barbora', '', '', 'Aleti, Aldeida', '', '', 'Grunske, Lars']","Faculty of ICT, Swinburne University of Technology, Hawthorn, VIC 3122, Australia  2  Faculty of Informatics, Masaryk University, 60200 Brno, Czech Republic",2010,QoSA
1223,1224,"The use of the term ecosystem in the context of extensible software platforms and third party developers or user communities has made us ponder about the similarities between software ecosystems and natural ecosystems  We therefore compare software ecosystems and natural ecosystems to present an agenda for further research by analyzing some key characteristics of both types of ecosystems  We discuss the regulatory factors and mechanisms existing in nature, and then deduce key challenges that need to be dealt with, in order to achieve healthy operation of software ecosystems    2010 ACM   15 refs",Software ecosystems vs  natural ecosystems  Learning from the ingenious mind of nature,"['Software architecture', 'Technical presentations', 'Key characteristics', 'Natural ecosystem', 'nature', 'Regulatory factors', 'software', 'Software ecosystems', 'Software platforms', 'User communities', 'Ecology and Ecosystems', 'Computer Programming', 'Information Dissemination']","['Dhungana, Deepak', '', '', 'Groher, Iris', '', '', 'Schludermann, Elisabeth', '', '', 'Biffl, Stefan']","Lero, University of Limerick, Limerick, Ireland  2  Johannes Kepler University, Linz, Linz, Austria  3  Vienna University of Technology, Vienna, Austria",2010,ECSA
1224,1225,"The user acceptance of a software product especially depends on its usability  Therefore, it is a matter that needs to be addressed early in the software development process  In existing scenario based software architecture analysis methods that focus on usability, the usage context is not employed to select scenarios used for analysis, although it is known that understanding a specific usage context is important to carefully design for usability  In order to address this, we propose in this position paper the  Method for Analyzing Architectural Support Levels of Usability , which incorporates a usage context analysis and a simple standards inspection of a user interface prototype  It furthermore provides a knowledge base of standardized analysis scenarios and analysis templates that are derived from general usability requirements and design patterns  By defining Architectural Support Levels  ASL , which are defined based on analysis scenario gradings, the proposed procedure model shall guide evaluators to accomplish a repeatable analysis resulting in a rating of the current design for usability in a traceable way    2009 IEEE   19 refs",Towards a method for analyzing architectural support levels of usability,"['Architecture', 'Computer software', 'Knowledge based systems', 'Usability engineering', 'User interfaces', 'Architectural support', 'Design Patterns', 'Knowledge base', 'Position papers', 'Software architecture analysis methods', 'Software development process', 'Software products', 'Usability requirements', 'Usage context', 'User acceptance', 'User interface prototypes', 'Production Engineering', 'Industrial Engineering and Management', 'Marketing', 'Computer Applications', 'Expert Systems', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Peripheral Equipment', 'Buildings and Towers']","['Biel, Bettina', '', '', 'Gruhn, Volker']","Dept  of Computer Science, Leipzig University, Applied Telematics e Business Group, Leipzig, Germany",2009,ECSA
1225,1226,"The user acceptance of a software product especially depends on its usability  Therefore, it is a matter that needs to be addressed early in the software development process  In existing scenario based software architecture analysis methods that focus on usability, the usage context is not employed to select scenarios used for analysis, although it is known that understanding a specific usage context is important to carefully design for usability  In order to address this, we propose in this position paper the  Method for Analyzing Architectural Support Levels of Usability , which incorporates a usage context analysis and a simple standards inspection of a user interface prototype  It furthermore provides a knowledge base of standardized analysis scenarios and analysis templates that are derived from general usability requirements and design patterns  By defining Architectural Support Levels  ASL , which are defined based on analysis scenario gradings, the proposed procedure model shall guide evaluators to accomplish a repeatable analysis resulting in a rating of the current design for usability in a traceable way    2009 IEEE   19 refs",Towards a method for analyzing architectural support levels of usability,"['Architecture', 'Computer software', 'Knowledge based systems', 'Usability engineering', 'User interfaces', 'Architectural support', 'Design Patterns', 'Knowledge base', 'Position papers', 'Software architecture analysis methods', 'Software development process', 'Software products', 'Usability requirements', 'Usage context', 'User acceptance', 'User interface prototypes', 'Production Engineering', 'Industrial Engineering and Management', 'Marketing', 'Computer Applications', 'Expert Systems', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Peripheral Equipment', 'Buildings and Towers']","['Biel, Bettina', '', '', 'Gruhn, Volker']","Dept  of Computer Science, Leipzig University, Applied Telematics e Business Group, Leipzig, Germany",2009,WICSA
1226,1227,"The user acceptance of a software product especially depends on its usability  Therefore, it is a matter that needs to be addressed early in the software development process  In existing scenario based software architecture analysis methods that focus on usability, the usage context is not employed to select scenarios used for analysis, although it is known that understanding a specific usage context is important to carefully design for usability  In order to address this, we propose in this position paper the  Method for Analyzing Architectural Support Levels of Usability , which incorporates a usage context analysis and a simple standards inspection of a user interface prototype  It furthermore provides a knowledge base of standardized analysis scenarios and analysis templates that are derived from general usability requirements and design patterns  By defining Architectural Support Levels  ASL , which are defined based on analysis scenario gradings, the proposed procedure model shall guide evaluators to accomplish a repeatable analysis resulting in a rating of the current design for usability in a traceable way    2009 IEEE   19 refs",Towards a method for analyzing architectural support levels of usability,"['Architecture', 'Computer software', 'Knowledge based systems', 'Usability engineering', 'User interfaces', 'Architectural support', 'Design Patterns', 'Knowledge base', 'Position papers', 'Software architecture analysis methods', 'Software development process', 'Software products', 'Usability requirements', 'Usage context', 'User acceptance', 'User interface prototypes', 'Production Engineering', 'Industrial Engineering and Management', 'Marketing', 'Computer Applications', 'Expert Systems', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Computer Peripheral Equipment', 'Buildings and Towers']","['Biel, Bettina', '', '', 'Gruhn, Volker']","Dept  of Computer Science, Leipzig University, Applied Telematics e Business Group, Leipzig, Germany",2011,WICSA
1227,1228,"The vast diversity of implementation and support platforms for service oriented architectures  such as Web, Grid or even CORBA  increases the complexity of the development process of service based systems  To reduce it, both the architectural properties of the SOC paradigm and a development approach based on the MDA proposal can be studied  This work describes a UML profile for the PIM level service oriented architectural modelling, as well as the correspondent metamodel  PIM  Platform Independent Model  level is chosen because it does not reflect constraints about any specific platform or implementation technology  The proposal sketched in this article is part of our research of a service oriented development method  SOD M  called MIDAS    Springer Verlag Berlin Heidelberg 2007   9 refs",UML profile for the platform independent modelling of service oriented architectures,"['Computer simulation', 'Computer software portability', 'Constraint theory', 'Unified Modeling Language', 'Model driven architecture', 'PIM level modeling', 'Service oriented architecture', 'UML profiles', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Systems Science']","['L pez Sanz, Marcos', '', '', 'Acu a, C sar J', '', '', ' Cuesta, Carlos E', '', '', ' Marcos, Esperanza']","Computer Languages and Systems II Department, Rey Juan Carlos University, Mostoles, Spain",2007,ECSA
1228,1229,"The vast diversity of implementation and support platforms for service oriented architectures  such as Web, Grid or even CORBA  increases the complexity of the development process of service based systems  To reduce it, both the architectural properties of the SOC paradigm and a development approach based on the MDA proposal can be studied  This work describes a UML profile for the PIM level service oriented architectural modelling, as well as the correspondent metamodel  PIM  Platform Independent Model  level is chosen because it does not reflect constraints about any specific platform or implementation technology  The proposal sketched in this article is part of our research of a service oriented development method  SOD M  called MIDAS    Springer Verlag Berlin Heidelberg 2007   9 refs",UML profile for the platform independent modelling of service oriented architectures,"['Computer simulation', 'Computer software portability', 'Constraint theory', 'Unified Modeling Language', 'Model driven architecture', 'PIM level modeling', 'Service oriented architecture', 'UML profiles', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Systems Science']","['L pez Sanz, Marcos', '', '', 'Acu a, C sar J', '', '', ' Cuesta, Carlos E', '', '', ' Marcos, Esperanza']","Computer Languages and Systems II Department, Rey Juan Carlos University, Mostoles, Spain",2008,ECSA
1229,1230,"The vast diversity of implementation and support platforms for service oriented architectures  such as Web, Grid or even CORBA  increases the complexity of the development process of service based systems  To reduce it, both the architectural properties of the SOC paradigm and a development approach based on the MDA proposal can be studied  This work describes a UML profile for the PIM level service oriented architectural modelling, as well as the correspondent metamodel  PIM  Platform Independent Model  level is chosen because it does not reflect constraints about any specific platform or implementation technology  The proposal sketched in this article is part of our research of a service oriented development method  SOD M  called MIDAS   9 refs",UML profile for the platform independent modelling of service oriented architectures,"['software architecture', 'Unified Modeling Language', 'UML profile', 'platform independent modelling', 'service-oriented architectures', 'service-based systems', 'Software engineering techniques', 'High level languages']","['Lopez Sanz, M', '', '', ' Acuna, C J', '', '', ' Cuesta, C E', '', '', ' Marcos, E', '', '']","Comput  Languages   Syst  II Dept , Rey Juan Carlos Univ , Mostoles, Spain",2007,ECSA
1230,1231,"The vast diversity of implementation and support platforms for service oriented architectures  such as Web, Grid or even CORBA  increases the complexity of the development process of service based systems  To reduce it, both the architectural properties of the SOC paradigm and a development approach based on the MDA proposal can be studied  This work describes a UML profile for the PIM level service oriented architectural modelling, as well as the correspondent metamodel  PIM  Platform Independent Model  level is chosen because it does not reflect constraints about any specific platform or implementation technology  The proposal sketched in this article is part of our research of a service oriented development method  SOD M  called MIDAS   9 refs",UML profile for the platform independent modelling of service oriented architectures,"['software architecture', 'Unified Modeling Language', 'UML profile', 'platform independent modelling', 'service-oriented architectures', 'service-based systems', 'Software engineering techniques', 'High level languages']","['Lopez Sanz, M', '', '', ' Acuna, C J', '', '', ' Cuesta, C E', '', '', ' Marcos, E', '', '']","Comput  Languages   Syst  II Dept , Rey Juan Carlos Univ , Mostoles, Spain",2008,ECSA
1231,1232,"The vehicle that use a Polymer Electrolyte Membrane Fuel Cell  PEMFC  as a power source frequently experiences start up and shut down  Membrane Electrode Assembly  MEA  degradation by wet dry gas repetition was studied for vehicle start up and shut down  The time of the wet dry equilibrium state on the PEMFC was measured with High Frequency Resistance  HFR   The gas injection time was 20 min and 5 min for dry gas and wet gas, respectively  An experiment was carried out using electrochemical methods and a cross section of the MEA was visualized with a Field Emission Scanning Electron Microscope  FE SEM   After 1200 wet dry cycles, the performance of the cell decreased by 45 7  to its current density of 800 mA cm2  Ohmic and charge transfer resistances of the cell increased in the Electrochemical Impedance Spectroscopy  EIS   The crossover current of hydrogen also increased in the linear sweep voltammetry  LSV   The reduction of the electrochemical active surface area  ECSA  was confirmed through cyclic voltammetry  CV   The interface among the membrane, catalyst layer, and gas diffusion layer was separated and significantly deteriorated compared with fresh MEA    2009 Professor T  Nejat Veziroglu  Published by Elsevier Ltd  All rights reserved   15 refs",Membrane electrode assembly degradation by dry wet gas on a PEM fuel cell,"['Charge transfer', 'Cyclic voltammetry', 'Degradation', 'Diffusion in gases', 'Electrochemical corrosion', 'Electrochemical impedance spectroscopy', 'Field emission', 'Gases', 'Ion exchange', 'Proton exchange membrane fuel cells (PEMFC)', 'Scanning electron microscopy', 'Catalyst layers', 'Charge transfer resistance', 'Cross-over currents', 'Dry gas', 'Electrochemical active surface areas', 'ELectrochemical methods', 'Equilibrium state', 'Field emission scanning electron microscopes', 'Gas diffusion layers', 'Gas injection', 'High frequency resistance', 'Linear sweep voltammetry', 'Membrane electrode assemblies', 'PEM fuel cell', 'PEMFC', 'Polymer electrolyte membrane fuel cells', 'Power sources', 'Shut down', 'Start-ups', 'Wet gas', 'Wet/dry cycles', 'Wet/dry gas repetition', 'Fuel Cells', 'Chemistry', 'Electrochemistry', 'Chemical Reactions', 'Physical Properties of Gases, Liquids and Solids', 'High Energy Physics  Nuclear Physics  Plasma Physics']","['Kang, Jungtak', '', '', 'Kim, Junbom']","School of Chemical Engineering and Bioengineering, Ulsan University, Ulsan 680 749, Korea, Republic of",2010,ECSA
1232,1233,"There is a gradual increase of interest to use ontologies to capture architectural knowledge, in particular architectural design decisions  While ontologies seem a viable approach to codification, the application of such codified knowledge to everyday practice may be non trivial  In particular, browsing and searching an architectural knowledge repository for effective reuse can be cumbersome  In this paper, we present how ontology driven visualization of architectural design decisions can be used to assist software product audits, in which independent auditors perform an assessment of a product s quality  Our visualization combines the simplicity of tabular information representation with the power of on the fly ontological inference of decision attributes typically used by auditors  In this way, we are able to support the auditors in effectively reusing their know how, and to actively assist the core aspects of their decision making process, namely trade off analysis, impact analysis, and if then scenarios  We demonstrate our visualization with examples from a real world application    2009 IEEE   18 refs",Ontology driven visualization of architectural design decisions,"['Architectural design', 'Computer software', 'Decision making', 'Ontology', 'Structural design', 'Technology transfer', 'Visualization', 'Architectural knowledge', 'Decision attribute', 'Decision making process', 'Impact analysis', 'Information representation', 'Know-how', 'Non-trivial', 'On-the-fly', 'Real-world application', 'Software products', 'Trade-off analysis', 'Industrial Economics', 'Information Science', 'Engineering Graphics', 'Impact of Technology on Society', 'Management', 'Computer Applications', 'Computer Software, Data Handling and Applications', 'Structural Design, General', 'Buildings and Towers', 'Computer Programming']","['De Boer, Remco C', '', '', ' Lago, Patricia', '', '', 'Telea, Alexandru', '', '', 'Van Vliet, Hans']","Department of Computer Science, VU University Amsterdam, Netherlands  2  Institute for Mathematics and Computer Science, University of Groningen, Netherlands",2009,ECSA
1233,1234,"There is a gradual increase of interest to use ontologies to capture architectural knowledge, in particular architectural design decisions  While ontologies seem a viable approach to codification, the application of such codified knowledge to everyday practice may be non trivial  In particular, browsing and searching an architectural knowledge repository for effective reuse can be cumbersome  In this paper, we present how ontology driven visualization of architectural design decisions can be used to assist software product audits, in which independent auditors perform an assessment of a product s quality  Our visualization combines the simplicity of tabular information representation with the power of on the fly ontological inference of decision attributes typically used by auditors  In this way, we are able to support the auditors in effectively reusing their know how, and to actively assist the core aspects of their decision making process, namely trade off analysis, impact analysis, and if then scenarios  We demonstrate our visualization with examples from a real world application    2009 IEEE   18 refs",Ontology driven visualization of architectural design decisions,"['Architectural design', 'Computer software', 'Decision making', 'Ontology', 'Structural design', 'Technology transfer', 'Visualization', 'Architectural knowledge', 'Decision attribute', 'Decision making process', 'Impact analysis', 'Information representation', 'Know-how', 'Non-trivial', 'On-the-fly', 'Real-world application', 'Software products', 'Trade-off analysis', 'Industrial Economics', 'Information Science', 'Engineering Graphics', 'Impact of Technology on Society', 'Management', 'Computer Applications', 'Computer Software, Data Handling and Applications', 'Structural Design, General', 'Buildings and Towers', 'Computer Programming']","['De Boer, Remco C', '', '', ' Lago, Patricia', '', '', 'Telea, Alexandru', '', '', 'Van Vliet, Hans']","Department of Computer Science, VU University Amsterdam, Netherlands  2  Institute for Mathematics and Computer Science, University of Groningen, Netherlands",2009,WICSA
1234,1235,"There is a gradual increase of interest to use ontologies to capture architectural knowledge, in particular architectural design decisions  While ontologies seem a viable approach to codification, the application of such codified knowledge to everyday practice may be non trivial  In particular, browsing and searching an architectural knowledge repository for effective reuse can be cumbersome  In this paper, we present how ontology driven visualization of architectural design decisions can be used to assist software product audits, in which independent auditors perform an assessment of a product s quality  Our visualization combines the simplicity of tabular information representation with the power of on the fly ontological inference of decision attributes typically used by auditors  In this way, we are able to support the auditors in effectively reusing their know how, and to actively assist the core aspects of their decision making process, namely trade off analysis, impact analysis, and if then scenarios  We demonstrate our visualization with examples from a real world application    2009 IEEE   18 refs",Ontology driven visualization of architectural design decisions,"['Architectural design', 'Computer software', 'Decision making', 'Ontology', 'Structural design', 'Technology transfer', 'Visualization', 'Architectural knowledge', 'Decision attribute', 'Decision making process', 'Impact analysis', 'Information representation', 'Know-how', 'Non-trivial', 'On-the-fly', 'Real-world application', 'Software products', 'Trade-off analysis', 'Industrial Economics', 'Information Science', 'Engineering Graphics', 'Impact of Technology on Society', 'Management', 'Computer Applications', 'Computer Software, Data Handling and Applications', 'Structural Design, General', 'Buildings and Towers', 'Computer Programming']","['De Boer, Remco C', '', '', ' Lago, Patricia', '', '', 'Telea, Alexandru', '', '', 'Van Vliet, Hans']","Department of Computer Science, VU University Amsterdam, Netherlands  2  Institute for Mathematics and Computer Science, University of Groningen, Netherlands",2011,WICSA
1235,1236,"There is a recognized gap between requirements and architectures  There is also evidence that architecture evaluation, when done at the early phases of the development lifecycle, is an effective way to ensure the quality attributes of the final system  As quality attributes may be satisfied at a different extent by different alternative architectural solutions, an exploration and evaluation of alternatives is often needed  In order to address this issue at the requirements level, we propose to model architectures using the i  framework, a goal oriented modelling language that allows to represent the functional and non functional requirements of an architecture using actors and dependencies instead of components and connectors  Once the architectures are modelled, we propose guidelines for the generation of alternative architectures based upon existing architectural patterns, and for the definition of structural metrics for the evaluation of the resulting alternative models  The applicability of the approach is shown with the Home Service Robot case study    Springer Verlag Berlin Heidelberg 2007   28 refs",A goal oriented approach for the generation and evaluation of alternative architectures,"['Mathematical models', 'Quality control', 'Requirements engineering', 'Architecture evaluation', 'Development lifecycle', 'Computer Programming', 'Computer Applications', 'Quality Assurance and Control', 'Mathematics']","['Grau, Gemma', '', '', 'Franch, Xavier']","Universitat Polit cnica de Catalunya  UPC , c  Jordi Girona 1 3, Barcelona E 08034, Spain",2007,ECSA
1236,1237,"There is a recognized gap between requirements and architectures  There is also evidence that architecture evaluation, when done at the early phases of the development lifecycle, is an effective way to ensure the quality attributes of the final system  As quality attributes may be satisfied at a different extent by different alternative architectural solutions, an exploration and evaluation of alternatives is often needed  In order to address this issue at the requirements level, we propose to model architectures using the i  framework, a goal oriented modelling language that allows to represent the functional and non functional requirements of an architecture using actors and dependencies instead of components and connectors  Once the architectures are modelled, we propose guidelines for the generation of alternative architectures based upon existing architectural patterns, and for the definition of structural metrics for the evaluation of the resulting alternative models  The applicability of the approach is shown with the Home Service Robot case study    Springer Verlag Berlin Heidelberg 2007   28 refs",A goal oriented approach for the generation and evaluation of alternative architectures,"['Mathematical models', 'Quality control', 'Requirements engineering', 'Architecture evaluation', 'Development lifecycle', 'Computer Programming', 'Computer Applications', 'Quality Assurance and Control', 'Mathematics']","['Grau, Gemma', '', '', 'Franch, Xavier']","Universitat Polit cnica de Catalunya  UPC , c  Jordi Girona 1 3, Barcelona E 08034, Spain",2008,ECSA
1237,1238,"There is a recognized gap between requirements and architectures  There is also evidence that architecture evaluation, when done at the early phases of the development lifecycle, is an effective way to ensure the quality attributes of the final system  As quality attributes may be satisfied at a different extent by different alternative architectural solutions, an exploration and evaluation of alternatives is often needed  In order to address this issue at the requirements level, we propose to model architectures using the i  framework, a goal oriented modelling language that allows to represent the functional and non functional requirements of an architecture using actors and dependencies instead of components and connectors  Once the architectures are modelled, we propose guidelines for the generation of alternative architectures based upon existing architectural patterns, and for the definition of structural metrics for the evaluation of the resulting alternative models  The applicability of the approach is shown with the home service robot case study   28 refs",A goal oriented approach for the generation and evaluation of alternative architectures,"['programming languages', 'software architecture', 'architecture evaluation', 'quality attributes', 'goal-oriented modelling language', 'structural metrics', 'home service robot', 'Software engineering techniques', 'Programming languages']","['Grau, G', '', '', ' Franch, X', '', '']","Univ  Politec  de Catalunya  UPC , Barcelona, Spain",2007,ECSA
1238,1239,"There is a recognized gap between requirements and architectures  There is also evidence that architecture evaluation, when done at the early phases of the development lifecycle, is an effective way to ensure the quality attributes of the final system  As quality attributes may be satisfied at a different extent by different alternative architectural solutions, an exploration and evaluation of alternatives is often needed  In order to address this issue at the requirements level, we propose to model architectures using the i  framework, a goal oriented modelling language that allows to represent the functional and non functional requirements of an architecture using actors and dependencies instead of components and connectors  Once the architectures are modelled, we propose guidelines for the generation of alternative architectures based upon existing architectural patterns, and for the definition of structural metrics for the evaluation of the resulting alternative models  The applicability of the approach is shown with the home service robot case study   28 refs",A goal oriented approach for the generation and evaluation of alternative architectures,"['programming languages', 'software architecture', 'architecture evaluation', 'quality attributes', 'goal-oriented modelling language', 'structural metrics', 'home service robot', 'Software engineering techniques', 'Programming languages']","['Grau, G', '', '', ' Franch, X', '', '']","Univ  Politec  de Catalunya  UPC , Barcelona, Spain",2008,ECSA
1239,1240,"Thin film electrodes are prepared by thermal evaporation of nanometer thick layers of metal oxide and platinum on a gas diffusion layer  GDL , in order to evaluate different metal oxides  impact on the activity and stability of the platinum cathode catalyst in the polymer electrolyte fuel cell  Platinum deposited on tin, tantalum, titanium, tungsten and zirconium oxide is investigated and the morphology and chemistry of the catalysts are examined with scanning electron microscopy and X ray photoelectron spectroscopy  Cyclic sweeps in oxygen and nitrogen are performed prior and after potential cycling degradation tests  Platinum seems to disperse better on the metal oxides than on the GDL and increased electrochemically active surface area  ECSA  of platinum is observed on tin, titanium and tungsten oxide  A thicker layer metal oxide results in a higher ECSA  Platinum deposited on tungsten performs better than sole platinum in the polarisation curves and displays higher Tafel slopes at higher current densities than all other samples  The stability does also seem to be improved by the addition of tungsten oxide, electrodes with 3 nm platinum on 3, 10 and 20 nm tungsten oxide, performs better than all other electrodes after the accelerated degradation tests    2009 Elsevier Ltd   40 refs",Electrochemical performance and stability of thin film electrodes with metal oxides in polymer electrolyte fuel cells,"['Catalysts', 'Degradation', 'Diffusion in gases', 'Electrochemical electrodes', 'Electrolytic reduction', 'Fuel cells', 'Metals', 'Oxygen', 'Platinum', 'Polyelectrolytes', 'Scanning electron microscopy', 'Tantalum', 'Tantalum oxides', 'Thin films', 'Tin', 'Tin oxides', 'Titanium', 'Titanium oxides', 'Transition metal compounds', 'Tungsten', 'Tungsten compounds', 'X ray photoelectron spectroscopy', 'Zirconia', 'Zirconium', 'Accelerated degradation tests', 'Degradation test', 'Electrochemical performance', 'Electrochemically active surface areas', 'Gas diffusion layers', 'Metal oxides', 'Oxygen reduction', 'PEMFC', 'Platinum cathodes', 'Polarisation', 'Polymer electrolyte fuel cells', 'Potential cycling', 'Tafel slopes', 'Thick layers', 'Thin-film electrode', 'Transition metal oxides', 'Tungsten oxide', 'Zirconium oxide', 'Crystal Growth', 'Chemistry', 'Electrochemistry', 'Chemical Plants and Equipment', 'Chemical Reactions', 'Chemical Products Generally', 'Inorganic Compounds', 'Organic Polymers', 'Physical Properties of Gases, Liquids and Solids', 'Semiconductor Devices and Integrated Circuits', 'Metallurgy and Metallography', 'Titanium and Alloys', 'Tantalum and Alloys', 'Fuel Cells', 'Tungsten and Alloys', 'Precious Metals', 'Nonferrous Metals and Alloys excluding Alkali and Alkaline Earth Metals', 'Tin and Alloys']","['Wesselmark, M', '', '', ' Wickman, B', '', '', ' Lagergren, C', '', '', ' Lindbergh, G', '', '']","Applied Electrochemistry, School of Chemistry and Chemical Engineering, KTH, SE 100 44 Stockholm, Sweden  2  Competence Centre for Catalysis, Department of Applied Physics, Chalmers University of Technology, SE 412 96 G teborg, Sweden",2010,ECSA
1240,1241,"This article, presents a comparison of a first generation software quality assessment model  OpenBRR  and a second generation model  QualOSS  by applying them to the case of Asterisk, a FLOSS implementation of a telephone private branch exchange  PBX, VoIP   The key trend in the evolution of FLOSS quality assessment models is the movement from manual and descriptive to more automated and analytical models, and from the involvement of a few metrics to hundreds of metrics  Concerning the security measurements, they are much more sophisticated in QualOSS than in OpenBRR  Where OpenBRR have only three security metrics, QualOSS has nine security indicator with altogether 30 40 security metrics  This article shows how security are measured in the two assessment models, putting it into the overall context of the two approaches    2010 ACM   18 refs",Security measurements within the framework of quality assessment models for free libre open source software,"['Internet telephony', 'Mathematical models', 'Open systems', 'Software architecture', 'Technical presentations', 'asterisk', 'FLOSS', 'metrics', 'Open Source Software', 'OpenBRR', 'QualOSS', 'security', 'Software quality assessment', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Information Dissemination', 'Mathematics']","['Groven, Arne Kristian', '', '', 'Haaland, Kirsten', '', '', 'Glott, Ruediger', '', '', 'Tannenberg, Anna']","Norsk Regnesentral, Blindern, Oslo, Norway  2  UNU MERIT, Keizer Karelplein 19, Maastricht, Netherlands  3  FreeCode AS, Nydalsveien 30 A, Oslo, Norway",2010,ECSA
1241,1242,"This is a report of a working session on quality in the Working International Conference on Software Architecture, 2005   2005 IEEE   10 refs",Quality session report,"['Computer software selection and evaluation', 'Engineering education', 'Engineering research', 'Quality assurance', 'Technical presentations', 'Verification', 'Quality attributes', 'Working International Conference on Software Architecture', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming', 'Computer Applications', 'Education', 'Engineering Research', 'Quality Assurance and Control']","['Bass, Len', '', '', 'Matinlassi, Mari', '', '', 'Olumofin, Femi G', '', '']","Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA 15213  2  VTT Technical Research, Centre of Finland, P O  Box 1100, 90571 Oulu, Finland  3  University of Manitoba, Winnipeg, Man , Canada",2005,WICSA
1242,1243,This is an introduction to the NordiCloud Symposium collocated with WICSA ECSA 2012  Copyright is held by authors owners s,Nordic Symposium on cloud computing and internet technologies  NordiCloud,"['Cloud computing', 'Internet', 'IaaS', 'Internet of Things (IOT)', 'PaaS', 'SaaS', 'Software services', 'Utility computing', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications']","['Babar, Muhammad Ali', '', '', 'Mohagheghi, Parastoo', '', '', 'Edlund,', 'ke', '', '', 'Mosser, S bastien', '', '', 'Mikkonen, Tommi', '', '', 'K ngas, Peep']","IT University of Copenhagen, Copenhagen, Denmark  2  NTNU, Trondheim, Norway  3  KTH, CSC, PDC, Sweden  4  SINTEF, Oslo, Norway  5  Technical University of Tampere, Finland  6  University of TarTu, Estonia",2012,ECSA
1243,1244,This is an introduction to the NordiCloud Symposium collocated with WICSA ECSA 2012  Copyright is held by authors owners s,Nordic Symposium on cloud computing and internet technologies  NordiCloud,"['Cloud computing', 'Internet', 'IaaS', 'Internet of Things (IOT)', 'PaaS', 'SaaS', 'Software services', 'Utility computing', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Telephone Systems and Related Technologies  Line Communications', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications']","['Babar, Muhammad Ali', '', '', 'Mohagheghi, Parastoo', '', '', 'Edlund,', 'ke', '', '', 'Mosser, S bastien', '', '', 'Mikkonen, Tommi', '', '', 'K ngas, Peep']","IT University of Copenhagen, Copenhagen, Denmark  2  NTNU, Trondheim, Norway  3  KTH, CSC, PDC, Sweden  4  SINTEF, Oslo, Norway  5  Technical University of Tampere, Finland  6  University of TarTu, Estonia",2012,WICSA
1244,1245,"This paper addresses the gap between models describing system requirements, functions and architecture at a higher level of abstraction  such as SysML models , with respect to software hardware architecture description  such as the AADL models  as the means to improve the development process or embedded systems  The EAST ADL and AUTOSAR are the two focused architecture description formalisms in the presented work  While EAST ADL is an architecture description language providing an extension and profiling of SysML dedicated to automotive embedded systems, AUTOSAR provides means to describe software architecture architectures  The contribution of the paper is a relationship investigation between different concepts of the two languages  Three case studies, of a position control , fuel control and a brake by wire system, have been used to support and validate the work  The resulting mapping scheme provides a basis for automated architecture refinements and synthesis    2011 Springer Verlag   19 refs",From EAST ADL to AUTOSAR software architecture  A mapping scheme,"['Brakes', 'Embedded software', 'Embedded systems', 'MATLAB', 'Wire', 'Architecture description languages', 'AutoSAR', 'Brake-by-wire systems', 'EAST-ADL', 'Methodology', 'Model based development', 'Model Transformation', 'Simulink', 'SystemDesk', 'TargetLink', 'Metal Forming', 'Mechanical Drives and Transmissions', 'Computer Software, Data Handling and Applications', 'Mathematics']","['Qureshi, Tahir Naseer', '', '', 'Chen, DeJiu', '', '', 'L nn, Henrik', '', '', 'T rngren, Martin']","Department of Machine Design, Royal Institute of Technology, Stockholm, Sweden  2  Volvo Technology Corporation, Electronics and Software, SE 405 08 Gothenburg, Sweden",2011,ECSA
1245,1246,"This paper aims to show the usefulness of attaching attributes to pieces of software architectures, in order to direct a transformation and refinement process  These attributes are properties that can be considered as abstract ways to express architectural structures, and characteristics that constrain the refinement process  Then we define a methodology that consists in refining and transforming an architecture on the basis of the attributes attached to it  The methodology will be illustrated on a case study   10 refs",Attribute based refinement of software architectures,"['Computational complexity', 'Computer aided software engineering', 'Computer software', 'Interfaces (computer)', 'Mathematical transformations', 'Parallel processing systems', 'Query languages', 'Telecommunication links', 'Model driven architecture (MDA)', 'Non-functional requirements (NFR)', 'Platform independent models (PIM)', 'Platform specific models (PSM)', 'Mathematical Transformations', 'Computer Applications', 'Computer Programming Languages', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Computer Peripheral Equipment', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Optical Communication', 'Telecommunication  Radar, Radio and Television']","['Englebert, V', '', '', ' Vermaut, F', '', '']","Computer Science Department, University of Namur, Belgium",2004,WICSA
1246,1247,"This paper aims to show the usefulness of attaching attributes to pieces of software architectures, in order to direct a transformation and refinement process  These attributes are properties that can be considered as abstract ways to express architectural structures, and characteristics that constrain the refinement process  Then we define a methodology that consists in refining and transforming an architecture on the basis of the attributes attached to it  The methodology will be illustrated on a case study   10 refs",Attribute based refinement of software architectures,"['software architecture', 'attribute-based refinement', 'software architectures', 'software transformation', 'software refinement', 'software attributes', 'Software engineering techniques']","['Englebert, V', '', '', ' Vermaut, F', '', '']","Dept  of Comput  Sci , Namur Univ , Namur, Belgium",2004,WICSA
1247,1248,"This paper analyzes several industrial software architecture evaluation methods from the perspective of their contextual elements  Contextual elements include the time available for the evaluation, the personnel available, the openness of the results, the involvement of stakeholders, and so forth  The goal of this analysis is to inform managers and technical personnel about the possibilities for an architecture evaluation method given their particular context    2012 IEEE   19 refs",Understanding the context of architecture evaluation methods,"['Human resource management', 'Architecture evaluation', 'Contextual elements', 'Contextual factors', 'Industrial software', 'Software architecture evaluation', 'Technical personnel', 'Computer Programming', 'Personnel']","['Bass, Len', '', '', 'Nord, Robert L', '', '']","National ICT, Sydney, NSW, Australia  2  Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, United States",2012,ECSA
1248,1249,"This paper analyzes several industrial software architecture evaluation methods from the perspective of their contextual elements  Contextual elements include the time available for the evaluation, the personnel available, the openness of the results, the involvement of stakeholders, and so forth  The goal of this analysis is to inform managers and technical personnel about the possibilities for an architecture evaluation method given their particular context    2012 IEEE   19 refs",Understanding the context of architecture evaluation methods,"['Human resource management', 'Architecture evaluation', 'Contextual elements', 'Contextual factors', 'Industrial software', 'Software architecture evaluation', 'Technical personnel', 'Computer Programming', 'Personnel']","['Bass, Len', '', '', 'Nord, Robert L', '', '']","National ICT, Sydney, NSW, Australia  2  Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, United States",2012,WICSA
1249,1250,"This paper considers the representation of different software fault tolerance techniques as a product line architecture  PLA  for promoting the reuse of software artifact  The proposed PLA enables to specify a series of closely related architectural applications, which is obtained by identifying variation points associated with design decisions regarding software fault tolerance  These decisions are used to choose the appropriate technique depending on the features selected, e g, the number of redundant resources, or the type of adjudicator  The proposed approach also comprises the formalisation of the PLA, using B Method and CSP, for systematising the verification of fault tolerant software systems at the architectural level  The properties verified cover two complementary contexts  the selection of the correct architectural variabilities for instantiating the PLA, and also the properties of the chosen fault tolerance techniques    2009 IEEE   27 refs",Verifying architectural variabilities in software fault tolerance techniques,"['Architecture', 'Computer software reusability', 'Computer software selection and evaluation', 'Fault tolerance', 'Quality assurance', 'Verification', 'Appropriate techniques', 'Architectural levels', 'Architectural variability', 'B-method', 'Design decisions', 'Fault tolerance techniques', 'Fault-tolerant software', 'Formalisation', 'Product line architecture', 'Software artifacts', 'Software fault tolerances', 'Quality Assurance and Control', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Logic Elements', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Buildings and Towers']","['Brito, Patrick H', 'S', '', ',', '', ' Rubira, Cec lia M', 'F', '', '', ' De Lemos, Rog rio']","University of Campinas, Brazil  2  Federal University of Alagoas, Brazil  3  University of Coimbra, Portugal",2009,ECSA
1250,1251,"This paper considers the representation of different software fault tolerance techniques as a product line architecture  PLA  for promoting the reuse of software artifact  The proposed PLA enables to specify a series of closely related architectural applications, which is obtained by identifying variation points associated with design decisions regarding software fault tolerance  These decisions are used to choose the appropriate technique depending on the features selected, e g, the number of redundant resources, or the type of adjudicator  The proposed approach also comprises the formalisation of the PLA, using B Method and CSP, for systematising the verification of fault tolerant software systems at the architectural level  The properties verified cover two complementary contexts  the selection of the correct architectural variabilities for instantiating the PLA, and also the properties of the chosen fault tolerance techniques    2009 IEEE   27 refs",Verifying architectural variabilities in software fault tolerance techniques,"['Architecture', 'Computer software reusability', 'Computer software selection and evaluation', 'Fault tolerance', 'Quality assurance', 'Verification', 'Appropriate techniques', 'Architectural levels', 'Architectural variability', 'B-method', 'Design decisions', 'Fault tolerance techniques', 'Fault-tolerant software', 'Formalisation', 'Product line architecture', 'Software artifacts', 'Software fault tolerances', 'Quality Assurance and Control', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Logic Elements', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Buildings and Towers']","['Brito, Patrick H', 'S', '', ',', '', ' Rubira, Cec lia M', 'F', '', '', ' De Lemos, Rog rio']","University of Campinas, Brazil  2  Federal University of Alagoas, Brazil  3  University of Coimbra, Portugal",2009,WICSA
1251,1252,"This paper considers the representation of different software fault tolerance techniques as a product line architecture  PLA  for promoting the reuse of software artifact  The proposed PLA enables to specify a series of closely related architectural applications, which is obtained by identifying variation points associated with design decisions regarding software fault tolerance  These decisions are used to choose the appropriate technique depending on the features selected, e g, the number of redundant resources, or the type of adjudicator  The proposed approach also comprises the formalisation of the PLA, using B Method and CSP, for systematising the verification of fault tolerant software systems at the architectural level  The properties verified cover two complementary contexts  the selection of the correct architectural variabilities for instantiating the PLA, and also the properties of the chosen fault tolerance techniques    2009 IEEE   27 refs",Verifying architectural variabilities in software fault tolerance techniques,"['Architecture', 'Computer software reusability', 'Computer software selection and evaluation', 'Fault tolerance', 'Quality assurance', 'Verification', 'Appropriate techniques', 'Architectural levels', 'Architectural variability', 'B-method', 'Design decisions', 'Fault tolerance techniques', 'Fault-tolerant software', 'Formalisation', 'Product line architecture', 'Software artifacts', 'Software fault tolerances', 'Quality Assurance and Control', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Logic Elements', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Buildings and Towers']","['Brito, Patrick H', 'S', '', ',', '', ' Rubira, Cec lia M', 'F', '', '', ' De Lemos, Rog rio']","University of Campinas, Brazil  2  Federal University of Alagoas, Brazil  3  University of Coimbra, Portugal",2011,WICSA
1252,1253,"This paper defines a model based approach, which treats the reconfiguration issues for Distributed Real time Embedded  DRE  systems at a high level of abstraction  We aim at specifying reconfigurable DRE systems using a characterization approach  To treat the reconfiguration requirements, we propose a meta model and a UML profile as implementation of this meta model  This leads to a simple way to model reconfigurable systems thanks to UML tools, our RCA4RTES meta model and profile, and the MARTE profile and library    2011 Springer Verlag   5 refs",Towards a model based approach for reconfigurable DRE systems,"['Embedded software', 'Embedded systems', 'Mathematical models', 'Software architecture', 'Distributed real-time embedded systems', 'DRE systems', 'High level of abstraction', 'Meta model', 'Model based approach', 'Re-configurable', 'Reconfigurable systems', 'Reconfiguration requirement', 'UML profiles', 'UML tools', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Mathematics']","['Krichen, Fatma', ' ,', '', ' Hamid, Brahim', '', '', 'Zalila, Bechir', '', '', 'Jmaiel, Mohamed']","IRIT, University of Toulouse, France  2  ReDCAD, ENIS, University of Sfax, Tunisia",2011,ECSA
1253,1254,"This paper describes a component model and component based architecture of smart devices and systems that are designed to enhance life quality and well being of elderly individuals  In addition to providing the traditional view of hardware, firmware and software components, the model also provides developers with an operational view  The view enables the developer to specify device user interactions as executable workflows and allows the device operations and user actions to be experimented with and their correctness ascertained throughout the design and development process  The paper also presents a simulation environment for this purpose    2008 IEEE   16 refs",Component model and architecture of smart devices for elderly,"['Computer software', 'Firmware', 'Process engineering', 'Component modelling', 'Component-based architectures', 'Design and Development', 'Device operations', 'Simulation environments', 'Smart devices', 'Software components', 'User interactions', 'Well being', 'Work-flows', 'Data Storage, Equipment and Techniques', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Production Engineering']","['Chen, T Y', '', ',', '', ' Tsai, P H', '', ',', '', ' Chou, T S', '', ',', '', ' Liu, J W S', '', ',', '', ' Thamizhmani, A', '', ',', '', ' Shih, C S', '', ',', '', ' Kuo, T W', '', ',', '']","National Tsing Hua University, Hsinchu, Taiwan  2  Academia Sinica, Box 128, Academia Road, Nankang, Taipei, Taiwan  3  National Taiwan University, Taipei, Taiwan  4  Department of Computer Science, National Tsing Hua University, Hsinchu, Taiwan  5  Institute of Information Science, Academia Sinica, Nankang, Taipei, Taiwan  6  Department of Computer Science and Information Engineering, National Taiwan Unviersity, Taiwan",2008,WICSA
1254,1255,"This paper describes an approach for generating customized benchmark applications from a software architecture description using a Model Driven Architecture  MDA  approach  The benchmark generation and performance data capture tool implementation is based on widely used open source MDA frameworks  The business logic of the benchmark application is modeled in UML and generated by taking advantage of the existing generation  cartridges  so that the current component technology can be exploited in the benchmark, This greatly reduces the effort and expertise needed for benchmarking with complex component technology  We have also extended the MDA framework to model and generate a load testing suite and automatic performance measurement infrastructure  The approach complements current model based performance prediction and analysis methods by generating the benchmark application from the same application architecture that the performance models are derived from  This provides the potential for tightly integrating runtime performance measurement with model based prediction either for model validation or improving model prediction accuracy  We illustrate the approach using a case study based on EJB component technology    2005 IEEE   25 refs",Customized benchmark generation using MDA,"['Benchmarking', 'Computer aided software engineering', 'Data acquisition', 'Mathematical models', 'Business logic', 'Model Driven Architecture (MDA)', 'Prediction accuracy', 'Runtime performance measurement', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Industrial Engineering and Management', 'Mathematics']","['Zhu, Liming', ' ,', '', ' Liu, Yan', '', '', 'Gorton, Ian', '', '', 'Bui, Ngoc Bao']","Empirical Software Engineering Program, National ICT Australia Ltd   2  School of Computer Science and Engineering, University of New South Wales, Australia  3  Faculty of Information Technology, University of Technology Sydney, Australia",2005,WICSA
1255,1256,"This paper describes an implementation of the Infrastructure as a  Service  IaaS  concept for scientific computing and seven service pilot implementations with requirements from biomedical use cases at the CSC   IT Center for Science  The key service design requirements were enabling the use of any scientific software environment the use cases needed to succeed, and delivering the distributed infrastructure ICT resources seamlessly with the local ICT resources for the scientist users  The service concept targets the IT administrators at research organisations and delivers virtualised compute cluster and storage capacity via private network solutions  The virtualised resources can become part of the local cluster as virtual nodes and they can share the same file system as the physical nodes assuming the network performance is sufficient  Extension of the local resources can then be made transparent to enable an easy infrastructure uptake to the scientist end users  Based on 20 months of service piloting most of the biomedical organisations express a sustained and growing need for the distributed compute and storage resources delivered with the IaaS  We conclude that a successful implementation of the IaaS can improve access and reduce the effort to run expensive ICT infrastructure needed for biomedical research Copyright 2012 ACM   16 refs",Delivering ICT infrastructure for biomedical research,"['Digital storage', 'Energy storage', 'Health', 'Network performance', 'Research', 'Software architecture', 'Biobanks', 'Biological information', 'Biomedical', 'Computing', 'Data', 'IaaS', 'ICT', 'Infrastructure', 'Service', 'Industrial Hygiene', 'Information Science', 'Engineering Research', 'Computer Software, Data Handling and Applications', 'Data Storage, Equipment and Techniques', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television', 'Electric Batteries and Fuel Cells']","['Nyr nen, Tommi Henrik', '', '', 'Laitinen, Jarno', '', '', 'Tourunen, Olli', '', '', 'Sternkopf, Danny', '', '', 'Laurikainen, Risto', '', '', 'Oster, Per', '', '', 'Lehtovuori, Pekka T', '', '', ' Miettinen, Timo A', '', '', ' Simonen, Tomi', '', '', 'Perheentupa, Teemu', '', '', 'V strik, Imre', '', '', 'Kallioniemi, Olli', '', '', 'Lyall, Andrew', '', '', 'Thornton, Janet']","CSC   IT Center for Science, P O Box 405, FI 02101 Espoo, Finland  2  Institute for Molecular Medicine Finland   FIMM, University of Helsinki, P O Box 20, FI 00014 Helsinki, Finland  3  EMBL  EBI, Wellcome Trust Genome Campus, Hinxton, Cambridgeshire CB10 1SD, United Kingdom",2012,WICSA
1256,1257,"This paper describes experiences with performance evaluation of software architecture  The approach used is based on a software architecture evaluation strategy developed for non safety critical embedded software  In this work, the parts that belong to the performance evaluation are enhanced and applied  The most appropriate approach from the contemporary performance analysis techniques is selected to support the evaluation  The evaluation strategy is used for evaluating the performance of a software product from an interactive digital television field   33 refs",Performance optimization of embedded software architecture   A case study,"['Decision theory', 'Embedded systems', 'Error analysis', 'Optimization', 'Problem solving', 'Embedded software', 'Performance optimization', 'Software architecture', 'Software products', 'Computer Systems and Equipment', 'Computer Programming', 'Artificial Intelligence', 'Optimization Techniques', 'Numerical Methods']","['Purhonen, Anu']","VTT Tech  Research Centre of Finland, P  O  Box 1100, FIN 90571 Oulu, Finland",2004,WICSA
1257,1258,"This paper describes experiences with performance evaluation of software architecture  The approach used is based on a software architecture evaluation strategy developed for non safety critical embedded software  In this work, the parts that belong to the performance evaluation are enhanced and applied  The most appropriate approach from the contemporary performance analysis techniques is selected to support the evaluation  The evaluation strategy is used for evaluating the performance of a software product from an interactive digital television field   33 refs",Performance optimization of embedded software architecture   a case study,"['digital television', 'embedded systems', 'interactive television', 'software architecture', 'software performance evaluation', 'software quality', 'telecommunication computing', 'performance optimization', 'embedded software architecture', 'software architecture evaluation', 'nonsafety critical embedded software', 'interactive digital television', 'software performance evaluation', 'Software engineering techniques', 'Communications computing', 'Diagnostic, testing, debugging and evaluating systems']","['Purhonen, A', '', '']","VTT Tech  Res  Centre, Oulu, Finland",2004,WICSA
1258,1259,"This paper describes the experience of the DSIE research group in the developing of the EFTCoR family of robots using an abstract architectural framework ACRoSeT, following the component based paradigm  Using abstract components allow us to define very different architectures in a platform independent way  The translation of the abstract components to platform specific code is a hard and difficult task that can be partially automated with the help of the model transformation tools provided by the MDE approach    Springer Verlag Berlin Heidelberg 2007   9 refs",Experiences using a component oriented architectural framework for robots and its improvement with a MDE approach,"['Computer aided software engineering', 'Computer software portability', 'Remote control', 'Robotics', 'Component based software architecture', 'Teleoperated robots', 'Computer Programming', 'Computer Applications', 'Control Systems', 'Robotics']","['Ortiz, Francisco J', '', '', ' Pastor, Juan A', '', '', ' Alonso, Diego', '', '', ' lvarez, B rbara', '', '', 'S nchez, Pedro']","Division of Electronics Engineering and Systems  DSIE , Universidad Polit cnica de Cartagena, Campus Muralla del Mar s n, 30202 Cartagena, Murcia, Spain",2007,ECSA
1259,1260,"This paper describes the experience of the DSIE research group in the developing of the EFTCoR family of robots using an abstract architectural framework ACRoSeT, following the component based paradigm  Using abstract components allow us to define very different architectures in a platform independent way  The translation of the abstract components to platform specific code is a hard and difficult task that can be partially automated with the help of the model transformation tools provided by the MDE approach    Springer Verlag Berlin Heidelberg 2007   9 refs",Experiences using a component oriented architectural framework for robots and its improvement with a MDE approach,"['Computer aided software engineering', 'Computer software portability', 'Remote control', 'Robotics', 'Component based software architecture', 'Teleoperated robots', 'Computer Programming', 'Computer Applications', 'Control Systems', 'Robotics']","['Ortiz, Francisco J', '', '', ' Pastor, Juan A', '', '', ' Alonso, Diego', '', '', ' lvarez, B rbara', '', '', 'S nchez, Pedro']","Division of Electronics Engineering and Systems  DSIE , Universidad Polit cnica de Cartagena, Campus Muralla del Mar s n, 30202 Cartagena, Murcia, Spain",2008,ECSA
1260,1261,"This paper describes the experience of the DSIE research group in the developing of the EFTCoR family of robots using an abstract architectural framework ACRoSeT, following the component based paradigm  Using abstract components allow us to define very different architectures in a platform independent way  The translation of the abstract components to platform specific code is a hard and difficult task that can be partially automated with the help of the model transformation tools provided by the MDE approach   9 refs",Experiences using a component oriented architectural framework for robots and its improvement with a MDE approach,"['control engineering computing', 'software architecture', 'telerobotics', 'component-oriented architectural framework', 'robots', 'component-based paradigm', 'abstract components', 'model transformation tools', 'Telerobotics', 'Control engineering computing', 'Software engineering techniques']","['Ortiz, F J', '', '', ' Pastor, J A', '', '', ' Alonso, D', '', '', ' Alvarez, B', '', '', ' Sanchez, P', '', '']","Div  of Electron  Eng    Syst   DSIE , Univ  Politec  de Cartagena, Cartagena, Spain",2007,ECSA
1261,1262,"This paper describes the experience of the DSIE research group in the developing of the EFTCoR family of robots using an abstract architectural framework ACRoSeT, following the component based paradigm  Using abstract components allow us to define very different architectures in a platform independent way  The translation of the abstract components to platform specific code is a hard and difficult task that can be partially automated with the help of the model transformation tools provided by the MDE approach   9 refs",Experiences using a component oriented architectural framework for robots and its improvement with a MDE approach,"['control engineering computing', 'software architecture', 'telerobotics', 'component-oriented architectural framework', 'robots', 'component-based paradigm', 'abstract components', 'model transformation tools', 'Telerobotics', 'Control engineering computing', 'Software engineering techniques']","['Ortiz, F J', '', '', ' Pastor, J A', '', '', ' Alonso, D', '', '', ' Alvarez, B', '', '', ' Sanchez, P', '', '']","Div  of Electron  Eng    Syst   DSIE , Univ  Politec  de Cartagena, Cartagena, Spain",2008,ECSA
1262,1263,"This paper discusses on going work in adaptive architectures concerning automatic adaptation rule derivation  Adaptation is rule action based but deriving rules that meet the adaptation goals are tedious and error prone  We present an approach that uses model driven derivation and training for automatically deriving adaptation rules, and exemplify this in an environment for scientific computing    2008 IEEE   6 refs",Automatic rule derivation for adaptive architectures,"['Laws and legislation', 'Adaptation rules', 'Adaptive architectures', 'Automatic adaptation', 'Error-prone', 'Model-driven', 'Rule derivation', 'Scientific computing', 'Computer Programming', 'Social Sciences']","['Andersson, Jesper', '', '', 'Ericsson, Morgan', '', '', 'L we, Welf']","Software Technology, Department of Computer Science, V xj  Universitet",2008,WICSA
1263,1264,"This paper discusses the role of patterns in product line design by introducing a pattern based product line architecture for statistical analysis software  Associated to the architecture is a pattern language describing the instantiation of concrete software products from the product line  As patterns document design decisions better than mere code, patterns hinder the architectural drift  Since stability and organized evolution is of high importance for long term assets, the use of patterns and pattern languages is particularly interesting for product line architectures   7 refs",Applying patterns to develop a product line architecture for statistical analysis software,"['Computer software', 'Data warehouses', 'Database systems', 'Decision making', 'Hierarchical systems', 'Pattern recognition', 'Product development', 'Program documentation', 'Query languages', 'Semantics', 'Servers', 'Statistical methods', 'Visualization', 'XML', 'Architectural drift', 'Pattern languages', 'Product lines', 'Software products', 'Production Engineering', 'Management', 'Information Dissemination', 'Control Systems', 'Mathematical Statistics', 'Database Systems', 'Computer Software, Data Handling and Applications', 'Computer Systems and Equipment', 'Telecommunication  Radar, Radio and Television', 'Computer Programming Languages']","['Meister, J rgen', '', '', 'Reussner, Ralf', '', '', 'Rohde, Martin']","Oldenburg Res  Devmt  Inst  Comp  S , Tools and Systems  OFFIS , Escherweg 2, 26121 Oldenburg, Germany  2  Department of Computing Science, University of Oldenburg, Escherweg 2, 26121 Oldenburg, Germany  3  OFFIS",2004,WICSA
1264,1265,"This paper discusses the role of patterns in product line design by introducing a pattern based product line architecture for statistical analysis software  Associated to the architecture is a pattern language describing the instantiation of concrete software products from the product line  As patterns document design decisions better than mere code, patterns hinder the architectural drift  Since stability and organized evolution is of high importance for long term assets, the use of patterns and pattern languages is particularly interesting for product line architectures   7 refs",Applying patterns to develop a product line architecture for statistical analysis software,"['mathematics computing', 'object-oriented methods', 'object-oriented programming', 'software architecture', 'statistical databases', 'software architecture', 'statistical analysis software', 'product line design', 'pattern based product line architecture', 'pattern language', 'software patterns', 'Mathematics computing', 'Software engineering techniques', 'Object oriented programming', 'Other topics in statistics', 'Other DBMS']","['Meister, J', '', '', ' Reussner, R', ' Rohde, M']","Oldenburg R D Inst  for Comput  Sci Tools   Syst , Germany",2004,WICSA
1265,1266,"This paper discusses the topic of uncertainty in the context of architecting embedded software and systems  It presents links between complexity and uncertainty, and identifies different kinds of uncertainty  Based on this, it elaborates why uncertainty arises in the architecting of software intensive systems, and presents ten different tactics that can be employed to deal with uncertainty and mitigate the associated risks    2011 Springer Verlag   2 refs",On how to deal with uncertainty when architecting embedded software and systems,"['Embedded systems', 'Software architecture', 'Software intensive systems', 'Computer Software, Data Handling and Applications']","['Axelsson, Jakob']","School of Innovation, Design and Engineering, M lardalen University, SE 721 23 V ster s, Sweden",2011,ECSA
1266,1267,"This paper examines whether test problems that occur specifically during unit testing of object oriented programs can be solved using the aspect oriented programming paradigm  It presents the various problems in unit testing, shows conventional solutions and describes aspect oriented solutions to the problems  The aspect oriented solutions are supported by the unit test framework FlexTest of which the paper gives an overview   18 refs",FlexTest  an aspect oriented framework for unit testing,"['object-oriented programming', 'program testing', 'FlexTest', 'aspect-oriented framework', 'unit testing', 'object-oriented programs', 'Diagnostic, testing, debugging and evaluating systems', 'Object oriented programming']","['Sokenou, D', '', '', ' Vosgen, M', '', '']","Inst  fur Softwaretech    Theor  Informa , Tech  Univ  Berlin, Berlin, Germany",2005,QoSA
1267,1268,"This paper focuses on the business aspects of architecture decision making   in particular how to quantify the customer value of quality improvements to support architecture investment decisions  We developed concepts for quantifying the impact of quality improvements on customer value, customer value in use, and customer segments  In two real life case studies we present  1  how the concept for quantifying customer value was used,  2  how the customer value relates to the existing value indicators in the organization, and  3  how the importance of customer value for architecture decision making was assessed by practitioners in the organization    2010 Springer Verlag Berlin Heidelberg   18 refs",Customer value in architecture decision making,"['Customer satisfaction', 'Decision making', 'Investments', 'Sales', 'Architecture decisions', 'Architecture investments', 'Business aspects', 'Customer segments', 'Customer values', 'Quality improvement', 'Computer Programming', 'Industrial Economics', 'Marketing', 'Industrial Engineering and Management', 'Management']","['Ivanovic, Ana', '', '', 'America, Pierre']","Philips Research, High Tech Campus 37, Eindhoven 5656 AE, Netherlands",2010,ECSA
1268,1269,"This paper focuses on the human aspects of architecting software   in particular, the duties, skills, and knowledge of software architects  We present the results of a survey of approximately 200 public sources of information aimed at professional software architects that we conducted in the summer of 2006  We summarize what those sources have to say about the duties, skills, and knowledge that competent architects must perform and have    2007 IEEE   6 refs","The duties, skills, and knowledge of software architects","['Approximation theory', 'Computer science', 'Information technology', 'Information use', 'Knowledge based systems', 'Competent architects', 'Professional software architects', 'Numerical Methods', 'Information Retrieval and Use', 'Information Science', 'Computer Applications', 'Expert Systems', 'Computer Programming', 'Computer Circuits and Logic Elements']","['Clements, Paul', '', '', 'Kazman, Rick', '', '', 'Klein, Mark', '', '', 'Devesh, Divya', '', '', 'Reddy, Shivani', '', '', 'Verma, Prageti']","Carnegie Mellon Software Engineering Institute  2  Carnegie Mellon Software Engineering Institute, University of Hawaii  3  Indian Institute of Technology Guwahati  4  Symbiosis Center for Information Technology",2007,WICSA
1269,1270,"This paper focuses on the human aspects of architecting software in particular, the duties, skills, and knowledge of software architects  We present the results of a survey of approximately 200 public sources of information aimed at professional software architects that we conducted in the summer of 2006  We summarize what those sources have to say about the duties, skills, and knowledge that competent architects must perform and have   6 refs","The duties, skills, and knowledge of software architects","['human factors', 'software architecture', 'software architect', 'human aspect', 'human skill', 'duty', 'Software engineering techniques', 'Ergonomic aspects of computing']","['Clements, P', '', '', ' Kazman, R', '', '', ' Klein, M', '', '', ' Devesh, D', ' Reddy, S', ' Verma, P']","Carnegie Mellon Software Eng  Inst , Univ  of Hawaii, Manoa, HI, United States",2007,WICSA
1270,1271,"This paper integrates run time verification enablers in the feedback adaptation loop of the ASSET adaptive security framework for Internet of Things  IoT  in the eHealth settings and instantiates the resulting framework with Colored Petri Nets  The run time enablers make machine readable formal models of a system state and context available at run time  In addition, they make requirements that define the objectives of verification available at run time as formal specifications and enable dynamic context monitoring and adaptation  Run time adaptive behavior that deviates from the normal mode of operation of the system represents a major threat to the sustainability of critical eHealth services  Therefore, the integration of run time enablers into the ASSET adaptive framework could lead to a sustainable security framework for IoT in eHealth    2014 ACM   37 refs",Towards run time verification of adaptive security for IoT in eHealth,"['Petri nets', 'Software architecture', 'Adaptive security', 'Ehealth', 'Feedback adaptation', 'Formal Specification', 'Internet of Things (IOT)', 'IoT', 'Run-time verification', 'Security frameworks', 'Computer Programming', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory']","['Torjusen, Arild B', '', '', ' Abie, Habtamu', '', '', 'Paintsil, Ebenezer', '', '', 'Trcek, Denis', '', '', 'Skomedal,', 'smund']","Norwegian Computing Center, Blindern, NO 0314 Oslo, Norway  2  Point Transaction Systems AS, Pb 73  kern,  stre Aker vei 24, N 0508 Oslo, Norway  3  University of Ljubljana, Trzaka c  25, 1000 Ljubljana, Slovenia",2014,ECSA
1271,1272,"This paper introduces a case study of a driver terminal product family  The terminals are used for fare collection in public transportation  The case study applies the QADA architectural design and analysis method in documenting and evaluating the portability and maintainability of existing architecture  During this case study it was found out how to improve the architectural descriptions of the QADA method for better quality evaluation support  In addition, evaluation revealed risky points of architecture that were improved with separation, compression and abstraction   11 refs",Evaluating the portability and maintainability of software product family architecture  terminal software case study,"['software architecture', 'software maintenance', 'software performance evaluation', 'software portability', 'transportation', 'software portability evaluation', 'software maintainability evaluation', 'software product family architecture', 'terminal software', 'driver terminal product family', 'fare collection', 'public transportation', 'architectural design', 'architectural analysis', 'QADA method', 'quality evaluation support', 'Traffic engineering computing', 'Diagnostic, testing, debugging and evaluating systems', 'Software engineering techniques']","['Matinlassi, M', '', '']","VTT Tech  Res  Centre of Finland, Oulu, Finland",2004,WICSA
1272,1273,"This paper introduces a case study of a driver terminal product family  The terminals are used for fare collection in public transportation  The case study applies the QADASMI architectural design and analysis method in documenting and evaluating the portability and maintainability of existing architecture  During this case study it was found out how to improve the architectural descriptions of the QADA method for better quality evaluation support  In addition, evaluation revealed risky points of architecture that were improved with separation, compression and abstraction   11 refs",Evaluating the portability and maintainability of software product family architecture  Terminal software case study,"['Computer software', 'Computer software portability', 'Computer terminals', 'Data transfer', 'Product development', 'Program documentation', 'Quality control', 'Risk assessment', 'Architecture design', 'Personal digital assistant (PDA)', 'Product family architecture (PFA)', 'Quality-driven architecture design and analysis methods (QADA)', 'Quality Assurance and Control', 'Production Engineering', 'Data Processing and Image Processing', 'Accidents and Accident Prevention', 'Computer Programming', 'Computer Peripheral Equipment', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Matinlassi, Mari']","VTT Tech  Research Centre of Finland, P O Box 1100, 90571 Oulu, Finland",2004,WICSA
1273,1274,"This paper introduces a classification for decisions originating from work performed by architects  With the creation of a new architecture, all observed decisions were documented using an existing taxonomy extended with the introduced classification  In the first four months, 80 decisions were documented  Not all decisions have the same value for the architecture and one needed a classification to reason about importance of decisions  After realization of the first increment of the architecture a sanity check was performed  The architects showed how the six most important design artefacts and the fifteen most important architectural constraints and prerequisites were related  The relationship was via decisions and the classification helps to reduce the work to make and maintain this connection over time  The classification is dynamic and over time decisions can be classified differently  This enables architectural learning by pointing out which decisions were taken too early or had little impact    2010 Springer Verlag Berlin Heidelberg   8 refs",A classification of value for software architecture decisions,"['Architectural constraints', 'Architecture decisions', 'Sanity check', 'Computer Programming']","['Eklund, Ulrik', '', '', 'Arts, Thomas']","Department of Applied IT, Chalmers Univ  of Technology, G teborg University, Sweden",2010,ECSA
1274,1275,"This paper introduces an architecting method for distributed process intensive systems  Traditional methods  e g  object orientation, structured analysis or component service based designs  decompose a process intensive system into entities with attached domain specific operations  process constituents   This results in fine grained Remote Procedure Calls in distributed systems which are often detrimental to quality attributes such as performance, loose coupling, adaptability and interoperability  Our method tailors the REpresentational State Transfer  REST  principles used for hypermedia data transfer to process intensive systems by making process constituents into resources, and attaching a set of standard operations  Distributed processes interoperate by adhering to these operations and exchanging process information  In our method, process information exchange contains not only typical meta information about a process, but also process fragments that indicate possible next steps and interconnectedness for process coordination purposes  We have implemented our method in a Web environment and conducted a case study providing initial validation of its benefits    2009 IEEE   18 refs",An architecting method for distributed process intensive systems,"['Architecture', 'Computer software', 'Data transfer', 'Distributed process', 'Distributed systems', 'Domain specific', 'Hypermedia', 'Making process', 'Meta information', 'Object-orientation', 'Process coordination', 'Process information', 'Quality attributes', 'Remote Procedure Call', 'Representational state transfer', 'Structured analysis', 'Web environment', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications']","['Xu, Xiwei', ' ,', '', ' Zhu, Liming', ' ,', '', ' Staples, Mark', ' ,', '', ' Liu, Yan', ' ,', '']","NICTA, Australian Technology Park, Eveleigh, Australia  2  School of Computer Science and Engineering, University of New South Wales, Australia",2009,ECSA
1275,1276,"This paper introduces an architecting method for distributed process intensive systems  Traditional methods  e g  object orientation, structured analysis or component service based designs  decompose a process intensive system into entities with attached domain specific operations  process constituents   This results in fine grained Remote Procedure Calls in distributed systems which are often detrimental to quality attributes such as performance, loose coupling, adaptability and interoperability  Our method tailors the REpresentational State Transfer  REST  principles used for hypermedia data transfer to process intensive systems by making process constituents into resources, and attaching a set of standard operations  Distributed processes interoperate by adhering to these operations and exchanging process information  In our method, process information exchange contains not only typical meta information about a process, but also process fragments that indicate possible next steps and interconnectedness for process coordination purposes  We have implemented our method in a Web environment and conducted a case study providing initial validation of its benefits    2009 IEEE   18 refs",An architecting method for distributed process intensive systems,"['Architecture', 'Computer software', 'Data transfer', 'Distributed process', 'Distributed systems', 'Domain specific', 'Hypermedia', 'Making process', 'Meta information', 'Object-orientation', 'Process coordination', 'Process information', 'Quality attributes', 'Remote Procedure Call', 'Representational state transfer', 'Structured analysis', 'Web environment', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications']","['Xu, Xiwei', ' ,', '', ' Zhu, Liming', ' ,', '', ' Staples, Mark', ' ,', '', ' Liu, Yan', ' ,', '']","NICTA, Australian Technology Park, Eveleigh, Australia  2  School of Computer Science and Engineering, University of New South Wales, Australia",2009,WICSA
1276,1277,"This paper introduces an architecting method for distributed process intensive systems  Traditional methods  e g  object orientation, structured analysis or component service based designs  decompose a process intensive system into entities with attached domain specific operations  process constituents   This results in fine grained Remote Procedure Calls in distributed systems which are often detrimental to quality attributes such as performance, loose coupling, adaptability and interoperability  Our method tailors the REpresentational State Transfer  REST  principles used for hypermedia data transfer to process intensive systems by making process constituents into resources, and attaching a set of standard operations  Distributed processes interoperate by adhering to these operations and exchanging process information  In our method, process information exchange contains not only typical meta information about a process, but also process fragments that indicate possible next steps and interconnectedness for process coordination purposes  We have implemented our method in a Web environment and conducted a case study providing initial validation of its benefits    2009 IEEE   18 refs",An architecting method for distributed process intensive systems,"['Architecture', 'Computer software', 'Data transfer', 'Distributed process', 'Distributed systems', 'Domain specific', 'Hypermedia', 'Making process', 'Meta information', 'Object-orientation', 'Process coordination', 'Process information', 'Quality attributes', 'Remote Procedure Call', 'Representational state transfer', 'Structured analysis', 'Web environment', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications']","['Xu, Xiwei', ' ,', '', ' Zhu, Liming', ' ,', '', ' Staples, Mark', ' ,', '', ' Liu, Yan', ' ,', '']","NICTA, Australian Technology Park, Eveleigh, Australia  2  School of Computer Science and Engineering, University of New South Wales, Australia",2011,WICSA
1277,1278,"This paper introduces an architectural style for enabling end users to quickly design and deploy software systems in domains characterized by highly personalized and dynamic requirements  The style offers an intuitive metaphor based on boxes, pipes, and wires, but retains enough preciseness that systems can be automatically assembled and dynamically reconfigured based on uDesign descriptions  uDesign was primarily motivated and validated within monitoring and control applications for smart spaces, but we envision possible extensions to other domains  Our contribution differs from early attempts at enduser programming by dealing with higher level software architectural abstractions rather than programming, and by addressing run time descriptions rather than code structures  The paper presents validation of uDesign along the following aspects   a  expressiveness, by means of two case studies, one in health care, and one in home security,  b  soundness, by providing uDesign s formal semantics, and  c  implementability, by describing a mapping of uDesign to an existing software infrastructure  the Aura infrastructure    2008 IEEE   15 refs",uDesign  End user design applied tomonitoring and control applications for smart spaces,"['Computer software', 'Health', 'Health care', 'Information theory', 'Semantics', 'Software design', 'Architectural styles', 'Case studies', 'Code structures', 'Control applications', 'End-users', 'Formal Semantics', 'Home security', 'Implementability', 'Monitoring and controlling', 'Run-time', 'Smart spaces', 'Software architectural', 'Software infrastructures', 'Software systems', 'Medicine and Pharmacology', 'Health Care', 'Information Theory and Signal Processing', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Information Dissemination']","['Sousa, Jo o Pedro', '', '', 'Schmerl, Bradley', '', '', 'Poladian, Vahe', '', '', 'Brodsky, Alex']","George Mason University, Fairfax, VA 22030, United States  2  Carnegie Mellon University, Pittsburgh, PA 15213, United States",2008,WICSA
1278,1279,"This paper is an experience report of a long running Scrum project, conducted in a collaboration between industry and research, in a so called  Joint Research and Development Laboratory   Over time in the collaboration, we experienced a constant decrease in the pace of our development progress  Planning forward only within the limits of single sprints was the main reason for this  It resulted in a degenerating design and therefore a lack of flexibility that affected the agility of our project  Therefore, we introduced the concept of  epic architectures , an architecture design for a coherent group of user stories  Shifting the planning horizon further, across single sprints, helped us to create more stable and reusable concepts and to construct simpler, more elegant, and more maintainable solutions  We were able to significantly reduce the refactoring effort and increase the development speed, without significant overhead  With reporting on our experiences we hope to provide practically applicable guidance on how to integrate lightweight architecting in agile development processes, to sustain agility while creating high quality products    2014 IEEE   17 refs",Sustaining agility through architecture  Experiences from a joint research and development laboratory,"['Industry', 'Research', 'Software architecture', 'agile', 'agility', 'development', 'Experience report', 'Scrum', 'sustainable', 'Buildings and Towers', 'Computer Programming', 'Engineering Research', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['Weitzel, Balthasar', '', '', 'Rost, Dominik', '', '', 'Scheffe, Mathias']","Fraunhofer Institute for Experimental Software Engineering, Kaiserslautern, Germany  2  Insiders Technologies, Kaiserslautern, Germany",2014,WICSA
1279,1280,"This paper presents Jartege, a tool which allows random generation of unit tests for Java classes specified in JML  JML  Java Modeling Language  is a specification language for Java which allows one to write invariants for classes, and pre  and postconditions for operations  As in the JML JUnit tool, we use JML specifications on the one hand to eliminate irrelevant test cases, and on the other hand as a test oracle  Jartege randomly generates test cases, which consist of a sequence of constructor and method calls for the classes under test  The random aspect of the tool can be parameterized by associating weights to classes and operations, and by controlling the number of instances which are created  The practical use of Jartege is illustrated by a small case study   34 refs",Jartege  a tool for random generation of unit tests for Java classes,"['formal specification', 'formal verification', 'Java', 'program testing', 'software tools', 'specification languages', 'Jartege tool', 'unit test random generation', 'Java classes', 'Java Modeling Language', 'specification language', 'JML-JUnit tool', 'JML specification', 'Object oriented programming', 'Formal methods', 'Diagnostic, testing, debugging and evaluating systems', 'Programming support']","['Oriat, C', '', '']","LSR, IMAG, Grenoble, France",2005,QoSA
1280,1281,"This paper presents a case study on utilizing a clone detection technique for deriving commonalities among four different industrial simulation software systems  We have examined cloning both within each system and across the four systems  We have showed that several commonalities can be identified with the help of clone detection  The analysis results can support domain analysis, identification of reusable components and the design of a reference architecture    2012 IEEE   20 refs",Utilizing clone detection for domain analysis of simulation systems,"['Software architecture', 'Clone detection', 'Domain analysis', 'Reference architecture', 'Simulation systems', 'Software Product Line', 'Genetic Engineering', 'Computer Programming']","['Astekin, Merve', ' ,', '', ' S zer, Hasan']","Computer Engineering Department, Istanbul Technical University, Istanbul, Turkey  2  TUBITAK BILGEM, Information Technologies Institute, Kocaeli, Turkey  3  Computer Engineering Department, Ozyegin University, Istanbul, Turkey",2012,ECSA
1281,1282,"This paper presents a case study on utilizing a clone detection technique for deriving commonalities among four different industrial simulation software systems  We have examined cloning both within each system and across the four systems  We have showed that several commonalities can be identified with the help of clone detection  The analysis results can support domain analysis, identification of reusable components and the design of a reference architecture    2012 IEEE   20 refs",Utilizing clone detection for domain analysis of simulation systems,"['Software architecture', 'Clone detection', 'Domain analysis', 'Reference architecture', 'Simulation systems', 'Software Product Line', 'Genetic Engineering', 'Computer Programming']","['Astekin, Merve', ' ,', '', ' S zer, Hasan']","Computer Engineering Department, Istanbul Technical University, Istanbul, Turkey  2  TUBITAK BILGEM, Information Technologies Institute, Kocaeli, Turkey  3  Computer Engineering Department, Ozyegin University, Istanbul, Turkey",2012,WICSA
1282,1283,"This paper presents a dependency constraint language that allows software architects to restrict the spectrum of dependencies that can be presented in a given software system  The ultimate goal is to provide designers with means to define acceptable and unacceptable dependencies according to the planned system architecture  Once defined, such restrictions will be automatically enforced by a tool, thus avoiding silent erosions in the architecture  The paper also presents first results of applying the language in a Web based system    2008 Springer Verlag Berlin Heidelberg   13 refs",Towards a dependency constraint language to manage software architectures,"['Architecture', 'Linguistics', 'Dependency constraints', 'Software architects', 'Software systems', 'System architectures', 'Web-based systems', 'Buildings and Towers', 'Computer Programming', 'Computer Applications', 'Information Dissemination']","['Terra, Ricardo', '', '', 'De Oliveira Valente, Marco Tulio']","Institute of Informatics, PUC Minas, Brazil",2008,ECSA
1283,1284,"This paper presents a novel design of an egg curve based wide slot antenna for various wideband applications  The proposed printed antenna consists of an egg curved slot with a similar tuning stub  The egg curve is obtained by introducing an egg shaping parameter into standard elliptic curve equation  The e ect on the impedance bandwidth through the variations in antenna design parameters has been investigated and analysed in detail  To validate the theoretical design, various egg curved slot antennas were designed, fabricated and measured  Good agreement between the simulated results and the measured ones is observed  An empirical formula is also proposed to approximately determine the frequency corresponding to the lower edge of   10 dB operating bandwidth  The results demonstrate that the proposed egg curved slot antenna  ECSA  can obtain a measured bandwidth  BW  of 164 46   1 95 20 0 GHz  for  S11      10 dB  A stable realised gain of about 4 1 5 1 dBi with consistent radiation patterns are measured over more than the entire ultrawideband  UWB  bandwidth  3 1 10 6 GHz  which makes it a suitable candidate for wideband and UWB wireless system applications   16 refs",Printed egg curved slot antennas for wideband applications,"['Bandwidth', 'Design', 'Ultra-wideband (UWB)', 'Empirical formulas', 'Impedance bandwidths', 'Operating bandwidth', 'Simulated results', 'Theoretical design', 'Wide-slot antennas', 'Wideband applications', 'Wireless systems', 'Structural Design', 'Telecommunication  Radar, Radio and Television']","['Verma, Sudhanshu', '', '', 'Kumar, Preetam']","Department of Electrical Engineering, Indian Institute of Technology, Patna, Bihar 800013, India",2014,ECSA
1284,1285,"This paper presents a novel design of an egg curve based wide slot antenna for various wideband applications  The proposed printed antenna consists of an egg curved slot with a similar tuning stub  The egg curve is obtained by introducing an egg shaping parameter into standard elliptic curve equation  The e ect on the impedance bandwidth through the variations in antenna design parameters has been investigated and analysed in detail  To validate the theoretical design, various egg curved slot antennas were designed, fabricated and measured  Good agreement between the simulated results and the measured ones is observed  An empirical formula is also proposed to approximately determine the frequency corresponding to the lower edge of  10 dB operating bandwidth  The results demonstrate that the proposed egg curved slot antenna  ECSA  can obtain a measured bandwidth  BW  of 164 46   1 95 20 0 GHz  for  S11     10 dB  A stable realised gain of about 4 1 5 1 dBi with consistent radiation patterns are measured over more than the entire ultrawideband  UWB  bandwidth  3 1 10 6 GHz  which makes it a suitable candidate for wideband and UWB wireless system applications   16 refs",Printed egg curved slot antennas for wideband applications,"['Bandwidth', 'Design', 'Directional patterns (antenna)', 'Electric impedance', 'Microstrip antennas', 'Microwave antennas', 'Ultra-wideband (UWB)', 'Empirical formulas', 'Impedance bandwidths', 'Operating bandwidth', 'Simulated results', 'Theoretical design', 'Wide-slot antennas', 'Wideband applications', 'Wireless systems', 'Structural Design', 'Electricity  Basic Concepts and Phenomena', 'Telecommunication  Radar, Radio and Television']","['Verma, Sudhanshu', '', '', 'Kumar, Preetam']","Department of Electrical Engineering, Indian Institute of Technology, Patna, Bihar, India",2014,ECSA
1285,1286,"This paper presents a novel design of an egg curve based wide slot antenna for various wideband applications  The proposed printed antenna consists of an egg curved slot with a similar tuning stub  The egg curve is obtained by introducing an egg shaping parameter into standard elliptic curve equation  The effect on the impedance bandwidth through the variations in antenna design parameters has been investigated and analysed in detail  To validate the theoretical design, various egg curved slot antennas were designed, fabricated and measured  Good agreement between the simulated results and the measured ones is observed  An empirical formula is also proposed to approximately determine the frequency corresponding to the lower edge of  10 dB operating bandwidth  The results demonstrate that the proposed egg curved slot antenna  ECSA  can obtain a measured bandwidth  BW  of 164 46   1 95 20 0 GHz  for  S11   10 dB  A stable realised gain of about 4 1 5 1 dBi with consistent radiation patterns are measured over more than the entire ultrawideband  UWB  bandwidth  3 1 10 6 GHz  which makes it a suitable candidate for wideband and UWB wireless system applications   16 refs",Printed Egg Curved Slot Antennas for Wideband Applications,"['antenna radiation patterns', 'microstrip antennas', 'microwave antennas', 'slot antennas', 'ultra wideband antennas', 'printed egg curved slot antennas', 'ECSA', 'ultrawideband antennas', 'tuning stub', 'egg shaping parameter', 'elliptic curve equation', 'antenna design parameters', 'antenna radiation patterns', 'frequency 1.95 GHz to 20.0 GHz', 'Single antennas']","['Verma, S', '', '', ' Kumar, P', '', '']","Dept  of Electr  Eng , Indian Inst  of Technol , Patna, Patna, India",2014,ECSA
1286,1287,This paper presents a systematic case study that analyzes the influence exerted by different styles over the nature of architectural crosscutting concerns in an evolving multi agent system  The analysis encompassed the systematic comparison of alternative architecture decompositions for the same application that changed over time to address different stakeholders  concerns    Springer Verlag Berlin Heidelberg 2007   9 refs,On the interplay of crosscutting and MAS specific styles,"['Computer software selection and evaluation', 'Multi agent systems', 'Requirements engineering', 'Software design', 'Architectural crosscutting', 'Architecture decompositions', 'Computer Programming', 'Computer Applications']","['Molesini, Ambra', '', '', 'Garcia, Alessandro', '', '', 'Chavez, Christina', '', '', 'Batista, Thais']","Alma Mater Studiorum, Universit  di Bologna, Italy  2  Lancaster University, United Kingdom  3  UFBA   Universidade Federal de Bahia, Brazil  4  UFRN   Universidade Federal do Rio Grande do Norte, Brazil",2007,ECSA
1287,1288,This paper presents a systematic case study that analyzes the influence exerted by different styles over the nature of architectural crosscutting concerns in an evolving multi agent system  The analysis encompassed the systematic comparison of alternative architecture decompositions for the same application that changed over time to address different stakeholders  concerns    Springer Verlag Berlin Heidelberg 2007   9 refs,On the interplay of crosscutting and MAS specific styles,"['Computer software selection and evaluation', 'Multi agent systems', 'Requirements engineering', 'Software design', 'Architectural crosscutting', 'Architecture decompositions', 'Computer Programming', 'Computer Applications']","['Molesini, Ambra', '', '', 'Garcia, Alessandro', '', '', 'Chavez, Christina', '', '', 'Batista, Thais']","Alma Mater Studiorum, Universit  di Bologna, Italy  2  Lancaster University, United Kingdom  3  UFBA   Universidade Federal de Bahia, Brazil  4  UFRN   Universidade Federal do Rio Grande do Norte, Brazil",2008,ECSA
1288,1289,This paper presents a systematic case study that analyzes the influence exerted by different styles over the nature of architectural crosscutting concerns in an evolving multi agent system  The analysis encompassed the systematic comparison of alternative architecture decompositions for the same application that changed over time to address different stakeholders  concerns   9 refs,On the interplay of crosscutting and MAS specific styles,"['multi-agent systems', 'software architecture', 'crosscutting style', 'MAS-specific style', 'architectural crosscutting concerns', 'evolving multiagent system', 'architecture decomposition', 'Expert systems and other AI software and techniques', 'Software engineering techniques']","['Molesini, A', '', '', ' Garcia, A', ' Chavez, C', ' Batista, T']","Alma Mater Studiorum Univ  di Bologna, Bologna, Italy",2007,ECSA
1289,1290,This paper presents a systematic case study that analyzes the influence exerted by different styles over the nature of architectural crosscutting concerns in an evolving multi agent system  The analysis encompassed the systematic comparison of alternative architecture decompositions for the same application that changed over time to address different stakeholders  concerns   9 refs,On the interplay of crosscutting and MAS specific styles,"['multi-agent systems', 'software architecture', 'crosscutting style', 'MAS-specific style', 'architectural crosscutting concerns', 'evolving multiagent system', 'architecture decomposition', 'Expert systems and other AI software and techniques', 'Software engineering techniques']","['Molesini, A', '', '', ' Garcia, A', ' Chavez, C', ' Batista, T']","Alma Mater Studiorum Univ  di Bologna, Bologna, Italy",2008,ECSA
1290,1291,"This paper presents a technique developed at the Software Engineering Institute  SEI  for encapsulating quality attribute knowledge for use in the design and validation of software architectures  A reasoning framework, our encapsulation mechanism, can be used by nonexperts to analyze a specific quality  e g , performance, modifiability, availability  of a system    2005 IEEE   6 refs",Encapsulating quality attribute knowledge,"['Computer software selection and evaluation', 'Encapsulation', 'Engineering education', 'Information technology', 'Software architecture', 'Verification', 'Encapsulating', 'Software Engineering Institute (SEI)', 'Specific quality systems', 'Information Science', 'Education', 'Computer Applications', 'Artificial Intelligence', 'Computer Programming', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Semiconductor Devices and Integrated Circuits']","['Bass, Len', '', '', 'Ivers, James', '', '', 'Klein, Mark', '', '', 'Merson, Paulo', '', '', 'Wallnau, Kurt']","Software Engineering Institute, Pittsburgh, PA, United States",2005,WICSA
1291,1292,"This paper presents a tool called MTC Flow, which allows model driven developers to design, develop, test and deploy Model Transformation Chains  MTCs   The tool offers a graphical DSL for defining MTC workflow models independently of the technologies that support the transformations  Using basic concepts such as metamodels, models and transformations  M2M, M2T and T2M  the user defines, executes and tests his MTC easily in the same development environment  MTC Flow has an abstraction layer to implement technology support  It facilitates the interoperability of model transformation and validation using the existing technologies without changes  Additionally, once the MTC is finished, MTC Flow offers an option to deploy it in any environment that support JAVA technology  The tool supports modularity and alternative execution paths of the MTCs  It was built on top of the Eclipse Modeling Framework  EMF  and the Graphical Modeling Framework  GMF   The tool offers a development environment using the extending capabilities of the Eclipse platform  We illustrate how MTC Flow supports MTCs development process using an example    2013 ACM   10 refs","MTC Flow  A tool to design, develop and deploy model transformation chains","['Chains', 'Interoperability', 'Mathematical models', 'Abstraction layer', 'Development environment', 'Development process', 'Eclipse modeling framework', 'Graphical modeling frameworks', 'Model transformation', 'Model transformation chains', 'Technology support', 'Abstraction layer', 'Development environment', 'Development process', 'Eclipse modeling framework', 'Graphical modeling frameworks', 'Model transformation', 'Model transformation chains', 'Technology support', 'Computer Software, Data Handling and Applications', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Mathematics', 'Telecommunication  Radar, Radio and Television', 'Machine Tools', 'Mechanical Drives', 'Small Tools and Hardware']","['Alvarez, Camilo', '', '', 'Casallas, Rubby']","Universidad de Los Andes, Bogot  D C , Colombia",2013,ECSA
1292,1293,"This paper presents an approach that considers variation in systems and system architectures according to the kind of relation among the variants in the software family  The approach highlights why it is beneficial to consider such different variation relations separately and gives examples of what these relations may be  Two main categories of variation relations are presented, based on whether the system architecture remains constant  architecture based variation , or whether the architecture itself is variable, i e  the variants do not share a common architecture  The paper introduces several different kinds of variation families that seem to belong to these two categories, as well as yet other families comprising variants that do not neatly fit in either category, with only a subset of the variants sharing a common architecture  Each kind of variation relation is illustrated with an example software family from different domains, including operating systems  OS     2010 ACM   25 refs",Categorizing and modeling variation in families of systems  A position paper,"['Computer operating systems', 'Problem oriented languages', 'Technical presentations', 'Software family', 'Software Product Line', 'System architectures', 'variability', 'variation', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Simidchieva, Borislava I', '', '', ' Osterweil, Leon J', '', '']","Laboratory for Advanced Software Engineering Research  LASER , Department of Computer Science, University of Massachusetts Amherst, 140 Governors Drive, Amherst, MA 01003, United States",2010,ECSA
1293,1294,"This paper presents an assessment case study on the evolutionary capability of a large software system using a knowledge based approach  The knowledge based assessment is based on interviews with selected stakeholders of a software system  We have used this to assess the capability of the software architecture to evolve in one large Nokia software system  We have found that this approach proves to be effective in large organizations where development teams are distributed in different time zones, with cultural differences and with limited person to person communication  The lessons learned and the advantages of using this approach are presented    2007 IEEE   26 refs","Assessing the architectonics of large, software intensive systems using a knowledge based approach","['Knowledge acquisition', 'Knowledge based systems', 'Large scale systems', 'Telecommunication networks', 'Architectonics', 'Cultural differences', 'Knowledge based assessment', 'Software intensive systems', 'Telecommunication  Radar, Radio and Television', 'Computer Programming', 'Expert Systems', 'Systems Science']","['Del Rosso, Christian', '', '', 'Maccari, Alessandro']","Nokia Research Center, P O Box 407, 00045, Finland  2  Nokia Networks, Via Bombay 5, 00144, Roma, Italy",2007,WICSA
1294,1295,"This paper presents an assessment case study on the evolutionary capability of a large software system using a knowledge based approach  The knowledge based assessment is based on interviews with selected stakeholders of a software system  We have used this to assess the capability of the software architecture to evolve in one large Nokia software system  We have found that this approach proves to be effective in large organizations where development teams are distributed in different time zones, with cultural differences and with limited person to person communication  The lessons learned and the advantages of using this approach are presented   26 refs","Assessing the architectonics of large, software intensive systems using a knowledge based approach","['knowledge based systems', 'software architecture', 'software-intensive systems', 'knowledge-based assessment', 'Nokia software system', 'Knowledge engineering techniques', 'Software engineering techniques']","['Del Rosso, C', '', '', ' Maccari, A']","Nokia Res  Center, Tampere, Finland",2007,WICSA
1295,1296,This paper presents an experience in extending and evaluating UML Components for guiding the derivation of component based product line architectures  PLAs   We present a quantitative and qualitative evaluation of such an extension when applied to the proactive design of two PLAs  We have found that our approach supported an agile conception of architectural designs that are modular and likely to be resilient to changes over time and good enough to serve as the basis for more specific design decisions made by the architects    2011 Springer Verlag   14 refs,Extending UML components to develop software product line architectures  Lessons learned,"['Architectural design', 'Component based', 'Component-Based Development', 'Product line architecture', 'Qualitative evaluations', 'Specific design', 'UML components', 'Variability management', 'Buildings and Towers', 'Computer Programming']","['Contieri Jr , Antonio C', '', '', ' Correia, Guilherme G', '', '', ' Colanzi, Thelma E', '', '', ' Gimenes, Itana M', 'S', '', '', ' Oliveira Jr , Edson A', '', '', ' Ferrari, Sandra', '', '', 'Masiero, Paulo C', '', '', ' Garcia, Alessandro F', '', '']","State University of Maring , Maring  PR, Brazil  2  University of S o Paulo, S o Carlos SP, Brazil  3  Pontificial Catholic University of Rio de Janeiro, Rio de Janeiro RJ, Brazil",2011,ECSA
1296,1297,This paper presents and analyzes the key architectural decisions in the design of a successful Short Message Service Center as part of a GSM network    2005 IEEE   4 refs,Successful architecture for short message service center,"['Computer aided design', 'Decision making', 'Information technology', 'Message passing', 'Telecommunication services', 'Computer architectural decisions', 'Message Service Centers', 'Short message services', 'Telecommunication  Radar, Radio and Television', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Information Science', 'Management']","['Poort, Eltjo R', '', '', ' Adriaanse, Hans', '', '', 'Kuijt, Arie', '', '', 'De With, Peter H', 'N', '', ',', '']","LogicaCMG, P O  Box 159, 1180 AD Amstelveen, Netherlands  2  LogicaCMG Telecoms, Merweplein 5, 3432 GN Nieuwegein, Netherlands  3  Eindhoven Univ  of Technol , P O  Box 513, 5600 MB Eindhoven, Netherlands",2005,WICSA
1297,1298,"This paper presents extension of MDA called Context aware Quality Model Driven Architecture  CQ MDA  which can be used for quality control in pervasive computing environments  The proposed CQ MDA approach based on ContextualArchRQMM  Contextual ARCHitecture Quality Requirement MetaModel , being an extension to the MDA, allows for considering quality and resources awareness while conducting the design process  The main idea of presented extension consists in three abstractions levels  PIM  Platform Independent Model , CPIM  Contextual Platform Independent Model  and CPSM  Contextual Platform Specific Model   At the PIM level, a model decomposed into a two interrelated models  software architecture artifacts, which reflect functional requirements and quality model  At the CPIM level a simultaneous transformation of these two models with contextual information details is elaborated and then refined to a specific platform at the CPSM level  Such a procedure ensures that the transformation decisions should be based on the quality assessment of the created models    2010 Springer Verlag Berlin Heidelberg   15 refs",Context aware quality model driven approach  A new approach for quality control in pervasive computing environments,"['Computer software selection and evaluation', 'Quality control', 'Ubiquitous computing', 'ADL', 'Context', 'Context-Aware', 'Contextual information', 'Design process', 'Functional requirement', 'Interrelated models', 'MDA', 'MDA approach', 'Meta model', 'New approaches', 'Pervasive computing environment', 'PIM level', 'Platform independent model', 'Platform specific model', 'Quality assessment', 'Quality models', 'Quality requirements', 'Computer Software, Data Handling and Applications', 'Quality Assurance and Control']","['Alti, Adel', '', '', 'Boukerram, Abdellah', '', '', 'Roose, Philippe']","Computer Science Departement, Engineering Faculty, Ferhat Abbas University of Setif, Setif 19000, Algeria  2  LIUPPA   IUT Bayonne, 2 All e du Parc Montaury, Anglet 64600, France",2010,ECSA
1298,1299,"This paper presents the analysis and key findings of a survey on architectural knowledge sharing  The responses of 97 architects working in the Dutch IT Industry were analyzed by correlating practices and challenges with project size and success  Impact mechanisms between project size, project success, and architectural knowledge sharing practices and challenges were deduced based on reasoning, experience and literature  We find that architects run into numerous and diverse challenges sharing architectural knowledge, but that the only challenges that have a significant impact are the emotional challenges related to interpersonal relationships  Thus, architects should be careful when dealing with emotions in knowledge sharing    2009 Springer Berlin Heidelberg   17 refs",Successful architectural knowledge sharing  Beware of emotions,"['Architecture', 'Computer software selection and evaluation', 'Project management', 'Architectural knowledge', 'Impact mechanism', 'Interpersonal relationship', 'IT industry', 'Knowledge-sharing', 'Project size', 'Project success', 'Significant impacts', 'Software Project Management', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Poort, Eltjo R', '', '', ' Pramono, Agung', '', '', 'Perdeck, Michiel', '', '', 'Clerc, Viktor', '', '', 'Van Vliet, Hans']","Logica, P O  Box 159, 1180 AD Amstelveen, Netherlands  2  VU University, Amsterdam, Netherlands",2009,QoSA
1299,1300,"This paper presents the architecture of a modeldriven engineering framework which relies on the unified notion of classes and objects, as pioneered by SELF  1   We implemented this architecture for the domain of testbed automation systems and argue that this architecture can be generalized  We outline why our first prototype implementation following a conventional, UML like metamodeling approach failed and how the follow up implementation is aligned with the more appropriate so called Orthogonal Classification Architecture  OCA   While the OCA has been thoroughly studied theoretically, we applied OCA for a real world case in the automation system domain  We demonstrate that this modeling approach is feasible and implies a straightforward, clear cut decomposition of the framework into implementation modules, leading to comprehensible software architectures    2009 IEEE   17 refs",Towards a generic architecture for multi level modeling,"['Architecture', 'Computer software', 'Enterprise resource planning', 'Software prototyping', 'Automation systems', 'Generic architecture', 'Metamodeling', 'Model-driven Engineering', 'Modeling approach', 'Multilevel modeling', 'Prototype implementations', 'Real-world', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Management']","['Aschauer, Thomas', '', '', 'Dauenhauer, Gerd', '', '', 'Pree, Wolfgang']","C  Doppler Laboratory Embedded Software Systems, University of Salzburg, Jakob Haringer Strabe 2, 5020 Salzburg, Austria",2009,ECSA
1300,1301,"This paper presents the architecture of a modeldriven engineering framework which relies on the unified notion of classes and objects, as pioneered by SELF  1   We implemented this architecture for the domain of testbed automation systems and argue that this architecture can be generalized  We outline why our first prototype implementation following a conventional, UML like metamodeling approach failed and how the follow up implementation is aligned with the more appropriate so called Orthogonal Classification Architecture  OCA   While the OCA has been thoroughly studied theoretically, we applied OCA for a real world case in the automation system domain  We demonstrate that this modeling approach is feasible and implies a straightforward, clear cut decomposition of the framework into implementation modules, leading to comprehensible software architectures    2009 IEEE   17 refs",Towards a generic architecture for multi level modeling,"['Architecture', 'Computer software', 'Enterprise resource planning', 'Software prototyping', 'Automation systems', 'Generic architecture', 'Metamodeling', 'Model-driven Engineering', 'Modeling approach', 'Multilevel modeling', 'Prototype implementations', 'Real-world', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Management']","['Aschauer, Thomas', '', '', 'Dauenhauer, Gerd', '', '', 'Pree, Wolfgang']","C  Doppler Laboratory Embedded Software Systems, University of Salzburg, Jakob Haringer Strabe 2, 5020 Salzburg, Austria",2009,WICSA
1301,1302,"This paper presents the architecture of a modeldriven engineering framework which relies on the unified notion of classes and objects, as pioneered by SELF  1   We implemented this architecture for the domain of testbed automation systems and argue that this architecture can be generalized  We outline why our first prototype implementation following a conventional, UML like metamodeling approach failed and how the follow up implementation is aligned with the more appropriate so called Orthogonal Classification Architecture  OCA   While the OCA has been thoroughly studied theoretically, we applied OCA for a real world case in the automation system domain  We demonstrate that this modeling approach is feasible and implies a straightforward, clear cut decomposition of the framework into implementation modules, leading to comprehensible software architectures    2009 IEEE   17 refs",Towards a generic architecture for multi level modeling,"['Architecture', 'Computer software', 'Enterprise resource planning', 'Software prototyping', 'Automation systems', 'Generic architecture', 'Metamodeling', 'Model-driven Engineering', 'Modeling approach', 'Multilevel modeling', 'Prototype implementations', 'Real-world', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Data Processing and Image Processing', 'Computer Applications', 'Management']","['Aschauer, Thomas', '', '', 'Dauenhauer, Gerd', '', '', 'Pree, Wolfgang']","C  Doppler Laboratory Embedded Software Systems, University of Salzburg, Jakob Haringer Strabe 2, 5020 Salzburg, Austria",2011,WICSA
1302,1303,"This paper presents the theoretical and practical benefits from a case study using a the Architecture Business Cycle to understand the management of software architecture at an automotive manufacturer  The study was done to prepare for architectural changes driven by new technology and in the automotive business environment  Our results show that the architecture business cycle worked well in defining the theoretical context for the study after some modifications  the architecture had to be precisely defined in the interview situation to gain more useful data rather than broad generalisations  Further contributions of the study were a deeper understanding of role of the architecture and it s position among other artefacts in the organisation, and an increased focus on architectural issues in management meetings  The study also indirectly affected a subsequent re organisation    2009 IEEE   20 refs",A case study of the architecture business cycle for an in vehicle software architecture,"['Architecture', 'Computer software', 'Architectural changes', 'Automotive business', 'Automotive manufacturers', 'Business cycles', 'In-vehicle', 'New technologies', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Eklund, Ulrik', '', '', 'Olsson, Carl Magnus']","Electric and Electronic Systems Engineering, Volvo Car Corporation, G teborg, Sweden  2  Software Engineering and Management, IT University of G teborg, G teborg, Sweden",2009,ECSA
1303,1304,"This paper presents the theoretical and practical benefits from a case study using a the Architecture Business Cycle to understand the management of software architecture at an automotive manufacturer  The study was done to prepare for architectural changes driven by new technology and in the automotive business environment  Our results show that the architecture business cycle worked well in defining the theoretical context for the study after some modifications  the architecture had to be precisely defined in the interview situation to gain more useful data rather than broad generalisations  Further contributions of the study were a deeper understanding of role of the architecture and it s position among other artefacts in the organisation, and an increased focus on architectural issues in management meetings  The study also indirectly affected a subsequent re organisation    2009 IEEE   20 refs",A case study of the architecture business cycle for an in vehicle software architecture,"['Architecture', 'Computer software', 'Architectural changes', 'Automotive business', 'Automotive manufacturers', 'Business cycles', 'In-vehicle', 'New technologies', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Eklund, Ulrik', '', '', 'Olsson, Carl Magnus']","Electric and Electronic Systems Engineering, Volvo Car Corporation, G teborg, Sweden  2  Software Engineering and Management, IT University of G teborg, G teborg, Sweden",2009,WICSA
1304,1305,"This paper presents the theoretical and practical benefits from a case study using a the Architecture Business Cycle to understand the management of software architecture at an automotive manufacturer  The study was done to prepare for architectural changes driven by new technology and in the automotive business environment  Our results show that the architecture business cycle worked well in defining the theoretical context for the study after some modifications  the architecture had to be precisely defined in the interview situation to gain more useful data rather than broad generalisations  Further contributions of the study were a deeper understanding of role of the architecture and it s position among other artefacts in the organisation, and an increased focus on architectural issues in management meetings  The study also indirectly affected a subsequent re organisation    2009 IEEE   20 refs",A case study of the architecture business cycle for an in vehicle software architecture,"['Architecture', 'Computer software', 'Architectural changes', 'Automotive business', 'Automotive manufacturers', 'Business cycles', 'In-vehicle', 'New technologies', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Eklund, Ulrik', '', '', 'Olsson, Carl Magnus']","Electric and Electronic Systems Engineering, Volvo Car Corporation, G teborg, Sweden  2  Software Engineering and Management, IT University of G teborg, G teborg, Sweden",2011,WICSA
1305,1306,"This paper proposes a Model Driven Architecture  MDA  approach for the development of real time On Board Software  OBS  for satellites starting from its UML modeling  The MDA definition is considered in a broad sense in which code is  semi   automatically generated from more abstract models, A Model Driven Development  MDD  tool tailored for real time applications is used for software construction, which provides more general resources than just supporting UML documentation and high level design  drafting   This allows for model execution where one may find problems and issues that whiteboarding and document reviews are unable to find, Moreover, an incremental development, based in the 4 1 architectural views, can be effectively attained even at high level architectural models  A layered model is suggested for the logical architectural view of the OBS domain    2005 IEEE   3 refs",An MDA approach for a multi layered satellite on board software architecture,"['Automation', 'Codes (symbols)', 'Mathematical models', 'Satellites', 'Software engineering', 'Unified Modeling Language', 'Abstract models', 'Model Driven Architecture (MDA)', 'Model Driven Development (MDD)', 'Software construction', 'Abstract models', 'Model Driven Architecture (MDA)', 'Model Driven Development (MDD)', 'Software construction', 'Computer Programming', 'Computer Programming Languages', 'Data Processing and Image Processing', 'Computer Applications', 'Automatic Control Principles and Applications', 'Mathematics']","['Dos Santos, Walter A', '', '', ' Da Cunha, Adilson M', '', '']","National Space Research Institute, INPE, Space Systems Division  2  Brazilian Aeronautical Institute of Technology, ITA, Department of Computer Science",2005,WICSA
1306,1307,"This paper proposes a compositional formal approach to design correct publish subscribe architecture styles  We provide a set of patterns and the corresponding composition rules to build architecture styles  The defined patterns and rules respect the principle of information propagation requiring that produced information have to reach all the subscribed consumers  We describe patterns as graphs and we use the Z notation to specify formally the semantic of each pattern and each rule  We prove consistency and correctness using the Z Eves theorem prover  We show how to consider the interconnection topology between dispatchers as well as the subscription mechanism by simple refinements  We also show how to construct the Z specification of the designed architecture style based on applied rules  Moreover, we describe the dynamics of architecture via guarded graph rewriting rules whose body describe the structural constraints and whose guards mainly describe the functional constraints of the system  We express these rules entirely with the Z notation also, obtaining a unified approach which handles both the static and the dynamic aspects    Springer Verlag Berlin Heidelberg 2007   17 refs",Formal design of structural and dynamic features of publish subscribe architectural styles,"['Graphic methods', 'Mathematical models', 'Publishing', 'Specifications', 'Architecture modeling', 'Formal specification', 'Style composition', 'Computer Programming', 'Computer Applications', 'Codes and Standards', 'Information Dissemination', 'Mathematics']","['Loulou, Imen', '', '', 'Kacem, Ahmed Hadj', '', '', 'Jmaiel, Mohamed', '', '', 'Drira, Khalil']","University of Sfax, Research Unit ReDCAD, B P  W 3038, Sfax, Tunisia  2  LAAS CNRS, 7 avenue de Colonel Roche, 31007 Toulouse Cedex 4, France",2007,ECSA
1307,1308,"This paper proposes a compositional formal approach to design correct publish subscribe architecture styles  We provide a set of patterns and the corresponding composition rules to build architecture styles  The defined patterns and rules respect the principle of information propagation requiring that produced information have to reach all the subscribed consumers  We describe patterns as graphs and we use the Z notation to specify formally the semantic of each pattern and each rule  We prove consistency and correctness using the Z Eves theorem prover  We show how to consider the interconnection topology between dispatchers as well as the subscription mechanism by simple refinements  We also show how to construct the Z specification of the designed architecture style based on applied rules  Moreover, we describe the dynamics of architecture via guarded graph rewriting rules whose body describe the structural constraints and whose guards mainly describe the functional constraints of the system  We express these rules entirely with the Z notation also, obtaining a unified approach which handles both the static and the dynamic aspects    Springer Verlag Berlin Heidelberg 2007   17 refs",Formal design of structural and dynamic features of publish subscribe architectural styles,"['Graphic methods', 'Mathematical models', 'Publishing', 'Specifications', 'Architecture modeling', 'Formal specification', 'Style composition', 'Computer Programming', 'Computer Applications', 'Codes and Standards', 'Information Dissemination', 'Mathematics']","['Loulou, Imen', '', '', 'Kacem, Ahmed Hadj', '', '', 'Jmaiel, Mohamed', '', '', 'Drira, Khalil']","University of Sfax, Research Unit ReDCAD, B P  W 3038, Sfax, Tunisia  2  LAAS CNRS, 7 avenue de Colonel Roche, 31007 Toulouse Cedex 4, France",2008,ECSA
1308,1309,"This paper proposes a compositional formal approach to design correct publish subscribe architecture styles  We provide a set of patterns and the corresponding composition rules to build architecture styles  The defined patterns and rules respect the principle of information propagation requiring that produced information have to reach all the subscribed consumers  We describe patterns as graphs and we use the Z notation to specify formally the semantic of each pattern and each rule  We prove consistency and correctness using the Z Eves theorem prover  We show how to consider the interconnection topology between dispatchers as well as the subscription mechanism by simple refinements  We also show how to construct the Z specification of the designed architecture style based on applied rules  Moreover, we describe the dynamics of architecture via guarded graph rewriting rules whose body describe the structural constraints and whose guards mainly describe the functional constraints of the system  We express these rules entirely with the Z notation also, obtaining a unified approach which handles both the static and the dynamic aspects   17 refs",Formal design of structural and dynamic features of publish subscribe architectural styles,"['formal specification', 'software architecture', 'theorem proving', 'formal design', 'structural-dynamic features', 'publish-subscribe architectural styles', 'information propagation', 'Z-Eves theorem prover', 'interconnection topology', 'subscription mechanism', 'graph-rewriting rules', 'functional constraints', 'Software engineering techniques', 'Formal methods', 'Knowledge engineering techniques']","['Loulou, I', '', '', ' Kacem, A H', '', '', ' Jmaiel, M', '', '', ' Drira, K']","Res  Unit ReDCAD, Univ  of Sfax, Sfax, Tunisia",2007,ECSA
1309,1310,"This paper proposes a compositional formal approach to design correct publish subscribe architecture styles  We provide a set of patterns and the corresponding composition rules to build architecture styles  The defined patterns and rules respect the principle of information propagation requiring that produced information have to reach all the subscribed consumers  We describe patterns as graphs and we use the Z notation to specify formally the semantic of each pattern and each rule  We prove consistency and correctness using the Z Eves theorem prover  We show how to consider the interconnection topology between dispatchers as well as the subscription mechanism by simple refinements  We also show how to construct the Z specification of the designed architecture style based on applied rules  Moreover, we describe the dynamics of architecture via guarded graph rewriting rules whose body describe the structural constraints and whose guards mainly describe the functional constraints of the system  We express these rules entirely with the Z notation also, obtaining a unified approach which handles both the static and the dynamic aspects   17 refs",Formal design of structural and dynamic features of publish subscribe architectural styles,"['formal specification', 'software architecture', 'theorem proving', 'formal design', 'structural-dynamic features', 'publish-subscribe architectural styles', 'information propagation', 'Z-Eves theorem prover', 'interconnection topology', 'subscription mechanism', 'graph-rewriting rules', 'functional constraints', 'Software engineering techniques', 'Formal methods', 'Knowledge engineering techniques']","['Loulou, I', '', '', ' Kacem, A H', '', '', ' Jmaiel, M', '', '', ' Drira, K']","Res  Unit ReDCAD, Univ  of Sfax, Sfax, Tunisia",2008,ECSA
1310,1311,"This paper proposes a research challenge to narrow the gap between the architecture and implementation of a software system  We discuss the situation today, where little of a system s architecture and design is directly represented in the source code of its implementation and explore why this is a problem and the benefits that might flow from narrowing this gap  We then discuss how the situation could be improved by the creation of technologies that allow the design and architecture of a system to be directly related to its source code and outline the requirements that we believe that any such technology would need to fulfill  Finally, we consider the likely results of widespread application of such a technology and the benefits that would follow    2010 ACM   10 refs",Unifying software architecture with its implementation,"['Design', 'Technical presentations', 'Design representation', 'Research challenges', 'Software systems', 'Source codes', 'Structural Design', 'Computer Programming', 'Information Dissemination']","['Woods, Eoin', '', '', 'Rozanski, Nick']","Artechra, Hemel Hempstead, United Kingdom  2  Artechra, London, United Kingdom",2010,ECSA
1311,1312,"This paper proposes a structured approach for reviewing architecture documents using question sets  Given the critical importance of architecture to software project success, it follows that the architecture cannot be effective unless it is captured in documentation that allows the stakeholders to understand and use the architecture in the way it was intended  The approach does not assume a particular architecture methodology or documentation approach, although it was conceived in the context of ISO IEC 42010 and the SEI Views and Beyond approach to documenting software architectures  Like both of them, our approach is centered on the stakeholders of the artifact, utilizing them in a focused, guided way to assure that the documentation carries sufficient quality to enable them to do their jobs  Our approach is not intended as a complete framework for architecture evaluation  rather it is meant to be used within such a framework, when one is available    2009 IEEE   5 refs",Reviewing architecture documents using question sets,"['Architecture', 'Computer software selection and evaluation', 'Architecture evaluation', 'ISO/IEC 42010', 'Software project', 'Structured approach', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Nord, Robert L', '', '', ' Clements, Paul C', '', '', ' Emery, David', '', '', 'Hilliard, Rich']","Software Engineering Institute, United States  2  DSC  3  Consulting software systems architect",2009,ECSA
1312,1313,"This paper proposes a structured approach for reviewing architecture documents using question sets  Given the critical importance of architecture to software project success, it follows that the architecture cannot be effective unless it is captured in documentation that allows the stakeholders to understand and use the architecture in the way it was intended  The approach does not assume a particular architecture methodology or documentation approach, although it was conceived in the context of ISO IEC 42010 and the SEI Views and Beyond approach to documenting software architectures  Like both of them, our approach is centered on the stakeholders of the artifact, utilizing them in a focused, guided way to assure that the documentation carries sufficient quality to enable them to do their jobs  Our approach is not intended as a complete framework for architecture evaluation  rather it is meant to be used within such a framework, when one is available    2009 IEEE   5 refs",Reviewing architecture documents using question sets,"['Architecture', 'Computer software selection and evaluation', 'Architecture evaluation', 'ISO/IEC 42010', 'Software project', 'Structured approach', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Nord, Robert L', '', '', ' Clements, Paul C', '', '', ' Emery, David', '', '', 'Hilliard, Rich']","Software Engineering Institute, United States  2  DSC  3  Consulting software systems architect",2009,WICSA
1313,1314,"This paper proposes a structured approach for reviewing architecture documents using question sets  Given the critical importance of architecture to software project success, it follows that the architecture cannot be effective unless it is captured in documentation that allows the stakeholders to understand and use the architecture in the way it was intended  The approach does not assume a particular architecture methodology or documentation approach, although it was conceived in the context of ISO IEC 42010 and the SEI Views and Beyond approach to documenting software architectures  Like both of them, our approach is centered on the stakeholders of the artifact, utilizing them in a focused, guided way to assure that the documentation carries sufficient quality to enable them to do their jobs  Our approach is not intended as a complete framework for architecture evaluation  rather it is meant to be used within such a framework, when one is available    2009 IEEE   5 refs",Reviewing architecture documents using question sets,"['Architecture', 'Computer software selection and evaluation', 'Architecture evaluation', 'ISO/IEC 42010', 'Software project', 'Structured approach', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Nord, Robert L', '', '', ' Clements, Paul C', '', '', ' Emery, David', '', '', 'Hilliard, Rich']","Software Engineering Institute, United States  2  DSC  3  Consulting software systems architect",2011,WICSA
1314,1315,This paper proposes the concept of Breakable Objects  BoBs  as the building blocks for flexible application architectures  We claim that BoB Driven Architecture  BODA  greatly facilitates automated refactoring of an application for various deployment scenarios    2005 IEEE   4 refs,Breakable objects  Building blocks for flexible application architectures,"['Engineering research', 'Information technology', 'Product development', 'Software engineering', 'BoB Driven Architecture (BODA)', 'Breakable Objects (BoB)', 'Building blocks', 'Computer Programming', 'Computer Applications', 'Engineering Research', 'Information Science', 'Product Development  Concurrent Engineering']","['Jamwal, Vikram', '', '', 'Iyer, Sridhar']","IIT Bombay, India",2005,WICSA
1315,1316,"This paper provides some requirements for the data management portion of a knowledge discovery ecosystem platform  The requirements are functional   what the platform should provide for its clients  quality   how the platform should support modifiability, performance, and availability  and management   how the platform supports operational control to sites that use it  It also provides design guidance that reflects the lack of central management that exists in an ecosystem  Copyright 2012 ACM   15 refs",Data management requirements for a knowledge discovery platform,"['Architecture', 'Data mining', 'Ecosystems', 'Software architecture', 'Design guidance', 'Modifiability', 'Operational control', 'Platform', 'Software ecosystems', 'Buildings and Towers', 'Ecology and Ecosystems', 'Computer Programming', 'Database Systems', 'Information Dissemination']","['Zhu, Liming', '', '', 'Bass, Len', '', '', 'Xu, Xiwei']","NICTA, Australia Technology Park, Eveleigh, Australia, School of Computer Science and Engineering, University of New South Wales, Australia",2012,ECSA
1316,1317,"This paper provides some requirements for the data management portion of a knowledge discovery ecosystem platform  The requirements are functional   what the platform should provide for its clients  quality   how the platform should support modifiability, performance, and availability  and management   how the platform supports operational control to sites that use it  It also provides design guidance that reflects the lack of central management that exists in an ecosystem  Copyright 2012 ACM   15 refs",Data management requirements for a knowledge discovery platform,"['Architecture', 'Data mining', 'Ecosystems', 'Software architecture', 'Design guidance', 'Modifiability', 'Operational control', 'Platform', 'Software ecosystems', 'Buildings and Towers', 'Ecology and Ecosystems', 'Computer Programming', 'Database Systems', 'Information Dissemination']","['Zhu, Liming', '', '', 'Bass, Len', '', '', 'Xu, Xiwei']","NICTA, Australia Technology Park, Eveleigh, Australia, School of Computer Science and Engineering, University of New South Wales, Australia",2012,WICSA
1317,1318,"This paper reports results from an experimental case study that seeks to characterize essential and incidental complexity in the design of a complex software product using design structure matrices  DSMs   A DSM captures structural dependencies among the modules and can be used to identify parts of a system that lack cohesion and or are highly coupled  We consider such parts as excessively complex  In the case study, we capture the complexity of an Internetbased collaborative system as it was originally designed and after it was redesigned using an architecture centric development methodology  We find significant reduction in excessive complexity of the redesigned system suggesting that excessive complexity can be an incidental byproduct of a development methodology that lacks focus on the systemic properties of a system that strongly influence its architecture    2009 IEEE   7 refs",Characterizing essential and incidental complexity in software architectures,"['Architecture', 'Computer software', 'Product design', 'Collaborative systems', 'Complex software', 'Design Structure Matrices', 'Development methodology', 'Internet based', 'ITS architecture', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Production Engineering']","['Sangwan, Raghvinder S', '', '', ' Neill, Colin J', '', '']",Pennsylvania State University,2009,ECSA
1318,1319,"This paper reports results from an experimental case study that seeks to characterize essential and incidental complexity in the design of a complex software product using design structure matrices  DSMs   A DSM captures structural dependencies among the modules and can be used to identify parts of a system that lack cohesion and or are highly coupled  We consider such parts as excessively complex  In the case study, we capture the complexity of an Internetbased collaborative system as it was originally designed and after it was redesigned using an architecture centric development methodology  We find significant reduction in excessive complexity of the redesigned system suggesting that excessive complexity can be an incidental byproduct of a development methodology that lacks focus on the systemic properties of a system that strongly influence its architecture    2009 IEEE   7 refs",Characterizing essential and incidental complexity in software architectures,"['Architecture', 'Computer software', 'Product design', 'Collaborative systems', 'Complex software', 'Design Structure Matrices', 'Development methodology', 'Internet based', 'ITS architecture', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Production Engineering']","['Sangwan, Raghvinder S', '', '', ' Neill, Colin J', '', '']",Pennsylvania State University,2009,WICSA
1319,1320,"This paper reports results from an experimental case study that seeks to characterize essential and incidental complexity in the design of a complex software product using design structure matrices  DSMs   A DSM captures structural dependencies among the modules and can be used to identify parts of a system that lack cohesion and or are highly coupled  We consider such parts as excessively complex  In the case study, we capture the complexity of an Internetbased collaborative system as it was originally designed and after it was redesigned using an architecture centric development methodology  We find significant reduction in excessive complexity of the redesigned system suggesting that excessive complexity can be an incidental byproduct of a development methodology that lacks focus on the systemic properties of a system that strongly influence its architecture    2009 IEEE   7 refs",Characterizing essential and incidental complexity in software architectures,"['Architecture', 'Computer software', 'Product design', 'Collaborative systems', 'Complex software', 'Design Structure Matrices', 'Development methodology', 'Internet based', 'ITS architecture', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Production Engineering']","['Sangwan, Raghvinder S', '', '', ' Neill, Colin J', '', '']",Pennsylvania State University,2011,WICSA
1320,1321,"This paper talks through the practices and infrastructure that was used on the experimental Global Studio Project  GSP   While the architecture activities are highlighted, related practices such as project management, requirements engineering and integration and test in a distributed environment will also be discussed as lessons learned   0 refs",Architecture design for globally distributed projects,"['project management', 'software engineering', 'Global Studio Project', 'globally distributed projects', 'architecture activities', 'project management', 'requirements engineering', 'distributed environments', 'Software engineering techniques']","['Bass, M', ' Sangwan, R', ' Smith, M']",None,2007,WICSA
1321,1322,"This position paper argues that Architecture should not be captured and maintained as a set of views, but as an instance of an architectural meta model or ontology  The ontology provides a common architecture language, or vocabulary, that enables the level of precision needed for effective architecture decision making  Our proposed ontology is composed of architecture assets, architecture decisions, stakeholder concerns and an architecture implementation roadmap  We see this approach as an alternative to traditional view based methods    2005 IEEE   7 refs",Position on ontology based architecture,"['Data acquisition', 'Decision making', 'Formal languages', 'Mathematical models', 'Metadata', 'Ontology', 'Architecture assets', 'Common architecture language', 'Meta-models', 'Ontology based architecture', 'Mathematics', 'Management', 'Computer Applications', 'Data Processing and Image Processing', 'Computer Programming Languages', 'Computer Programming', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory']","['Akerman, Art', '', '', 'Tyree, Jeff']",CapitalOne Financial,2005,WICSA
1322,1323,"This position paper argues that inheritance and parameterization differ in their fundamental structure, even though they may emulate each other in many ways  Based on this, we claim that certain mechanisms, e g , final classes, are in conflict with the nature of inheritance, and hence causes language designs to be less generalizable and more prone to semantic conflicts, and hence we recommend that these mechanisms should be optimized for playing different roles in language design   7 refs",Inheritance versus parameterization,"['Semantics', 'Conceptual comparison', 'Fundamental structures', 'Inheritance', 'Language design', 'Position papers', 'Semantic conflict', 'Information Dissemination', 'Mathematics']","['Ernst, Erik']","Aarhus University, Denmark",2013,ECSA
1323,1324,"This publication presents an approach to developing an enterprise architecture at a software development company  That type of company differs from other companies in relation to software usage and development, hence a corresponding approach should be used  An efficient solution based on own experience is proposed in this paper  The solution includes the following main set of activities  defining a motivation model, adapting architecture modeling tools, IT landscape creation products, building architecture capabilities in the organization, implementing standards and guidelines, applying architecture governance, defining the architect s roles, managing risks, using architecture governance  The proposed solution is introduced in an iterative way in the software development company    2014 Springer International Publishing Switzerland   28 refs",Adapting enterprise architecture at a software development company and the resultant benefits,"['Risk management', 'Software design', 'Archimate', 'Architecture modeling', 'Enterprise Architecture', 'Motivation models', 'Standards and guidelines', 'Computer Programming', 'Probability Theory']","['Jamr z, Krzysztof', '', '', 'Pitulej, Dariusz', ' ,', '', ' Werewka, Jan', ' ,', '']","Department of Applied Computer Science, AGH University of Science and Technology, al  Mickiewicza 30, 30 059 Krak w, Poland  2  ATSI S A   Advanced Technology Systems International , ul  Krakowska 386, 30 080 Zabierz w, Poland",2014,ECSA
1324,1325,"This publication presents an approach to developing an enterprise architecture at a software development company  That type of company differs from other companies in relation to software usage and development, hence a corresponding approach should be used  An efficient solution based on own experience is proposed in this paper  The solution includes the following main set of activities  defining a motivation model, adapting architecture modeling tools, IT landscape creation products, building architecture capabilities in the organization, implementing standards and guidelines, applying architecture governance, defining the architect s roles, managing risks, using architecture governance  The proposed solution is introduced in an iterative way in the software development company   28 refs",Adapting enterprise architecture at a software development company and the resultant benefits,"['DP industry', 'risk management', 'software architecture', 'software houses', 'enterprise architecture development', 'software development company', 'software usage', 'motivation model', 'IT landscape creation products', 'architecture capabilities', 'architecture modeling tools', 'architecture governance', 'risk management', 'Software management', 'Software engineering techniques']","['Jamro z, K', '', '', ' Pitulej, D', '', '', ' Werewka, J', '', '']","ATSI S A   Adv  Technol  Syst  Int  , Zabierzo w, Poland  2  Dept  of Appl  Comput  Sci , AGH Univ  of Sci    Technol , Krako w, Poland",2014,ECSA
1325,1326,"This report presents a reflection on software architecture practices based on our past ten year s industrial experiences, particularly in the area of telecommunications  The report summarizes the methods, tools, and techniques that we have used on various projects  We also discuss, based on our experiences, what methods are useful, what remains to be validated, and what the gaps are between the state of practices and our wishes    2005 IEEE   19 refs","Reflection on software architecture practices   What works, what remains to be seen, and what are the gaps","['Engineering education', 'Engineering research', 'Industrial engineering', 'Project management', 'Telecommunication services', 'Industrial experiences', 'Software architecture practices', 'Management', 'Industrial Engineering', 'Engineering Research', 'Education', 'Computer Applications', 'Computer Programming', 'Telecommunication  Radar, Radio and Television']","['Lung, Chung Horng', '', '', 'Zaman, Marzia', '', '', 'Goel, Nishith']","Systems and Computer Engineering, Carleton University, Ottawa, Canada  2  Cistel Technology, Ottawa, Canada",2005,WICSA
1326,1327,"This research proposes an architecture for reusable components aimed at bridging the object oriented and the relational paradigms  The component, referred to here as Business Tier Component, provides a single wide range static interface able to manage a set of Create, Read, Update and Delete  CRUD  expressions, deployed at runtime and of any complexity, on behalf of application tiers  The only constraint is that the required interface to manage each CRUD expression must be a super interface of the provided wide range interface  The main research challenge of this paper is the definition of an architecture for reusable components aimed at managing dynamically a set of CRUD expressions, deployed at runtime, on behalf of application tiers    2011 Springer Verlag   11 refs",A reusable business tier component with a single wide range static interface,"['Database systems', 'Software architecture', 'Business tier', 'impedance mismatch', 'Object oriented', 'Research challenges', 'Reusable components', 'Runtimes', 'Computer Software, Data Handling and Applications']","['Pereira, Oscar M', '', '', ' Aguiar, Rui L', '', '', ' Santos, Maribel Yasmina']","Instituto de Telecomunica  es, University of Aveiro, 3810 193 Aveiro, Portugal  2  Algoritmi Research Center, University of Minho, 4800 Guimar es, Portugal",2011,ECSA
1327,1328,"This short document reports the content and results of the  Architecture Description Languages in Practice  working group held on 9th and 10th November 2005 at the WICSA 5 conference, in Pittsburgh, Pennsylvania, USA    2005 IEEE",Architecture description languages in practice session report,"['Computer programming languages', 'Engineering education', 'Engineering research', 'Information technology', 'Technical presentations', 'Architecture description languages', 'Document reports', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Education', 'Engineering Research', 'Information Science']","['Woods, Eoin', ' Hilliard, Rich']",None,2005,WICSA
1328,1329,This talk focuses on the change in smartphone industry  The role of applications and services has increased so much that smartphone product families no longer behave like embedded product families  Product variation now happens mostly after purchase and successful product families are much smaller than before  Copyright 2012 ACM   3 refs,How variation changes when an embedded product ceases to be embedded,"['Applications', 'Signal encoding', 'Smartphones', 'Product families', 'Product variations', 'Variance', 'Air Pollution Control', 'Information Theory and Signal Processing', 'Telephone Systems and Equipment', 'Computer Programming']","['Kuusela, Juha']","Nokia Corporation, Espoo, Finland",2012,ECSA
1329,1330,This talk focuses on the change in smartphone industry  The role of applications and services has increased so much that smartphone product families no longer behave like embedded product families  Product variation now happens mostly after purchase and successful product families are much smaller than before  Copyright 2012 ACM   3 refs,How variation changes when an embedded product ceases to be embedded,"['Applications', 'Signal encoding', 'Smartphones', 'Product families', 'Product variations', 'Variance', 'Air Pollution Control', 'Information Theory and Signal Processing', 'Telephone Systems and Equipment', 'Computer Programming']","['Kuusela, Juha']","Nokia Corporation, Espoo, Finland",2012,WICSA
1330,1331,"This tutorial provides an introduction to the problems faced in software evolution, and why we need to be concerned about refactoring design and code on a continuous basis  Such refactoring helps ensure that software is more easily changeable, and the costs of development and maintenance are reduced  This tutorial addresses  a  refactoring techniques that a developer can employ during design and coding and  b  static analysis techniques that detect opportunities for refactoring   0 refs",Refactoring methods,"['software maintenance', 'refactoring methods', 'software evolution', 'static analysis techniques', 'Software engineering techniques']","['Murthy, P', ' Rajaram, T', ' Hemanth, S']",None,2007,WICSA
1331,1332,"This tutorial uses design patterns to present techniques for implementing effective and efficient resource management in a system  The tutorial is based on the third volume of the POSA  pattern oriented software architecture  series  The tutorial presents a thorough introduction to resource management along with two case studies in which the patterns are applied to the domains of ad hoc networking and mobile radio networks  The presented patterns are independent of any implementation technique, such as  NET, Java or C  , even though the examples are given in Java and C    The patterns are grouped by different areas of resource management and address the complete lifecycle of resources  acquisition, management, and release   0 refs",Pattern oriented software architecture  patterns for resource management,"['object-oriented programming', 'resource allocation', 'software architecture', 'pattern-oriented software architecture', 'resource management', 'design pattern', 'ad hoc networking', 'mobile radio network', 'Operating systems', 'Object oriented programming', 'Software engineering techniques']","['Jain, P', ' Kircher, M']",None,2007,WICSA
1332,1333,"This work illustrates the utility and improved performance of nitrogen modified catalyst supports for direct methanol fuel cell  DMFC  applications  A unique two step vapor phase synthesis procedure is used to achieve the N modification and Pt Ru decoration of high surface area carbon powders relevant to integration as electrocatalysts in fuel cell membrane electrode assemblies  MEAs   First, nitrogen surface moieties are incorporated into a commercial high surface area carbon support via a N ion implantation technique, followed by Pt Ru nanoparticle deposition via magnetron sputtering  The nitrogen ion implantation of high surface area carbon supports yields superior Pt Ru catalyst particle stability and performance as compared to industry standards  Specifically, results indicate a higher retention of metal catalyst surface area and electrochemical activity after accelerated electrochemical degradation testing  Further, characterization of catalyst materials before, during and after the electrochemical cycling provides insight into the catalyst particle coarsening and or catalyst surface area loss mechanisms that dominate this fuel cell catalyst system",Enhanced Fuel Cell Catalyst Durability with Nitrogen Modified Carbon Supports,"['Carbon', 'Direct methanol fuel cells', 'Electrocatalysts', 'Nitrogen', 'Degradation', 'Deposition', 'Electrochemistry', 'Electrodes', 'Magnetrons', 'Nanoparticles', 'Platinum', 'Rubidium', 'Sputtering', 'Synthesis(Chemistry)', 'Vapor phases', nan]","['Olson, T', 'S', ' Dameron, A', 'A', ' Wood, K', ' Pylpenko, S', ' Hurst, K', 'E', ' National Renewable Energy Lab , Golden, CO']",None,2013,ECSA
1333,1334,"This work investigates the effect of a high anodic potential treatment protocol on the performance of a direct methanol fuel cell  DMFC   DMFC membrane electrode assemblies  MEAs  with PtRu C  Hi spec 5000  anode catalyst are subjected to anodic treatment  AT  at 0 8 V vs  DHE using potentiostatic method  Despite causing a slight decrease in the electrochemical surface area  ECSA  of the anode, associated with ruthenium dissolution, AT results in significant improvement in DMFC performance in the ohmic and mass transfer regions and increases the maximum power density by w15   Furthermore, AT improves the long term DMFC stability by reducing the degradation of the anode catalyst  From XPS investigation, it is hypothesized that the improved performance of AT treated MEAs is related to an improved interface between the catalyst and Nafion ionomer  Among potential explanations, this improvement may be caused by incorporation of the ionomer within the secondary pores of PtRu C agglomerates, which generates a percolating network of ionomer between PtRu C agglomerates in the catalyst layer  Furthermore, the decreased concentration of hydrophobic CF2 groups may help to enhance the hydrophilicity of the catalyst layer, thereby increasing the accessibility of methanol and resulting in better performance in the high current density region",Improvement in Direct Methanol Fuel Cell Performance by Treating the Anode at High Anodic Potential,"['Anodes', 'Direct methanol fuel cells', 'Agglomerates', 'Carbon', 'Catalysts', 'Current density', 'Degradation', 'Electrochemistry', 'Hydrophilia', 'Ionomers', 'Oxidation', 'Performance(Engineering)', 'Platinum', 'Polarization', 'Ruthenium', 'Voltammetry', 'X ray photoelectron spectroscopy', nan]","['Joghee, P', ' Pylypenko, S', ' Wood, K', ' Corpuz, A', ' Bender, G', ' National Renewable Energy Lab , Golden, CO']",None,2014,ECSA
1334,1335,"Three years ago, the Agreement for the Romanian association to the European Space Agency was signed, and the Romanian Space Agency launched the Program  Space Technology and Advanced Research  to support original research of interest for space applications  Considering the possibility to use quantum cascade lasers  QCLs  in space borne applications  i e  free space optical communication and spectroscopic instrumentation  we promoted the project  Evaluation of Components for Space Applications   ECSA , dealing with the assessment of mid IR components under charge particles and photon irradiation, for possible use in space missions  Our paper presents the ESCA project philosophy, the setups for the assessment of operating characteristics in the case of QCLs, mid IR detectors  both photovoltaic and photoconductive  and optical materials  transmission and reflection measurements , and the planned irradiation activities    2014 IEEE   13 refs",The ECSA project,"['Irradiation', 'Optical materials', 'Photoconductivity', 'Quantum cascade lasers', 'Space applications', 'Space flight', 'Transparent optical networks', 'Free Space Optical communication', 'Irradiation effect', 'Operating characteristics', 'Photoconductive detectors', 'Photovoltaic detector', 'Quantum cascade lasers (QCLs)', 'Reflection measurements', 'Spectroscopic instrumentation', 'Space Flight', 'Space Flight', 'Telecommunication  Radar, Radio and Television', 'Optical Communication', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Light Optics', 'Optical Devices and Systems', 'Lasers, General']","['Sporea, Dan', '', '', 'Sporea, Adelina', '', '', 'Mihai, Laura', '', '', 'Stancalie, Andrei']","National Institute for Laser, Plasma and Radiation Physics, 409 Atomistilor St, RO 077125 Magurele, Romania",2014,ECSA
1335,1336,"Through a bromide induced galvanic replacement reaction between Pd nanowires and K2PtCl6, PtPd porous nanorods are successfully synthesized  With such interesting porous and alloy structured PtPd nanorods as cathode catalyst for oxygen reduction reaction  ORR , obvious advantages are shown evidently in the electrochemical studies  First, the porous structure shows large electrochemical surface area  ECSA , thus providing an efficient way to reduce the usage of expensive noble metals  Second, due to the large surface area and the synergistic effect of alloy crystalline phase, the resulting porous nanorods exhibit enhanced catalytic activity for ORR compared to the Pd nanowires and commercial Pt C catalyst  Third, the PtPd porous nanorods exhibit excellent durability in ORR with only 5 88  loss of the initial ECSA after the accelerated durability tests  1000 potential cycles , whereas the Pd nanowires and commercial Pt C catalyst lose 21 6  and 40 4  of their original ECSA  Such porous nanorods appear to be promising cathode electrocatalysts for fuel cells with enlarged surface area, enhanced catalytic activity and improved durability   2013 Elsevier Ltd   38 refs",PtPd porous nanorods with enhanced electrocatalytic activity and durability for oxygen reduction reaction,"['Catalyst activity', 'Cathodes', 'Electrocatalysts', 'Electrolytic reduction', 'Nanorods', 'Nanowires', 'Palladium', 'Platinum', 'Platinum alloys', 'Substitution reactions', 'Accelerated durability tests', 'Electrocatalytic activity', 'Electrochemical studies', 'Electrochemical surface area', 'Enhanced catalytic activity', 'Galvanic replacement reactions', 'Oxygen reduction reaction', 'Synergistic effect', 'Solid State Physics', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Electric Components', 'Precious Metals', 'Strength of Building Materials  Mechanical Properties']","['Lu, Yizhong', ' ,', '', ' Jiang, Yuanyuan', ' ,', '', ' Chen, Wei']","State Key Laboratory of Electroanalytical Chemistry, Changchun Institute of Applied Chemistry, Chinese Academy of Sciences, Changchun 130022, Jilin, China  2  Graduate School of the Chinese Academy of Sciences, Beijing 100039, China",2013,ECSA
1336,1337,"Titanium dioxide ruthenium dioxide  TiO2 RuO2  TRO  powders were prepared in both the hydrous and anhydrous form using a wet chemical synthesis procedure  These materials were characterized by XRD, TEM, and BET  Their electrical conductivity and electrochemical properties such as stability under potential cycling, electrochemical surface area  ECSA , electrocatalytic activity, and fuel cell performance were measured  Anhydrous TiO2 RuO2  TRO a  demonstrated exceptional electrochemical stability compared to baseline Vulcan XC 72R carbon when tested using an aggressive accelerated stability test  AST  protocol  The various TRO powders were catalyzed by depositing platinum nanoparticles by an impregnation reduction method to yield Pt TRO electrocatalysts  The Pt TRO a electrocatalysts had a mass activity of 54 mA mgPt 1 and a specific activity of 284  A cmPt 2 for the oxygen reduction reaction  Fuel cell polarization data was obtained on membrane electrode assemblies  MEAs  prepared with Pt TRO and baseline Pt C electrocatalysts showed that the Pt TRO based MEAs exhibited very good performance  The performance obtained was below the Pt C benchmark, however, further improvements in performance are expected with greater optimization of the Pt particle size and electrode structure    2013 Elsevier B V   62 refs",TiO2 RuO2 electrocatalyst supports exhibit exceptional electrochemical stability,"['Benchmarking', 'Carbon', 'Catalyst activity', 'Electric conductivity', 'Electrolysis', 'Electrolytic reduction', 'Fuel cells', 'Platinum', 'Platinum alloys', 'Powders', 'Ruthenium alloys', 'Stability', 'Titanium dioxide', 'Carbon corrosion', 'Electrocatalyst support', 'Electrochemical stabilities', 'Electrochemical surface area', 'Impregnation-reduction method', 'Membrane electrode assemblies', 'Mixed metal oxide', 'Polymer electrolyte fuel cells', 'Systems Science', 'Chemical Products Generally', 'Inorganic Compounds', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing', 'Classical Physics  Quantum Theory  Relativity', 'Materials Science', 'Chemical Agents and Basic Industrial Chemicals', 'Chemistry', 'Fuel Cells', 'Electric Batteries and Fuel Cells', 'Electricity  Basic Concepts and Phenomena', 'Precious Metals', 'Electrochemistry']","['Lo, Chih Ping', '', '', 'Wang, Guanxiong', '', '', 'Kumar, Amod', '', '', 'Ramani, Vijay']","Center for Electrochemical Science and Engineering, Department of Chemical and Biological Engineering, Illinois Institute of Technology, 10 W 33rd Street, 127 Perlstein Hall, Chicago, IL 60616, United States",2013,ECSA
1337,1338,"To adapt established methods of software engineering for scientific computing, we propose a software development approach for interdisciplinary teams of scientists called Sprat  The approach is organized around a hierarchical architecture that combines internal and external domain specific languages  DSLs   For its evaluation, Sprat is employed in the implementation of a marine ecosystem model  We highlight what is to be observed while integrating the DSLs into the hierarchy in order to enable a successful cooperation of scientists in interdisciplinary teams as well as to achieve a maintainable code base    2014 ACM   21 refs",Hierarchical combination of internal and external domain specific languages for scientific computing,"['Ecosystems', 'Problem oriented languages', 'Software architecture', 'Domain specific languages', 'Domain-specific architectures', 'Hierarchical architectures', 'Interdisciplinary teams', 'ITS evaluation', 'Marine ecosystem', 'Software development approach', 'Ecology and Ecosystems', 'Computer Software, Data Handling and Applications']","['Johanson, Arne N', '', ',', '', ' Hasselbring, Wilhelm', ' ,', '']","Software Engineering Group, Kiel University, Germany  2  Helmholtz Research School for Ocean System Science and Technology  HOSST , GEOMAR   Helmholtz Centre for Ocean Research, Kiel, Germany",2014,ECSA
1338,1339,"To address behavioral modeling issues specific to concurrent software architectures, this paper outlines an approach for systematically modeling behavioral patterns found in concurrent software designs by applying colored Petri net  CPN  templates with UML artifacts  In this approach, CPNs are used as an underlying representation of the dynamic object oriented architecture  These CPNs are then used to provide a simulated functional flow of the architecture and to analyze the concurrent behavior  By applying the results from the CPN analysis to the original UML model, an engineer can enhance the quality of the design and thereby gain additional insight to the behavioral properties of the software design prior to implementation   25 refs",Modeling behavioral patterns of concurrent software architectures using petri nets,"['Computer architecture', 'Computer simulation', 'Computer software', 'Concurrent engineering', 'Object oriented programming', 'Pattern recognition', 'Petri nets', 'Colored petri nets (CPN)', 'Performance analysis', 'Quality designs', 'Software designs', 'Telecommunication  Radar, Radio and Television', 'Computer Systems and Equipment', 'Computer Programming', 'Computer Applications', 'Product Development  Concurrent Engineering', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory']","['Pettit IV, Robert G', '', '', ' Gomaa, Hassan']",Aerospace Corporation  2  George Mason University,2004,WICSA
1339,1340,"To address behavioral modeling issues specific to concurrent software architectures, this paper outlines an approach for systematically modeling behavioral patterns found in concurrent software designs by applying colored Petri net  CPN  templates with UML artifacts  In this approach, CPNs are used as an underlying representation of the dynamic object oriented architecture  These CPNs are then used to provide a simulated functional flow of the architecture and to analyze the concurrent behavior  By applying the results from the CPN analysis to the original UML model, an engineer can enhance the quality of the design and thereby gain additional insight to the behavioral properties of the software design prior to implementation   28 refs",Modeling behavioral patterns of concurrent software architectures using Petri nets,"['distributed programming', 'object-oriented programming', 'Petri nets', 'software architecture', 'specification languages', 'behavioral pattern modeling', 'concurrent software architectures', 'software designs', 'colored Petri net templates', 'UML artifacts', 'object-oriented architecture', 'simulated functional flow', 'UML model', 'Software engineering techniques', 'Combinatorial mathematics', 'Object oriented programming', 'Distributed systems software']","['Pettit, R G , IV', 'Gomaa, H']",None,2004,WICSA
1340,1341,"To allow architectural self adaptation at runtime, software systems require continuous monitoring capabilities to observe and to reflect on their innate runtime behavior  For software systems in productive operation, the monitoring overhead has to be kept deliberately small  By consequence, a trade off between the monitoring coverage and the resulting effort for data collection and analysis is necessary  In this paper, we present a framework that allows for autonomic on demand adaptation of the monitoring coverage at runtime  We employ our self adaptive monitoring approach to investigate performance anomalies in component based software systems  The approach is based on goal oriented monitoring rules specified with the OCL  The continuous evaluation of the monitoring rules enables to zoom into the internal realization of a component, if it behaves anomalous  Our tool support is based on the Eclipse Modeling Project and the Kieker monitoring framework  We provide evaluations of the monitoring overhead and the anomaly rating procedure using the JPetStore reference application as a Java EE based test system    2011 Springer Verlag   10 refs",A self adaptive monitoring framework for component based software systems,"['Computer software', 'Java programming language', 'Software architecture', 'Adaptive monitoring', 'Anomaly detection', 'Component-based software systems', 'Continuous monitoring', 'Data collection', 'failure diagnosis', 'Goal-oriented', 'Modeling project', 'Monitoring approach', 'Performance anomaly', 'Rating procedures', 'Runtime behaviors', 'Runtimes', 'Self adaptation', 'Self-adaptive', 'Software systems', 'Test systems', 'Tool support', 'Computer Software, Data Handling and Applications', 'Acoustical and Optical Measuring Instruments', 'Electric and Electronic Measuring Instruments', 'Mechanical and Miscellaneous Measuring Instruments', 'Moisture, Pressure and Temperature, and Radiation Measuring Instruments']","['Ehlers, Jens', '', '', 'Hasselbring, Wilhelm']","Software Engineering Group, Christian Albrechts University Kiel, 24098 Kiel, Germany",2011,ECSA
1341,1342,"To deal with the challenges when building large and complex systems modularisation techniques such as component based software engineering and aspect oriented programming have been developed  In the Java space these include dependency injection frameworks and dynamic component models such as OSGi  The question arises as to how easy it will be to transform existing systems to take advantage of these new techniques  Anecdotal evidence from industry suggests that the presence of certain patterns presents barriers to refactoring of monolithic systems into a modular architecture  In this paper, we present such a set of patterns and analyse a large set of open source systems for occurrences of these patterns  We use a novel, scalable static analyser that we have developed for this purpose  The key findings of this paper are that almost all programs investigated have a significant number of these patterns, implying that modularising will be therefore difficult and expensive    2010 Springer Verlag   38 refs",Barriers to modularity   An empirical study to assess the potential for modularisation of Java programs,"['Computer software selection and evaluation', 'Computer systems programming', 'Java programming language', 'Wavelet transforms', 'Anecdotal evidences', 'Aspect-Oriented Programming', 'Complex systems', 'Component-based software engineering', 'Dependency injection', 'Dynamic component', 'Empirical studies', 'Existing systems', 'Java program', 'Modular architectures', 'Monolithic systems', 'Open source system', 'Refactorings', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Management', 'Mathematical Transformations']","['Dietrich, Jens', '', '', 'McCartin, Catherine', '', '', 'Tempero, Ewan', '', '', 'Ali Shah, Syed M', '', '']","Massey University, School of Engineering and Advanced Technology, Palmerston North, New Zealand  2  Department of Computer Science, University of Auckland, Auckland, New Zealand",2010,QoSA
1342,1343,"To deliver complex functionalities in a cost effective manner, embedded software should ideally be developed with standardized interoperable components  At the same time, most of these embedded systems must be demonstrably safe and reliable  This paper aims to extend SaveCCM, a modelling language for component based embedded systems, with standard safety evaluation models  Based on this extension, failure and hazard probabilities can be estimated early in the development process and can be used to check if a system can fulfil its safety requirements  The procedure of the safety evaluation is demonstrated with the case study of a computer assisted braking system    2006 Springer Verlag   34 refs",Towards an integration of standard component based safety evaluation techniques with SaveCCM,"['Embedded software', 'Embedded systems', 'Software architecture', 'Braking system', 'Component based', 'Computer assisted', 'Cost effective', 'Development process', 'Modelling language', 'Safety evaluations', 'Safety requirements', 'Standard components', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications', 'Management']","['Grunske, Lars']","School of Information Technology and Electrical Engineering, ARC Centre for Complex Systems, University of Queensland, St Lucia, QLD 4072, Australia",2006,QoSA
1343,1344,"To deliver complex functionalities in a cost effective manner, embedded software should ideally be developed with standardized interoperable components  At the same time, most of these embedded systems must be demonstrably safe and reliable  This paper aims to extend SaveCCM, a modelling language for component based embedded systems, with standard safety evaluation models  Based on this extension, failure and hazard probabilities can be estimated early in the development process and can be used to check if a system can fulfil its safety requirements  The procedure of the safety evaluation is demonstrated with the case study of a computer assisted braking system   34 refs",Towards an integration of standard component based safety evaluation techniques with SaveCCM,"['embedded systems', 'formal specification', 'object-oriented programming', 'open systems', 'safety-critical software', 'software architecture', 'specification languages', 'component-based safety evaluation', 'SaveCCM', 'embedded software', 'interoperable components', 'embedded systems', 'system safety', 'system reliability', 'modelling language', 'failure probability', 'hazard probability', 'system development', 'safety requirements', 'computer assisted braking system', 'architecture description language', 'Object oriented programming', 'Software engineering techniques', 'Formal methods', 'Distributed systems software']","['Grunske, L', '', '']","Sch  of Inf  Technol    Electr  Eng , Queensland Univ , Brisbane, Qld , Australia",2006,QoSA
1344,1345,"To facilitate the improved use of a software architecture document  AD , architectural information it contains needs to be structured into and or presented as chunks  groupings of related information  The focus of our study is on the identification and creation of useful chunks of architectural information in ADs and the development of support tools to create and use this knowledge  We anticipate this will help stakeholders locate required architectural information facilitating its  re  use  The main approach employed in this study is to capture and save users  AD exploration paths and related metadata, analyzing the exploration paths to find common patterns that serve as potential chunks of architectural information and using them to improve software ADs and documentation tool  Ultimately, this research aims to achieve user driven chunking of architectural information in AD, to support information searching and better understanding of AD    2010 ACM   35 refs",Capturing exploration to improve software architecture documentation,"['Knowledge management', 'Metadata', 'Security of data', 'Technical presentations', 'Architectural knowledge', 'chunking', 'documentation', 'Documentation tools', 'exploration', 'Information searching', 'Support tool', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Su, Moon Ting']","Department of Computer Science, University of Auckland, Auckland, New Zealand",2010,ECSA
1345,1346,"To greatly improve the electrocatalytic activity for methanol oxidation, high quality exfoliated graphene decorated with uniform Pt nanocrystals  NCs   3 nm  have been prepared by a very simple, low cost and environmentally benign process  During the entire process, no surfactant and no halide ions were involved, which not only enabled very clean surface of Pt graphene leading to excellent conductivity, but also greatly improved the electrocatalyst tolerance to carbon monoxide poisoning  Pt graphene, If Ib   1 197 , compared to commercial Pt C  If Ib   0 893  catalysts  To maximize the electrocatalytic performance and minimize the amount of precious Pt, Pt M graphene  M   Pd, Co  hybrids have also been prepared, and these hybrids have much larger electrochemically active surface areas  ECSA , which are 4  PtPd graphene  and 3 3  PtCo graphene  times those of commercial Pt C  The PtPd graphene and PtCo graphene hybrids also have remarkably increased activity toward methanol oxidation  If Ib   1 218 and 1 558   Furthermore, density functional theory  DFT  simulations demonstrate that an electronic interaction occurred between Pt atoms and graphene, indicating that graphene substrate plays a crucial role in regulating the electron structure of attached Pt atom, which confirmed that the increased efficiency of methanol oxidation was due to the synergetic effects of the hybrid structure    2012 Elsevier Ltd  All rights reserved   41 refs",Exfoliated graphene supported Pt and Pt based alloys as electrocatalysts for direct methanol fuel cells,"['Carbon monoxide', 'Catalyst poisoning', 'Density functional theory', 'Direct methanol fuel cells (DMFC)', 'Electrocatalysts', 'Methanol', 'Oxidation', 'Platinum', 'Platinum alloys', 'Carbon monoxide poisoning', 'Clean surfaces', 'Density functional theories (DFT)', 'Electrocatalytic activity', 'Electrocatalytic performance', 'Electrochemically active surface areas', 'Electron structures', 'Electronic interactions', 'Environmentally benign process', 'Halide ions', 'High quality', 'Hybrid structure', 'Methanol Oxidation', 'Pt atoms', 'Synergetic effect', 'Probability Theory', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Fuel Cells', 'Precious Metals']","['Qian, Wen', '', '', 'Hao, Rui', '', '', 'Zhou, Jian', '', '', 'Eastman, Micah', '', '', 'Manhat, Beth A', '', '', ' Sun, Qiang', '', '', 'Goforth, Andrea M', '', '', ' Jiao, Jun']","Department of Physics, Portland State University, Portland, OR 97201, United States  2  Department of Materials Science and Engineering, College of Engineering, Peking University, Beijing 100871, China  3  Department of Chemistry, Portland State University, Portland, OR 97201, United States",2013,ECSA
1346,1347,"To increase the computing performance the current trend is towards applying parallel computing in which parallel tasks are executed on multiple nodes  The deployment of tasks on the computing platform usually impacts the overall performance and as such needs to be modelled carefully  In the architecture design community the deployment viewpoint is an important viewpoint to support this mapping process  In general the derived deployment views are visual notations that are not amenable for run time processing, and do not scale well for deployment of large scale parallel applications  In this paper we propose a domain specific language  DSL  for modeling the deployment of parallel applications and for providing automated support for the deployment process  The DSL is based on a metamodel that is derived after a domain analysis on parallel computing  We illustrate the application of the DSL for a traffic simulation system and provide a set of important scenarios for using the DSL    2014 ACM   34 refs",Domain specific language for deployment of parallel applications on parallel computing platforms,"['Computer programming languages', 'Parallel processing systems', 'Software architecture', 'Architecture designs', 'Computing performance', 'Deployment', 'Domain specific languages', 'Parallel application', 'Parallel computing platform', 'Software languages', 'Traffic simulations', 'Computer Systems and Equipment', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications']","['Arkin, Ethem', '', '', 'Tekinerdogan, Bedir']","Aselsan, MGEO Division, Etlik, 06011 Ankara, Turkey  2  Bilkent University, Computer Engineering Department, Bilkent, 06800 Ankara, Turkey",2014,ECSA
1347,1348,"To our knowledge, no current software development methodology explicitly describes haw to transit between the different development stages it proposes  This is more evident in the transition from the analysis stage to the software architecture of the application  This paper presents the first semiautomatic method to derive the software architecture of a system from its analysis  The proposal is a set of heuristics that, when applied to the analysis artifacts, generate the software architecture of the application  This proposal has several benefits   1  the software architecture of the system is directly derived by applying the heuristics   2  there is a direct trace relationship between the analysis artifacts and the elements of the resulting architecture, which eases the system maintenance   16 refs",Heuristics for the transition from analysis to software architecture,"['Computer software', 'Distributed computer systems', 'Heuristic methods', 'Interfaces (computer)', 'Internet', 'Knowledge acquisition', 'Servers', 'Software engineering', 'Bottom domain', 'Software architectures', 'Software artifacts', 'Sysyem maintenances', 'Mathematics', 'Artificial Intelligence', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Digital Computers and Systems', 'Computer Peripheral Equipment', 'Computer Systems and Equipment']","['P rez Mart nez, Jorge Enrique', '', '', 'Sierra Alonso, Almudena']","Depto  de Info  Aplicada, Univ  Polit cnica de Madrid, 28031 Madrid, Spain  2  Escuela Polit cnica Superior, Univ  Aut noma de Madrid, 28049 Madrid, Spain",2004,WICSA
1348,1349,"To our knowledge, no current software development methodology explicitly describes how to transit between the different development stages it proposes  This is more evident in the transition from the analysis stage to the software architecture of the application  This paper presents the first semiautomatic method to derive the software architecture of a system from its analysis  The proposal is a set of heuristics that, when applied to the analysis artifacts, generate the software architecture of the application  This proposal has several benefits   1  the software architecture of the system is directly derived by applying the heuristics   2  there is a direct trace relationship between the analysis artifacts and the elements of the resulting architecture, which eases the system maintenance   16 refs",Heuristics for the transition from analysis to software architecture,"['software architecture', 'software maintenance', 'systems analysis', 'heuristics', 'software analysis', 'software architecture', 'software development', 'system maintenance', 'Software engineering techniques']","['Perez Martinez, J E', '', '', ' Sierra Alonso, A']","Dept  de Inf  Apl , Univ  Politecnica de Madrid, Madrid, Spain",2004,WICSA
1349,1350,"To support software architecture evaluation practices, several efforts have been made to provide a basis for comparing and assessing evaluation methods, document various best practices, and report the factors that may influence industrial practices  However, there has been no study to explore the experiences and perceptions of architects for determining the factors that influence architecture evaluation practices in a wide range of organizations  Hence, there is little empirically founded knowledge available on the factors that influence the industrial practices of software architecture evaluation  The goal of this paper is to report the results of an empirical study aimed at gaining an understanding of different factors involved in evaluating architectures in industry  The results of this study shed light on the factors that influence architecture evaluation practices based on the experiences and perception of architects who regularly evaluate architectures of various sizes of applications  It also discusses some of the strategies that practitioners apply to deal with the influence of the identified factors    2008 Springer Verlag Berlin Heidelberg   30 refs",Factors influencing industrial practices of software architecture evaluation  An empirical investigation,"['Architecture', 'Computer software selection and evaluation', 'Paper coating', 'Applications.', 'Architecture evaluation', 'Best Practices', 'Empirical investigation', 'Empirical studies', 'Evaluation methods', 'Industrial practices', 'International conferences', 'Quality of softwares', 'Software architecture evaluation', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Papermaking Processes']","['Ali Babar, Muhammad', '', '', 'Bass, Len', '', '', 'Gorton, Ian']","Lero, University of Limerick, Ireland  2  Software Engineering Institute, Carnegie Mellon University, United States  3  Pacific Northwest National Laboratory, United States",2007,QoSA
1350,1351,"To support software architecture evaluation practices, several efforts have been made to provide a basis for comparing and assessing evaluation methods, document various best practices, and report the factors that may influence industrial practices  However, there has been no study to explore the experiences and perceptions of architects for determining the factors that influence architecture evaluation practices in a wide range of organizations  Hence, there is little empirically founded knowledge available on the factors that influence the industrial practices of software architecture evaluation  The goal of this paper is to report the results of an empirical study aimed at gaining an understanding of different factors involved in evaluating architectures in industry  The results of this study shed light on the factors that influence architecture evaluation practices based on the experiences and perception of architects who regularly evaluate architectures of various sizes of applications  It also discusses some of the strategies that practitioners apply to deal with the influence of the identified factors   30 refs",Factors influencing industrial practices of software architecture evaluation  an empirical investigation,"['software architecture', 'industrial practices', 'architecture evaluation', 'software architecture', 'Software engineering techniques']","['Babar, M A', '', '', ' Bass, L', '', '', ' Gorton, I', '', '']","Univ  of Limerick, Limerick, Ireland  2  Software Eng  Inst , Carnegie Mellon Univ , Pittsburgh, PA, United States  3  Pacific Northwest Nat  Lab , Richland, WA, United States",2008,QoSA
1351,1352,"Today s complex communication systems are vital for many businesses  The high skill needed to master those systems has created an economy of services where many specialised organisations participate in producing the end service  Managing that orchestra to produce the right functionality is a challenge in itself, but managing the security of the process can be difficult  In this paper, we discuss of the big picture of managing the security of such complex systems, of the gaps between some point solutions, and of the research needs we have identified, focusing on technical aspects of security  We think that coherently measuring various technical aspects of security and sharing the information wisely is the key to a satisfying solution    2010 ACM   17 refs",Towards holistic security management through coherent measuring,"['Communication systems', 'Security of data', 'Software architecture', 'Complex systems', 'Research needs', 'Security management', 'Technical aspects', 'Telecommunication  Radar, Radio and Television', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Halonen, Perttu', '', '', 'H t nen, Kimmo']","Nokia Siemens Networks, P O  Box 6, 02022, Finland",2010,ECSA
1352,1353,"Today s wireless networks and devices support the dynamic composition of mobile distributed systems, according to device connectivity  This has in particular led to the introduction of a number of supporting middleware  However, such solutions need to be complemented with adequate modeling and verification support towards enforcing the correctness of the dynamic mobile systems with respect to both functional and non functional properties  Building on the elegant properties of software architecture modeling, this paper introduces base modeling of mobile software components, which integrates key features of the wireless infrastructure and allows for reasoning about the behavior of dynamically composed systems   27 refs",Software architecture for mobile distributed computing,"['Computational methods', 'Computer networks', 'Distributed computer systems', 'Middleware', 'Systems analysis', 'Telecommunication traffic', 'Dynamically composed systems', 'Mobile distributed computing', 'Software architecture', 'Wireless infrastructure', 'Telecommunication  Radar, Radio and Television', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Digital Computers and Systems', 'Computer Programming', 'Operations Research']","['Issarny, Val rie', '', '', 'Tartanoglu, Ferda', '', '', 'Liu, Jinshan', '', '', 'Sailhan, Fran oise']","INRIA, UR Rocquencourt, Domaine de Voluceau, 78153 Le Chesnay, France",2004,WICSA
1353,1354,"Today s wireless networks and devices support the dynamic composition of mobile distributed systems, according to device connectivity  This has in particular led to the introduction of a number of supporting middleware  However, such solutions need to be complemented with adequate modeling and verification support towards enforcing the correctness of the dynamic mobile systems with respect to both functional and nonfunctional properties  Building on the elegant properties of software architecture modeling, this paper introduces base modeling of mobile software components, which integrates key features of the wireless infrastructure and allows for reasoning about the behavior of dynamically composed systems   27 refs",Software architecture for mobile distributed computing,"['middleware', 'mobile computing', 'object-oriented programming', 'software architecture', 'software architecture', 'mobile distributed computing', 'wireless networks', 'wireless devices', 'dynamic composition', 'device connectivity', 'middleware', 'modeling support', 'verification support', 'mobile software components', 'Distributed systems software', 'Software engineering techniques', 'Object oriented programming']","['Issarny, V', '', '', ' Tartanoglu, F', '', '', ' Jinshan Liu', '', '', 'Sailhan, F', '', '']","INRIA, France",2004,WICSA
1354,1355,"Today, architectural component models are often used as a central view of architecture descriptions  So far, however, only a very few rigorous empirical studies relating to the use of component models in architectural descriptions of software systems have been conducted  In this paper, we present the results of a controlled experiment regarding the supportive effect of architectural component diagrams for design understandability  In particular, the goal of the experiment was to determine whether architectural component diagrams, provided in addition to a non trivial software system s source code, have a supportive effect on the ability of novice architects to answer design and architecture related questions about that system  Our study provides initial evidence that architectural component diagrams have a supportive effect for understanding the software design and architecture, if a direct link from the component diagram s elements to the problem that requires understanding can be made  If such a direct link cannot be made, we found evidence that it should not be assumed that architectural component diagrams help in design understanding, for instance only by providing a big picture view or some general kind of orientation    2013 Springer Verlag   38 refs",Controlled experiment on the supportive effect of architectural component diagrams for design understanding of novice architects,"['Computer software', 'Experiments', 'Graphic methods', 'Software architecture', 'Architectural components', 'Architectural descriptions', 'Architecture description', 'Component diagrams', 'Controlled experiment', 'Design understanding', 'Empirical studies', 'Software design and architectures', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Engineering Research']","['Haitzer, Thomas', '', '', 'Zdun, Uwe']","Research Group Software Architecture, University of Vienna, Austria",2013,ECSA
1355,1356,"Today, many professionals work on several projects in different teams at the same time and manage their task in these projects manually or with the help of a task management system  Business portals in larger companies typically provide some kind of task management support  But often they lack facilities to manage tasks beyond organizational boundaries and need technical support by IT departments  To overcome these limitations, especially loosely coupled teams make extensive use of emails and forgo explicit task management features  As the usage of web applications in all areas of life increases and thus more and more tasks are performed online, new solutions for web based task management have become necessary  In this paper, we determine requirements for managing tasks in distributed environments without any central supervisory body, and identify related research challenges    2011 Springer Verlag   9 refs",Web scale human task management,"['Network architecture', 'User interfaces', 'Distributed environments', 'Human tasks', 'New solutions', 'Organizational boundaries', 'Research challenges', 'Task management', 'Task management system', 'Technical support', 'WEB application', 'Computer Systems and Equipment', 'Computer Peripheral Equipment', 'Computer Software, Data Handling and Applications']","['Schulte, Daniel']","FernUniversit t in Hagen, Germany",2011,ECSA
1356,1357,"Today, software engineering is challenged to handle more and more large scale distributed systems with guaranteed quality of service  Component based architectures have been established to build such systems in a more structured and manageable way  Modern architectures often utilize event based communication which enables loosely coupled interactions between components and leads to improved system scalability  However, the loose coupling of components makes it challenging to model such architectures in order to predict their quality properties, e g , performance and reliability, at system design time  In this paper, we present an extension of the Palladio Component Model  PCM  and the Palladio software quality prediction framework, enabling the modeling of event based communication in component based architectures  The contributions include  i  a meta model extension supporting events as first class entities, ii  a mode to model transformation from the extended to the original PCM, iii  an integration of the transformation into the Palladio tool chain allowing to use existing model solution techniques, and iv  a detailed evaluation of the reduction of the modeling effort enabled by the transformation in the context of a real world case study    2011 ACM   31 refs",Integration of event based communication in the Palladio software quality prediction framework,"['Communication', 'Computer software selection and evaluation', 'Forecasting', 'Quality of service', 'Systems analysis', 'Component model', 'Component-based architecture', 'Event-based', 'Large-scale distributed system', 'Loose couplings', 'Meta model', 'Model solution', 'Modern architectures', 'performance prediction', 'Quality properties', 'Software quality prediction', 'System scalability', 'Telecommunication  Radar, Radio and Television', 'Computer Software, Data Handling and Applications', 'Mathematics', 'Systems Science']","['Klatt, Benjamin', '', '', 'Rathfelder, Christoph', '', '', 'Kounev, Samuel']","FZI Research Center for Information Technology, Karlsruhe, Germany  2  Karlsruhe Institute of Technology, Karlsruhe, Germany",2011,QoSA
1357,1358,"Traceability analysis is used to improve quality in the software development process  As such an analysis is complex to implement and often requires a lot of dense code that is specific to the system being traced, there is a need for a framework to express traceability analysis tasks  This paper presents the Traceability Query Language TracQL, an expressive, extensible, representation independent, and fast domain specific language  Known approaches do not fulfill all these requirements  We examine TracQL and compare it to other approaches on a software ageing problem, namely to detect divergence between architecture and code  The necessary TracQL code is much shorter  by a factor of 1 7  and about twice as fast as what known approaches can achieve    2012 IEEE   21 refs",TracQL  A domain specific language for traceability analysis,"['Problem oriented languages', 'Query languages', 'Software architecture', 'Ageing problems', 'Dense codes', 'Domain specific languages', 'Software development process', 'Traceability analysis', 'Computer Software, Data Handling and Applications', 'Quality Assurance and Control']","['Tausch, Norbert', '', '', 'Philippsen, Michael', '', '', 'Adersberger, Josef']","University of Erlangen Nuremberg, Martensstr  3, 91058 Erlangen, Germany  2  QAware GmbH, Aschauer Str  32, 81549 Munich, Germany",2012,ECSA
1358,1359,"Traceability analysis is used to improve quality in the software development process  As such an analysis is complex to implement and often requires a lot of dense code that is specific to the system being traced, there is a need for a framework to express traceability analysis tasks  This paper presents the Traceability Query Language TracQL, an expressive, extensible, representation independent, and fast domain specific language  Known approaches do not fulfill all these requirements  We examine TracQL and compare it to other approaches on a software ageing problem, namely to detect divergence between architecture and code  The necessary TracQL code is much shorter  by a factor of 1 7  and about twice as fast as what known approaches can achieve    2012 IEEE   21 refs",TracQL  A domain specific language for traceability analysis,"['Problem oriented languages', 'Query languages', 'Software architecture', 'Ageing problems', 'Dense codes', 'Domain specific languages', 'Software development process', 'Traceability analysis', 'Computer Software, Data Handling and Applications', 'Quality Assurance and Control']","['Tausch, Norbert', '', '', 'Philippsen, Michael', '', '', 'Adersberger, Josef']","University of Erlangen Nuremberg, Martensstr  3, 91058 Erlangen, Germany  2  QAware GmbH, Aschauer Str  32, 81549 Munich, Germany",2012,WICSA
1359,1360,"Traditional software modeling tools are rigid and formal  There is no support for, e g  freeform sketching that does not conform to the used meta model, and hence, a lot of the actual modeling work gets done with other methods  Modeling tools are used merely for documenting the work later on, which is not economical  There is a need for flexible modeling tools that support the modeling in earlier phases of the work by allowing more freeform and informal descriptions as a part of the model  Tools like spreadsheets, word processing tools, and vector graphics tools are commonly used in software development  In this paper, we consider an approach where such a tool is enhanced with modeling support, in order to gain better support for the actual modeling work  We also show how we have created a graphical repository based case tool by using Microsoft Visio, and conclude the approach to be practical    2010 ACM   28 refs",From a freeform graphics tool to a repository based modeling tool,"['Computational linguistics', 'Software design', 'Technical presentations', 'Word processing', 'CASE tools', 'Commonly used', 'Flexible tool', 'Freeforms', 'Meta model', 'MicroSoft', 'modeling', 'Modeling tool', 'Processing tools', 'Software development', 'Software modeling tools', 'Vector graphics', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Software, Data Handling and Applications', 'Information Dissemination']","['Peltonen, Jari', '', '', 'Felin, Marko', '', '', 'Vartiala, Mikko']","Tampere University of Technology, Department of Software Systems, P O Box 553x, FI 33101 Tampere, Finland",2010,ECSA
1360,1361,"Traditionally, governmental organizations have provided many supporting services internally  For example, incoming call switching and phone exchange services were often organized as organization specific team of few people handling the requests  Outsourcing of similar services is a trend in many organizations  In order to minimize service disruption in an outsourcing project, a major problem is to discover the knowledge of current operations  In this paper we describe how we used formal concept analysis to extract classes of mobile subscriptions in the context of a transition project where we changed the provider of our mobile services and outsourced the incoming call switching services from in house service to a new operator  Copyright 2012 ACM   3 refs",Formal concept analysis for identifying mobile subscribers  A case study in a governmental transition project,"['Formal concept analysis', 'Information analysis', 'Outsourcing', 'Software architecture', 'Data gathering', 'Knowledge creations', 'Mobile service', 'Mobile subscribers', 'Outsourcing projects', 'Service disruptions', 'Telephone Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Information Sources and Analysis', 'Industrial Economics']","['Pohjalainen, Pietu']","National Institute for Health and Welfare, Helsinki, Finland",2012,ECSA
1361,1362,"Traditionally, governmental organizations have provided many supporting services internally  For example, incoming call switching and phone exchange services were often organized as organization specific team of few people handling the requests  Outsourcing of similar services is a trend in many organizations  In order to minimize service disruption in an outsourcing project, a major problem is to discover the knowledge of current operations  In this paper we describe how we used formal concept analysis to extract classes of mobile subscriptions in the context of a transition project where we changed the provider of our mobile services and outsourced the incoming call switching services from in house service to a new operator  Copyright 2012 ACM   3 refs",Formal concept analysis for identifying mobile subscribers  A case study in a governmental transition project,"['Formal concept analysis', 'Information analysis', 'Outsourcing', 'Software architecture', 'Data gathering', 'Knowledge creations', 'Mobile service', 'Mobile subscribers', 'Outsourcing projects', 'Service disruptions', 'Telephone Systems and Equipment', 'Computer Software, Data Handling and Applications', 'Information Sources and Analysis', 'Industrial Economics']","['Pohjalainen, Pietu']","National Institute for Health and Welfare, Helsinki, Finland",2012,WICSA
1362,1363,"Two determinants of software ecosystem health are productivity of and value creation by the actors in the ecosystem  While keystone players use partnership models to orchestrate actors, the relationship between the type of partnership and activity has not been studied  To address this gap, we have researched the partnership model of the Eclipse Ecosystem and the activity of different types of partners  We have used Eclipse Dash and GitHub to gather data about the activity of Eclipse partners  The results show that a higher level of membership is related to more activity  However, it is also observed that non member companies are more active than associate members, which suggests that Eclipse can and should improve their partnership model by motivating associate members and incorporating active non member companies  In addition, other software ecosystems could use these results and implications to improve their own partnership models    2014 ACM   13 refs",The reality of an associate model  Comparing partner activity in the eclipse ecosystem,"['Software architecture', 'Associate model', 'Eclipse', 'Membership', 'Partnership models', 'Software ecosystems', 'Value creation', 'Ecology and Ecosystems', 'Computer Programming']","['Aarnoutse, Floor', '', '', 'Renes, Cassandra', '', '', 'Snijders, Remco', '', '', 'Jansen, Slinger']","Utrecht University, Princetonplein 5, 3584 CC Utrecht, Netherlands",2014,ECSA
1363,1364,"UML modeling environments for doing model based testing are often not very comfortable to use and burden some knowledge about the internals of UML to the users, respectively test engineers  Test engineers, however, are seldom experts in UML, thus, the gain of efficiency model based testing approaches entail, is reduced by a too generic tooling  The tool Fokus MBT, developed by the competence center MOTION of Fraunhofer FOKUS, is a multi paradigmatic test modeling environment based on the UML Testing Profile, an OMG adopted industry driven notation for model based testing  Fokus MBT simplifies the creation and authoring of test models with methodology specific support  It is built on top of Eclipse Papyrus, a powerful open source UML modeling environment, which, in turn, relies on the Eclipse Modeling Framework and the Graphical Modeling Framework  This paper provides deep insights into the basic concepts and technical realization of Fokus MBT as well as into the lessons we have learned during development and application    2013 ACM   36 refs",Fokus MBT  A multi paradigmatic test modeling environment,"['Development and applications', 'Eclipse modeling framework', 'Fokus!MBT', 'Graphical modeling frameworks', 'Model based testing', 'Model-based testing approaches', 'Test Modeling', 'UML testing profiles', 'Computer Programming Languages']","['Wendland, Marc Florian', '', '', 'Hoffmann, Andreas', '', '', 'Schieferdecker, Ina']","Fraunhofer Institut FOKUS, Kaiserin Augusta Alle 31, 10589 Berlin, Germany",2013,ECSA
1364,1365,"Uncontrolled software architecture erosion can lead to a degradation of the quality of a software system  It is hence of great importance to repair erosion efficiently  Refactorings can help to systematically reverse software architecture erosion through applying them in the system where architectural violations have been detected  However, existing refactoring approaches do not address architecture erosion holistically  In this paper, we describe and formalize the theoretical problem of repairing eroded software systems by finding optimal repair sequences  Furthermore, we investigate the applicability and limitations of existing refactoring approaches  We argue, true to the motto  more knowledge means less search  that using formalized and explicit knowledge of software engineers modeled as fault patterns and repair strategies combined with heuristic search techniques could overcome those limitations  This paper outlines a new approach analog to a patient history in medicine we have been starting to investigate in our recent research and also aims at stimulating a discussion about further research challenges in repairing eroded software systems  Copyright   2014 ACM 978 1 4503 2523 3 14  04 15 00   23 refs",Towards flexible automated software architecture erosion diagnosis and treatment,"['Computer software', 'Diagnosis', 'Erosion', 'Heuristic algorithms', 'Modular robots', 'Software architecture', 'Architecture erosion', 'Explicit knowledge', 'Fault patterns', 'Heuristic search', 'Heuristic search technique', 'Recent researches', 'Research challenges', 'Software systems', 'Maritime and Port Structures  Rivers and Other Waterways', 'Medicine and Pharmacology', 'Soil Mechanics and Foundations', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Robotics', 'Maintenance']","['Mair, Matthias', '', '', 'Herold, Sebastian', '', '', 'Rausch, Andreas']","Department of Informatics, Clausthal University of Technology, Julius Albert Str  4, 38678 Clausthal Zellerfeld, Germany  2  Lero The Irish Software Engineering, Research Centre, University of Limerick, Limerick, Ireland",2014,WICSA
1365,1366,"Understanding and improving durability of fuel cell catalysts are currently one of the major goals in fuel cell research  Here, we present a comparative stability study of multi walled carbon nanotube  MWCNT  and conventional carbon supported platinum nanoparticle electrocatalysts for the oxygen reduction reaction  ORR   The aim of this study was to obtain insight into the mechanisms controlling degradation, in particular the role of nanoparticle coarsening and support corrosion effects  A MWCNT supported 20 wt   Pt catalyst and a Vulcan XC 72R supported 20 wt   Pt catalyst with a BET surface area of around 150 m2 g 1 and with a comparable Pt mean particle size were subjected to electrode potential cycling in a  lifetime  stability regime  voltage cycles between 0 5 to 1 0 V vs  RHE  and a  start up  stability regime  cycles between 0 5 to 1 5 V vs  RHE   Before, during and after potential cycling, the ORR activity and structural  morphological  XRD, TEM  characteristics were recorded and analyzed  Our results did not indicate any activity benefit of MWCNT support for the kinetic rate of ORR  In the  lifetime  regime, the MWCNT supported Pt catalyst showed clearly smaller electrochemically active surface area  ECSA  and mass activity losses compared to the Vulcan XC 72R supported Pt catalyst  In the  start up  regime, Pt on MWCNT exhibited a reduced relative ECSA loss compared to Pt on Vulcan XC 72R  We directly imaged the trace of a migrating platinum particle inside a MWCNT suggesting enhanced adhesion between Pt atoms and the graphene tube walls  Our data suggests that the ECSA loss differences between the two catalysts are not controlled by particle growth  We rather conclude that over the time scale of our stability tests  10000 potential cycles and beyond , the macroscopic ECSA loss is primarily controlled by carbon corrosion associated with Pt particle detachment and loss of electrical contact   34 refs","Activity, stability and degradation of multi walled carbon nanotube  MWCNT  supported Pt fuel cell electrocatalysts","['carbon nanotubes', 'catalysis', 'catalysts', 'corrosion', 'electrochemical electrodes', 'fuel cells', 'nanoparticles', 'particle size', 'platinum', 'transmission electron microscopy', 'X-ray diffraction', 'multiwalled carbon nanotube supported Pt fuel cell electrocatalysts', 'multiwalled carbon nanotube supported platinum nanoparticle electrocatalysts', 'oxygen reduction reaction', 'nanoparticle coarsening', 'support corrosion effects', 'Vulcan XC 72R-supported Pt catalyst', 'BET surface area', 'Pt mean particle size', 'electrode potential cycling', 'lifetime stability regime', 'start-up stability regime', 'structural characteristics', 'morphological characteristics', 'XRD', 'TEM', 'kinetic rate', 'electrochemically active surface area loss', 'mass activity loss', 'reduced relative ECSA loss', 'migrating platinum particle', 'enhanced adhesion', 'Pt atoms', 'graphene tube walls', 'ECSA loss differences', 'particle growth', 'stability tests', 'macroscopic ECSA loss', 'carbon corrosion', 'Pt particle detachment', 'electrical contact loss', 'voltage 0.5 V to 1.5 V', 'C-Pt', 'Fuel cells', 'Heterogeneous catalysis at surfaces and other surface reactions', 'Electrochemistry and electrophoresis', 'Corrosion, oxidation, etching, and other surface treatments', 'Structure of graphene and graphene related materials', 'Structure of solid clusters, nanoparticles, nanotubes and nanostructured materials', 'Fuel cells']","['Hasche, F', '', '', ' Oezaslan, M', '', '', ' Strasser, P', '', '']","Dept  of Chem , Tech  Univ  Berlin, Berlin, Germany",2010,ECSA
1366,1367,"Understanding and modeling architectural variability is fundamental in product line engineering  Various extensions have been proposed to architecture description languages  ADLs  to deal with variability  Although these extensions are useful, we argue in this paper that decisions need to be treated as first class citizens for modeling architectural variability  Decisions that have to be taken by different stakeholders during product derivation are an essential source to understand the variability at different levels  e g , features, architecture, and implementation   We outline a decision oriented approach to variability modeling and illustrate it with an example from our ongoing research collaboration with Siemens VAI    2007 IEEE   12 refs",Decision oriented modeling of product line architectures,"['Computer programming languages', 'Computer supported cooperative work', 'Decision support systems', 'Engineering research', 'Mathematical models', 'Architectural variability', 'Architecture description languages (ADL)', 'Product line architectures', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Engineering Research', 'Management', 'Mathematics']","['Dhungana, Deepak', '', '', 'Rabiser, Rick', '', '', 'Gr nbacher, Paul']","Christian Doppler Laboratory for Automated Software Engineering, Johannes Kepler University, Linz, Austria",2007,WICSA
1367,1368,"Understanding and modeling architectural variability is fundamental in product line engineering  Various extensions have been proposed to architecture description languages  ADLs  to deal with variability  Although these extensions are useful, we argue in this paper that decisions need to be treated as first class citizens for modeling architectural variability  Decisions that have to be taken by different stakeholders during product derivation are an essential source to understand the variability at different levels  e g , features, architecture, and implementation   We outline a decision oriented approach to variability modeling and illustrate it with an example from our ongoing research collaboration with Siemens VAI   12 refs",Decision oriented modeling of product line architectures,"['product development', 'software architecture', 'software reusability', 'specification languages', 'decision-oriented modeling', 'product line architecture', 'architecture description language', 'architectural variability modeling', 'product line engineering', 'Software engineering techniques', 'Formal methods']","['Dhungana, D', '', '', ' Rabiser, R', '', '', ' Grunbacher, P', '', '']","Christian Doppler Lab  for Automated Software Eng , Johannes Kepler Univ , Linz, Austria",2007,WICSA
1368,1369,"Understanding the dynamics of fine sediment transport across the upper intertidal zone is critical in managing the erosion and accretion of intertidal areas, and in managed realignment estuarine habitat recreation strategies  This paper examines the transfer of sediments between salt marsh and mudflat environments in two contrasting macrotidal estuaries  the Seine  France  and the Medway  UK , using data collected during two joint field seasons undertaken by the Anglo French RIMEW project  Rives Manche Estuary Watch   High resolution ADCP, Altimeter, OBS and ASM measurements from mudflat and marsh surface environments have been combined with sediment trap data to examine short term sediment transport processes under spring tide and storm flow conditions  In addition, the longer term accumulation of sediment in each salt marsh system has been examined via radiometric dating of sediment cores  In the Seine, rapid sediment accumulation and expansion of salt marsh areas, and subsequent loss of open intertidal mudflats, is a major problem, and the data collected here indicate a distinct net landward flux of sediments into the marsh interior  Suspended sediment fluxes are much higher than in the Medway estuary  averaging 0 09 g m3 s , and vertical accumulation rates at the salt marsh mudflat boundary exceed 3 cm y  Suspended sediment data collected during storm surge conditions indicate that significant in wash of fine sediments into the marsh interior can occur during  and following  these high magnitude events  In contrast to the Seine, the Medway is undergoing erosion and general loss of salt marsh areas  Suspended sediment fluxes are of the order of 0 03 g m 3 s, and the marsh system here has much lower rates of vertical accretion  sediment accumulation rates are ca  4 mm y   Current velocity data for the Medway site indicate higher velocities on the ebb tide than occur on the flood tide, which may be sufficient to remobilise sediments deposited on the previous tide and so force net removal of material from the marsh    2007 Springer Science Business Media B V   12 refs",Sediment transfer and accumulation in two contrasting salt marsh mudflat systems  The Seine estuary  France  and the Medway estuary  UK,"['Bioaccumulation', 'Environmental engineering', 'Sediment transport', 'Sedimentation', 'Surface morphology', 'Medway', 'Mudflat systems', 'Salt marsh', 'Seine estuary', 'Suspended sediments', 'Waterways', 'Environmental Engineering', 'Biology', 'Soils and Soil Mechanics', 'Chemical Operations', 'Physical Properties of Gases, Liquids and Solids']","['Cundy, A B', '', '', ' Lafite, R', '', '', ' Taylor, J A', '', '', ' Hopkinson, L', '', '', ' Deloffre, J', '', '', ' Charman, R', '', '', ' Gilpin, M', '', '', ' Spencer, K L', '', '', ' Carey, P J', '', '', ' Heppell, C M', '', '', ' Ouddane, B', '', '', ' De Wever, S', '', '', ' Tuckett, A', '', '']","School of the Environment, University of Brighton, Lewes Road, Brighton BN2 4GJ, United Kingdom  2  CNRS Universit  de Rouen, Mont Saint Aignan Cedex 76821, France  3  University of Sussex, Falmer, Brighton BN1 9QJ, United Kingdom  4  University of Greenwich  Medway Campus , Chatham Maritime, Kent ME4 4TB, United Kingdom  5  Queen Mary University of London, Mile End Road, London E1 4NS, United Kingdom  6  Universite de Sciences et Technologies de Lille, Villeneuve d Ascq, France",2007,ECSA
1369,1370,"Understanding the dynamics of fine sediment transport across the upper intertidal zone is critical in managing the erosion and accretion of intertidal areas, and in managed realignment estuarine habitat recreation strategies  This paper examines the transfer of sediments between salt marsh and mudflat environments in two contrasting macrotidal estuaries  the Seine  France  and the Medway  UK , using data collected during two joint field seasons undertaken by the Anglo French RIMEW project  Rives Manche Estuary Watch   High resolution ADCP, Altimeter, OBS and ASM measurements from mudflat and marsh surface environments have been combined with sediment trap data to examine short term sediment transport processes under spring tide and storm flow conditions  In addition, the longer term accumulation of sediment in each salt marsh system has been examined via radiometric dating of sediment cores  In the Seine, rapid sediment accumulation and expansion of salt marsh areas, and subsequent loss of open intertidal mudflats, is a major problem, and the data collected here indicate a distinct net landward flux of sediments into the marsh interior  Suspended sediment fluxes are much higher than in the Medway estuary  averaging 0 09 g m3 s , and vertical accumulation rates at the salt marsh mudflat boundary exceed 3 cm y  Suspended sediment data collected during storm surge conditions indicate that significant in wash of fine sediments into the marsh interior can occur during  and following  these high magnitude events  In contrast to the Seine, the Medway is undergoing erosion and general loss of salt marsh areas  Suspended sediment fluxes are of the order of 0 03 g m 3 s, and the marsh system here has much lower rates of vertical accretion  sediment accumulation rates are ca  4 mm y   Current velocity data for the Medway site indicate higher velocities on the ebb tide than occur on the flood tide, which may be sufficient to remobilise sediments deposited on the previous tide and so force net removal of material from the marsh    2007 Springer Science Business Media B V   12 refs",Sediment transfer and accumulation in two contrasting salt marsh mudflat systems  The Seine estuary  France  and the Medway estuary  UK,"['Bioaccumulation', 'Environmental engineering', 'Sediment transport', 'Sedimentation', 'Surface morphology', 'Medway', 'Mudflat systems', 'Salt marsh', 'Seine estuary', 'Suspended sediments', 'Waterways', 'Environmental Engineering', 'Biology', 'Soils and Soil Mechanics', 'Chemical Operations', 'Physical Properties of Gases, Liquids and Solids']","['Cundy, A B', '', '', ' Lafite, R', '', '', ' Taylor, J A', '', '', ' Hopkinson, L', '', '', ' Deloffre, J', '', '', ' Charman, R', '', '', ' Gilpin, M', '', '', ' Spencer, K L', '', '', ' Carey, P J', '', '', ' Heppell, C M', '', '', ' Ouddane, B', '', '', ' De Wever, S', '', '', ' Tuckett, A', '', '']","School of the Environment, University of Brighton, Lewes Road, Brighton BN2 4GJ, United Kingdom  2  CNRS Universit  de Rouen, Mont Saint Aignan Cedex 76821, France  3  University of Sussex, Falmer, Brighton BN1 9QJ, United Kingdom  4  University of Greenwich  Medway Campus , Chatham Maritime, Kent ME4 4TB, United Kingdom  5  Queen Mary University of London, Mile End Road, London E1 4NS, United Kingdom  6  Universite de Sciences et Technologies de Lille, Villeneuve d Ascq, France",2008,ECSA
1370,1371,"Use case scenarios, with notations such as UML sequence diagrams, are widely used to specify software system behavior  Although intuitive, these notations allow engineers to specify behaviors with unintended semantic side effects  To address these inconsistencies, one class of languages targets triggered scenario specifications for expressing a system s reactive behaviors  However, these languages lack adequate facilities for modeling the intended behavior of the individual system components  This runs the risks of sacrificing the expressive power required to model component behaviors, misinterpreting the stakeholder intent, and misspecifying the component behaviors  The risks are particularly prominent when the requirements specification and software architecture specification are refined iteratively and in parallel  To remedy these problems, we propose component aware Triggered Scenarios  cats , an enhancement to triggered scenario languages that allows an engineer to define components  obligations within a scenario  We have formalized the syntax and semantics of cats, and have applied cats on a real world case study, which suggests improved accuracy and conciseness of cats in comparison to existing alternatives    2014 IEEE   34 refs",Component aware triggered scenarios,"['Semantics', 'Specifications', 'Architecture specification', 'Component behavior', 'Modal Transition Systems', 'Model synthesis', 'Requirements specifications', 'Scenario specification', 'triggered scenarios', 'UML sequence diagrams', 'Computer Programming', 'Codes and Standards', 'Information Dissemination']","['Krka, Ivo', '', '', 'Medvidovic, Nenad']","Google Inc, Zurich, Switzerland  2  Computer Science Department, University of Southern California, Los Angeles, CA, United States",2014,WICSA
1371,1372,"Using model to model transformations to generate analysis models or code from architecture models is sought to promote compliance and reuse of components  The maintainability of transformations is influenced by various characteristics   as with every programming language artifact  Code metrics are often used to estimate code maintainability  However, most of the established metrics do not apply to declarative transformation languages  such as QVT Relations  since they focus on imperative  e g  object oriented  coding styles  One way to characterize the maintainability of programs are code metrics  However, the vast majority of these metrics focus on imperative  e g , object oriented  coding styles and thus cannot be reused as is for transformations written in declarative languages  In this paper we propose an initial set of quality metrics to evaluate transformations written in the declarative QVT Relations language  We apply the presented set of metrics to several reference transformations to demonstrate how to judge transformation maintainability based on our metrics    2010 Springer Verlag   22 refs",Evaluating maintainability with code metrics for model to model transformations,"['Computer software selection and evaluation', 'Linguistics', 'Maintainability', 'Quality control', 'Query languages', 'Software architecture', 'Analysis models', 'Architecture models', 'Code metrics', 'Declarative Languages', 'Model to model transformation', 'Object oriented', 'Programming language', 'Quality metrics', 'Maintenance', 'Quality Assurance and Control', 'Management', 'Information Dissemination', 'Computer Applications', 'Database Systems', 'Computer Programming Languages', 'Computer Programming', 'Computer Software, Data Handling and Applications']","['Kapov , Lucia', ' ,', '', ' Goldschmidt, Thomas', ' ,', '', ' Becker, Steffen', ' ,', '', ' Henss, J rg', ' ,', '']","Departmet for Software Design and Quality, Universit t Karlsruhe  TH , 76131 Karlsruhe, Germany  2  FZI Forschungszentrum Informatik, 76131 Karlsruhe, Germany",2010,QoSA
1372,1373,"Variability in software architectures, and especially dynamic variability in software architectures, calls for tool support  The complexity involved in the variability means that tools should be able to efficiently derive architectures at runtime  Our contribution is to offer concepts and an expository instantiation of Configurator as a Service  CaaS   CaaS provides integrability, separation of derivation concerns, and automation  The approach is validated with a case of social devices, where proximity based, distributed service compositions of mobile devices are derived at runtime  Copyright 2012 ACM   24 refs",Configurator as a Service  Tool support for deriving software architectures at runtime,"['Mobile devices', 'Distributed service', 'Dynamic variability', 'Integrability', 'Runtimes', 'Software as a service', 'Tool support', 'Telecommunication  Radar, Radio and Television', 'Computer Programming']","['Myll rniemi, Varvana', '', '', 'Ylikangas, Mikko', '', '', 'Raatikainen, Mikko', '', '', 'P', 'kk , Jari', '', '', 'M nnist , Tomi', '', '', 'Aaltonen, Timo']","Aalto University, Finland  2  Nokia Research Center, Finland",2012,ECSA
1373,1374,"Variability in software architectures, and especially dynamic variability in software architectures, calls for tool support  The complexity involved in the variability means that tools should be able to efficiently derive architectures at runtime  Our contribution is to offer concepts and an expository instantiation of Configurator as a Service  CaaS   CaaS provides integrability, separation of derivation concerns, and automation  The approach is validated with a case of social devices, where proximity based, distributed service compositions of mobile devices are derived at runtime  Copyright 2012 ACM   24 refs",Configurator as a Service  Tool support for deriving software architectures at runtime,"['Mobile devices', 'Distributed service', 'Dynamic variability', 'Integrability', 'Runtimes', 'Software as a service', 'Tool support', 'Telecommunication  Radar, Radio and Television', 'Computer Programming']","['Myll rniemi, Varvana', '', '', 'Ylikangas, Mikko', '', '', 'Raatikainen, Mikko', '', '', 'P', 'kk , Jari', '', '', 'M nnist , Tomi', '', '', 'Aaltonen, Timo']","Aalto University, Finland  2  Nokia Research Center, Finland",2012,WICSA
1374,1375,"Variability is the ability of a software system or artifact to be adapted for specific contexts, in a preplanned manner  Many of today s software systems are built with variability in mind, e g , product lines and families, self adaptive systems, open platforms, or service based systems that support dynamic runtime composition of web services  Variability is reflected in and facilitated through the software architecture  Also, as the software architecture is a reference point for many development activities and for achieving quality attributes, variability should be treated as a first class and cross cutting concern in software architecture  Therefore, the Second International Workshop on Variability in Software Architecture  VARSA 2012  aims at identifying critical challenges and progressing the state of the art on variability in software architecture  VARSA 2012 is a follow up of the First International Workshop on Variability in Software Architecture  VARSA 2011 , held at WICSA 2011  Copyright is held by the author owner s    2 refs",Second international workshop on variability in software architecture,"['Adaptive systems', 'Computer software', 'Web services', 'Critical challenges', 'Cross-cutting', 'Development activity', 'International workshops', 'Product-lines', 'Quality attributes', 'Reference points', 'Runtimes', 'Self-adaptive system', 'Service-based systems', 'Software systems', 'Variability', 'VARSA', 'Computer Software, Data Handling and Applications']","['Galster, Matthias', '', '', 'Avgeriou, Paris', '', '', 'Weyns, Danny', '', '', 'Becker, Martin']","University of Groningen, Netherlands  2  Linnaeus University, Sweden  3  Fraunhofer IESE, Germany",2012,ECSA
1375,1376,"Variability is the ability of a software system or artifact to be adapted for specific contexts, in a preplanned manner  Many of today s software systems are built with variability in mind, e g , product lines and families, self adaptive systems, open platforms, or service based systems that support dynamic runtime composition of web services  Variability is reflected in and facilitated through the software architecture  Also, as the software architecture is a reference point for many development activities and for achieving quality attributes, variability should be treated as a first class and cross cutting concern in software architecture  Therefore, the Second International Workshop on Variability in Software Architecture  VARSA 2012  aims at identifying critical challenges and progressing the state of the art on variability in software architecture  VARSA 2012 is a follow up of the First International Workshop on Variability in Software Architecture  VARSA 2011 , held at WICSA 2011  Copyright is held by the author owner s    2 refs",Second international workshop on variability in software architecture,"['Adaptive systems', 'Computer software', 'Web services', 'Critical challenges', 'Cross-cutting', 'Development activity', 'International workshops', 'Product-lines', 'Quality attributes', 'Reference points', 'Runtimes', 'Self-adaptive system', 'Service-based systems', 'Software systems', 'Variability', 'VARSA', 'Computer Software, Data Handling and Applications']","['Galster, Matthias', '', '', 'Avgeriou, Paris', '', '', 'Weyns, Danny', '', '', 'Becker, Martin']","University of Groningen, Netherlands  2  Linnaeus University, Sweden  3  Fraunhofer IESE, Germany",2012,WICSA
1376,1377,"Variability is the ability of a software system to be changed for a specific context, in a preplanned manner  As such, to facilitate the instantiation of a software architecture the variability concern needs to be explicitly addressed  Usually, architectural concerns are represented using architecture views that are derived from the corresponding architecture viewpoints  Different software architecture viewpoints have been introduced to support the modeling, understanding, communication and analysis of the software architecture for different stakeholders  Regarding variability we can observe that this has been mainly addressed in separate variability modeling approaches  In this paper we first provide a short overview of the approaches for dealing with variability at the architecture design level and then introduce the variability viewpoint  The variability viewpoint addresses the concerns for variability and can be used to introduce variability in software architecture viewpoints  Copyright 2012 ACM   12 refs",Variability viewpoint for introducing variability in software architecture viewpoints,"['Architecture', 'Architectural views', 'Architecture designs', 'Architecture view', 'Software systems', 'Variability', 'Variability modeling', 'Buildings and Towers', 'Computer Programming']","['Tekinerdogan, Bedir', '', '', 'S zer, Hasan']","Department of Computer Engineering, Bilkent University, Ankara, Turkey  2  Department of Computer Engineering, Ozyegin University, Istanbul, Turkey",2012,ECSA
1377,1378,"Variability is the ability of a software system to be changed for a specific context, in a preplanned manner  As such, to facilitate the instantiation of a software architecture the variability concern needs to be explicitly addressed  Usually, architectural concerns are represented using architecture views that are derived from the corresponding architecture viewpoints  Different software architecture viewpoints have been introduced to support the modeling, understanding, communication and analysis of the software architecture for different stakeholders  Regarding variability we can observe that this has been mainly addressed in separate variability modeling approaches  In this paper we first provide a short overview of the approaches for dealing with variability at the architecture design level and then introduce the variability viewpoint  The variability viewpoint addresses the concerns for variability and can be used to introduce variability in software architecture viewpoints  Copyright 2012 ACM   12 refs",Variability viewpoint for introducing variability in software architecture viewpoints,"['Architecture', 'Architectural views', 'Architecture designs', 'Architecture view', 'Software systems', 'Variability', 'Variability modeling', 'Buildings and Towers', 'Computer Programming']","['Tekinerdogan, Bedir', '', '', 'S zer, Hasan']","Department of Computer Engineering, Bilkent University, Ankara, Turkey  2  Department of Computer Engineering, Ozyegin University, Istanbul, Turkey",2012,WICSA
1378,1379,"Various software architecture viewpoint approaches have been introduced to model the architecture views for stakeholder concerns  To address quality concerns in software architecture views, an important approach is to define architectural perspectives that include a collection of activities, tactics and guidelines that require consideration across a number of the architectural views  Several architectural perspectives have been defined for selected quality concerns  In this paper we propose the Safety Perspective that is dedicated to ensure that the safety concern is properly addressed in the architecture views  The proposed safety perspective can assist the system and software architects in designing, analyzing and communicating the decisions regarding safety concerns  We illustrate the safety perspective for a real industrial case study and discuss the lessons learned   15 refs",Safety Perspective for Supporting Architectural Design of Safety Critical Systems,"['safety-critical software', 'software architecture', 'safety-critical systems', 'quality concerns', 'safety perspective', 'safety concern', 'software architects', 'decision design', 'software architecture design', 'software architecture modeling', 'decision communication', 'decision analysis', 'Software engineering techniques', 'Data security']","['Gu rbu z, H G', '', '', ' Tekinerdogan, B', '', '', ' Pala Er, N', '', '']","Dept  of Comput  Eng , Bilkent Univ , Ankara, Turkey",2014,ECSA
1379,1380,"Vertically aligned chromium nanorod arrays were grown on glassy carbon electrodes by a dc magnetron sputtering glancing angle deposition  GLAD  technique  The Cr nanorods were used as low cost, high surface area, metallic supports for a conformal Pt thin film, resulting in a potential low loading electrocatalyst for the oxygen reduction reaction  ORR  in polymer electrolyte membrane  PEM  fuel cells  Conformal coatings of Pt on Cr nanorods were achieved using a dc magnetron sputtering small angle deposition  SAD  technique  The electrocatalytic ORR activity of SAD PtGLAD Cr electrodes was investigated using cyclic voltammetry and rotating disk electrode techniques in a 0 1 M HClO 4 d solution at temperatures ranging from 20 to 60 C, and was compared to those of GLAD Cr nanorods coated with Pt thin film deposited at normal and large angles of incidence  The results show that SAD PtGLAD Cr nanorods exhibit higher values of electrochemically active surface area  ECSA , area  and mass specific activities, and better stability against loss of ECSA during potential cycling in the acidic electrolyte  The improved ORR activity and enhanced catalyst utilization of SAD PtGLAD Cr electrode might be attributed to a better Pt conformality, especially at the sidewalls of the nanorods, and a preferential exposure of certain crystal facets    2012 The Electrochemical Society   53 refs",GLAD Cr nanorods coated with SAD Pt thin film for oxygen reduction reaction,"['Catalyst activity', 'Chromium', 'Cyclic voltammetry', 'Electrocatalysts', 'Electrolytes', 'Electrolytic reduction', 'Glass membrane electrodes', 'Loading', 'Magnetron sputtering', 'Nanorods', 'Platinum', 'Thin films', 'Vapor deposition', 'Acidic electrolytes', 'Angles of incidence', 'Catalyst utilization', 'Conformal coatings', 'Conformality', 'Crystal facets', 'Dc magnetron sputtering', 'Electrocatalytic', 'Glancing angle deposition technique', 'Glassy carbon electrodes', 'High surface area', 'Metallic support', 'Nanorod arrays', 'Oxygen reduction reaction', 'Potential cycling', 'Pt thin films', 'Rotating-disk electrode', 'Surface area', 'Vertically aligned', 'Electric Variables Measurements', 'Nanotechnology', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Inorganic Compounds', 'Solid State Physics', 'Electronic Equipment, non communication', 'Electric Components', 'Electric Batteries and Fuel Cells', 'Naval Vessels', 'Precious Metals', 'Chromium and Alloys', 'Semiconductor Devices and Integrated Circuits']","['Khudhayer, Wisam J', '', '', ' Kariuki, Nancy', '', '', 'Myers, Deborah J', '', '', ' Shaikh, Ali U', '', '', ' Karabacak, Tansel']","Department of Systems Engineering, University of Arkansas at Little Rock, Little Rock, AR 72204, United States  2  Chemical Sciences and Engineering Division, Argonne National Laboratory, Argonne, IL 60439 4837, United States  3  Department of Chemistry, University of Arkansas at Little Rock, Little Rock, AR 72204, United States  4  Department of Applied Science, University of Arkansas at Little Rock, Little Rock, AR 72204, United States",2012,ECSA
1380,1381,"View Viewpoint approaches like IEEE 1471 2000, or Kruchten s 4 1 view model are used to structure software architectures at a high level of granularity  While research has focused on architectural languages and with consistency between multiple views, practical questions such as the structuring at a lower level of detail have not been dealt with  This paper aims at filling this gap by reporting personal experiences from a very large scale industrial domain modeling project  There, structuring the logical view turned out to be a critical success factor  We explain the project and its setting, analyze the role and repercussions of model structuring, and examine the implications model structuring decisions have on other parts of the project  We then explain the model structure abstracted from a very large scale industrial modeling project  Finally, we discuss lessons learned    2010 ACM   14 refs",Structuring very large domain models  Experiences from industrial MDSD projects,"['Industry', 'Query languages', 'Technical presentations', 'Critical success factor', 'Domain modeling', 'IEEE 1471', 'Industrial modeling', 'Large domain', 'Level of detail', 'Model structuring', 'Multiple views', 'Personal experience', 'Computer Programming', 'Database Systems', 'Information Dissemination', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing']","['St rrle, Harald']","Technical University of Denmark, Richard Petersens Plads, 2800 Lyngby, Denmark",2010,ECSA
1381,1382,"Viewing angle enlargement is essential for SLM based 3D holographic display  An idea of constructing equivalent curved SLM array  ECSA  is proposed by linear phase factor superimposition  Employing the time division and spatial tiling  TDST  techniques, an ECSA based horizontal 4f optical system is designed and built  The horizontal viewing angle of a single SLM is increased to 3 6 times when retaining the same hologram area  An interlaced holographic display technique is developed to remove the flicker effect  Holographic augmented reality is performed using the TDST system  Floating holographic 3D image with parallax and accommodation effects is achieved  Both TDST and interlaced technique may extend to multiple SLMs system to achieve larger viewing angle    2013 Optical Society of America   22 refs",Viewing angle enlargement in holographic augmented reality using time division and spatial tiling,"['Augmented reality', 'Geometrical optics', 'Holograms', 'Holographic displays', 'Optical systems', 'Three dimensional computer graphics', '3-D image', '3D holographic displays', 'Linear phase', 'Time division', 'Viewing angle', 'Computer Software, Data Handling and Applications', 'Light Optics', 'Optical Devices and Systems', 'Holography']","['Liu, Yuan Zhi', '', '', 'Pang, Xiao Ning', '', '', 'Jiang, Shaoji', '', '', 'Dong, Jian Wen']","State Key Laboratory of Optoelectronic Materials and Technologies, Sun Yat sen University, Guangzhou 510275, China",2013,ECSA
1382,1383,"Virtually all software systems of significant size and longevity eventually undergo changes to their basic architectural structure  Such changes may be prompted by new feature requests, new quality attribute requirements, changing technology, or other reasons  Whatever the cause, software architecture evolution is commonplace in real world software projects  However, research in this area has suffered from problems of validation  previous work has tended to make heavy use of toy examples and hypothetical scenarios and has not been well supported by real world examples  To help address this problem, this paper presents a case study of an ongoing effort at the Jet Propulsion Laboratory to rearchitect the Advanced Multimission Operations System used to operate NASA s deep space and astrophysics missions  Based on examination of project documents and interviews with project personnel, I describe the goals and approach of this evolution effort, then demonstrate how approaches and formal methods from previous research in architecture evolution may be applied to this evolution while using languages and tools already in place at the Jet Propulsion Laboratory  Copyright   2012 ACM   32 refs",NASA s advanced multimission operations system  A case study in software architecture evolution,"['Aircraft propulsion', 'Astrophysics', 'NASA', 'Research', 'Architectural structure', 'Astrophysics missions', 'Feature requests', 'Jet Propulsion Laboratory', 'Multi-mission operations', 'Project documents', 'Quality attributes', 'Software architecture evolution', 'Software Evolution', 'Software project', 'Software systems', 'Aircraft Engines, General', 'Spacecraft', 'Space Flight', 'Computer Programming', 'Engineering Research', 'Mechanics']","['Barnes, Jeffrey M', '', '']","Institute for Software Research, Carnegie Mellon University, 5000 Forbes Avenue, Pittsburgh, PA 15213, United States",2012,QoSA
1383,1384,"Visualization of architectural design decision  ADD  and its rationale, as a kind of traceability information, is supposed to facilitate the understanding of architecture design and the reasoning behind the design rationale, which is supposed to improve the architecting process and gets better architecture design results  But the lack of empirical evaluation that supports this statement prevents industrial practitioners from using ADD visualization in their daily architecting activities  In this paper, we conducted a controlled experiment to investigate how visualization of ADD can improve the understanding of architecture design by using Compendium, an open source tool for rationale visualization  The preliminary results show that visualization of ADD and its rationale does not increase the total time for reading architecture document  including visualization diagrams of ADDs  plus designing task, and it improves the understanding of architects on existing architecture design with better new design results  Copyright   2011 ACM   20 refs",Architectural design decision visualization for architecture design  Preliminary results of a controlled experiment,"['Architectural design', 'Experiments', 'Structural design', 'Visualization', 'Architectural design decisions', 'Architecture designs', 'Controlled experiment', 'Design rationale', 'Empirical evaluations', 'Industrial practitioners', 'New design', 'Open source tools', 'Traceability information', 'Structural Design, General', 'Computer Programming', 'Engineering Research', 'Engineering Graphics']","['Shahin, Mojtaba', ' ,', '', ' Liang, Peng', '', '', 'Li, Zengyang']","State Key Lab of Software Engineering, Wuhan University, Wuhan, China  2  Department of Computer Engineering, Neyriz Branch, Islamic Azad University, Neyriz, Iran  3  Department of Computing Science, University of Groningen, Groningen, Netherlands",2011,ECSA
1384,1385,"Voltammetrically dealloyed Pt Cu alloy nanoparticles show significantly improved Pt mass and specific activities for the oxygen reduction reaction in acidic media in both RDE and MEA configurations1 4  The active phase of the catalyst is prepared from Cu rich precursor materials which are formulated into catalyst inks and electrode layers  The high Cu content of the precursor materials raises fundamental and practical questions as to the molecular stability   oxidation state of the Cu rich catalyst surface and the shelf life of precursor powders, inks and electrode layers  Here we present  aging studies of a carbon supported Pt25Cu75 nanoparticle catalyst precursor  We monitored how the surface area  ECSA  and the oxygen electroreduction  ORR  reactivity of dealloyed precursors  active form of catalyst  change as a function of the exposure time to air of the Pt 25Cu75 precursor at room temperature  Similarly, we aimed to investigate how ECSA and ORR of the active catalyst changed with the time the liquid catalyst ink was exposed to air  We find little detrimental effect of air aging of the precursor on ORR activity over the time scales investigated  The effect of air aging of the catalyst inks is more complex, however  Initially, aged inks show increased ORR reactivity, that is, aged inks result in more active catalyst layers  After about 4 5 days of aging of the inks in air, however, we observed a drop in ORR activity of the resulting catalyst layers  This complex aging behavior of the inks seems independent of prior air aging of the dry powder precursor    The Electrochemical Society   12 refs",Aging studies of Voltammetrically dealloyed Pt Cu nanoparticle ORR electrocatalysts,"['Catalysis', 'Electrocatalysts', 'Electrolytic reduction', 'Ink', 'Ion exchange membranes', 'Membranes', 'Nanoparticles', 'Oxygen', 'Platinum', 'Platinum alloys', 'Powders', 'Proton exchange membrane fuel cells (PEMFC)', 'Protons', 'A carbons', 'Acidic medias', 'Active catalysts', 'Aging behaviors', 'Aging studies', 'Air aging', 'Catalyst layers', 'Catalyst surfaces', 'Cu alloys', 'Cu contents', 'Cu nanoparticles', 'Detrimental effects', 'Dry powders', 'Electrode layers', 'Exposure-time', 'Liquid catalysts', 'Molecular stabilities', 'Nanoparticle catalysts', 'Oxidation state', 'Oxygen electroreduction', 'Oxygen reduction reactions', 'Precursor materials', 'Precursor powders', 'Room temperatures', 'Shelf lives', 'Specific activities', 'Supported Pt', 'Surface areas', 'Time-scales', 'Chemical Plants and Equipment', 'Chemical Reactions', 'Chemical Agents and Basic Industrial Chemicals', 'Materials Science', 'Chemical Products Generally', 'High Energy Physics', 'Solid State Physics', 'Atomic and Molecular Physics', 'Electrochemistry', 'Nanotechnology', 'Ore Treatment', 'Powder Metallurgy', 'Precious Metals', 'Fuel Cells', 'Electric and Magnetic Materials', 'Thermionic Materials']","['Strasser, Peter', ' ,', '', ' Liu, Zengcai', '', '', 'Koh, Shirlaine']","Department of Chemical and Biomolecular Engineering, University of Houston, Houston, TX 77204  2  Institut fuer Chemie, Technische Universitaet Berlin, 10624 Berlin, Germany",2008,ECSA
1385,1386,"We address the data center consolidation problem  given a working data center, the goal of the problem is to choose which software applications must be deployed on which servers in order to minimize the number of servers to use while avoiding the overloading of system resources and satisfying availability constraints  This in order to tradeoff between quality of service issues and data center costs  The problem is approached through a robust model of the data center which exploits queueing networks theory  Then, we propose two mixed integer linear programming formulations of the problem able to capture novel aspects such as workload partitioning  load balancing  and availability issues  A simple heuristic is proposed to compute solutions in a short time  Experimental results illustrate the impact of our approach with respect to a real world consolidation project    2009 Springer Berlin Heidelberg   12 refs",On the consolidation of data centers with performance constraints,"['Computer software selection and evaluation', 'Integer programming', 'Linearization', 'Quality of service', 'Queueing networks', 'Queueing theory', 'Availability constraints', 'Consolidation projects', 'Data centers', 'Load-Balancing', 'Mixed integer linear programming', 'Performance constraints', 'Real-world', 'Robust models', 'Software applications', 'System resources', 'Probability Theory', 'Optimization Techniques', 'Mathematics', 'Management', 'Control Systems', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television']","['Anselmi, Jonatha', '', '', 'Cremonesi, Paolo', '', '', 'Amaldi, Edoardo']","Politecnico di Milano, DEI, Via Ponzio 34 5, Milan I 20133, Italy",2009,QoSA
1386,1387,"We believe that offering means for defining and building multiple architectural views of a given system enhances the understanding of the system as a whole  BeeEye is a generic and open framework for architecture reconstruction, which allows to construct architectural views using different  possibly combined  viewpoints and perspectives  The framework follows a model driven approach where viewpoints and views  abstract and concrete  are models that are defined, constructed and used    2010 Springer Verlag Berlin Heidelberg   18 refs",BeeEye  A framework for constructing architectural views,"['Architectural views', 'Architecture reconstruction', 'Model driven approach', 'Open frameworks', 'Computer Programming']","['Verjus, Herv', '', '', ' C mpan, Sorana', '', '', 'Razavizadeh, Azadeh', '', '', 'Ducasse, St phane']","LISTIC Lab, University of Savoie, France  2  RMoD Team, INRIA Lille Nord Europe, France",2010,ECSA
1387,1388,"We compare five industrial software architecture design methods and we extract from their commonalities a general software architecture design approach  Using this general approach, we compare across the five methods the artifacts and activities they use or recommend, and we pinpoint similarities and differences  Once we get beyond the great variance in terminology and description, we find that the 5 approaches have a lot in common and match more or less the  ideal pattern we introduced    2005 IEEE   35 refs",Generalizing a model of software architecture design from five industrial approaches,"['Mathematical models', 'Software design', 'Terminology', 'Artifacts', 'Industrial software', 'Computer Programming', 'Codes and Standards', 'Mathematics']","['Hofmeister, Christine', '', '', 'Obbink, Henk', '', '', 'Kruchten, Philippe', '', '', 'Ran, Alexander', '', '', 'Nord, Robert L', '', '', ' America, Pierre']","Lehigh University, Bethlehem, PA, United States  2  Philips Research Labs, Eindhoven, Netherlands  3  University of British Columbia, Vancouver, BC, Canada  4  Nokia, Burlington, MA, United States  5  Software Engineering Institute, Pittsburgh, PA, United States",2005,WICSA
1388,1389,"We describe a research program on design techniques to enable the cost effective construction of trustworthy systems  The focus is on single machine systems that can be formally verified to provide desired system wide security and safety properties  Such systems are designed as compositions of small trusted components and large untrusted components whose behaviour is constrained by an underlying formally verified OS kernel  Past work has shown that building these systems is possible, now we wish to do so in a cost effective way  A key part of doing this is to design, as early as possible, an architecture that can provide the required trustworthiness properties  The research program envisions methods, models, analyses, and patterns to create and formally analyse such architectures  We present initial work on this program and discuss the gaps and research questions that will shape future research    2012 IEEE   12 refs",An architectural approach for cost effective trustworthy systems,"['Cost effectiveness', 'Network security', 'Software architecture', 'Architectural approach', 'confidentiality properties', 'Cost effective', 'Design technique', 'Key parts', 'Research programs', 'Research questions', 'Safety property', 'Security properties', 'Trusted components', 'trusted patterns', 'Trusted systems', 'Trustworthy systems', 'Computer Software, Data Handling and Applications', 'Engineering Research', 'Operations Research']","['Kuz, Ihor', '', '', 'Zhu, Liming', '', '', 'Bass, Len', '', '', 'Staples, Mark', '', '', 'Xu, Xiwei']","NICTA, Level 5, 13 Garden St, Eveleigh NSW 2015, Australia School of Computer Science and Engineering, University of NSW, NSW 2052, Australia",2012,ECSA
1389,1390,"We describe a research program on design techniques to enable the cost effective construction of trustworthy systems  The focus is on single machine systems that can be formally verified to provide desired system wide security and safety properties  Such systems are designed as compositions of small trusted components and large untrusted components whose behaviour is constrained by an underlying formally verified OS kernel  Past work has shown that building these systems is possible, now we wish to do so in a cost effective way  A key part of doing this is to design, as early as possible, an architecture that can provide the required trustworthiness properties  The research program envisions methods, models, analyses, and patterns to create and formally analyse such architectures  We present initial work on this program and discuss the gaps and research questions that will shape future research    2012 IEEE   12 refs",An architectural approach for cost effective trustworthy systems,"['Cost effectiveness', 'Network security', 'Software architecture', 'Architectural approach', 'confidentiality properties', 'Cost effective', 'Design technique', 'Key parts', 'Research programs', 'Research questions', 'Safety property', 'Security properties', 'Trusted components', 'trusted patterns', 'Trusted systems', 'Trustworthy systems', 'Computer Software, Data Handling and Applications', 'Engineering Research', 'Operations Research']","['Kuz, Ihor', '', '', 'Zhu, Liming', '', '', 'Bass, Len', '', '', 'Staples, Mark', '', '', 'Xu, Xiwei']","NICTA, Level 5, 13 Garden St, Eveleigh NSW 2015, Australia School of Computer Science and Engineering, University of NSW, NSW 2052, Australia",2012,WICSA
1390,1391,"We describe ongoing work on a variability mechanism for Autonomic Software Product Lines  ASPL   The autonomic software product lines have self management characteristics that make product line instances more resilient to context changes and some aspects of product line evolution  Instances sense the context, selects and bind the best component variants to variation points at run time  The variability mechanism we describe is composed of a profile guided dispatch based on off line and on line training processes  Together they form a simple, yet powerful variability mechanism that continuously learns, which variants to bind given the current context and system goals    2010 ACM   26 refs",Autonomic Software Product Lines  ASPL,"['Technical presentations', 'Autonomic elements', 'context', 'goals', 'MAPE-K', 'Off-line training', 'on-line', 'variability', 'variants', 'variation-points', 'Computer Programming', 'Information Dissemination']","['Abbas, Nadeem', '', '', 'Andersson, Jesper', '', '', 'L we, Welf']","Linnaeus University, Software Technology Group, Sweden",2010,ECSA
1391,1392,"We describe various challenges in ensuring Quality Attributes  QA  of applications hosted in the cloud and hence the perceived quality of service of the cloud as a whole  We advocate a self management optimization architecturedriven approach to ensure that Quality Attributes are met  We discuss the limitations of current approaches to self managing architecture  We propose a novel approach, which exploits the El Farol problem as a modelling mechanism for QAs in architectures of applications in the cloud  The approach uses Service Level Agreements  SLA  and Utility Theory to direct the self optimization  We conclude by looking at directions for further work    2009 IEEE   18 refs",Self optimizing architecture for ensuring quality attributes in the cloud,"['Architecture', 'Computer software selection and evaluation', 'Quality of service', 'Cloud computing', 'Perceived quality', 'Quality attributes', 'Self organizing', 'Self-managing', 'Self-optimization', 'Self-optimizing', 'Service Level Agreements', 'Utility theory', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Management', 'Telephone Systems and Related Technologies  Line Communications', 'Telecommunication  Radar, Radio and Television', 'Buildings and Towers', 'Optical Communication']","['Nallur, Vivek', '', '', 'Bahsoon, Rami', '', '', 'Yao, Xin']","School of Computer Science, University of Birmingham, Birmingham B15 2TT, United Kingdom",2009,ECSA
1392,1393,"We describe various challenges in ensuring Quality Attributes  QA  of applications hosted in the cloud and hence the perceived quality of service of the cloud as a whole  We advocate a self management optimization architecturedriven approach to ensure that Quality Attributes are met  We discuss the limitations of current approaches to self managing architecture  We propose a novel approach, which exploits the El Farol problem as a modelling mechanism for QAs in architectures of applications in the cloud  The approach uses Service Level Agreements  SLA  and Utility Theory to direct the self optimization  We conclude by looking at directions for further work    2009 IEEE   18 refs",Self optimizing architecture for ensuring quality attributes in the cloud,"['Architecture', 'Computer software selection and evaluation', 'Quality of service', 'Cloud computing', 'Perceived quality', 'Quality attributes', 'Self organizing', 'Self-managing', 'Self-optimization', 'Self-optimizing', 'Service Level Agreements', 'Utility theory', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Management', 'Telephone Systems and Related Technologies  Line Communications', 'Telecommunication  Radar, Radio and Television', 'Buildings and Towers', 'Optical Communication']","['Nallur, Vivek', '', '', 'Bahsoon, Rami', '', '', 'Yao, Xin']","School of Computer Science, University of Birmingham, Birmingham B15 2TT, United Kingdom",2009,WICSA
1393,1394,"We describe various challenges in ensuring Quality Attributes  QA  of applications hosted in the cloud and hence the perceived quality of service of the cloud as a whole  We advocate a self management optimization architecturedriven approach to ensure that Quality Attributes are met  We discuss the limitations of current approaches to self managing architecture  We propose a novel approach, which exploits the El Farol problem as a modelling mechanism for QAs in architectures of applications in the cloud  The approach uses Service Level Agreements  SLA  and Utility Theory to direct the self optimization  We conclude by looking at directions for further work    2009 IEEE   18 refs",Self optimizing architecture for ensuring quality attributes in the cloud,"['Architecture', 'Computer software selection and evaluation', 'Quality of service', 'Cloud computing', 'Perceived quality', 'Quality attributes', 'Self organizing', 'Self-managing', 'Self-optimization', 'Self-optimizing', 'Service Level Agreements', 'Utility theory', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Management', 'Telephone Systems and Related Technologies  Line Communications', 'Telecommunication  Radar, Radio and Television', 'Buildings and Towers', 'Optical Communication']","['Nallur, Vivek', '', '', 'Bahsoon, Rami', '', '', 'Yao, Xin']","School of Computer Science, University of Birmingham, Birmingham B15 2TT, United Kingdom",2011,WICSA
1394,1395,We detail the notion of architectural scripting  ASL  as a way to model the dynamic aspects of runtime and deployment time software architecture  This is complementary to the ability of architecture description languages to model architectures statically in that we define scripting operations to modify architectures at runtime  The scripting operations have as verification of the approach been implemented in an interpreter bundle on the OSGi platform  This implementation is used in our selfmanagement system for generating correct reconfiguration plans in a self managed system    2009 IEEE   12 refs,Modeling architectural change  Architectural scripting and its applications to reconfiguration,"['Architecture', 'Computer software', 'Architectural changes', 'Architecture description languages', 'Dynamic aspects', 'Model architecture', 'OSGI platform', 'Reconfiguration plans', 'Runtimes', 'Self-management systems', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Ingstrup, Mads', '', '', 'Hansen, Klaus Marius']","Aarhus University, Department of Computer Science, 8200 Aarhus, Denmark  2  University of Iceland, Dunhaga 7, 107 Reykjavik, Ireland",2009,ECSA
1395,1396,We detail the notion of architectural scripting  ASL  as a way to model the dynamic aspects of runtime and deployment time software architecture  This is complementary to the ability of architecture description languages to model architectures statically in that we define scripting operations to modify architectures at runtime  The scripting operations have as verification of the approach been implemented in an interpreter bundle on the OSGi platform  This implementation is used in our selfmanagement system for generating correct reconfiguration plans in a self managed system    2009 IEEE   12 refs,Modeling architectural change  Architectural scripting and its applications to reconfiguration,"['Architecture', 'Computer software', 'Architectural changes', 'Architecture description languages', 'Dynamic aspects', 'Model architecture', 'OSGI platform', 'Reconfiguration plans', 'Runtimes', 'Self-management systems', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Ingstrup, Mads', '', '', 'Hansen, Klaus Marius']","Aarhus University, Department of Computer Science, 8200 Aarhus, Denmark  2  University of Iceland, Dunhaga 7, 107 Reykjavik, Ireland",2009,WICSA
1396,1397,We detail the notion of architectural scripting  ASL  as a way to model the dynamic aspects of runtime and deployment time software architecture  This is complementary to the ability of architecture description languages to model architectures statically in that we define scripting operations to modify architectures at runtime  The scripting operations have as verification of the approach been implemented in an interpreter bundle on the OSGi platform  This implementation is used in our selfmanagement system for generating correct reconfiguration plans in a self managed system    2009 IEEE   12 refs,Modeling architectural change  Architectural scripting and its applications to reconfiguration,"['Architecture', 'Computer software', 'Architectural changes', 'Architecture description languages', 'Dynamic aspects', 'Model architecture', 'OSGI platform', 'Reconfiguration plans', 'Runtimes', 'Self-management systems', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Ingstrup, Mads', '', '', 'Hansen, Klaus Marius']","Aarhus University, Department of Computer Science, 8200 Aarhus, Denmark  2  University of Iceland, Dunhaga 7, 107 Reykjavik, Ireland",2011,WICSA
1397,1398,We discuss a first step towards an approach for migration of supervisory machine control  SMC  architectures  This approach is based on the identification of SMC concerns and the definition of corresponding transformation rules    2005 IEEE   4 refs,Migration of supervisory machine control architectures,"['Computer control', 'Computer science', 'Information technology', 'Learning systems', 'Supervisory and executive programs', 'Machine control architectures', 'Supervisory machine control (SMC)', 'Transformation rules', 'Computer Circuits and Logic Elements', 'Computer Systems and Equipment', 'Computer Programming', 'Artificial Intelligence', 'Computer Applications', 'Information Science']","['Graaf, Bas', '', '', 'Weber, Sven', '', '', 'Van Deursen, Arie']","TU Delft, Netherlands  2  ASML, TU e, Netherlands  3  CWI, TU Delft, Netherlands",2005,WICSA
1398,1399,"We examined the durability of a carbon supported Pt based Co alloy catalyst  Pt Co C  during voltage cycling tests under supersaturated humidity conditions to simulate events such as flooding  The voltage cycling tests were conducted from 0 4 V to 1 V for up to 50,000 cycles using 100  relative humidity  RH  hydrogen as the anode gas and 189  RH nitrogen as the cathode gas  We performed cyclic voltammetry  CV  to evaluate the electrochemical surface area  ECSA  and investigated polarization properties to evaluate the activity of Pt Co C  The ECSA of Pt Co C decreased more slowly than that of a platinum catalyst  Pt C  during tests  percentages of initial ECSA were 62  and 37  for Pt Co C and Pt C, respectively , either because  1  initial Pt Co C was not dispersed unlike Pt C, or  2  Pt C exhibited stronger resistance to agglomeration than Pt Co C  We concluded that Pt Co C exhibited high oxygen reduction reaction  ORR  activity and durability during voltage cycling tests because the mass activity of Pt Co C was about twice that of Pt C throughout the 50,000 cycles  Electrocatalytic specific activities of Pt Co C were constant and about twice those of Pt C for 4000 50,000 cycles, indicating that alloying can increase intrinsic activity for up to 50,000 cycles    2013 Elsevier Ltd  All rights reserved   30 refs",Durability of a PEMFC Pt Co cathode catalyst layer during voltage cycling tests under supersaturated humidity conditions,"['Cathodes', 'Cyclic voltammetry', 'Electrocatalysts', 'Electrolytic reduction', 'Nitrogen', 'Platinum', 'Platinum alloys', 'Proton exchange membrane fuel cells (PEMFC)', 'Testing', 'Cathode catalyst layers', 'Electrochemical surface area', 'Humidity conditions', 'Intrinsic activities', 'Platinum catalysts', 'Platinum-cobalt Electrocatalysts', 'Polarization properties', 'Polymer electrolyte fuel cells', 'Electric Variables Measurements', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Electric Components', 'Fuel Cells', 'Precious Metals', 'Non Mechanical Properties of Building Materials  Test Methods', 'Strength of Building Materials  Mechanical Properties']","['Ohyagi, Shinsuke', '', '', 'Sasaki, Tatsuyoshi']","New Energy Device Research Laboratory, KRI, Inc , 6 19 9 Torishima, Konohana ku, Osaka City, Osaka 554 0051, Japan",2013,ECSA
1399,1400,"We herein report a facile and effective ultrasonication method to non covalently functionalize graphene with copper phthalocyanine 3,4 , 4 ,4a  euro  tetrasulfonic acid tetrasodium salt  TSCuPc  as a promising catalyst support for Pt nanoparticles  With the assistance of TSCuPc, Pt nanoparticles are homogeneously deposited on the surface of graphene, and their dispersivity and electrochemical active surface area  ECSA  are obviously enhanced  Studies of cyclic voltammetry and chronoamperometry demonstrate that the as prepared Pt TSCuPc graphene catalyst exhibits much higher electrocatalytic activity and stability than the Pt graphene and commercial Pt C catalysts for methanol oxidation  It is concluded that the strategy of TSCuPc functionalized graphene with Pt catalysts will be potential in design and synthesis of the highly efficient electrocatalysts for DMFCs applications    2013 Elsevier B V  All rights reserved   63 refs",Copper phthalocyanine functionalization of graphene nanosheets as support for platinum nanoparticles and their enhanced performance toward methanol oxidation,"['Catalyst supports', 'Chronoamperometry', 'Cyclic voltammetry', 'Direct methanol fuel cells (DMFC)', 'Electrocatalysts', 'Methanol', 'Nanoparticles', 'Platinum', 'Anode catalysts', 'Copper phthalocyanine', 'Electrocatalytic activity and stability', 'Electrochemical active surface areas', 'Functionalizations', 'Graphene nanosheets', 'Methanol Oxidation', 'Platinum nano-particles', 'Solid State Physics', 'Organic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Electrochemistry', 'Nanotechnology', 'Electric and Magnetic Materials', 'Fuel Cells', 'Precious Metals']","['Zhong, Jing Ping', '', '', 'Fan, You Jun', '', '', 'Wang, Hui', '', '', 'Wang, Rui Xiang', '', '', 'Fan, Li Li', '', '', 'Shen, Xing Can', '', '', 'Shi, Zu Jin']","Key Laboratory for the Chemistry and Molecular Engineering of Medicinal Resources, College of Chemistry and Chemical Engineering, Guangxi Normal University, Guilin 541004, China  2  Beijing National Laboratory for Molecular Sciences, College of Chemistry and Molecular Engineering, Peking University, Beijing 100871, China",2013,ECSA
1400,1401,"We herein report a facile and effective ultrasonication method to non covalently functionalize graphene with copper phthalocyanine 3,4 ,4 ,4 tetrasulfonic acid tetrasodium salt  TSCuPc  as a promising catalyst support for Pt nanoparticles  With the assistance of TSCuPc, Pt nanoparticles are homogeneously deposited on the surface of graphene, and their dispersivity and electrochemical active surface area  ECSA  are obviously enhanced  Studies of cyclic voltammetry and chronoamperometry demonstrate that the as prepared Pt TSCuPc graphene catalyst exhibits much higher electrocatalytic activity and stability than the Pt graphene and commercial Pt C catalysts for methanol oxidation  It is concluded that the strategy of TSCuPc functionalized graphene with Pt catalysts will be potential in design and synthesis of the highly efficient electrocatalysts for DMFCs applications    2013 Elsevier B V  All rights reserved   63 refs",Copper phthalocyanine functionalization of graphene nanosheets as support for platinum nanoparticles and their enhanced performance toward methanol oxidation,"['Catalysts', 'Chronoamperometry', 'Copper', 'Cyclic voltammetry', 'Direct methanol fuel cells (DMFC)', 'Electrocatalysts', 'Field effect transistors', 'Graphene', 'Metal nanoparticles', 'Methanol', 'Methanol fuels', 'Nanoparticles', 'Nitrogen compounds', 'Platinum', 'Anode catalysts', 'Copper phthalocyanine', 'Electrocatalytic activity and stability', 'Electrochemical active surface areas', 'Functionalizations', 'Functionalized graphene', 'Graphene nanosheets', 'Platinum nano-particles', 'Copper', 'Precious Metals', 'Fuel Cells', 'Semiconductor Devices and Integrated Circuits', 'Nanotechnology', 'Electrochemistry', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Products Generally', 'Organic Compounds']","['Zhong, Jing Ping', '', '', 'Fan, You Jun', '', '', 'Wang, Hui', '', '', 'Wang, Rui Xiang', '', '', 'Fan, Li Li', '', '', 'Shen, Xing Can', '', '', 'Shi, Zu Jin']","Key Laboratory for the Chemistry and Molecular Engineering of Medicinal Resources, College of Chemistry and Chemical Engineering, Guangxi Normal University, Guilin, China  2  Beijing National Laboratory for Molecular Sciences, College of Chemistry and Molecular Engineering, Peking University, Beijing, China",2013,ECSA
1401,1402,"We herein report a novel Pt based electrocatalyst for direct methanol fuel cells  DMFCs  using multi walled carbon nanotubes  MWCNTs  supported manganese oxide and poly 3,4 ethylenedioxythiophene   PEDOT  nanocomposite  MnO x PEDOT MWCNTs  as catalyst support for Pt nanoparticles  The prepared nanocomposites are characterized by Fourier transform infrared  FTIR  spectroscopy, X ray diffraction  XRD , transmission electron microscopy  TEM , X ray photoelectron spectroscopy  XPS  and electrochemical tests  The results demonstrate that Pt nanoparticles are uniformly deposited on the surface of MnOx PEDOT MWCNTs, and their dispersion and electrochemical active surface area  ECSA  are obviously improved  The methanol electrooxidation activity and stability of the Pt MnOx PEDOT MWCNTs are significantly enhanced as compared with the Pt PEDOT MWCNTs and Pt MWCNTs catalysts  This study implies that the as prepared Pt MnOx PEDOT MWCNTs will be a promising candidate as an anode electrocatalyst in DMFCs   2013 Elsevier B V  All rights reserved   54 refs","Highly dispersed Pt nanoparticles supported on manganese oxide poly 3,4 ethylenedioxythiophene  carbon nanotubes composite for enhanced methanol electrooxidation","['Carbon nanotubes', 'Electrocatalysts', 'Electrooxidation', 'Fourier transform infrared spectroscopy', 'Manganese oxide', 'Methanol', 'Nanocomposites', 'Nanoparticles', 'Oxides', 'Photoelectrons', 'Platinum', 'Transmission electron microscopy', 'X ray diffraction', 'X ray photoelectron spectroscopy', 'Carbon nanotubes composites', 'Direct methanol fuel cells (DMFCs)', 'Electrochemical active surface areas', 'Enhanced methanol electro oxidations', 'Methanol electrooxidation', 'Poly(3 ,4 ethylenedioxythiophene) (PEDOT)', 'Poly-3 ,4-ethylenedioxythiophene', 'Transmission electron microscopy (TEM)', 'Crystal Lattice', 'Solid State Physics', 'Organic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Electrochemistry', 'Chemistry', 'Nanotechnology', 'Optical Devices and Systems', 'Electromagnetic Waves', 'Electric and Magnetic Materials', 'Fuel Cells', 'Precious Metals']","['Wei, Lu', '', '', 'Fan, You Jun', '', '', 'Ma, Jing Hua', '', '', 'Tao, Liu Hong', '', '', 'Wang, Rui Xiang', '', '', 'Zhong, Jing Ping', '', '', 'Wang, Hui']","Key Laboratory for the Chemistry and Molecular Engineering of Medicinal Resources, Ministry of Education of China, Guangxi Normal University, Guilin 541004, China",2013,ECSA
1402,1403,"We investigated influences of SO2 concentration and relative humidity in fuel and air streams on anode and cathode poisoning behaviors under open circuit voltage and load operating conditions in polymer electrolyte membrane fuel cells  PEMFCs   The rate of cell voltage degradation increased with the increase in SO2 concentration and the normalized cell voltage drop curves were consistent with each other  Cell voltage at equilibrium with SO2 supply was inversely proportional to the concentration of supplied SO2, suggesting that adsorption of sulfur species on the catalyst was in equilibrium and was determined by the SO2 concentration in the electrode  Relative humidity significantly impacted electrode contamination  Electrochemical surface area  ECSA  measured by cyclic voltammetry  CV  revealed pronounced anode contamination under lower RH conditions and suppressed contamination under high RH conditions  Fuel cell load operation showed mitigated anode poisoning, suggesting that appropriate water management of the polymer electrolyte membrane fuel cell  PEMFC  mitigates electrode contamination    2012 by JSME   24 refs",Influence of SO2 concentration and relative humidity on electrode poisoning in polymer electrolyte membrane fuel cells,"['Adsorption', 'Contamination', 'Cyclic voltammetry', 'Degradation', 'Electrolytes', 'Open circuit voltage', 'Polymers', 'River pollution', 'Sulfur', 'Sulfur dioxide', 'Air streams', 'Cathode poisoning', 'Cell voltages', 'Electrochemical surface area', 'Load operations', 'Operating condition', 'Water transport', 'Polymeric Materials', 'Inorganic Compounds', 'Chemical Products Generally', 'Chemical Operations', 'Electric Variables Measurements', 'Chemical Reactions', 'Fuel Cells', 'Electricity  Basic Concepts and Phenomena', 'Water Pollution', 'Semiconductor Devices and Integrated Circuits']","['Tsushima, Shohji', '', '', 'Kaneko, Keisuke', '', '', 'Morioka, Hiroyuki', '', '', 'Hirai, Shuichiro']","Tokyo Institute of Technology, 2 12 1, O okayama, Meguro ku, Tokyo, 152 8552, Japan",2012,ECSA
1403,1404,"We machined work roll with groove worn down as well as groove with no wear  We then performed a pilot hot rod rolling test at temperature of 1000  C using plain carbon steel  0 1  C  as the roll gap decreases from reference roll gap  6 5 mm  to 3 5 mm  To understand better the effect of roll gap  i e , section height  adjustment on the exit cross sectional area  ECSA  variation of workpiece in a two stand groove rolling process with wear is considered, we carried out a series of three dimensional finite element analysis  Results reveal that variation of ECSA is almost linearly proportional to roll gap change while the roll gap decreases from reference roll gap  6 5 mm  to 3 5 mm  In oval groove rolling, the exit cross sectional shape and area predicted by FEA is in a good agreement with those measured  In round groove rolling, however, some deviations between FEA and experiment are observed because of roll groove geometry coupled with cross sectional shape of incoming workpiece  In the two stand groove rolling, the effect of roll gap adjustment at each stand on the exit cross section of workpiece is somewhat different, in comparison with single stand groove rolling  The roll gap adjustment at the previous stand has a more influence on the ECSA of workpiece than that of the next stand    2008 Elsevier B V  All rights reserved   10 refs",Effect of roll gap adjustment on exit cross sectional shape in groove rolling Experimental and FE analysis,"['Carbon steel', 'Hot rolling', 'Three dimensional', 'Wear of materials', 'XML', 'Finite element analysis', 'Oval groove roll', 'Roll gap adjustment', 'Roll wear', 'Round groove roll', 'Materials Science', 'Physical Properties of Gases, Liquids and Solids', 'Numerical Methods', 'Engineering Graphics', 'Computer Applications', 'Computer Software, Data Handling and Applications', 'Steel', 'Rolling Mill Practice', 'Strength of Building Materials  Mechanical Properties']","['Byon, S M', '', '', ' Na, D H', '', '', ' Lee, Y', '', '']","Department of Mechanical Engineering, Dong A University, Busan, 604 714, Korea, Republic of  2  Department of Mechanical Engineering, Chung Ang University, Seoul, 156 756, Korea, Republic of",2009,ECSA
1404,1405,"We present a generic method for the effcient constraint re  resolution of a component based software architecture after changes such as addition, removal and modification of components  Given a formal description of an evolving system as a constraint specification problem, our method identifies and executes the re resolution steps required to verify the system s compliance with constraints after each change  At each step, satisfiability modulo theory  SMT  techniques determine the satisfiability of component constraints expressed as logical formulae over suitably chosen theories of arithmetic, reusing results obtained in previous steps  We illustrate the application of the approach on a constraint  satisfaction problem arising from cloud deployed software services  The incremental method is shown to re resolve sys  tem constraints in a fraction of the time taken by standard SMT resolution  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   29 refs",Efficient re resolution of SMT specifications for evolving software architectures,"['Compliance control', 'Formal logic', 'Problem oriented languages', 'Software architecture', 'Specifications', 'Component-based software architecture', 'Domain specific languages', 'Formal Description', 'Incremental method', 'Incremental Re-resolution', 'Modulo theories', 'Satisfaction problem', 'Satisfiability modulo Theories', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Software, Data Handling and Applications', 'Specific Variables Control', 'Codes and Standards']","['Johnson, Kenneth', '', '', 'Calinescu, Radu']","Computer and Mathematical Sciences, Auckland University of Technology, Auckland 1142, New Zealand  2  Department of Computer Science, University of York, York, YO10 5GH, United Kingdom",2014,QoSA
1405,1406,"We present a model  and pattern based approach that allows software engineers to take quality requirements into account right from the beginning of the software development process  The approach comprises requirements analysis as well as the software architecture design, in which quality requirements are reflected explicitly    2011 Springer Verlag   14 refs",Towards systematic integration of quality requirements into software architecture,"['Computer software selection and evaluation', 'Software design', 'Quality requirements', 'Requirements analysis', 'Software architecture design', 'Software development process', 'Software engineers', 'Systematic integration', 'Computer Software, Data Handling and Applications']","['Alebrahim, Azadeh', '', '', 'Hatebur, Denis', '', '', 'Heisel, Maritta']","University Duisburg Essen, Germany",2011,ECSA
1406,1407,"We present a quantitative method for scenario driven value, risk, and cost analysis when proposing new system architectures for innovation projects  The method helps to articulate the relative benefits and or disadvantages of the proposed set of scenarios in the early architecting phases of a new system  It provides the arguments on which to base an informed decision to select the final architectural scenarios for further consideration in the design  In this paper we present a case study in which we applied the proposed method   5 refs","A scenario driven approach for value, risk, and cost analysis in system architecting for innovation","['risk analysis', 'software architecture', 'software cost estimation', 'scenario-driven value analysis', 'scenario-driven risk analysis', 'scenario-driven cost analysis', 'system architectures', 'innovation projects', 'Software engineering techniques', 'Software management']","['Ionita, M T', '', '', ' America, P', ' Hammer, D K', ' Obbink, H', ' Trienekens, J J M']","Tech  Univ  of Eindhoven, Eindhoven, Netherlands",2004,WICSA
1407,1408,"We present a quantitative method for scenariodriven value, risk, and cost analysis when proposing new system architectures for innovation projects  The method helps to articulate the relative benefits and or disadvantages of the proposed set of scenarios in the early architecting phases of a new system  It provides the arguments on which to base an informed decision to select the final architectural scenarios for further consideration in the design  In this paper we present a case study in which we applied the proposed method   5 refs","A scenario driven approach for value, risk, and cost analysis in system architecting for innovation","['Cost benefit analysis', 'Decision making', 'Integration', 'Personnel', 'Probability', 'Risk assessment', 'Data integration', 'Maintenance costs', 'Quantitative assessment', 'Stakeholders', 'Probability Theory', 'Calculus', 'Accidents and Accident Prevention', 'Personnel', 'Management', 'Cost and Value Engineering  Industrial Economics', 'Computer Systems and Equipment']","['Ionita, Mugurel T', '', '', ' America, Pierre', '', '', 'Hammer, Dieter K', '', '', ' Obbink, Henk', '', '', 'Trienekens, Jos J M', '', '']","Technical University Eindhoven  2  Philips Research, Netherlands",2004,WICSA
1408,1409,"We present a semi automated approach and framework for cost aware recovery from service inconsistency arising due to unreliable service actions  A range of costs such as time are parameterised and modelled generically using cost algebras  With respect to a user provided business specification, we distinguish end state consistency, which must be achieved at service completion, from strong consistency, which may be momentarily violated  Our approach ensures optimal end state consistency for services where action failure may lead to temporary violations of strong consistency or endstate consistency  Enterprises could not otherwise optimally and dynamically handle strong consistency violation, especially with respect to a variety of costs  Our approach provides quantitative analysis by defining a service model as an high level message sequence chart  hMSC , annotating service actions with costs, then interpreting the model as a weighted  Mazurkiewicz  trace language, catering for costs in the presence of true concurrency  We devise a framework and method which checks such a model and ensures service end state consistency optimally by concatenating the traces of recovery strategies  expressed by MSCs  from an enterprise service repository  We evaluate our approach using a popular online shop case study  Copyright 2013 ACM   44 refs",Towards cost aware service recovery,"['Algebra', 'Flowcharting', 'High level languages', 'Industry', 'Recovery', 'Concurrency', 'Enterprise services', 'LTL', 'Message Sequence Charts', 'MSC', 'Recovery strategies', 'Service recoveries', 'Trace languages', 'Metallurgy and Metallography', 'Computer Programming', 'Computer Programming Languages', 'Cost and Value Engineering  Industrial Economics', 'Algebra']","['Zhou, Terry G', '', '', ' Peake, Ian D', '', '', ' Schmidt, Heinz W', '', '']","ESolutions, Monash University, Melbourne, Australia  2  CSIT School, RMIT University, Melbourne, Australia",2013,QoSA
1409,1410,"We present an evaluation of a simple method to find ar  chitectural problems in a product line of computer games  The method uses dependencies  direct, indirect, or no  to automatically classify types in the implementation to high  level components in the product line architecture  We use a commercially available tool to analyse dependencies in the source code  The automatic classification of types is com  pared to a manual classification by the developer, and all mismatches are reported  To evaluate the method, we inspect the source code and look for a pre defined set of architectural problems in all types  We compare the set of types that contained problems to the set of types where the manual and automatic classification disagreed to determine precision and recall  We also investigate what changes are needed to correct the found mismatches by either designing and implementing changes in the source code or refining the automatic classification  Our evaluation shows that the simple method is effective at detecting architectural problems in a product line of four games  The method is lightweight, customisable and easy to implement early in the development cycle  Copyright   2014 ACM 978 1 4503 2577 6 14  06     15 00   20 refs",Evaluation of a static architectural conformance checking method in a line of computer games,"['Computer games', 'Computer programming languages', 'Architectural problems', 'Automatic classification', 'Conformance checking', 'Manual classification', 'Model-View-Controller', 'MVC', 'Precision and recall', 'Product line architecture', 'Computer Programming Languages', 'Computer Applications']","['Olsson, Tobias', '', '', 'Toll, Daniel', '', '', 'Wingkvist, Anna', '', '', 'Ericsson, Morgan']","Dept  of Computer Science, Linnaeus University, Kalmar, Sweden  2  Dept  of Computer Science and Engineering, Chalmers University of Technology, University of Gothenburg, Gothenburg, Sweden",2014,QoSA
1410,1411,"We present an overview of SPQR, the System for Pattern Query and Recognition, a toolkit that detects instances of known design patterns directly from object oriented source code in an automated and flexible manner  Based on our previous work in   calculus and Pattern Object Markup Language  POML , SPQR is retargetable to most OO languages, and system design notations  We discuss how this approach may he applied to architectural concerns by leveraging SPQR s training mode  The System for Pattern Query and Recognition, or SPQR, is an automated framework to analyze software systems in the small or the large, and detect instances of known programming concepts in a flexible yet formal manner  These concepts, combined in well defined ways to form abstractions, as found in the design patterns literature, then lead to the possible automated detection of design patterns directly from source code and other design artifacts  Our previous publications  7, 8  have described SPQR in detail, as well as its successful application to a number of software systems  Here we describe SPQR briefly, and how these principles can be extended to architectural analysis    2005 IEEE   8 refs",Extending SPQR to architectural analysis by semi automated training,"['Abstracting', 'Automation', 'Markup languages', 'Pattern recognition', 'Quality management', 'Query languages', 'Abstracting', 'Automation', 'Markup languages', 'Pattern recognition', 'Quality management', 'Query languages', 'Design patterns', 'Pattern Query', 'Software analysis', 'Software systems', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Automatic Control Principles and Applications', 'Information Sources and Analysis', 'Management']","['Smith, Jason McC', '', '', ' Stotts, David']","University of North Carolina at Chapel Hill, Chapel Hill, NC 27599 3175",2005,WICSA
1411,1412,"We present experimental results obtained with a two dimensional segmented cell with reference electrodes along the gas channels, used to record local anode and cathode potentials  Aging protocols consisting of repeated dead ended anode operation sequences  with anode outlet closed  were performed to assess the impact of hydrogen starvation on the local fuel cell performance  We observed strong local cathode potential excursions, as well as nonuniform ElectroChemical Surface Area  ECSA  losses and performance degradation along the cell area  The damage was more pronounced in the regions suffering the longest from fuel starvation  i e  close to the anode outlet    The Electrochemical Society   7 refs",Time evolution of local potentials during PEM fuel cell operation with dead ended anode,"['Cathodes', 'Cathode potential', 'Electrochemical surface area', 'Fuel cell performance', 'Hydrogen starvation', 'Local potentials', 'Operation sequences', 'Performance degradation', 'Reference electrodes', 'Fuel Cells', 'Electric Components']","['Abbou, S', '', ',', '', ' Dillet, J', '', ',', '', ' Spernjak, D', '', '', ' Mukundan, R', '', '', ' Fairweather, J', '', '', ' Borup, R L', '', '', ' Maranzana, G', '', ',', '', ' Didierjean, S', '', ',', '', ' Lottin, O', '', ',', '']","LEMTA, Universit  de Lorraine, Vandoeuvre l s Nancy, France  2  LEMTA, CNRS, Vandoeuvre l s Nancy, France  3  Los Alamos National Laboratory, Los Alamos, NM, United States",2013,ECSA
1412,1413,We present the results of an investigation into the nature of information needs of software developers who work in projects that are part of larger ecosystems  This work is based on a quantitative survey of 75 professional software developers  We corroborate the results identified in the survey with needs and motivations proposed in a previous survey and discover that tool support for developers working in an ecosystem context is even more meager than we thought  mailing lists and internet search are the most popular tools developers use to satisfy their ecosystem related information needs    2014 ACM   15 refs,A quantitative analysis of developer information needs in software ecosystems,"['Information science', 'Open source software', 'Open systems', 'Search engines', 'Software architecture', 'Surveys', 'Internet searches', 'Mailing lists', 'Professional software', 'Program comprehension', 'programmer needs', 'Software developer', 'Software ecosystems', 'Tool support', 'Ecology and Ecosystems', 'Computer Software, Data Handling and Applications', 'Information Science', 'Information Sources and Analysis']","['Haenni, Nicole', '', '', 'Lungu, Mircea', '', '', 'Schwarz, Niko', '', '', 'Nierstrasz, Oscar']","University of Bern, Switzerland",2014,ECSA
1413,1414,"We present the work of establishing an integrated environment that facilitates architecture design, reconstruction, and maintenance in the entire life cycle of a software product line  This architecting environment  ART environment  has been used in modeling and analysis of both the designed platform architecture model and the reverse engineered product implementation architecture models of different releases in a big product line of Nokia mobile terminals  ART environment comprises tools for architecture model validation, architecture model analysis and processing, and reverse architecting  The ART environment fits the current software development process inside Nokia, and is integrated with the design and documentation tools that have already been used by Nokia software architects  UML, after being customized with UML profiles for architecture design, is used as the architecture modeling language in ART environment   19 refs",Establishing a software architecting environment,"['Codes (symbols)', 'Computer programming languages', 'Computer software', 'Product development', 'Reverse engineering', 'Specifications', 'Architecture design', 'Documentation tools', 'Modeling language', 'Software architecture', 'Computer Programming', 'Computer Programming Languages', 'Data Processing and Image Processing']","['Riva, Claudio', '', '', 'Selonen, Petri', '', '', 'Syst , Tarja', '', '', 'Tuovinen, Antti Pekka', '', '', 'Xu, Jianli', '', '', 'Yang, Yaojin']","Software Technology Lab , Nokia Research Center, Nokia Group, P O  Box 407, FIN 00045, Finland  2  Institute of Software Systems, Tampere University of Technology, P O Box 553, FIN 33101 Tampere, Finland",2004,WICSA
1414,1415,"We present the work of establishing an integrated environment that facilitates architecture design, reconstruction, and maintenance in the entire life cycle of a software product line  This architecting environment  ART environment  has been used in modeling and analysis of both the designed platform architecture model and the reverse engineered product implementation architecture models of different releases in a big product line of Nokia mobile terminals  ART environment comprises tools for architecture model validation, architecture model analysis and processing, and reverse architecting  The ART environment fits the current software development process inside Nokia, and is integrated with the design and documentation tools that have already been used by Nokia software architects  UML, after being customized with UML profiles for architecture design, is used as the architecture modeling language in ART environment   19 refs",Establishing a software architecting environment,"['reverse engineering', 'software architecture', 'software maintenance', 'specification languages', 'telecommunication computing', 'software architecture environment', 'architecture design', 'architecture reconstruction', 'architecture maintenance', 'software product line', 'platform architecture modeling', 'platform architecture analysis', 'reverse-engineered product', 'Nokia mobile terminals', 'architecture model validation', 'architecture model analysis', 'reverse architecting', 'software development', 'design tools', 'documentation tools', 'Nokia software architects', 'UML', 'architecture modeling language', 'product implementation architecture', 'Software engineering techniques', 'Communications computing']","['Riva, C', '', '', ' Selonen, P', ' Systa, T', ' Tuovinen, A', 'P', ' Jianli Xu', 'Yaojin Yang']","Software Technol  Lab , Nokia Res  Center, Finland",2004,WICSA
1415,1416,We propose a Software Architecture Reliability Analysis  SARA  approach that benefits from both reliability engineering and scenario based software architecture analysis to provide an early reliability analysis of the software architecture  SARA makes use of failure scenarios that are prioritized with respect to the user perception in order to provide a severity analysis for the software architecture and the individual components    2005 IEEE   3 refs,Software architecture reliability analysis using failure scenarios,"['Computer system recovery', 'Engineering education', 'Reliability analysis', 'Software engineering', 'User interfaces', 'Reliability engineering', 'Severity analysis', 'Software Architecture Reliability Analysis (SARA)', 'Computer Systems and Equipment', 'Computer Peripheral Equipment', 'Computer Programming', 'Computer Applications', 'Education', 'Production Planning and Control  Manufacturing']","['Tekinerdogan, Bedir', '', '', 'S zer, Hasan', '', '', 'Aksit, Mehmet']","Department of Computer Science, University of Twente, P O  Box 217, 7500 AE Enschede, Netherlands",2005,WICSA
1416,1417,"We propose a novel approach that merges implied scenarios and race condition analysis techniques, to systematically detect and analyse security related vulnerabilities at the architectural level  We apply our approach to an industrial case related to architecting systems interfacing the cloud  The application demonstrates an effective use of the approach, where the approach has detected securityrelated vulnerabilities in the architecture due to unexpected modes of interactions in such environment  Our approach was able to guide testers to detect critical security scenarios, which were not perceived during the inception phases or not captured using either of implied scenarios or race conditions detection techniques alone  We reflect on its applicability and scalability  We look into possible usage scenarios related to architectural level testing for security and incremental refinements of the architecture following the detection of security vulnerabilities    2012 IEEE   24 refs",SecArch  Architecture level evaluation and testing for security,"['Hazards and race conditions', 'Architectural levels', 'Architecture evaluation', 'Behaviour models', 'Condition analysis', 'Detection technique', 'Security testing', 'Security vulnerabilities', 'Usage scenarios', 'vulnerability', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming']","['Al Azzani, Sarah', '', '', 'Bahsoon, Rami']","School of Computer Science, University of Birmingham, Edgbaston, Birmingham B15 2TT, United Kingdom",2012,ECSA
1417,1418,"We propose a novel approach that merges implied scenarios and race condition analysis techniques, to systematically detect and analyse security related vulnerabilities at the architectural level  We apply our approach to an industrial case related to architecting systems interfacing the cloud  The application demonstrates an effective use of the approach, where the approach has detected securityrelated vulnerabilities in the architecture due to unexpected modes of interactions in such environment  Our approach was able to guide testers to detect critical security scenarios, which were not perceived during the inception phases or not captured using either of implied scenarios or race conditions detection techniques alone  We reflect on its applicability and scalability  We look into possible usage scenarios related to architectural level testing for security and incremental refinements of the architecture following the detection of security vulnerabilities    2012 IEEE   24 refs",SecArch  Architecture level evaluation and testing for security,"['Hazards and race conditions', 'Architectural levels', 'Architecture evaluation', 'Behaviour models', 'Condition analysis', 'Detection technique', 'Security testing', 'Security vulnerabilities', 'Usage scenarios', 'vulnerability', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Computer Programming']","['Al Azzani, Sarah', '', '', 'Bahsoon, Rami']","School of Computer Science, University of Birmingham, Edgbaston, Birmingham B15 2TT, United Kingdom",2012,WICSA
1418,1419,"We propose a pattern based software development method comprising analysis  using problem frames  and design  using architectural and design patterns , of which especially evolving systems benefit  Evolution operators guide a pattern based transformation procedure, including re engineering tasks for adjusting a given software architecture to meet new system demands  Through application of these operators, relations between analysis and design documents are explored systematically for accomplishing desired software modifications  This allows for reusing development documents to a large extent, even when the application environment and the requirements change    Springer Verlag Berlin Heidelberg 2007   15 refs",Pattern based evolution of software architectures,"['Pattern recognition', 'Requirements engineering', 'Design patterns', 'Pattern-based transformation', 'Problem frames', 'Computer Programming', 'Computer Applications', 'Light Optics']","['C t , Isabelle', '', '', 'Heisel, Marina', '', '', 'Wentzlaff, Ina']","Department of Computational and Cognitive Sciences   CoCoS, Faculty of Engineering, University Duisburg Essen, Germany",2007,ECSA
1419,1420,"We propose a pattern based software development method comprising analysis  using problem frames  and design  using architectural and design patterns , of which especially evolving systems benefit  Evolution operators guide a pattern based transformation procedure, including re engineering tasks for adjusting a given software architecture to meet new system demands  Through application of these operators, relations between analysis and design documents are explored systematically for accomplishing desired software modifications  This allows for reusing development documents to a large extent, even when the application environment and the requirements change    Springer Verlag Berlin Heidelberg 2007   15 refs",Pattern based evolution of software architectures,"['Pattern recognition', 'Requirements engineering', 'Design patterns', 'Pattern-based transformation', 'Problem frames', 'Computer Programming', 'Computer Applications', 'Light Optics']","['C t , Isabelle', '', '', 'Heisel, Marina', '', '', 'Wentzlaff, Ina']","Department of Computational and Cognitive Sciences   CoCoS, Faculty of Engineering, University Duisburg Essen, Germany",2008,ECSA
1420,1421,"We propose a pattern based software development method comprising analysis  using problem frames  and design  using architectural and design patterns , of which especially evolving systems benefit  Evolution operators guide a pattern based transformation procedure, including re engineering tasks for adjusting a given software architecture to meet new system demands  Through application of these operators, relations between analysis and design documents are explored systematically for accomplishing desired software modifications  This allows for reusing development documents to a large extent, even when the application environment and the requirements change   15 refs",Pattern based evolution of software architectures,"['software architecture', 'pattern-based evolution', 'software architectures', 'pattern-based software development method', 'pattern-based transformation procedure', 'reengineering tasks', 'software modifications', 'Software engineering techniques']","['Cote, I', '', '', ' Heisel, M', '', '', ' Wentzlaff, I', '', '']","Dept  of Comput    Cognitive Sci , Univ  Duisburg Essen, Essen, Germany",2007,ECSA
1421,1422,"We propose a pattern based software development method comprising analysis  using problem frames  and design  using architectural and design patterns , of which especially evolving systems benefit  Evolution operators guide a pattern based transformation procedure, including re engineering tasks for adjusting a given software architecture to meet new system demands  Through application of these operators, relations between analysis and design documents are explored systematically for accomplishing desired software modifications  This allows for reusing development documents to a large extent, even when the application environment and the requirements change   15 refs",Pattern based evolution of software architectures,"['software architecture', 'pattern-based evolution', 'software architectures', 'pattern-based software development method', 'pattern-based transformation procedure', 'reengineering tasks', 'software modifications', 'Software engineering techniques']","['Cote, I', '', '', ' Heisel, M', '', '', ' Wentzlaff, I', '', '']","Dept  of Comput    Cognitive Sci , Univ  Duisburg Essen, Essen, Germany",2008,ECSA
1422,1423,"We propose to map functional system requirements, specified with SysML, directly into system architecture, by exploiting the composition relation between component interfaces  Our research challenge is to guarantee formally that the final system fulfill the set of all requirements  Our approach is based on component based systems  CBS  specified with SysML models and Interface Automata  IA  to capture their behaviors  From a SysML Requirement Diagram  RD , we build a Block Definition Diagram  BDD  to specify system architecture, by taking, one by one, the lowest level of requirements  At each new added requirement, we add a new component satisfying this requirement, by the composition, in the partial architecture obtained in a precedent step  Then we verify whether the new component is compatible with the components in the partial architecture, and if the requirements are preserved    2013 Springer Verlag   10 refs",Specifying system architecture from SysML requirements and component interfaces,"['Automata theory', 'Chemical analysis', 'Software architecture', 'Component based systems', 'Component interfaces', 'Interface automata', 'Requirement diagram', 'Requirements', 'Research challenges', 'SysML', 'System architectures', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Chemistry', 'Chemical Products Generally']","['Chouali, Samir', '', '', 'Carrillo, Oscar', '', '', 'Mountassir, Hassan']","Femto ST Institute, University of Franche Comt , Besan on, France",2013,ECSA
1423,1424,"We report a synthesis and study on carbon supported PtCo3 and PtCu3 alloy nanoparticle catalyst for ORR  The chemical composition of alloys was carried out with EDS  The electrochemical measurements were conducted using a thin film RDE method  Recently, we have demonstrated that dealloyed PtCu3 nanoparticle exhibits 3 4 times higher mass activity and 4 times higher specific activity for ORR than Pt  Here, the dealloyed PtCo3 also shows about 4 fold increase in specific activity, but 2 3 fold in mass activity than Pt C  The in situ generated Pt rich surface of Co rich Pt alloy nanoparticle catalyst tested for ORR activity  Geometric effects based on Pt surface constitution were assumed for the high activity for ORR  PtCo3 nanoparticle catalyst seems to be an interesting opportunity for further studies for ORR  The thermodynamic instable deposition of Co and the robust Pt ECSA are probably the large advantages to other Pt alloys   The Electrochemical Society   19 refs",Structure activity relationship of dealloyed PtCo3 and PtCu 3 nanoparticle electrocatalyst for oxygen reduction reaction in PEMFC,"['Alloys', 'Catalyst activity', 'Electrocatalysts', 'Electrolytic reduction', 'Fuel cells', 'Nanoparticles', 'Oxygen', 'Platinum', 'Polyelectrolytes', 'Synthesis (chemical)', 'Alloy nanoparticle', 'Chemical compositions', 'Electrochemical measurements', 'Geometric effects', 'High activity', 'In-situ', 'Mass activity', 'Nanoparticle catalysts', 'Oxygen reduction reaction', 'Pt alloy', 'Specific activity', 'Structure activity relationships', 'Organic Polymers', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Solid State Physics', 'Nanotechnology', 'Fuel Cells', 'Precious Metals', 'Metallurgy', 'Electric and Magnetic Materials']","['Oezaslan, M', '', '', ' Hasch , F', '', '', ' Strasser, P', '', '']","Department of Chemistry, Technical University Berlin, 10623 Berlin, Germany",2010,ECSA
1424,1425,"We report on service development and architecture management practices for an enterprise SOA in the financial domain  First we describe how services are currently developed by one of the largest service providers for the financial domain in Austria  Then we show how we have introduced various practices and tools for architecture management over the last years  We have specifically implemented support for architecture extraction, architecture visualization, automatic architecture analysis, and architecture reviews as part of quality gates in the service development process  Finally, we report on lessons learned both in the area of service development and architecture management as well as on existing challenges and future work in this area    2014 Springer International Publishing Switzerland   10 refs",Service development and architecture management for an enterprise SOA,"['Artificial intelligence', 'Computer science', 'Computers', 'Architecture analysis', 'Architecture management', 'Architecture review', 'Architecture visualization', 'Enterprise Architecture', 'Service-based development', 'SOA', 'Tools for architecture', 'Computer Circuits and Logic Elements', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Kriechbaum, Thomas', '', '', 'Buchgeher, Georg', '', '', 'Weinreich, Rainer']","RACON Software GmbH, Austria  2  Software Competence Center Hagenberg, Austria  3  Johannes Kepler University Linz, Austria",2014,ECSA
1425,1426,"We report on service development and architecture management practices for an enterprise SOA in the financial domain  First we describe how services are currently developed by one of the largest service providers for the financial domain in Austria  Then we show how we have introduced various practices and tools for architecture management over the last years  We have specifically implemented support for architecture extraction, architecture visualization, automatic architecture analysis, and architecture reviews as part of quality gates in the service development process  Finally, we report on lessons learned both in the area of service development and architecture management as well as on existing challenges and future work in this area   10 refs",Service Development and Architecture Management for an Enterprise SOA,"['financial data processing', 'program diagnostics', 'program visualisation', 'service-oriented architecture', 'architecture management', 'enterprise SOA', 'financial domain', 'service providers', 'Austria', 'architecture extraction', 'architecture visualization', 'automatic architecture analysis', 'architecture reviews', 'service development process', 'service-oriented architecture', 'Financial computing', 'Software engineering techniques', 'Diagnostic, testing, debugging and evaluating systems', 'Programming support', 'Software management']","['Kriechbaum, T', '', '', ' Buchgeher, G', '', '', ' Weinreich, R', '', '']","RACON Software GmbH, Austria  2  Software Competence Center Hagenberg, Austria  3  Johannes Kepler Univ  Linz, Linz, Austria",2014,ECSA
1426,1427,"We report on the successful synthesis of ordered mesoporous WO 3 X with a high conductivity comparable to a mesoporous carbon framework  Ordered mesoporous WO3 X was prepared using KIT 6 as a hard template  Some WO3 X particles have negative replica structures of KIT 6 template and the other particles are generated by asymmetric incorporation of phosphotungstic acid inside channels of KIT 6 template  The wall of this mesostructured WO3 X has a single crystalline structure, which might be responsible for its high conductivity  1 76 S cm 1  comparable to ordered mesoporous carbons  3 0 S cm 1   Pt mesoporous WO3 X exhibits a significant tolerance to cycling between 0 6 and 1 3 VNHE in 0 5 M H2SO4 solution, preserving 87  of its initial electrochemical surface area  ECSA  after 1000 cycles  On the contrary, the ECSA of the Pt C decreased significantly with the number of cycles, resulting in loss of 74  of its initial ECSA    2010 The Royal Society of Chemistry   47 refs",Ordered mesoporous WO3 X possessing electronically conductive framework comparable to carbon framework toward long term stable cathode supports for fuel cells,"['Carbon framework', 'Electrochemical surface area', 'Hard templates', 'High conductivity', 'Mesoporous carbon', 'Mesostructured', 'Number of cycles', 'Ordered mesoporous', 'Ordered mesoporous carbon', 'Phosphotungstic acid', 'Single-crystalline structures', 'Fuel Cells']","['Kang, Eunae', '', '', 'An, Sunhyung', '', '', 'Yoon, Songhun', '', '', 'Kim, Jin Kon', '', '', 'Lee, Jinwoo']","Department of Chemical Engineering, Pohang University of Science and Technology, Kyungbuk 790 784, Korea, Republic of  2  Advanced Chemical Technology Division, Korea Research Institute of Chemical Technology  KRICT , Daejeon 305 600, Korea, Republic of",2010,ECSA
1427,1428,"We report the enhanced activity and stability of CuPt bimetallic tubular electrocatalysts through potential cycling in acidic electrolyte  A series of CuPt tubular electrocatalysts with sequential increased lattice ordering and surface atomic fraction of Pt were designed and synthesized by thermal annealing to reveal their improved electrocatalytic properties  These low Pt content electrocatalysts with Pt shell are formed through the thermal annealing and following potential cycling treatment  The catalysts  C1  with a low atomic fraction of Pt on the surface and low lattice ordering in the bulk are treated in acidic electrolyte, resulting in the formation of a Pt shell with relatively low activity and stability  However, the catalysts  C2  with a Pt rich surface and high lattice ordering have a highly enhanced electrochemical surface area after potential cycling via surface roughing  The rough Pt shell of the C2 catalysts is achieved by leaching of surface Cu and the concomitant morphology restructuring  The C2 Pt surface demonstrated highly improved specific and mass activities of 0 8 mA cmPt 2 and 0 232 A mg Pt 1 at 0 9 V for oxygen reduction reaction  ORR , and after 10 000 cycles, the C2 catalysts display almost no loss of the initial electrochemical active surface area  ECSA   Meanwhile, the stability of these CuPt catalysts shows regular change  Moreover, after a long term stability measurement, the ECSA of C2 catalysts can be restored to the initial value after another potential cycling treatment, and thus, this kind of electrocatalyst may be developed as next generation restorable cathode fuel cell catalysts    2012 American Chemical Society   49 refs",Surface composition and lattice ordering controlled activity and durability of cupt electrocatalysts for oxygen reduction reaction,"['Electrolysis', 'Electrolytes', 'Electrolytic reduction', 'Leaching', 'Morphology', 'Platinum', 'Stability', 'Acidic electrolytes', 'Atomic fractions', 'CuPt', 'Electrocatalytic properties', 'Electrochemical active surface areas', 'Electrochemical surface area', 'Fuel cell catalysts', 'Initial values', 'lattice ordering', 'Long term stability', 'Mass activity', 'Oxygen Reduction', 'Oxygen reduction reaction', 'Potential cycling', 'Thermal-annealing', 'Materials Science', 'Classical Physics  Quantum Theory  Relativity', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Systems Science', 'Electrochemistry', 'Electric Batteries and Fuel Cells', 'Precious Metals', 'Ore Treatment', 'Chemistry']","['Cui, Chun Hua', '', '', 'Li, Hui Hui', '', '', 'Liu, Xiao Jing', '', '', 'Gao, Min Rui', '', '', 'Yu, Shu Hong', ' ,', '']","Division of Nanomaterials and Chemistry, Hefei National Laboratory for Physical Sciences at Microscale, Hefei 230026, China  2  Department of Chemistry, National Synchrotron Radiation Laboratory, University of Science and Technology of China, Hefei 230026, China",2012,ECSA
1428,1429,"We suppose a methodology and a middleware to build information systems that support mobile business processes  Our approach allows applications to make use of a self mobilizing code paradigm, i e  the ability of components to be distributed to devices depending on internal and external changes  The methodology is aimed at deriving architectural decisions from the business processes to be supported  We assess processes and their implications for mobility concerns and make use of architecture simulation to check feasibility and quality of service of such applications at design time and runtime    Springer Verlag Berlin Heidelberg 2007   5 refs",From mobile business processes to mobile information systems,"['Middleware', 'Mobile computing', 'Quality of service', 'Software architecture', 'Software design', 'Architecture simulation', 'Design time', 'Mobile business processes', 'Self mobilizing code', 'Telecommunication  Radar, Radio and Television', 'Computer Programming', 'Computer Applications', 'Information Dissemination']","['Gruhn, Volker', '', '', 'Sch fer, Clemens']","Department of Applied Telematics   e Business, University of Leipzig, Germany",2007,ECSA
1429,1430,"We suppose a methodology and a middleware to build information systems that support mobile business processes  Our approach allows applications to make use of a self mobilizing code paradigm, i e  the ability of components to be distributed to devices depending on internal and external changes  The methodology is aimed at deriving architectural decisions from the business processes to be supported  We assess processes and their implications for mobility concerns and make use of architecture simulation to check feasibility and quality of service of such applications at design time and runtime    Springer Verlag Berlin Heidelberg 2007   5 refs",From mobile business processes to mobile information systems,"['Middleware', 'Mobile computing', 'Quality of service', 'Software architecture', 'Software design', 'Architecture simulation', 'Design time', 'Mobile business processes', 'Self mobilizing code', 'Telecommunication  Radar, Radio and Television', 'Computer Programming', 'Computer Applications', 'Information Dissemination']","['Gruhn, Volker', '', '', 'Sch fer, Clemens']","Department of Applied Telematics   e Business, University of Leipzig, Germany",2008,ECSA
1430,1431,"We suppose a methodology and a middleware to build information systems that support mobile business processes  Our approach allows applications to make use of a self mobilizing code paradigm, i e  the ability of components to be distributed to devices depending on internal and external changes  The methodology is aimed at deriving architectural decisions from the business processes to be supported  We assess processes and their implications for mobility concerns and make use of architecture simulation to check feasibility and quality of service of such applications at design time and runtime   5 refs",From mobile business processes to mobile information systems,"['business data processing', 'middleware', 'mobile computing', 'mobile business processes', 'mobile information systems', 'middleware', 'self-mobilizing code paradigm', 'quality of service', 'Business and administrative computing', 'Business and professional IT applications']","['Gruhn, V', '', '', ' Schafer, C', '', '']","Dept  for Appl  Telematics   e Bus , Univ  of Leipzig, Leipzig, Germany",2007,ECSA
1431,1432,"We suppose a methodology and a middleware to build information systems that support mobile business processes  Our approach allows applications to make use of a self mobilizing code paradigm, i e  the ability of components to be distributed to devices depending on internal and external changes  The methodology is aimed at deriving architectural decisions from the business processes to be supported  We assess processes and their implications for mobility concerns and make use of architecture simulation to check feasibility and quality of service of such applications at design time and runtime   5 refs",From mobile business processes to mobile information systems,"['business data processing', 'middleware', 'mobile computing', 'mobile business processes', 'mobile information systems', 'middleware', 'self-mobilizing code paradigm', 'quality of service', 'Business and administrative computing', 'Business and professional IT applications']","['Gruhn, V', '', '', ' Schafer, C', '', '']","Dept  for Appl  Telematics   e Bus , Univ  of Leipzig, Leipzig, Germany",2008,ECSA
1432,1433,"We synthesized Pt catalysts supported on titanium nitride nanoparticles  Pt TiN, Pt loading, 8 9 wt   by a colloidal method  The Pt nanoparticles were found to exhibit a characteristic hexahedral shape with clear faceting, with a lattice structure that was highly oriented to that of the TiN support, indicating a strong interaction between the Pt nanoparticles and the TiN support  We evaluated the electrochemical activity of the Pt TiN both without and with mixing with electronically conducting acetylene black  AB , the latter denoted as Pt TiN   AB  The electrochemically active surface area  ECSA  of Pt in Pt TiN   AB was noticeably larger than that of Pt TiN, reaching 108 m 2g Pt  1 as a maximum, which was close to the geometrically estimated Pt surface area  127 m2 g Pt   1 , based on transmission electron microscopy  By means of a potential step cycling test  0 9 1 3 V vs  RHE  simulating start stop cycles in polymer electrolyte fuel cells  PEFCs , it was found that both of the TiN based catalysts exhibited superior durability compared to commercial Pt catalysts supported on carbon black  Pt CB  or graphitized carbon  Pt GCB , based on the ECSA values  The mass activities at 0 85 V of both of the TiN based catalysts for the oxygen reduction reaction  ORR  were also higher than those for commercial Pt CB or Pt GCB during the potential step cycling test  The superiority of the TiN catalysts must have arisen as a result of the stabilization of the Pt nanoparticles due to their strong interaction and well matched crystallographic structures, as well as the complete elimination of nanopores from the support surfaces    2012 Elsevier Ltd All rights reserved   36 refs",Preparation of titanium nitride supported platinum catalysts with well controlled morphology and their properties relevant to polymer electrolyte fuel cells,"['Acetylene', 'Carbon black', 'Catalyst activity', 'Catalyst supports', 'Durability', 'Electrolytic reduction', 'Nanoparticles', 'Polyelectrolytes', 'Proton exchange membrane fuel cells (PEMFC)', 'Synthesis (chemical)', 'Titanium nitride', 'Transmission electron microscopy', 'Acetylene black', 'Cathode catalyst', 'Clear faceting', 'Colloidal methods', 'Controlled morphology', 'Crystallographic structure', 'Cycling tests', 'Electrochemical activities', 'Electrochemically active surface areas', 'Graphitized carbons', 'Lattice structures', 'Mass activity', 'Nitride nanoparticles', 'Oxygen reduction reaction', 'PEFC', 'Platinum catalysts', 'Polymer electrolyte fuel cells', 'Potential steps', 'Pt catalysts', 'Pt loading', 'Pt nanoparticles', 'Strong interaction', 'Surface area', 'Tin catalyst', 'Solid State Physics', 'Organic Polymers', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Optical Devices and Systems', 'Electric and Magnetic Materials', 'Fuel Cells', 'Precious Metals', 'Strength of Building Materials  Mechanical Properties']","['Kakinuma, Katsuyoshi', '', '', 'Wakasugi, Yuko', '', '', 'Uchida, Makoto', '', '', 'Kamino, Takeo', '', '', 'Uchida, Hiroyuki', '', '', 'Deki, Shigehito', '', '', 'Watanabe, Masahiro']","Fuel Cell Nanomaterials Center, University of Yamanashi, Miyamae 6 43, Kofu 400 0021, Japan  2  Clean Energy Research Center, University of Yamanashi, Takeda 4, Kofu 400 8511, Japan",2012,ECSA
1433,1434,"We use a case study in architectural prototyping as input for presenting a first, tentative, framework describing key concepts and their relationships in architectural prototyping processes    2005 IEEE   7 refs",Towards an operational framework for architectural prototyping,"['Engineering education', 'Engineering research', 'Information technology', 'Software architecture', 'Computer architectural prototyping', 'Computer Programming', 'Computer Applications', 'Education', 'Engineering Research', 'Information Science']","['Christensen, Henrik Baerbak']","Department of Computer Science, University of Aarhus, Aabogade 34, 8200 Aarhus N, Denmark",2005,WICSA
1434,1435,"We use cyclic and rotating disk electrode voltammetry to study glycol based coolant formulations to show that individual constituents have either negligible or significant poisoning effects on the nanoscale Pt carbon catalysts used in proton exchange membrane fuel cells  The base fluid in all these coolants is glycol  1, 3 propanediol , commercially available in a BioGlycol coolant formulation with an ethoxylated nonylphenol surfactant, and azole  and polyol based non ionic corrosion inhibitors  Exposure of a Pt Vulcan carbon electrode to glycol water or glycol water surfactant mixtures causes the loss of Pt electrochemical surface area  ECSA , but the Pt ECSA is fully recovered in clean electrolyte  Only mixtures with the azole corrosion inhibitor cause irreversible losses to the Pt ECSA and oxygen reduction reaction  ORR  activity  The Pt ECSA and ORR activity can only be recovered to within 70  of its initial values after aggressive voltammetric cycling to 1 50 V after azole poisoning  When poisoned with a glycol mixture containing the polyol corrosion inhibitor instead, the Pt ECSA and ORR activity is completely recovered by exposure to a clean electrolyte  The results suggest that prior to incorporation in a fuel cell, voltammetric evaluation of the constituents of coolant formulations is worthwhile    2012 Elsevier B V   22 refs",Effect of glycol based coolants on the suppression and recovery of platinum fuel cell electrocatalysts,"['Catalyst poisoning', 'Corrosion inhibitors', 'Electrocatalysts', 'Electrolytes', 'Electrolytic reduction', 'Fuel cells', 'Glycols', 'Mixtures', 'Phenols', 'Platinum', 'Proton exchange membrane fuel cells (PEMFC)', 'Recovery', 'Rotating disks', 'Surface active agents', 'Voltammetry', '1 ,3 propanediol', 'Electrochemical surface area', 'Glycol-water', 'Initial values', 'Irreversible loss', 'Nano scale', 'Nonionic', 'Nonylphenols', 'ORR', 'Oxygen reduction reaction', 'PEMFCs', 'Poisoning effects', 'Pt/Vulcan carbon', 'RDE', 'Rotating disk electrode voltammetry', 'Voltammetric', 'Organic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Operations', 'Chemical Reactions', 'Electric Variables Measurements', 'Fuel Cells', 'Nuclear Reactors', 'Machine Components', 'Precious Metals', 'Metallurgy and Metallography', 'Electric Batteries and Fuel Cells']","['Garsany, Yannick', ' ,', '', ' Dutta, Sreya', '', '', 'Swider Lyons, Karen E', '', '']","Excet Inc , Springfield, VA 22151, United States  2  Dynalene Inc , Whitehall, PA 18052, United States  3  US Naval Research Laboratory, Chemistry Division, 4555 Overlook Avenue, SW, Washington, DC 20375, United States",2012,ECSA
1435,1436,"Web Services  WS  are an alternative to the lack of interoperability of applications, to facilitate integration via Service Oriented Architecture  SOA   The main goal of this paper is to establish a correspondence between three WS related standards, WSA  Web Services Architecture  representing industrial and marketing requirements, ISO IEC 9126 1 quality model to specify standard quality requirements, and ISO IEC 13236 to specify the measurement model for WS based applications  A domain analysis process is defined to provide guidelines to integrate the information of the three standards, facilitating the automatic generation of standardized quality of service contracts between clients and providers    2008 Springer Verlag Berlin Heidelberg   8 refs",Web services domain analysis based on quality standards,"['Architecture', 'Contracts', 'Information services', 'Quality control', 'Software architecture', 'Standards', 'Telecommunication services', 'Web services', 'World Wide Web', 'Domain analysis', 'ISO/IEC 13236', 'ISO/IEC 9126-1', 'Quality requirements', 'Web-services architecture', 'Management', 'Information Services', 'Legal Aspects', 'Codes and Standards', 'Computer Applications', 'Quality Assurance and Control', 'Computer Programming', 'Telephone Systems and Related Technologies  Line Communications', 'Optical Communication', 'Telecommunication  Radar, Radio and Television', 'Buildings and Towers', 'Computer Software, Data Handling and Applications']","['Losavio, F', '', '', ' Matteo, A', '', '', ' Rahamut, R', '', '']","Centro ISYS, Escuela de Computaci n, Universidad Central de Venezuela, Apdo  47567, Los Chaguaramos 1041 A, Caracas, Venezuela",2008,ECSA
1436,1437,"Web Services based technologies have emerged as a technological alternative for computational web portals  Facilitating access to distributed resources through web interfaces while simultaneously ensuring security is one of the main goals in most of the currently existing manifold tools and frameworks  OpenCF, the Open Source Computational Framework that we have developed, shares these objectives and adds others, like enforced portability, genericity, modularity and compatibility with a wide range of High Performance Computing Systems  OpenCF has been implemented using lightweight technologies  Apache   PHP , resulting in a robust framework ready to run out of the box that is compatible with standard security requirements    Springer Verlag Berlin Heidelberg 2007   18 refs",Lightweight web services for high performace computing,"['Computational methods', 'Distributed computer systems', 'Portals', 'Technology transfer', 'Computational web portals', 'Web Services-based technologies', 'Telecommunication  Radar, Radio and Television', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Digital Computers and Systems', 'Impact of Technology on Society', 'Information Services']","['Santos, Adri n', '', '', 'Almeida, Francisco', '', '', 'Blanco, Vicente']","Dpto  Estad stica, I O  y Computaci n Universidad de La Laguna, Spain",2007,ECSA
1437,1438,"Web Services based technologies have emerged as a technological alternative for computational web portals  Facilitating access to distributed resources through web interfaces while simultaneously ensuring security is one of the main goals in most of the currently existing manifold tools and frameworks  OpenCF, the Open Source Computational Framework that we have developed, shares these objectives and adds others, like enforced portability, genericity, modularity and compatibility with a wide range of High Performance Computing Systems  OpenCF has been implemented using lightweight technologies  Apache   PHP , resulting in a robust framework ready to run out of the box that is compatible with standard security requirements    Springer Verlag Berlin Heidelberg 2007   18 refs",Lightweight web services for high performace computing,"['Computational methods', 'Distributed computer systems', 'Portals', 'Technology transfer', 'Computational web portals', 'Web Services-based technologies', 'Telecommunication  Radar, Radio and Television', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory', 'Digital Computers and Systems', 'Impact of Technology on Society', 'Information Services']","['Santos, Adri n', '', '', 'Almeida, Francisco', '', '', 'Blanco, Vicente']","Dpto  Estad stica, I O  y Computaci n Universidad de La Laguna, Spain",2008,ECSA
1438,1439,"Web Services based technologies have emerged as a technological alternative for computational web portals  Facilitating access to distributed resources through web interfaces while simultaneously ensuring security is one of the main goals in most of the currently existing manifold tools and frameworks  OpenCF, the Open Source Computational Framework that we have developed, shares these objectives and adds others, like enforced portability, genericity, modularity and compatibility with a wide range of High Performance Computing Systems  OpenCF has been implemented using lightweight technologies  Apache   PHP , resulting in a robust framework ready to run out of the box that is compatible with standard security requirements   18 refs",Lightweight Web services for high performance computing,"['portals', 'public domain software', 'security of data', 'Web services', 'lightweight Web services', 'Web services-based technologies', 'computational Web portals', 'distributed resources', 'Web interfaces', 'open source computational framework', 'high performance computing systems', 'OpenCF', 'Distributed systems software', 'Data security']","['Santos, A', '', '', ' Almeida, F', '', '', ' Blanco, V', '', '']","Dipt  Estadi stica, Comput  Univ  de La Laguna, La Laguna, Spain",2007,ECSA
1439,1440,"Web Services based technologies have emerged as a technological alternative for computational web portals  Facilitating access to distributed resources through web interfaces while simultaneously ensuring security is one of the main goals in most of the currently existing manifold tools and frameworks  OpenCF, the Open Source Computational Framework that we have developed, shares these objectives and adds others, like enforced portability, genericity, modularity and compatibility with a wide range of High Performance Computing Systems  OpenCF has been implemented using lightweight technologies  Apache   PHP , resulting in a robust framework ready to run out of the box that is compatible with standard security requirements   18 refs",Lightweight Web services for high performance computing,"['portals', 'public domain software', 'security of data', 'Web services', 'lightweight Web services', 'Web services-based technologies', 'computational Web portals', 'distributed resources', 'Web interfaces', 'open source computational framework', 'high performance computing systems', 'OpenCF', 'Distributed systems software', 'Data security']","['Santos, A', '', '', ' Almeida, F', '', '', ' Blanco, V', '', '']","Dipt  Estadi stica, Comput  Univ  de La Laguna, La Laguna, Spain",2008,ECSA
1440,1441,"Web Services play an important role in the SOA paradigm, as they allow services to be selected on the fly to build applications out of existing components  In this scenario, the BPEL notation can be used as an orchestration language which allows the user to describe interactions with Web Services in a standard way  The performance of a BPEL workflow is a very important factor for deciding which components must be selected, or to choose whether a given sequence of interactions can provide the requested quality of service  Due to its very dynamic nature, workflow performance evaluation can not be accomplished using traditional, heavy weight techniques  In this paper we present a multi view approach for the performance prediction of service based applications encompassing both users and service provider s  perspectives  As a first step towards the realization of this integrated framework we present an efficient approach for performance assessment of Web Service workflows described using the BPEL notation  Starting from annotated BPEL and WSDL specifications, we derive performance bounds on response time and throughput  In such a way users are able to assess the efficiency of a BPEL workflow, while service provider s  can perform sizing studies or estimate performance gains of alternative upgrades to existing systems  To bring this approach to fruition we developed a prototype tool called bpel2qnbound, using which we analyze a simple case study    2008 Springer Verlag Berlin Heidelberg   27 refs",Performance prediction of Web Service workflows,"['Ad hoc networks', 'Computer software selection and evaluation', 'Flow interactions', 'Forecasting', 'Information services', 'Management', 'Modernization', 'Software architecture', 'Specifications', 'Standards', 'Web services', 'World Wide Web', 'Case studies', 'Dynamic natures', 'Existing systems', 'Integrated frameworks', 'International conferences', 'Multi views', 'On-the-fly', 'Performance Assessment', 'Performance bounds', 'Performance evaluation', 'Performance gains', 'Performance predictions', 'Prototype tools', 'Quality of softwares', 'Response time', 'Service provider', 'Service-based', 'Management', 'Information Services', 'Codes and Standards', 'Engineering Profession', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Data Communication, Equipment and Techniques', 'Telecommunication  Radar, Radio and Television', 'Fluid Flow, General']","['Marzolla, Moreno', '', '', 'Mirandola, Raffaela']","INFN Sezione di Padova, via Marzolo 8, Padova 35131, Italy  2  Dip  di Elettronica e Informazione, Politecnico di Milano, via Ponzio 34 5, Milano 20133, Italy",2007,QoSA
1441,1442,"Web Services play an important role in the Service oriented Architecture paradigm, as they allow services to be selected on the fly to build applications out of existing components  In this scenario, the Business Process Execution Language notation can be used as an orchestration language which allows the user to describe interactions with Web Services in a standard way  The performance of a BPEL workflow is a very important factor for deciding which components must be selected, or to choose whether a given sequence of interactions can provide the requested quality of service  Due to its very dynamic nature, workflow performance evaluation can not be accomplished using traditional, heavy weight techniques  In this paper we present a multi view approach for the performance prediction of service based applications encompassing both users and service provider s  perspectives  As a first step towards the realization of this integrated framework we present an efficient approach for performance assessment of Web Service workflows described using the BPEL notation  Starting from annotated BPEL and WSDL specifications, we derive performance bounds on response time and throughput  In such a way users are able to assess the efficiency of a BPEL workflow, while service provider s  can perform sizing studies or estimate performance gains of alternative upgrades to existing systems  To bring this approach to fruition we developed a prototype tool called bpel2qnbound, using which we analyze a simple case study   27 refs",Performance prediction of Web Service workflows,"['high level languages', 'software performance evaluation', 'Web services', 'performance prediction', 'Web service workflows', 'service-oriented architecture paradigm', 'Business Process Execution Language', 'BPEL workflow', 'quality of service', 'workflow performance evaluation', 'multiview approach', 'integrated framework', 'WSDL specification', 'Distributed systems software', 'Software performance evaluation', 'High level languages']","['Marzolla, M', '', '', ' Mirandola, R', '', '']","INFN Sezione di Padova, Padova, Italy  2  Dip  di Elettron  e Inf , Politec  di Milano, Milan, Italy",2008,QoSA
1442,1443,"Well dispersed Pd nanoparticles supported on low defect graphene  LDG  sheets are successfully prepared by a soft chemical method  Our approach can efficiently avoid damaging the graphene framework in the composite because it does not require cumbersome oxidation of graphite in advance and needs no subsequent reduction of the LDG sheets due to the lower oxidation degree  Morphology observations show that the Pd nanoparticles with diameters ranging from 1 to 5 nm are evenly deposited on graphene sheets  Raman spectroscopic analysis results reveals that there is only a very small amount of graphene defects in the hybrid  No matter whether it is for a direct formic acid fuel cell  DFAFC  or direct methanol fuel cell  DMFC , the LDG supported Pd catalyst has very large electrochemically active surface area  ECSA  values, more than twice as large as that for the reduced graphene oxide, or five times the commercial XC 72 carbon  The forward peak current measurements show similar results  The excellent catalytic performance of LDG Pd can be attributed to the preserved pristine graphene structure, which not only provides a lot of surface area for the deposition of nanoparticles, but also allows for electrical conductivity and stability in the composite    2012 The Royal Society of Chemistry   94 refs",Pd nanoparticles supported on low defect graphene sheets  For use as high performance electrocatalysts for formic acid and methanol oxidation,"['Catalyst activity', 'Direct methanol fuel cells (DMFC)', 'Electric conductivity', 'Electrocatalysts', 'Formic acid', 'Formic acid fuel cells (FAFC)', 'Methanol', 'Nanoparticles', 'Oxidation', 'Palladium', 'Raman spectroscopy', 'Catalytic performance', 'Direct formic acid fuel cells', 'Electrical conductivity', 'Electrochemically active surface areas', 'Graphene sheets', 'Methanol Oxidation', 'Oxidation degree', 'Pd catalyst', 'PD nano particle', 'Reduced graphene oxides', 'Soft chemical method', 'Subsequent reduction', 'Surface area', 'Well-dispersed', 'Solid State Physics', 'Organic Compounds', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Chemical Reactions', 'Nanotechnology', 'Light Optics', 'Electric and Magnetic Materials', 'Fuel Cells', 'Electricity  Basic Concepts and Phenomena', 'Precious Metals']","['Huang, Huajie', '', '', 'Wang, Xin']","Key Laboratory of Soft Chemistry and Functional Materials, Nanjing University of Science and Technology, Ministry of Education, Nanjing 210094, China",2012,ECSA
1443,1444,"When an application must evolve to cope with new context and user requirements, integrating new functionalities into its software architecture is necessary  The architect has thus to manually modify the architecture description, which is often tedious and error prone  In this paper, we propose FIESTA, a generic framework for automatically integrating new functionalities into an architecture description  Our approach is inspired by TranSAT, an integration framework  However, TranSAT is dedicated to a specific architecture description language  ADL  while our approach is ADL independent  We have performed a domain analysis, studying for many ADLs how to integrate new functionalities  Based on this analysis, we have defined a generic ADL model to manipulate and reason about architectural elements that are involved in integration  Furthermore, we have developed a generic integration engine    Springer Verlag Berlin Heidelberg 2007   21 refs",FIESTA  A generic framework for integrating new functionalities into software architectures,"['Computer programming languages', 'Functional analysis', 'Mathematical models', 'Architecture description', 'Generic framework', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Mathematics']","['Waignier, Guillaume', '', '', 'Le Meur, Anne Fran oise', '', '', 'Duchien, Laurence']","LIFL, INRIA Team ADAM, Universit  des Sciences et Technologies de Lille, 59655 Villeneuve d Ascq, France",2007,ECSA
1444,1445,"When an application must evolve to cope with new context and user requirements, integrating new functionalities into its software architecture is necessary  The architect has thus to manually modify the architecture description, which is often tedious and error prone  In this paper, we propose FIESTA, a generic framework for automatically integrating new functionalities into an architecture description  Our approach is inspired by TranSAT, an integration framework  However, TranSAT is dedicated to a specific architecture description language  ADL  while our approach is ADL independent  We have performed a domain analysis, studying for many ADLs how to integrate new functionalities  Based on this analysis, we have defined a generic ADL model to manipulate and reason about architectural elements that are involved in integration  Furthermore, we have developed a generic integration engine    Springer Verlag Berlin Heidelberg 2007   21 refs",FIESTA  A generic framework for integrating new functionalities into software architectures,"['Computer programming languages', 'Functional analysis', 'Mathematical models', 'Architecture description', 'Generic framework', 'Computer Programming', 'Computer Programming Languages', 'Computer Applications', 'Mathematics']","['Waignier, Guillaume', '', '', 'Le Meur, Anne Fran oise', '', '', 'Duchien, Laurence']","LIFL, INRIA Team ADAM, Universit  des Sciences et Technologies de Lille, 59655 Villeneuve d Ascq, France",2008,ECSA
1445,1446,"When an application must evolve to cope with new context and user requirements, integrating new functionalities into its software architecture is necessary  The architect has thus to manually modify the architecture description, which is often tedious and error prone  In this paper, we propose FIESTA, a generic framework for automatically integrating new functionalities into an architecture description  Our approach is inspired by TranSAT, an integration framework  However, TranSAT is dedicated to a specific architecture description language  ADL  while our approach is ADL independent  We have performed a domain analysis, studying for many ADLs how to integrate new functionalities  Based on this analysis, we have defined a generic ADL model to manipulate and reason about architectural elements that are involved in integration  Furthermore, we have developed a generic integration engine   21 refs",FIESTA  a generic framework for integrating new functionalities into software architectures,"['formal specification', 'software architecture', 'FIESTA framework', 'software architectures', 'context requirements', 'user requirements', 'ADL model', 'architecture description language', 'abstract specification', 'Software engineering techniques', 'Formal methods']","['Waignier, G', '', '', ' Le Meur, A', 'F', '', '', ' Duchien, L', '', '']","INRIA, Univ  des Sci  et Technol  de Lille, Villeneuve d Ascq, France",2007,ECSA
1446,1447,"When an application must evolve to cope with new context and user requirements, integrating new functionalities into its software architecture is necessary  The architect has thus to manually modify the architecture description, which is often tedious and error prone  In this paper, we propose FIESTA, a generic framework for automatically integrating new functionalities into an architecture description  Our approach is inspired by TranSAT, an integration framework  However, TranSAT is dedicated to a specific architecture description language  ADL  while our approach is ADL independent  We have performed a domain analysis, studying for many ADLs how to integrate new functionalities  Based on this analysis, we have defined a generic ADL model to manipulate and reason about architectural elements that are involved in integration  Furthermore, we have developed a generic integration engine   21 refs",FIESTA  a generic framework for integrating new functionalities into software architectures,"['formal specification', 'software architecture', 'FIESTA framework', 'software architectures', 'context requirements', 'user requirements', 'ADL model', 'architecture description language', 'abstract specification', 'Software engineering techniques', 'Formal methods']","['Waignier, G', '', '', ' Le Meur, A', 'F', '', '', ' Duchien, L', '', '']","INRIA, Univ  des Sci  et Technol  de Lille, Villeneuve d Ascq, France",2008,ECSA
1447,1448,"When architecting software systems, architects  with the contribution of other stakeholders  make several design decisions  These decisions could be related to the selection of the right components and connectors, the architectural style to be used, the distribution of various components, the deployment of software components into hardware devices, etc  Many methods have been proposed by the research community to help documenting several aspects of architectural design decisions including design alternatives, stakeholder concerns, decisions and the rationale for making such decisions and enhancing the decision making process  Still, very little has been done to truly understand how architectural design decisions are made by group of practitioners, what information is documented, the tools used for helping documenting and how conflicts are managed  This study, by looking at principles and techniques for group decision making coming from other disciplines, aims to understand  a  how practitioners make group decisions in architecting software systems, b  how practiced group decision making techniques relate to state of the art techniques, and c  challenges companies face when making architecture related group decisions  The study is conducted by using a questionnaire distributed to practitioners and researchers involved in group design decisions in industry  The results are used to drive some recommendations to improve the current group design decision process    2014 IEEE   35 refs",A study on group decision making in software architecture,"['Architectural design', 'C (programming language)', 'Computer software', 'Software architecture', 'Architectural design decisions', 'Decision making process', 'Group decision-making', 'Group Design', 'Research communities', 'State of the practice', 'State-of-the-art techniques', 'Study', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Management']","['Rekhav, V', 'Smrithi', '', '', 'Muccini, Henry']","Amrita Vishwa Vidyapeetham, India  2  University of l Aquila, DISIM Department, Italy",2014,WICSA
1448,1449,"When changing software systems, significant effort is spent on locating the architectural elements to be changed, how they relate to the existing and new requirements, and what decisions have led to the current state of the parts of the system to evolve  Model based approaches have proposed formal metamodels to capture different aspects of the system, e g  requirements specified in use cases and architectural models for the component design  Existing approaches still lack in an easy to use way to combine information from different models  We carried out a case study evolving the CoCoME software observing what are major points for improvement  In this paper, we discuss the results of the case study giving a list of requirements for tools or approaches supporting architecture centric and model based software evolution  Finally, we present our graph based approach for integrated views which can help in overcoming some of the current limitations  Copyright 2012 ACM   14 refs",A case study on co evolution of software artifacts using integrated views,"['Research', 'Architectural element', 'Architectural models', 'Co-evolution', 'Component design', 'Current limitation', 'Graph-based', 'Meta model', 'Model based approach', 'Software artifacts', 'Software Evolution', 'Software systems', 'Computer Programming', 'Engineering Research']","['K ster, Martin', '', '', 'Trifu, Mircea']","FZI Research Center for Information Technologies, Haid und Neu Str  10 14, 76131 Karlsruhe, Germany",2012,ECSA
1449,1450,"When changing software systems, significant effort is spent on locating the architectural elements to be changed, how they relate to the existing and new requirements, and what decisions have led to the current state of the parts of the system to evolve  Model based approaches have proposed formal metamodels to capture different aspects of the system, e g  requirements specified in use cases and architectural models for the component design  Existing approaches still lack in an easy to use way to combine information from different models  We carried out a case study evolving the CoCoME software observing what are major points for improvement  In this paper, we discuss the results of the case study giving a list of requirements for tools or approaches supporting architecture centric and model based software evolution  Finally, we present our graph based approach for integrated views which can help in overcoming some of the current limitations  Copyright 2012 ACM   14 refs",A case study on co evolution of software artifacts using integrated views,"['Research', 'Architectural element', 'Architectural models', 'Co-evolution', 'Component design', 'Current limitation', 'Graph-based', 'Meta model', 'Model based approach', 'Software artifacts', 'Software Evolution', 'Software systems', 'Computer Programming', 'Engineering Research']","['K ster, Martin', '', '', 'Trifu, Mircea']","FZI Research Center for Information Technologies, Haid und Neu Str  10 14, 76131 Karlsruhe, Germany",2012,WICSA
1450,1451,"When constructing software systems, software architects must identify and evaluate many competing design options and document the rationale behind any selections made  Two supporting concepts are pattern languages and architectural decision models  Unfortunately, both concepts only provide partial support  Extensive upfront education is needed for practitioners to be in command of the full pattern literature relevant in their field  retrospective architectural decision modeling is viewed as a painful extra responsibility without immediate gains  In this paper, we combine pattern languages and reusable architectural decision models into a design method that is both comprehensive and comprehensible  Our design method identifies the required decisions in requirements models systematically, gives domainspecific pattern selection advice, and provides traceability from platform independent patterns to platform specific decisions  We validate our approach by applying it to enterprise applications as an exemplary application genre and a SOA case study from the finance industry    2008 IEEE   28 refs",Combining pattern languages and reusable architectural decision models into a comprehensive and comprehensible design method,"['Computer software', 'Computer software reusability', 'Linguistics', 'Software architecture', 'Case studies', 'Decision modeling', 'Design methods', 'Design options', 'Enterprise applications', 'Pattern languages', 'Pattern selection', 'Requirements modeling', 'Software architects', 'Software systems', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Information Dissemination']","['Zimmermann, Olaf', '', '', 'Zdun, Uwe', '', '', 'Gschwind, Thomas', '', '', 'Leymann, Frank']","IBM Research GmbH, Zurich Research Laboratory, R schlikon, Switzerland  2  Information Systems Institute, Vienna University of Technology, Vienna, Austria  3  Institute of Architecture of Application Systems, University of Stuttgart, Germany",2008,WICSA
1451,1452,"When designing information systems, architects must often deal with many requirements and constraints  Also, many parties may collaborate during design phases  Therefore, the rationale and decisions sustaining the architecture model can be lost if not documented appropriately  However, in order to understand and maintain these systems, we need to have a clear picture of the rationale and decisions behind their designs  To tackle this problem, we propose a design approach combining architecturally significant requirement modelling and architecture modelling  Constraint and Requirement are attached to architectural constructs  And any modification in the architecture model resulting from a decision made in the requirement model is recorded as a model transformation  We present both modelling formalisms and explain how we combine them to increase the traceability of the rationale, design decisions and alternatives as well as the maintainability of information systems  Copyright   2011 ACM   38 refs","Rationale, decisions and alternatives traceability for architecture design","['Design', 'Information systems', 'Maintainability', 'Architectural alternative', 'Architecturally signifficant requirement', 'Architecture description language', 'Design decision', 'Traceability', 'Structural Design', 'Computer Programming', 'Information Dissemination', 'Maintenance']","['Gilson, Fabian', '', '', 'Englebert, Vincent']","PReCISE Research Center, Faculty of Computer Science, University of Namur, Belgium",2011,ECSA
1452,1453,"When developing a software system, its architecture must be considered so that it can be understood, updated, and improved  In general, considering the architectural artefacts is not enough  The reasons, assumptions and justifications bore in mind by the architects during the architecture design stage must be also known  Nevertheless, not all aspects analysed during the design process can be identified, especially all those alternatives that were evaluated and rejected  In the present contribution, a model to represent the rationale generated by architects during the architectural design is proposed so that it can last over time and it can be retrieved, analysed and reused whenever necessary  The model includes concepts representing architectural artefacts, reasons, assumptions, and decisions and reasoning elements status    2009 IEEE   13 refs",A model to represent architectural design rationale,"['Architectural design', 'Computer software', 'Architecture designs', 'Design process', 'Design rationale', 'ITS architecture', 'Software systems', 'Buildings and Towers', 'Structural Design, General', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Carignano, Mar a Celeste', '', '', 'Gonnet, Silvio', '', '', 'Leone, Horacio']","INGAR CIDISI, UTN, Santa Fe, Argentina  2  INGAR CIDISI, UTN CONICET, Santa Fe, Argentina",2009,ECSA
1453,1454,"When developing a software system, its architecture must be considered so that it can be understood, updated, and improved  In general, considering the architectural artefacts is not enough  The reasons, assumptions and justifications bore in mind by the architects during the architecture design stage must be also known  Nevertheless, not all aspects analysed during the design process can be identified, especially all those alternatives that were evaluated and rejected  In the present contribution, a model to represent the rationale generated by architects during the architectural design is proposed so that it can last over time and it can be retrieved, analysed and reused whenever necessary  The model includes concepts representing architectural artefacts, reasons, assumptions, and decisions and reasoning elements status    2009 IEEE   13 refs",A model to represent architectural design rationale,"['Architectural design', 'Computer software', 'Architecture designs', 'Design process', 'Design rationale', 'ITS architecture', 'Software systems', 'Buildings and Towers', 'Structural Design, General', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Carignano, Mar a Celeste', '', '', 'Gonnet, Silvio', '', '', 'Leone, Horacio']","INGAR CIDISI, UTN, Santa Fe, Argentina  2  INGAR CIDISI, UTN CONICET, Santa Fe, Argentina",2009,WICSA
1454,1455,"When developing a software system, its architecture must be considered so that it can be understood, updated, and improved  In general, considering the architectural artefacts is not enough  The reasons, assumptions and justifications bore in mind by the architects during the architecture design stage must be also known  Nevertheless, not all aspects analysed during the design process can be identified, especially all those alternatives that were evaluated and rejected  In the present contribution, a model to represent the rationale generated by architects during the architectural design is proposed so that it can last over time and it can be retrieved, analysed and reused whenever necessary  The model includes concepts representing architectural artefacts, reasons, assumptions, and decisions and reasoning elements status    2009 IEEE   13 refs",A model to represent architectural design rationale,"['Architectural design', 'Computer software', 'Architecture designs', 'Design process', 'Design rationale', 'ITS architecture', 'Software systems', 'Buildings and Towers', 'Structural Design, General', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Carignano, Mar a Celeste', '', '', 'Gonnet, Silvio', '', '', 'Leone, Horacio']","INGAR CIDISI, UTN, Santa Fe, Argentina  2  INGAR CIDISI, UTN CONICET, Santa Fe, Argentina",2011,WICSA
1455,1456,"When developing and deploying applications in the cloud, architects face the challenge of conciliating architectural de cisions with the options and restrictions imposed by the cho sen cloud provider  An architectural decision can be seen as a two step process  selecting architectural tactics to pro mote quality attributes and choosing design alternatives to implement those tactics  Available design alternatives are limited by the o er of the cloud provider  When con guring the cloud platform and its services as directed by the chosen tactics, the architect must be mindful of conicts among the available alternatives  These trade o s amongst the desired quality attributes can be di cult to detect, understand and ultimately solve  In this paper, we consider the case of Je lastic, a particular cloud platform provider, to illustrate  1  the modeling of architectural tactics and their corresponding design alternatives using cloud con guration options, and 2  a process that exploits these models to determine which op tions to use in order to implement a combination of tactics  Furthermore, we present an analysis for this cloud provider that explains which combinations of tactics and con gura tions lead to trade o s  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   18 refs",Architectural tactics support in cloud computing providers  The jelastic case,"['Cloud computing', 'Commerce', 'Architectural decision', 'Architectural Tac-tics', 'Cloud platforms', 'Cloud providers', 'Design alternatives', 'Feature modeling', 'Quality attributes', 'Two-step process', 'Buildings and Towers', 'Digital Computers and Systems', 'Industrial Economics']","['Chavarriaga, Jaime', '', '', 'Noguera, Carlos', '', '', 'Casallas, Rubby', '', '', 'Jonckers, Viviane']","Universidad de Los Andes, Vrije Universiteit Brussel, Belgium  2  Vrije Universiteit Brussel, Belgium  3  Universidad de Los Andes, Colombia",2014,QoSA
1456,1457,"When engineering complex and distributed software and hardware systems  increasingly used in many sectors, such as manufacturing, aerospace, transportation, communication, energy and health care , dependability has became a must, since failures can have economics consequences and can also endanger human life  Software Architectures  SA  can help improving the overall system dependability, providing a system blueprint that can be validated and that can guide all phases of the system development  Even if much work has been done on this direction, three important topics require major investigation  how different analysis techniques can be integrated together, how results obtained with SA based analysis can be related to requirements and coding, and how to integrate new methodologies in the industrial software development life cycle  In this paper we propose an architecture centric analysis process which allows formal analysis driven by model based architectural specifications  This analysis process satisfies the industrial requirements, since it is tool supported and based on semi formal  UML based  specifications    2006 Springer Verlag   33 refs",A practical architecture centric analysis process,"['Computer software selection and evaluation', 'Simulated annealing', 'Specifications', 'Analysis process', 'Architectural specifications', 'Different analysis techniques', 'Distributed software', 'Formal analysis', 'Hardware system', 'Human lives', 'Industrial requirements', 'Industrial software development', 'Model-based', 'System dependability', 'System development', 'Mathematics', 'Management', 'Codes and Standards', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Heat Treatment Processes']","['Bucchiarone, Antonio', ' ,', '', ' Muccini, Henry', '', '', 'Pelliccione, Patrizio']","Istituto di Scienza e Tecnologie dell Informazione A  Faedo  ISTI CNR , Area Della Ricerca CNR di Pisa, 56100 Pisa, Italy  2  University of L Aquila, Computer Science Department, Via Vetoio 1, 67010 L Aquila, Italy  3  IMT Graduate School, Via San Micheletto, 3, 55100 Lucca, Italy",2006,QoSA
1457,1458,"When engineering complex and distributed software and hardware systems  increasingly used in many sectors, such as manufacturing, aerospace, transportation, communication, energy and health care , dependability has became a must, since failures can have economics consequences and can also endanger human life  Software architectures  SA  can help improving the overall system dependability, providing a system blueprint that can be validated and that can guide all phases of the system development  Even if much work has been done on this direction, three important topics require major investigation  how different analysis techniques can be integrated together, how results obtained with SA based analysis can be related to requirements and coding, and how to integrate new methodologies in the industrial software development life cycle  In this paper we propose an architecture centric analysis process which allows formal analysis driven by model based architectural specifications  This analysis process satisfies the industrial requirements, since it is tool supported and based on semi formal  UML based  specifications   33 refs",A practical architecture centric analysis process,"['formal specification', 'formal verification', 'program diagnostics', 'software architecture', 'software reliability', 'Unified Modeling Language', 'architecture-centric analysis', 'software engineering', 'software architecture', 'system dependability', 'system blueprint', 'system development', 'formal analysis', 'model-based architectural specification', 'semiformal specification', 'UML-based specification', 'Diagnostic, testing, debugging and evaluating systems', 'Software engineering techniques', 'Formal methods']","['Bucchiarone, A', '', '', ' Muccini, H', ' Pelliccione, P']","Ist  di Sci  e Tecnol  dell Inf , Pisa, Italy",2006,QoSA
1458,1459,"When increasing the complexity of software systems new techniques allowing for their adequate manipulation are required  In the last ten years, AOSD has been proposed to manage the systems complexity by considering concepts of AO programming extended along the software life cycle  The suitability of the existence of an AO architectural design appears when AO concepts are extended to the whole life cycle  In order to adequately specify the AO design, Aspect Oriented ADLs are needed  In this paper AspectLEDA, an ADL to support architectural descriptions treating aspects, is presented    Springer Verlag Berlin Heidelberg 2007   4 refs",AspectLEDA  Extending an ADL with aspectual concepts,"['Architectural design', 'Computer software selection and evaluation', 'Object oriented programming', 'Requirements engineering', 'Software design', 'Architectural descriptions', 'Aspect-Oriented ADL', 'Computer Programming', 'Computer Applications']","['Navasa, Amparo', '', '', 'P rez, Miguel A', '', '', ' Murillo, Juan M', '', '']","Quercus Software Engineering Group, Department of Computer Science, University of Extremadura, Spain",2007,ECSA
1459,1460,"When increasing the complexity of software systems new techniques allowing for their adequate manipulation are required  In the last ten years, AOSD has been proposed to manage the systems complexity by considering concepts of AO programming extended along the software life cycle  The suitability of the existence of an AO architectural design appears when AO concepts are extended to the whole life cycle  In order to adequately specify the AO design, Aspect Oriented ADLs are needed  In this paper AspectLEDA, an ADL to support architectural descriptions treating aspects, is presented    Springer Verlag Berlin Heidelberg 2007   4 refs",AspectLEDA  Extending an ADL with aspectual concepts,"['Architectural design', 'Computer software selection and evaluation', 'Object oriented programming', 'Requirements engineering', 'Software design', 'Architectural descriptions', 'Aspect-Oriented ADL', 'Computer Programming', 'Computer Applications']","['Navasa, Amparo', '', '', 'P rez, Miguel A', '', '', ' Murillo, Juan M', '', '']","Quercus Software Engineering Group, Department of Computer Science, University of Extremadura, Spain",2008,ECSA
1460,1461,"When increasing the complexity of software systems new techniques allowing for their adequate manipulation are required  In the last ten years, AOSD has been proposed to manage the systems complexity by considering concepts of AO programming extended along the software life cycle  The suitability of the existence of an AO architectural design appears when AO concepts are extended to the whole life cycle  In order to adequately specify the AO design, Aspect Oriented ADLs are needed  In this paper AspectLEDA, an ADL to support architectural descriptions treating aspects, is presented   4 refs",AspectLEDA  extending an ADL with aspectual concepts,"['high level languages', 'object-oriented methods', 'software architecture', 'AspectLEDA', 'aspectual concept', 'software system complexity', 'aspect oriented software development', 'systems complexity', 'software life cycle', 'aspect orientation architectural design', 'High level languages', 'Software engineering techniques', 'Formal methods']","['Navasa, A', '', '', ' Perez, M A', '', '', ' Murillo, J M', '', '']","Dept  of Comput  Sci , Univ  of Extremadura, Caceres, Spain",2007,ECSA
1461,1462,"When increasing the complexity of software systems new techniques allowing for their adequate manipulation are required  In the last ten years, AOSD has been proposed to manage the systems complexity by considering concepts of AO programming extended along the software life cycle  The suitability of the existence of an AO architectural design appears when AO concepts are extended to the whole life cycle  In order to adequately specify the AO design, Aspect Oriented ADLs are needed  In this paper AspectLEDA, an ADL to support architectural descriptions treating aspects, is presented   4 refs",AspectLEDA  extending an ADL with aspectual concepts,"['high level languages', 'object-oriented methods', 'software architecture', 'AspectLEDA', 'aspectual concept', 'software system complexity', 'aspect oriented software development', 'systems complexity', 'software life cycle', 'aspect orientation architectural design', 'High level languages', 'Software engineering techniques', 'Formal methods']","['Navasa, A', '', '', ' Perez, M A', '', '', ' Murillo, J M', '', '']","Dept  of Comput  Sci , Univ  of Extremadura, Caceres, Spain",2008,ECSA
1462,1463,"When modeling recurring architectural decisions for reuse, the boundaries of the knowledge asset under construction must be defined in a scoping step  This paper introduces and combines two supporting concepts for this step, pattern centric decision identification rules and generic meta issues  one particular meta issue catalog is also presented  The resulting general purpose decision identification method is validated by identifying 35 decisions that recur in enterprise application development and service oriented architecture design  Copyright 2012 ACM   30 refs",Architectural decision identification in architectural patterns,"['Information services', 'Knowledge management', 'Service oriented architecture (SOA)', 'Architectural decision', 'Architectural knowledge', 'Architectural pattern', 'Enterprise applications', 'SOA', 'Digital Computers and Systems', 'Computer Programming', 'Information Retrieval and Use', 'Information Services']","['Zimmermann, Olaf']","ABB Corporate Research, Industrial Software Systems, Segelhofstrasse 1K, CH 5405 Baden D ttwil, Switzerland",2012,ECSA
1463,1464,"When modeling recurring architectural decisions for reuse, the boundaries of the knowledge asset under construction must be defined in a scoping step  This paper introduces and combines two supporting concepts for this step, pattern centric decision identification rules and generic meta issues  one particular meta issue catalog is also presented  The resulting general purpose decision identification method is validated by identifying 35 decisions that recur in enterprise application development and service oriented architecture design  Copyright 2012 ACM   30 refs",Architectural decision identification in architectural patterns,"['Information services', 'Knowledge management', 'Service oriented architecture (SOA)', 'Architectural decision', 'Architectural knowledge', 'Architectural pattern', 'Enterprise applications', 'SOA', 'Digital Computers and Systems', 'Computer Programming', 'Information Retrieval and Use', 'Information Services']","['Zimmermann, Olaf']","ABB Corporate Research, Industrial Software Systems, Segelhofstrasse 1K, CH 5405 Baden D ttwil, Switzerland",2012,WICSA
1464,1465,"When organizations cooperate closely, for example after a company merger, there is typically a need to integrate their in house developed software into one coherent system, preferably by reusing from all of the existing systems  The parts that can be reused may be arbitrarily small or large, ranging from code snippets to large self containing components  Not only implementations can be reused however  sometimes it may be more appropriate to only reuse experiences in the form of architectural solutions and requirements  In order to investigate the circumstances under which different types of reuse are appropriate, we have performed a multiple case study, consisting of nine cases  Our conclusions are, summarized  reuse of components from one system requires reuse of architectural solutions from the same system  merge of architectural solutions cannot occur unless the solutions already are similar, or if some solutions from one are incorporated into the other  In addition, by hierarchically decomposing the systems we make the same observations  Finally, among the cases we find more architectural similarities than might had been expected, due to common domain standards and common solutions within a domain  Although these observations, when presented, should not be surprising, our experiences from the cases show that in practice organizations have failed to recognize when the necessary prerequisites for reuse have not been present   21 refs",Architectural reuse in software systems in house integration and merge   experiences from industry,"['business data processing', 'formal specification', 'software architecture', 'software reusability', 'architectural reuse', 'software system', 'in-house developed software', 'coherent system', 'self-containing components', 'architectural solution merge', 'Software engineering techniques', 'Formal methods', 'Business and administrative computing']","['Land, R', '', '', ' Crnkovic, I', '', '', ' Larsson, S', '', '', ' Blankers, L', '', '']","Dept  of Comput  Sci    Electron , Malardalen Univ , Vasteras, Sweden",2005,QoSA
1465,1466,"When software projects evolve their actual implementation and their intended architecture may drift apart resulting in problems for further maintenance  As a countermeasure it is good software engineering practice to check the implementation against the architectural description for consistency  In this work we check software developed by a Model Driven Software Development  MDSD  process  This allows us to completely automate consistency checking by deducing information from implementation, design documents, and model transformations  We have applied our approach on a Java project and found several inconsistencies hinting at design problems  With our approach we can find inconsistencies early, keep the artifacts of an MDSD process consistent, and, thus, improve the maintainability and understandability of the software    2009 Springer Berlin Heidelberg   28 refs",Automated architecture consistency checking for model driven software development,"['Computer software maintenance', 'Computer software selection and evaluation', 'Maintainability', 'Model checking', 'Software design', 'Architectural descriptions', 'Consistency checking', 'Design documents', 'Design problems', 'Model transformation', 'Model-Driven Software Development', 'Software engineering practices', 'Software project', 'Understandability', 'Maintenance', 'Management', 'Computer Applications', 'Computer Programming', 'Computer Software, Data Handling and Applications', 'Logic Elements', 'Computer Theory, Includes Formal Logic, Automata Theory, Switching Theory, Programming Theory']","['Biehl, Matthias', ' ,', '', ' L we, Welf']","Software Technology Group, V xj  University, Sweden  2  Embedded Control Systems, Royal Institute of Technology, Sweden",2009,QoSA
1466,1467,"When using Software Architecture documents  ADs , users typically  forage  for information  However, it is little understood how they do this foraging or how to structure architecture documentation to assist them  We conducted a survey of two different groups of foragers, industry practitioner and academic AD users, to investigate issues   types of forages, foraging sequences and styles   related to task based architectural information foraging in software architecture documents  Our results show that there were different pre conceived ideas of what to forage for prior to the search, but during foraging there was commonly foraged information  The different groups of foragers place different emphasis on information related to quality requirements, purpose of the system, use cases, physical view and process view  Foraging sequences starting with certain information were suggested to better support understanding of the described SA  These sequences typically followed the written order of the information as dictated by the AD producers  This reinforces the critical responsibility of AD producers to structure the architectural information for understanding  Diagrams, views and design decisions were most frequently cited as supporting understanding of the SA  The main hindrance was too much text and a lack of diagrams    2012 IEEE   18 refs",A study of architectural information foraging in software architecture documents,"['Natural resources exploration', 'Design decisions', 'foraging', 'Information foraging', 'Process view', 'Quality requirements', 'Task-based', 'understanding', 'Water Resources', 'Exploration and Prospecting', 'Petroleum and Related Deposits', 'Computer Programming']","['Su, Moon Ting', '', '', 'Tempero, Ewan', '', '', 'Hosking, John', '', '', 'Grundy, John']","Department of Computer Science, University of Auckland, Auckland, New Zealand  2  College of Engineering and Computer Science, Australian National University, Canberra, ACT, Australia  3  Faculty of Information and Communication Technologies, Swinburne University of Technology, VIC, Australia",2012,ECSA
1467,1468,"When using Software Architecture documents  ADs , users typically  forage  for information  However, it is little understood how they do this foraging or how to structure architecture documentation to assist them  We conducted a survey of two different groups of foragers, industry practitioner and academic AD users, to investigate issues   types of forages, foraging sequences and styles   related to task based architectural information foraging in software architecture documents  Our results show that there were different pre conceived ideas of what to forage for prior to the search, but during foraging there was commonly foraged information  The different groups of foragers place different emphasis on information related to quality requirements, purpose of the system, use cases, physical view and process view  Foraging sequences starting with certain information were suggested to better support understanding of the described SA  These sequences typically followed the written order of the information as dictated by the AD producers  This reinforces the critical responsibility of AD producers to structure the architectural information for understanding  Diagrams, views and design decisions were most frequently cited as supporting understanding of the SA  The main hindrance was too much text and a lack of diagrams    2012 IEEE   18 refs",A study of architectural information foraging in software architecture documents,"['Natural resources exploration', 'Design decisions', 'foraging', 'Information foraging', 'Process view', 'Quality requirements', 'Task-based', 'understanding', 'Water Resources', 'Exploration and Prospecting', 'Petroleum and Related Deposits', 'Computer Programming']","['Su, Moon Ting', '', '', 'Tempero, Ewan', '', '', 'Hosking, John', '', '', 'Grundy, John']","Department of Computer Science, University of Auckland, Auckland, New Zealand  2  College of Engineering and Computer Science, Australian National University, Canberra, ACT, Australia  3  Faculty of Information and Communication Technologies, Swinburne University of Technology, VIC, Australia",2012,WICSA
1468,1469,"While the performance analysis of a software architecture is a quite well assessed task nowadays, the issue of interpreting the performance results for providing feedback to software architects is still very critical  This is mostly due to the gap between results representation  i e  mean values, variances, and or probability distributions  and expected feedback  i e  architectural alternatives   Performance antipatterns represent effective instruments to tackle this issue, because they document common mistakes leading to performance problems as well as their solutions  In this paper we present a model driven approach that enables performance antipatterns to arise in the context of an ADL based software architecture  Such approach automatically detects them in AEmilia, i e  an ADL allowing the performance evaluation of software systems  The approach has been applied to a case study, and experimental results demonstrate its effectiveness    2012 IEEE   20 refs",Enabling performance antipatterns to arise from an ADL based software architecture,"['Probability distributions', 'AEmilia ADL', 'Anti-patterns', 'Architecture description languages', 'Model-driven Engineering', 'Software performance', 'Computer Programming', 'Probability Theory']","['Cortellessa, Vittorio', '', '', 'De Sanctis, Martina', '', '', 'Di Marco, Antinisca', '', '', 'Trubiani, Catia']","Universit  degli Studi dell Aquila, Italy",2012,ECSA
1469,1470,"While the performance analysis of a software architecture is a quite well assessed task nowadays, the issue of interpreting the performance results for providing feedback to software architects is still very critical  This is mostly due to the gap between results representation  i e  mean values, variances, and or probability distributions  and expected feedback  i e  architectural alternatives   Performance antipatterns represent effective instruments to tackle this issue, because they document common mistakes leading to performance problems as well as their solutions  In this paper we present a model driven approach that enables performance antipatterns to arise in the context of an ADL based software architecture  Such approach automatically detects them in AEmilia, i e  an ADL allowing the performance evaluation of software systems  The approach has been applied to a case study, and experimental results demonstrate its effectiveness    2012 IEEE   20 refs",Enabling performance antipatterns to arise from an ADL based software architecture,"['Probability distributions', 'AEmilia ADL', 'Anti-patterns', 'Architecture description languages', 'Model-driven Engineering', 'Software performance', 'Computer Programming', 'Probability Theory']","['Cortellessa, Vittorio', '', '', 'De Sanctis, Martina', '', '', 'Di Marco, Antinisca', '', '', 'Trubiani, Catia']","Universit  degli Studi dell Aquila, Italy",2012,WICSA
1470,1471,"While the use of components grows in software development, building effective component directories becomes a critical issue as architects need help to search components in repositories  During the life cycle of component based software, several tasks, such as construction from scratch or component substitution, would benefit from an efficient component classification and retrieval  In this paper, we analyze how we can build a classification of components using their technical description  i e  functions and interfaces  in order to help automatic as well as manual composition and substitution  The approach is implemented in the CoCoLa prototype, which is dedicated to Fractal component directory management and validated through a case study    2009 IEEE   20 refs",Automated architectural component classification using concept lattices,"['Architecture', 'Computer software', 'Architectural components', 'Component based software', 'Component substitution', 'Concept Lattices', 'Critical issues', 'Software development', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Aboud, Nour Alhouda', '', '', 'Ar valo, Gabriela', '', '', 'Falleri, Jean R my', '', '', 'Huchard, Marianne', '', '', 'Tibermacine, Chouki', '', '', 'Urtado, Christelle', '', '', 'Vauttier, Sylvain']","LIUPPA, Univ  de Pau et des Pays de l Adour, Bayonne, France  2  LIFIA, Facultad de Inform tica  UNLP , La Plata, Argentina  3  LIRMM, CNRS and Montpellier II University  4  LGI2P, Ecole des Mines d Al s, Nimes, France",2009,ECSA
1471,1472,"While the use of components grows in software development, building effective component directories becomes a critical issue as architects need help to search components in repositories  During the life cycle of component based software, several tasks, such as construction from scratch or component substitution, would benefit from an efficient component classification and retrieval  In this paper, we analyze how we can build a classification of components using their technical description  i e  functions and interfaces  in order to help automatic as well as manual composition and substitution  The approach is implemented in the CoCoLa prototype, which is dedicated to Fractal component directory management and validated through a case study    2009 IEEE   20 refs",Automated architectural component classification using concept lattices,"['Architecture', 'Computer software', 'Architectural components', 'Component based software', 'Component substitution', 'Concept Lattices', 'Critical issues', 'Software development', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Aboud, Nour Alhouda', '', '', 'Ar valo, Gabriela', '', '', 'Falleri, Jean R my', '', '', 'Huchard, Marianne', '', '', 'Tibermacine, Chouki', '', '', 'Urtado, Christelle', '', '', 'Vauttier, Sylvain']","LIUPPA, Univ  de Pau et des Pays de l Adour, Bayonne, France  2  LIFIA, Facultad de Inform tica  UNLP , La Plata, Argentina  3  LIRMM, CNRS and Montpellier II University  4  LGI2P, Ecole des Mines d Al s, Nimes, France",2009,WICSA
1472,1473,"While the use of components grows in software development, building effective component directories becomes a critical issue as architects need help to search components in repositories  During the life cycle of component based software, several tasks, such as construction from scratch or component substitution, would benefit from an efficient component classification and retrieval  In this paper, we analyze how we can build a classification of components using their technical description  i e  functions and interfaces  in order to help automatic as well as manual composition and substitution  The approach is implemented in the CoCoLa prototype, which is dedicated to Fractal component directory management and validated through a case study    2009 IEEE   20 refs",Automated architectural component classification using concept lattices,"['Architecture', 'Computer software', 'Architectural components', 'Component based software', 'Component substitution', 'Concept Lattices', 'Critical issues', 'Software development', 'Buildings and Towers', 'Computer Software, Data Handling and Applications', 'Computer Programming', 'Computer Applications']","['Aboud, Nour Alhouda', '', '', 'Ar valo, Gabriela', '', '', 'Falleri, Jean R my', '', '', 'Huchard, Marianne', '', '', 'Tibermacine, Chouki', '', '', 'Urtado, Christelle', '', '', 'Vauttier, Sylvain']","LIUPPA, Univ  de Pau et des Pays de l Adour, Bayonne, France  2  LIFIA, Facultad de Inform tica  UNLP , La Plata, Argentina  3  LIRMM, CNRS and Montpellier II University  4  LGI2P, Ecole des Mines d Al s, Nimes, France",2011,WICSA
1473,1474,"While typical solutions focus on fault tolerance  and specifically, exception handling  during the design and implementation phases of the software life cycle  e g , Java and Windows NT exception handling , more recently the need for explicit exception handling solutions during the entire life cycle has been advocated by some researchers  Several solutions have been proposed for fault tolerance via exception handling at the software architecture and component levels  This paper describes how the two concepts of fault tolerance and software architectures have been integrated so far  It is structured in two parts  overview on fault tolerance and exception handling, and integrating fault tolerance into software architecture  and is based on a survey study on architecting fault tolerant systems where more than fifteen approaches have been analyzed and classified  This paper concludes by identifying those issues that remain still open and require deeper investigation",Architecting fault tolerant systems,"['exception handling', 'software architecture', 'software fault tolerance', 'fault tolerant systems', 'software life-cycle', 'exception handling solutions', 'software architecture', 'Software engineering techniques']","['Muccini, H', ' Pelliccione, P', ' Romanovsky, A']",None,2007,WICSA
1474,1475,"Wide availability of multicore CPUs makes concurrency a critical design factor for the software architecture and execution models of industrial controllers, especially with messages passing between tasks running on different cores  To improve performance, we refactored a standardized shared memory IPC mechanism implemented with traditional kernel locks to use lock free algorithms  Prototyping the changes made it possible to determine the speed up when the locks were removed, but we could neither easily confirm whether the IPC performance would sufice for the communication patterns in our real time system, nor could we tell how well the implementation would scale to CPUs with more cores than our test machine  In this paper we report on our experience with using a queuing petri net performance model to predict the impact of memory contention in a multi core CPU on architecture level performance  We instantiated our model with benchmark data and prototype measurements  The results from our model simulation provide valuable feedback for design decisions and point at potential bottlenecks  Comparison of the prototype s performance with our model simulation results increases credibility of our work  This paper supports other practitioners who consider applying performance modeling to quantify the quality of their architectures  Copyright   2014 ACM 978 1 4503 2577 6 14 06     15 00   37 refs",Experiences with modeling memory contention for multi core industrial real time systems,"['Concurrency control', 'Locks (fasteners)', 'Petri nets', 'Program processors', 'Real time systems', 'Software architecture', 'Communication pattern', 'Experience report', 'Improve performance', 'Industrial controllers', 'Lock-free algorithms', 'Multi core', 'Performance Model', 'Prototype measurements', 'Mechanisms', 'Digital Computers and Systems', 'Computer Programming', 'Database Systems', 'Cost and Value Engineering  Industrial Economics', 'Industrial Engineering and Management', 'Production Planning and Control  Manufacturing', 'Combinatorial Mathematics, Includes Graph Theory, Set Theory']","['De Gooijer, Thijmen', '', '', 'Harper, K', 'Eric']","ABB Corporate Research, V steras, Sweden  2  ABB Corporate Research, Raleigh, NC, United States",2014,QoSA
1475,1476,"With current trends towards moving variability from hardware to software, and given the increasing desire to postpone design decisions as much as is economically feasible, managing the variability from requirements elicitation to implementation is becoming a primary business requirement in the product line engineering process  One of the main challenges in variability management is the visualization and management of industry size variability models  In this demonstration, we introduce our CASE tool, MUSA  MUSA is designed around our work on multiple perspective variability modeling and is implemented using the state of the art in NUI, multi touch interfaces, giving it the power and flexibility to create and manage large scale variability models with relative ease    2010 Springer Verlag Berlin Heidelberg   12 refs",A NUI based multiple perspective variability modeling CASE tool,"['Production engineering', 'Visualization', 'Business requirement', 'CASE tools', 'Current trends', 'Design decisions', 'Feature modeling', 'Multi-touch interfaces', 'Multiple perspectives', 'Product line engineering', 'Requirements elicitation', 'Software Product Line', 'Variability management', 'Variability model', 'Variability modeling', 'Computer Programming', 'Engineering Graphics', 'Production Engineering']","['Bashroush, R', '', '']","School of Computing, IT and Engineering, University of East London, London, United Kingdom",2010,ECSA
1476,1477,"With software services becoming a strategic capability for the software sector, software architecture needs to address integration problems to help services to collaborate and coordinate their activities  The increasing need to address dynamic and automated changes can be answered by a service coordination architecture with event based collaboration that enables dynamic and adaptive architectures  Intelligent service and process identification and adaptation techniques are suitable solutions for event driven and on demand service architectures  We define an architectural solution space and identify research challenges    2010 Springer Verlag Berlin Heidelberg   10 refs",Dynamic adaptive service architecture   Towards Coordinated Service Composition,"['Adaptation techniques', 'Adaptive architecture', 'Adaptive services', 'Architectural solutions', 'Event driven', 'Event-based', 'Integration problems', 'Intelligent Services', 'On-demand services', 'Process identification', 'Research challenges', 'Service compositions', 'Service coordination', 'Software services', 'Strategic capability', 'Suitable solutions', 'Computer Programming']","['Pahl, Claus']","School of Computing, Dublin City University, Dublin, Ireland",2010,ECSA
1477,1478,"With the evolution of distributed systems in size and complexity, software deployment remains a challenging task  Despite the existence of several approaches, most of them use informal models that lack a solid mathematic foundation  In this paper, we propose a bigraphical based approach for modeling and formalizing the deployment of distributed applications  This approach relies on multi scale modeling  So, we start by modeling the first scale with a bigraph  This bigraph is enriched, through a series of reaction rules, until reaching the last scale that represents the deployment architecture    2013 Springer Verlag   9 refs",Towards a multi scale modeling for architectural deployment based on bigraphs,"['Artificial intelligence', 'Computer science', 'Bigraphs', 'Deployment', 'Deployment architecture', 'Distributed applications', 'Distributed systems', 'Mathematic foundation', 'Multi-scale Modeling', 'Software deployment', 'Computer Circuits and Logic Elements', 'Computer Systems and Equipment', 'Computer Software, Data Handling and Applications']","['Gassara, Amal', '', '', 'Bouassida Rodriguez, Ismael', ' ,', ',', '', ' Jmaiel, Mohamed']","ReDCAD, University of Sfax, B P  1173, 3038 Sfax, Tunisia  2  CNRS, LAAS, 7 Avenue du colonel Roche, F 31400 Toulouse, France  3  Univ  de Toulouse, LAAS, F 31400 Toulouse, France",2013,ECSA
1478,1479,"With the growing research into mobile and ubiquitous computing, there is a need for addressing how such infrastructures can support collaboration between nomadic users  We present the activity based computing paradigm and outline a proposal for handling collaboration in an activity based architecture  We argue that activity based computing establishes a natural and sound conceptual and architectural basis for session management in real time, synchronous collaboration   6 refs",Real time collaboration in activity based architectures,"['Computer software', 'Computer supported cooperative work', 'Graphical user interfaces', 'Laptop computers', 'Mobile telecommunication systems', 'Real time systems', 'Telecommunication links', 'X ray analysis', 'Activity based computing', 'Activity-based computing', 'Synchronous colaboration', 'Ubiquitous computing', 'Strength of Building Materials  Mechanical Properties', 'Telecommunication  Radar, Radio and Television', 'Computer Systems and Equipment', 'Computer Peripheral Equipment', 'Digital Computers and Systems', 'Computer Applications']","['Bardram, Jakob Eyvind', '', '', 'Christensen, Henrik Brbak']","Computer Science Department, University of Aarhus, Aabogade 34, 8200 Aarhus N, Denmark",2004,WICSA
1479,1480,"With the growing research into mobile and ubiquitous computing, there is a need for addressing how such infrastructures can support collaboration between nomadic users  We present the activity based computing paradigm and outline a proposal for handling collaboration in an activity based architecture  We argue that activity based computing establishes a natural and sound conceptual and architectural basis for session management in real time, synchronous collaboration   6 refs",Real time collaboration in activity based architectures,"['groupware', 'mobile computing', 'software architecture', 'ubiquitous computing', 'real-time collaboration', 'activity-based architectures', 'mobile computing', 'ubiquitous computing', 'activity-based computing paradigm', 'collaboration handling', 'activity-based architecture', 'session management', 'synchronous collaboration', 'Computer communications', 'Distributed systems software', 'Software engineering techniques', 'Other computer networks']","['Bardram, J E', '', '', ' Christensen, H B', '', '']","Dept  of Comput  Sci , Aarhus Univ , Aarhus, Denmark",2004,WICSA
1480,1481,"With the spread of the Internet and software evolution in complex intensive systems, software architecture often need be reconfigured during runtime to adapt variable environments and design objectives  To deal with reconfigurable software architectures, the formal method should be presented to describe software architectures and express their changes so that these changes on the evolutions of software architectures could be reasoned about  However, current formal methods for reconfigurable software architectures are difficult to represent hierarchy and model contextaware systems  In this paper, we use and extend Bigraph as a formal method to describe reconfigurable software architecture  By providing graphic elements and term languages, extended bigraphs can survey static and dynamic architectures easily  Then we represent basic architectural operations based on extended bigraphs, through a case describe reconfigurations with constraints and context aware information by reaction rules, and illustrate how to check the properties to satisfy design requirements by BiLog    2008 IEEE   11 refs",Towards a formal model for reconfigurable software architectures by bigraphs,"['Architecture', 'Chlorine compounds', 'Digital signal processing', 'Formal methods', 'Software design', 'Bigraphs', 'Context-aware', 'Design objectives', 'Design requirements', 'Formal modeling', 'Graphic Elements', 'Re-configurable', 'Run-time', 'Software Evolution', 'Static and dynamic', 'Term languages', 'Buildings and Towers', 'Information Theory and Signal Processing', 'Computer Programming', 'Organic Compounds']","['Chang, Zhiming', '', '', 'Mao, Xinjun', '', '', 'Qi, Zhichang']","Dept  of Computer Science, National University of Defense Technology, 410073, China",2008,WICSA
1481,1482,"With the widespread adoption of cloud computing, an increasing number of organizations view it as an important business strategy to evolve their legacy applications to cloud enabled infrastructures  We present a framework, named Legacy to Cloud Migration Horseshoe, for supporting the migration of legacy systems to cloud computing  The framework leverages the software reengineering concepts that aim to recover the architecture from legacy source code  Then the framework exploits the software evolution concepts to support architecture driven migration of legacy systems to cloud based architectures  The Legacyto Cloud Migration Horseshoe comprises of four processes   i  architecture migration planning,  ii  architecture recovery and consistency,  iii  architecture transformation and  iv  architecturebased development of cloud enabled software  We aim to discover, document and apply the migration process patterns that enhance the reusability of migration processes  We also discuss the required tool support that we intend to provide through our ongoing work in this area  Copyright   2010 ACM 1 58113 000 0 00  0010 15 00   29 refs",A framework for architecture driven migration of legacy systems to cloud enabled software,"['Cloud computing', 'Reengineering', 'Reusability', 'Reverse engineering', 'Software architecture', 'Architecture recovery', 'Architecture-based development', 'Architecture-driven migration', 'Cloud-based architectures', 'Legacy applications', 'Service-driven architecture', 'Software migration', 'Software reengineering', 'Industrial Wastes', 'Digital Computers and Systems', 'Computer Software, Data Handling and Applications', 'Quality Assurance and Control']","['Ahmad, Aakash', '', '', 'Babar, Muhammad Ali', ' ,', '']","IT University of Copenhagen, Denmark  2  University of Adelaide, Australia",2014,WICSA
1482,1483,"Within the business software domain it is crucial for a software vendor to comply to different customer requirements  Traditionally this could be done by offering different products to different customers, but because multi tenant business software deployments use one software product to serve all customers, this is no longer possible  Software vendors have to make sure that one instance of a software product is variable enough to support all different requirements from all different customers  This ability is defined as tenant based variability  Within this paper a conceptual model is presented, explaining the role software patterns play in solving variability implementation problems in multi tenant business software  Different important aspects of patterns are explained, like forces and consequences and are linked to concepts in the problem domain  The paper suggests that variability patterns play a large role in addressing variability in multitenant business software and provide a valuable vocabulary for researching, reporting, thinking and communicating about variability solutions in online software products  Copyright 2012 ACM   13 refs",The role of variability patterns in multi tenant business software,"['Software architecture', 'Multi-tenancy', 'Online business', 'SaaS', 'Software patterns', 'Variability', 'Computer Programming', 'Marketing']","['Kabbedijk, J', '', '', ' Jansen, S', '', '']","Information and Computing Sciences, Utrecht University, Netherlands",2012,ECSA
1483,1484,"Within the business software domain it is crucial for a software vendor to comply to different customer requirements  Traditionally this could be done by offering different products to different customers, but because multi tenant business software deployments use one software product to serve all customers, this is no longer possible  Software vendors have to make sure that one instance of a software product is variable enough to support all different requirements from all different customers  This ability is defined as tenant based variability  Within this paper a conceptual model is presented, explaining the role software patterns play in solving variability implementation problems in multi tenant business software  Different important aspects of patterns are explained, like forces and consequences and are linked to concepts in the problem domain  The paper suggests that variability patterns play a large role in addressing variability in multitenant business software and provide a valuable vocabulary for researching, reporting, thinking and communicating about variability solutions in online software products  Copyright 2012 ACM   13 refs",The role of variability patterns in multi tenant business software,"['Software architecture', 'Multi-tenancy', 'Online business', 'SaaS', 'Software patterns', 'Variability', 'Computer Programming', 'Marketing']","['Kabbedijk, J', '', '', ' Jansen, S', '', '']","Information and Computing Sciences, Utrecht University, Netherlands",2012,WICSA
1484,1485,"Without rigorous software development and maintenance, software tends to lose its original architectural structure and become more difficult to understand and modify  ArchJava, a recently proposed implementation language which embeds a component and connector architectural specification within Java implementation code, offers the promise of preventing the loss of architectural structure  We describe a case study in which we incrementally re engineer an existing implementation with an eroded architecture to obtain an ArchJava implementation that more closely matches an idealized architecture  Building on results from similar case studies, we chose an application consisting of over 16,000 source lines of Java code and 80 classes that exhibited many characteristics of real world legacy applications  We describe our process, some lessons learned, as well as some perceived limitations with the tools, techniques and languages we used    2005 IEEE   28 refs",A case study in incremental architecture based re engineering of a legacy application,"['Computer programming languages', 'Computer software maintenance', 'Legacy systems', 'Software architecture', 'Software engineering', 'ArchJava', 'Incremental architecture', 'Real-world legacy', 'Computer Systems and Equipment', 'Computer Programming', 'Computer Programming Languages', 'Quality Assurance and Control']","['Abi Antoun, Marwan', '', '', 'Coelho, Wesley']","Institute for Software Research Intl  ISRI , Carnegie Mellon University  2  Department of Computer Science, University of British Columbia",2005,WICSA
1485,1486,"XC 72 carbon blacks were steam etched for different lengths of time and were then used as catalyst supports for polymer electrolyte fuel cells  PEFCs   Transmission electron microscopy  TEM  results show that the central parts of the XC 72 carbon black samples were more easily etched away  X ray diffraction results show that the 0 0 2 and 1 0 peaks were initially sharp, but then broadened during the corrosion process, indicating that more graphitic components are in the steam etched carbon blacks  The electrochemically active surface area  ECSA  of the steam etched carbon black samples remained above 60  after running for 45 h corrosion test, while for the pristine carbon black samples, the ECSA dropped down to below 50   Both the polarization curve results and the TEM micrographs of the catalysts after corrosion show that the corrosion resistance increased significantly in the steam etched samples  These results indicate that steam etching is a simple and efficient method to increase corrosion resistance for PEFC catalysts    2011 Elsevier Ltd  All rights reserved   42 refs",Enhanced carbon corrosion resistance for FEFC Pt C catalysts using steam etched carbon blacks as a catalyst support,"['Carbon black', 'Catalyst supports', 'Catalysts', 'Fuel cells', 'Steam', 'Transmission electron microscopy', 'X ray diffraction', 'Carbon corrosion', 'Corrosion process', 'Corrosion tests', 'Electrochemically active surface areas', 'Polarization curves', 'Polymer electrolyte fuel cells', 'Pristine carbon', 'Transmission electron', 'Atomic and Molecular Physics', 'Chemical Products Generally', 'Chemical Agents and Basic Industrial Chemicals', 'Optical Devices and Systems', 'Fuel Cells', 'Steam Power Plants', 'Metals Corrosion']","['Wang, Mei Xian', '', '', 'Xu, Fan', '', '', 'Xie, Jian']","Department of Mechanical Engineering, Purdue School of Engineering and Technology, Indiana University Purdue University, Indianapolis, IN 46202, United States",2012,ECSA
